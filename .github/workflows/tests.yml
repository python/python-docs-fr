---

name: Tests

on:
  push:
    branches:
      - '*.*'
  pull_request:
    branches:
      - '*.*'

jobs:
  checks:
    strategy:
      matrix:
        tool:
          - name: Orthographe
            package: pospell
            apt_dependencies: hunspell hunspell-fr-comprehensive
            command: pospell -p dict -l fr_FR
          - name: Longueur des lignes
            package: powrap
            apt_dependencies: gettext
            command: powrap --check --quiet --diff
          - name: Grammaire
            package: padpo
            command: 'padpo -i 2>&1'
            command_suffix: '| grep -v -Ff padpo.ignore'

    name: ${{ matrix.tool.name }} (${{ matrix.tool.package }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Register problem matchers
        run: echo "::add-matcher::.github/problem-matchers/pospell.json"
      - uses: lots0logs/gh-action-get-changed-files@2.1.4
        id: changed_files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install ${{ matrix.tool.package }}
        run: |
          [ -n "${{ matrix.tool.apt_dependencies }}" ] && sudo apt-get update && sudo apt-get install -y ${{ matrix.tool.apt_dependencies }}
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install ${{ matrix.tool.package }}
      - name: Run ${{ matrix.tool.package }}
        env:
          ADDED_FILES: ${{ join(fromJSON(steps.changed_files.outputs.added), ' ') }}
          MODIFIED_FILES: ${{ join(fromJSON(steps.changed_files.outputs.modified), ' ') }}
        run: |
          CHANGED_PO_FILES=$(printf "%s %s\n" "$ADDED_FILES" "$MODIFIED_FILES" | tr ' ' '\n' | grep '.po$')
          echo "Running on:" $CHANGED_PO_FILES
          [ -n "$CHANGED_PO_FILES" ] && ${{ matrix.tool.command }} $CHANGED_PO_FILES ${{ matrix.tool.command_suffix }}

  sphinx:
    name: 'Génération de la doc (sphinx)'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '~/cpython/'
          key: '1'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Clone cpython
        run: |
          if [ ! -d ~/cpython ]; then
            git clone https://github.com/python/cpython ~/cpython/
          else
            git -C ~/cpython fetch
          fi
      - name: Prepare build hierarchy
        run: |
          mkdir -p ~/locales/fr/LC_MESSAGES/
          cp -uv --parents *.po */*.po ~/locales/fr/LC_MESSAGES/
          git -C ~/cpython checkout b30934e9afb0af3f8e2e5f0992445be775b3c630
      - name: Prepare venv
        run: make -C $HOME/cpython/Doc venv
      - name: sphinx-build
        run: make -C $HOME/cpython/Doc SPHINXOPTS="-qW -j4 -D locale_dirs=$HOME/locales -D language=fr -D gettext_compact=0" autobuild-dev-html
