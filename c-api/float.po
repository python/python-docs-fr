# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-27 19:26+0100\n"
"PO-Revision-Date: 2019-01-14 15:30+0100\n"
"Last-Translator: ANTOINE FOURES <afoures@student.42.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: c-api/float.rst:6
msgid "Floating Point Objects"
msgstr "Objets représentant les nombres à virgule flottante"

#: c-api/float.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python floating point object."
msgstr ""
"Ce sous-type de l'objet :c:type:`PyObject` représente un nombre à virgule "
"flottante en Python."

#: c-api/float.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python floating point "
"type.  This is the same object as :class:`float` in the Python layer."
msgstr ""
"Cette instance de l'objet :c:type:`PyTypeObject` représente le type nombre à "
"virgule flottante en Python. C'est le même objet que la classe :class:"
"`float` de la couche Python."

#: c-api/float.rst:24
#, fuzzy
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject` or a subtype of :c:"
"type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Renvoie vrai si l'argument est de type :c:type:`PyFloatObject` ou un sous-"
"type de :c:type:`PyFloatObject`."

#: c-api/float.rst:30
#, fuzzy
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject`, but not a subtype "
"of :c:type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Renvoie vrai si l'argument est de type :c:type:`PyFloatObject`, mais pas un "
"sous-type de :c:type:`PyFloatObject`."

#: c-api/float.rst:36
#, fuzzy
msgid ""
"Create a :c:type:`PyFloatObject` object based on the string value in *str*, "
"or ``NULL`` on failure."
msgstr ""
"Crée un objet :c:type:`PyFloatObject` à partir de la valeur de la chaîne de "
"caractères *str*, ou *NULL* en cas d'échec."

#: c-api/float.rst:42
#, fuzzy
msgid ""
"Create a :c:type:`PyFloatObject` object from *v*, or ``NULL`` on failure."
msgstr ""
"Crée un objet :c:type:`PyFloatObject` à partir de *v*, ou *NULL* en cas "
"d'échec."

#: c-api/float.rst:47
#, fuzzy
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*.  If "
"*pyfloat* is not a Python floating point object but has a :meth:`__float__` "
"method, this method will first be called to convert *pyfloat* into a float. "
"If ``__float__()`` is not defined then it falls back to :meth:`__index__`. "
"This method returns ``-1.0`` upon failure, so one should call :c:func:"
"`PyErr_Occurred` to check for errors."
msgstr ""
"Renvoie une représentation du contenu d'un *pyfloat* sous la forme d'un :c:"
"type:`double` en C. Si le *pyfloat* n'est pas un nombre à virgule flottante "
"mais contient une méthode :meth:`__float__`, elle est d'abord appelée pour "
"convertir le *pyfloat* en nombre à virgule flottante. Cette méthode renvoie "
"``-1.0`` en cas d'échec, il faut appeler :c:func:`PyErr_Occurred` pour "
"vérifier les erreurs."

#: c-api/float.rst:54
msgid "Use :meth:`__index__` if available."
msgstr ""

#: c-api/float.rst:60
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*, but "
"without error checking."
msgstr ""
"Renvoie une représentation du contenu d'un *pyfloat* sous la forme d'un :c:"
"type:`double` en C, sans vérifier les erreurs."

#: c-api/float.rst:66
msgid ""
"Return a structseq instance which contains information about the precision, "
"minimum and maximum values of a float. It's a thin wrapper around the header "
"file :file:`float.h`."
msgstr ""
"Renvoie une instance *structseq* qui contient les informations sur la "
"précision et les valeurs minimales et maximales pour un nombre à virgule "
"flottante. C'est une enveloppe autour du fichier d'entête :file:`float.h`."

#: c-api/float.rst:73
msgid ""
"Return the maximum representable finite float *DBL_MAX* as C :c:type:"
"`double`."
msgstr ""
"Renvoie le nombre à virgule flottante fini maximal *DBL_MAX* sous la forme "
"d'un :c:type:`double` en C."

#: c-api/float.rst:78
msgid ""
"Return the minimum normalized positive float *DBL_MIN* as C :c:type:`double`."
msgstr ""
"Renvoie le nombre à virgule flottante minimal normalisé *DBL_MIN* sous la "
"forme :c:type:`double` en C."

#~ msgid ""
#~ "Clear the float free list. Return the number of items that could not be "
#~ "freed."
#~ msgstr ""
#~ "Libère la mémoire de la *free list* des nombres à virgule flottante. "
#~ "Renvoie le nombre d'éléments qui n'ont pas pu être libérés."
