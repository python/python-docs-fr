# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-15 18:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/c-api/slice.rst:6
#, fuzzy
msgid "Slice Objects"
msgstr "Objets tranches"

#: ../Doc/c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr ""

#: ../Doc/c-api/slice.rst:17
msgid "Return true if *ob* is a slice object; *ob* must not be ``NULL``."
msgstr ""

#: ../Doc/c-api/slice.rst:22
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute.  Return ``NULL`` if "
"the new object could not be allocated."
msgstr ""

#: ../Doc/c-api/slice.rst:31
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length* "
"as errors."
msgstr ""

#: ../Doc/c-api/slice.rst:35
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not :const:`None` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""

#: ../Doc/c-api/slice.rst:39
msgid "You probably do not want to use this function."
msgstr ""

#: ../Doc/c-api/slice.rst:41 ../Doc/c-api/slice.rst:72
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr ""

#: ../Doc/c-api/slice.rst:48
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of "
"bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""

#: ../Doc/c-api/slice.rst:54
msgid "Returns ``0`` on success and ``-1`` on error with exception set."
msgstr ""

#: ../Doc/c-api/slice.rst:57
msgid ""
"This function is considered not safe for resizable sequences. Its invocation "
"should be replaced by a combination of :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` where ::"
msgstr ""

#: ../Doc/c-api/slice.rst:65
msgid "is replaced by ::"
msgstr ""

#: ../Doc/c-api/slice.rst:76
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher :c:func:`!"
"PySlice_GetIndicesEx` is implemented as a macro using :c:func:`!"
"PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments *start*, "
"*stop* and *step* are evaluated more than once."
msgstr ""

#: ../Doc/c-api/slice.rst:83
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) :c:func:`!"
"PySlice_GetIndicesEx` is a deprecated function."
msgstr ""

#: ../Doc/c-api/slice.rst:91
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values "
"less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""

#: ../Doc/c-api/slice.rst:97
msgid "Return ``-1`` on error, ``0`` on success."
msgstr ""

#: ../Doc/c-api/slice.rst:104
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr ""

#: ../Doc/c-api/slice.rst:108
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr ""

#: ../Doc/c-api/slice.rst:115
msgid "Ellipsis Object"
msgstr ""

#: ../Doc/c-api/slice.rst:120
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  It needs to be "
"treated just like any other object with respect to reference counts.  Like :"
"c:data:`Py_None` it is a singleton object."
msgstr ""
