# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: c-api/number.rst:6
msgid "Number Protocol"
msgstr ""

#: c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr ""

#: c-api/number.rst:14
msgid "Returns ``1`` if *o* is an index integer."
msgstr ""

#: c-api/number.rst:20
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``o1 + o2``."
msgstr ""

#: c-api/number.rst:26
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr ""

#: c-api/number.rst:32
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 * o2``."
msgstr ""

#: c-api/number.rst:38
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr ""

#: c-api/number.rst:46
msgid ""
"Return the floor of *o1* divided by *o2*, or ``NULL`` on failure.  This is "
"equivalent to the \"classic\" division of integers."
msgstr ""

#: c-api/number.rst:52
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers."
msgstr ""

#: c-api/number.rst:61
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 % o2``."
msgstr ""

#: c-api/number.rst:69
msgid ""
"See the built-in function :func:`divmod`. Returns ``NULL`` on failure.  This "
"is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""

#: c-api/number.rst:77
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing ``NULL`` for *o3* would cause an illegal memory access)."
msgstr ""

#: c-api/number.rst:85
msgid ""
"Returns the negation of *o* on success, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr ""

#: c-api/number.rst:91
msgid ""
"Returns *o* on success, or ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``+o``."
msgstr ""

#: c-api/number.rst:99
msgid ""
"Returns the absolute value of *o*, or ``NULL`` on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr ""

#: c-api/number.rst:105
msgid ""
"Returns the bitwise negation of *o* on success, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``~o``."
msgstr ""

#: c-api/number.rst:111
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr ""

#: c-api/number.rst:117
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""

#: c-api/number.rst:123
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr ""

#: c-api/number.rst:129
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""

#: c-api/number.rst:135
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr ""

#: c-api/number.rst:141
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""

#: c-api/number.rst:148
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 -= o2``."
msgstr ""

#: c-api/number.rst:155
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 *= o2``."
msgstr ""

#: c-api/number.rst:162
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""

#: c-api/number.rst:171
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""

#: c-api/number.rst:178
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers.  The operation is done *in-place* when "
"*o1* supports it."
msgstr ""

#: c-api/number.rst:187
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 %= o2``."
msgstr ""

#: c-api/number.rst:196
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an in-"
"place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored, "
"pass :c:data:`Py_None` in its place (passing ``NULL`` for *o3* would cause "
"an illegal memory access)."
msgstr ""

#: c-api/number.rst:205
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""

#: c-api/number.rst:212
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""

#: c-api/number.rst:219
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""

#: c-api/number.rst:226
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""

#: c-api/number.rst:233
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""

#: c-api/number.rst:242
msgid ""
"Returns the *o* converted to an integer object on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr ""

#: c-api/number.rst:250
msgid ""
"Returns the *o* converted to a float object on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr ""

#: c-api/number.rst:256
msgid ""
"Returns the *o* converted to a Python int on success or ``NULL`` with a :exc:"
"`TypeError` exception raised on failure."
msgstr ""

#: c-api/number.rst:262
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned "
"string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with :c:func:"
"`PyNumber_Index` first."
msgstr ""

#: c-api/number.rst:271
msgid ""
"Returns *o* converted to a Py_ssize_t value if *o* can be interpreted as an "
"integer.  If the call fails, an exception is raised and ``-1`` is returned."
msgstr ""

#: c-api/number.rst:274
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a "
"Py_ssize_t value would raise an :exc:`OverflowError`, then the *exc* "
"argument is the type of exception that will be raised (usually :exc:"
"`IndexError` or :exc:`OverflowError`).  If *exc* is ``NULL``, then the "
"exception is cleared and the value is clipped to ``PY_SSIZE_T_MIN`` for a "
"negative integer or ``PY_SSIZE_T_MAX`` for a positive integer."
msgstr ""

#: c-api/number.rst:284
msgid ""
"Returns ``1`` if *o* is an index integer (has the nb_index slot of  the "
"tp_as_number structure filled in), and ``0`` otherwise. This function always "
"succeeds."
msgstr ""
