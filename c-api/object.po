# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:00+0100\n"
"PO-Revision-Date: 2019-08-16 22:56+0200\n"
"Last-Translator: Julien Palard <julien@palard.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2\n"

#: ../Doc/c-api/object.rst:6
msgid "Object Protocol"
msgstr "Protocole Objet"

#: ../Doc/c-api/object.rst:11
msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"Le singleton ``NotImplemented``, utilisé pour signaler qu'une opération "
"n'est pas implémentée pour la combinaison de types en question."

#: ../Doc/c-api/object.rst:17
msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, increment the reference count of NotImplemented and "
"return it)."
msgstr ""
"Traite proprement le renvoi de :c:data:`Py_NotImplemented` depuis "
"l'intérieur d'une fonction C (c'est-à-dire, incrémente le compteur de "
"référence de `NotImplemented` et le renvoie)."

#: ../Doc/c-api/object.rst:24
msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :const:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Écrit un objet *o*, dans le fichier *fp*. Renvoie ``-1`` en cas d'erreur. "
"L'argument *flags* est utilisé pour permettre certaines options de rendu. La "
"seule option actuellement gérée est :const:`Py_PRINT_RAW` ; si cet argument "
"est fourni, le :func:`str` de l'objet est utilisé pour le rendu à la place "
"de :func:`repr`."

#: ../Doc/c-api/object.rst:32 ../Doc/c-api/object.rst:43
msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise.  "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``.  This "
"function always succeeds."
msgstr ""
"Renvoie ``1`` si *o* a l'attribut *attr_name*, et ``0`` sinon. Ceci est "
"équivalent à l'expression Python ``hasattr(o, attr_name)``. Cette fonction "
"réussit toujours."

#: ../Doc/c-api/object.rst:36
#, fuzzy
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods will get suppressed. To get error reporting use :"
"c:func:`PyObject_GetAttr()` instead."
msgstr ""
"Notez que les exceptions qui surviennent pendant l'appel de la méthode :meth:"
"`__getitem__` seront supprimées. Pour obtenir le rapport d'erreur, utilisez "
"plutôt :c:func:`PyObject_GetItem()`."

#: ../Doc/c-api/object.rst:47
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods and creating a temporary string object will get "
"suppressed. To get error reporting use :c:func:`PyObject_GetAttrString()` "
"instead."
msgstr ""

#: ../Doc/c-api/object.rst:55
#, fuzzy
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure.  This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Récupère l'attribut nommé *attr_name* de l'objet *o*. Renvoie la valeur de "
"l'attribut en cas de succès, ou *NULL* en cas d'échec. Ceci est équivalent à "
"l'expression Python ``o.attr_name``."

#: ../Doc/c-api/object.rst:62
#, fuzzy
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure. This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Récupère un attribut nommé *attr_name* de l'objet *o*. Renvoie la valeur de "
"l'attribut en cas de succès, ou *NULL* en cas d'échec. Ceci est équivalent à "
"l'expression Python ``o.attr_name``."

#: ../Doc/c-api/object.rst:69
msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Accesseur d'attribut générique destiné à être mis dans le *slot* "
"``tp_getattro`` d'un objet type. Recherche un descripteur dans le "
"dictionnaire de classes du MRO de l'objet ainsi qu'un attribut dans le :attr:"
"`~object.__dict__`  de l'objet (si présent). Comme défini dans :ref:"
"`descriptors`, les descripteurs de données sont prioritaires sur les "
"attributs d'instance, contrairement aux autres descripteurs. Sinon, une :exc:"
"`AttributeError` est levée."

#: ../Doc/c-api/object.rst:79 ../Doc/c-api/object.rst:90
msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Définit la valeur de l'attribut nommé *attr_name*, pour l'objet *o*, à la "
"valeur *v*. Lève une exception et renvoie ``-1`` en cas d'échec ; renvoie "
"``0`` en cas de succès. Ceci est équivalent à l'instruction Python ``o."
"attr_name = v``."

#: ../Doc/c-api/object.rst:84
#, fuzzy
msgid ""
"If *v* is ``NULL``, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttr`."
msgstr ""
"Si *v* est *NULL*, l'attribut est supprimé. Cette fonctionnalité est "
"obsolète,nous vous conseillons d'utiliser :c:func:`PyObject_DelAttr`."

#: ../Doc/c-api/object.rst:95
#, fuzzy
msgid ""
"If *v* is ``NULL``, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Si *v* est *NULL*, l'attribut est supprimé. Cette fonctionnalité est "
"obsolète, nous vous conseillons d'utiliser :c:func:`PyObject_DelAttr`."

#: ../Doc/c-api/object.rst:101
msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Accesseur et suppresseur générique d'attributs qui est fait pour être mis "
"dans le :c:member:`~PyTypeObject.tp_setattro` d'un objet type. Il cherche un "
"descripteur de données dans le dictionnaire de classes dans le MRO de "
"l'objet et, si ce descripteur est trouvé, c'est lui qui est utilisé de "
"préférence pour la suppression et la définition de l'attribut dans le "
"dictionnaire d'instance. Sinon, l'attribut est défini ou supprimé dans le  :"
"attr:`~object.__dict__` de l'objet (si présent). En cas de succès, ``0`` est "
"renvoyé, sinon une :exc:`AttributeError` est levée et ``-1`` est renvoyé."

#: ../Doc/c-api/object.rst:113 ../Doc/c-api/object.rst:119
msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Supprime l'attribut nommé *attr_name*, pour l'objet *o*. Renvoie ``-1`` en "
"cas d'échec. Ceci est l'équivalent de l'expression Python ``del o."
"attr_name``."

#: ../Doc/c-api/object.rst:125
msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"Une implémentation générique de l'accesseur d'un descripteur d'un  "
"``__dict__``. Crée le dictionnaire si nécessaire."

#: ../Doc/c-api/object.rst:133
msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"Une implémentation générique du mutateur d'un descripteur de  ``__dict__``. "
"Cette implémentation n'autorise pas la suppression du dictionnaire."

#: ../Doc/c-api/object.rst:141
#, fuzzy
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*. Returns the value of the comparison on success, or ``NULL`` on "
"failure."
msgstr ""
"Compare les valeurs de *o1* et *o2* en utilisant l'opération spécifiée par "
"*opid*, qui doit être :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, ou :const:`Py_GE`, correspondant à ``<``, ``<=``, "
"``==``, ``!=``, ``>``, ou ``>=`` respectivement. Ceci est l'équivalent de "
"l'expression Python ``o1 op o2``, où ``op`` est l'opérateur correspondant à "
"*opid*. Renvoie la valeur de la comparaison en cas de succès, ou *NULL* en "
"cas d'échec."

#: ../Doc/c-api/object.rst:151
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. Returns ``-1`` on error, "
"``0`` if the result is false, ``1`` otherwise. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*."
msgstr ""
"Compare les valeurs de *o1* et *o2* en utilisant l'opération spécifiée par "
"*opid*, qui doit être :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, ou :const:`Py_GE`, correspondant à ``<``, ``<=``, "
"``==``, ``!=``, ``>``, ou ``>=`` respectivement. Renvoie ``-1`` en cas "
"d'erreur, ``0`` si le résultat est faux, et ``1`` sinon. Ceci est "
"l'équivalent de l'expression Python ``o1 op o2``, où ``op`` est l'opérateur "
"correspondant à *opid*."

#: ../Doc/c-api/object.rst:160
msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :const:`Py_EQ` and ``0`` for :const:`Py_NE`."
msgstr ""
"Si *o1* et *o2* sont le même objet, :c:func:`PyObject_RichCompareBool` "
"renvoie toujours ``1`` pour :const:`Py_EQ` et ``0`` pour :const:`Py_NE`."

#: ../Doc/c-api/object.rst:167
#, fuzzy
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``repr(o)``.  Called by the :func:`repr` built-in "
"function."
msgstr ""
"Calcule une représentation en chaîne de caractères de l'objet *o*. Renvoie "
"la représentation en chaîne de caractères en cas de succès, *NULL* en cas "
"d'échec. Ceci est l'équivalent de l'expression Python ``repr(o)``. Appelé "
"par la fonction native :func:`repr`."

#: ../Doc/c-api/object.rst:171 ../Doc/c-api/object.rst:195
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""
"Cette fonction inclut maintenant une assertion de débogage afin d'assurer "
"qu'elle ne passe pas sous silence une exception active."

#: ../Doc/c-api/object.rst:179
msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""
"Comme :c:Func:`PyObject_Repr`, calcule une représentation en chaîne de "
"caractères de l'objet *o*, mais échappe les caractères non ASCII dans la "
"chaîne de caractères renvoyée par :c:Func:`PyObject_Repr` avec' ``\\x``, ``"
"\\u`` ou ``\\U``. Cela génère une chaîne de caractères similaire à celle "
"renvoyée par :c:func:`PyObject_Repr` en Python 2. Appelée par la fonction "
"native :func:`ascii`."

#: ../Doc/c-api/object.rst:190
#, fuzzy
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``str(o)``.  Called by the :func:`str` built-in "
"function and, therefore, by the :func:`print` function."
msgstr ""
"Calcule une représentation en chaîne de caractères de l'objet *o*. Renvoie "
"la représentation en chaîne de caractères en cas de succès, *NULL* en cas "
"d'échec. Ceci est l'équivalent de l'expression Python ``str(o)``. Appelée "
"par la fonction native :func:`str`, et, par conséquent, par la fonction :"
"func:`print`."

#: ../Doc/c-api/object.rst:203
#, fuzzy
msgid ""
"Compute a bytes representation of object *o*.  ``NULL`` is returned on "
"failure and a bytes object on success.  This is equivalent to the Python "
"expression ``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a "
"TypeError is raised when *o* is an integer instead of a zero-initialized "
"bytes object."
msgstr ""
"Calcule une représentation en octets de l'objet *o*. *NULL* est renvoyé en "
"cas d'échec, un objet séquence d'octets est renvoyé en cas de succès. Ceci "
"est l'équivalent de l'expression Python ``bytes(o)``, quand *o* n'est pas un "
"entier. Contrairement à ``bytes(o)``, une exception *TypeError* est levée "
"lorsque *o* est un entier au lieu d'un objet octet initialisé avec des zéros."

#: ../Doc/c-api/object.rst:212
msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""
"Renvoie ``1`` si la classe *derived* est identique à ou dérivée de la classe "
"*cls*, renvoie ``0`` sinon. En cas d'erreur, renvoie ``-1``."

#: ../Doc/c-api/object.rst:215 ../Doc/c-api/object.rst:234
msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""
"Si *cls* est un tuple, la vérification est menée sur chaque entrée de *cls*. "
"Le résultat sera ``1`` quand au moins une des vérifications renvoie ``1``, "
"sinon ce sera ``0``."

#: ../Doc/c-api/object.rst:219
msgid ""
"If *cls* has a :meth:`~class.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in ``cls.__mro__``."
msgstr ""
"Si *cls* a une méthode :meth:`~class.__subclasscheck__`, elle est appelée "
"pour déterminer le statut de la sous-classe comme décrit dans :pep:`3119`. "
"Sinon, *derived* est une sous-classe de *cls* si c'est une sous-classe "
"directe ou indirecte, c'est-à-dire contenue dans ``cls.__mro__``."

#: ../Doc/c-api/object.rst:224
msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`__bases__` attribute (which must be a tuple of base classes)."
msgstr ""
"Normalement seulement les classes objets, c'est-à-dire les instances de :"
"class:`type` ou d'une classe dérivée, sont considérées classes. Cependant, "
"les objets peuvent surcharger cela en ayant un attribut :attr:`__bases__` "
"(qui doit être un tuple de classes de bases)."

#: ../Doc/c-api/object.rst:231
msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""
"Renvoie ``1`` si *inst* est une instance de la classe *cls* ou une sous-"
"classe de *cls*, ou ``0`` sinon. En cas d'erreur, renvoie ``-1`` et "
"initialise une exception."

#: ../Doc/c-api/object.rst:238
msgid ""
"If *cls* has a :meth:`~class.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""
"Si *cls* a une méthode :meth:`~class.__subclasscheck__`, elle sera appelée "
"pour déterminer le statut de la sous-classe comme décrit dans :pep:`3119`. "
"Sinon, *inst* est une instance *cls* si sa classe est une sous-classe de "
"*cls*."

#: ../Doc/c-api/object.rst:242
msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`__class__` attribute."
msgstr ""
"Une instance *inst* peut surcharger ce qui est considéré comme sa classe en "
"ayant un attribut :attr:`__class__`."

#: ../Doc/c-api/object.rst:245
msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`__bases__` attribute (which must be a tuple "
"of base classes)."
msgstr ""
"Un objet *cls* peut surcharger s'il est considéré comme une classe, et ce "
"que ses classes de bases sont, en ayant un attribut :attr:`__bases__` (qui "
"doit être un tuple des classes de base)."

#: ../Doc/c-api/object.rst:252
msgid ""
"Determine if the object *o* is callable.  Return ``1`` if the object is "
"callable and ``0`` otherwise.  This function always succeeds."
msgstr ""
"Détermine si l'objet *o* est appelable. Renvoie ``1`` si c'est le cas, et "
"``0`` sinon. Cette fonction réussit toujours."

#: ../Doc/c-api/object.rst:258
msgid ""
"Call a callable Python object *callable*, with arguments given by the tuple "
"*args*, and named arguments given by the dictionary *kwargs*."
msgstr ""
"Appelle un objet Python appelable *callable*, avec des arguments donnés par "
"le tuple *args*, et des arguments nommés donnés par le dictionnaire *kwargs*."

#: ../Doc/c-api/object.rst:261
#, fuzzy
msgid ""
"*args* must not be ``NULL``, use an empty tuple if no arguments are needed. "
"If no named arguments are needed, *kwargs* can be ``NULL``."
msgstr ""
"*args* ne doit pas être égal à *NULL*, utilisez un tuple vide si aucun "
"argument n'est nécessaire. Si aucun argument nommé n'est nécessaire, "
"*kwargs* peut être égal à *NULL*."

#: ../Doc/c-api/object.rst:264 ../Doc/c-api/object.rst:276
#: ../Doc/c-api/object.rst:288 ../Doc/c-api/object.rst:308
#: ../Doc/c-api/object.rst:327 ../Doc/c-api/object.rst:341
#: ../Doc/c-api/object.rst:365
#, fuzzy
msgid ""
"Return the result of the call on success, or raise an exception and return "
"``NULL`` on failure."
msgstr ""
"Renvoie le résultat de l'appel en cas de succès, ou lève une exception et "
"renvoie *NULL* en cas d'échec."

#: ../Doc/c-api/object.rst:267
msgid ""
"This is the equivalent of the Python expression: ``callable(*args, "
"**kwargs)``."
msgstr ""
"Ceci est l'équivalent de l'expression Python : ``callable(*args, **kwargs)``."

#: ../Doc/c-api/object.rst:273
#, fuzzy
msgid ""
"Call a callable Python object *callable*, with arguments given by the tuple "
"*args*.  If no arguments are needed, then *args* can be ``NULL``."
msgstr ""
"Appelle un objet Python appelable *callable*, avec des arguments donnés par "
"le tuple *args*. Si aucun argument n'est nécessaire, alors *args* peut être "
"égal à *NULL*."

#: ../Doc/c-api/object.rst:279 ../Doc/c-api/object.rst:291
msgid "This is the equivalent of the Python expression: ``callable(*args)``."
msgstr "Ceci est l'équivalent de l'expression Python : ``callable(*args)``."

#: ../Doc/c-api/object.rst:284
#, fuzzy
msgid ""
"Call a callable Python object *callable*, with a variable number of C "
"arguments. The C arguments are described using a :c:func:`Py_BuildValue` "
"style format string.  The format can be ``NULL``, indicating that no "
"arguments are provided."
msgstr ""
"Appelle un objet Python appelable, avec un nombre variable d'arguments C. "
"Les arguments C sont décrits par une chaîne de caractères de format de type :"
"c:func:`Py_BuildValue`. Le format peut être *NULL*, indiquant qu'aucun "
"argument n'est donné."

#: ../Doc/c-api/object.rst:293
msgid ""
"Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
"`PyObject_CallFunctionObjArgs` is a faster alternative."
msgstr ""

#: ../Doc/c-api/object.rst:296
msgid "The type of *format* was changed from ``char *``."
msgstr ""

#: ../Doc/c-api/object.rst:302
msgid ""
"Call the method named *name* of object *obj* with a variable number of C "
"arguments.  The C arguments are described by a :c:func:`Py_BuildValue` "
"format string that should  produce a tuple."
msgstr ""

#: ../Doc/c-api/object.rst:306
msgid "The format can be ``NULL``, indicating that no arguments are provided."
msgstr ""

#: ../Doc/c-api/object.rst:311
msgid ""
"This is the equivalent of the Python expression: ``obj.name(arg1, "
"arg2, ...)``."
msgstr ""

#: ../Doc/c-api/object.rst:314
msgid ""
"Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
"`PyObject_CallMethodObjArgs` is a faster alternative."
msgstr ""

#: ../Doc/c-api/object.rst:317
msgid "The types of *name* and *format* were changed from ``char *``."
msgstr ""

#: ../Doc/c-api/object.rst:323
#, fuzzy
msgid ""
"Call a callable Python object *callable*, with a variable number of :c:type:"
"`PyObject\\*` arguments.  The arguments are provided as a variable number of "
"parameters followed by ``NULL``."
msgstr ""
"Appelle un objet Python appelable, avec un nombre variable d'arguments C. "
"Les arguments C sont décrits par une chaîne de caractères de format de type :"
"c:func:`Py_BuildValue`. Le format peut être *NULL*, indiquant qu'aucun "
"argument n'est donné."

#: ../Doc/c-api/object.rst:330
#, fuzzy
msgid ""
"This is the equivalent of the Python expression: ``callable(arg1, "
"arg2, ...)``."
msgstr ""
"Ceci est l'équivalent de l'expression Python : ``callable(*args, **kwargs)``."

#: ../Doc/c-api/object.rst:336
msgid ""
"Calls a method of the Python object *obj*, where the name of the method is "
"given as a Python string object in *name*.  It is called with a variable "
"number of :c:type:`PyObject\\*` arguments.  The arguments are provided as a "
"variable number of parameters followed by ``NULL``."
msgstr ""

#: ../Doc/c-api/object.rst:347
msgid ""
"Call a callable Python object *callable*, using :c:data:`vectorcall "
"<PyTypeObject.tp_vectorcall_offset>` if possible."
msgstr ""

#: ../Doc/c-api/object.rst:350
msgid "*args* is a C array with the positional arguments."
msgstr ""

#: ../Doc/c-api/object.rst:352
msgid ""
"*nargsf* is the number of positional arguments plus optionally the flag :"
"const:`PY_VECTORCALL_ARGUMENTS_OFFSET` (see below). To get actual number of "
"arguments, use :c:func:`PyVectorcall_NARGS(nargsf) <PyVectorcall_NARGS>`."
msgstr ""

#: ../Doc/c-api/object.rst:357
msgid ""
"*kwnames* can be either ``NULL`` (no keyword arguments) or a tuple of "
"keyword names. In the latter case, the values of the keyword arguments are "
"stored in *args* after the positional arguments. The number of keyword "
"arguments does not influence *nargsf*."
msgstr ""

#: ../Doc/c-api/object.rst:362
msgid ""
"*kwnames* must contain only objects of type ``str`` (not a subclass), and "
"all keys must be unique."
msgstr ""

#: ../Doc/c-api/object.rst:368
msgid ""
"This uses the vectorcall protocol if the callable supports it; otherwise, "
"the arguments are converted to use :c:member:`~PyTypeObject.tp_call`."
msgstr ""

#: ../Doc/c-api/object.rst:374 ../Doc/c-api/object.rst:416
msgid ""
"This function is provisional and expected to become public in Python 3.9, "
"with a different name and, possibly, changed semantics. If you use the "
"function, plan for updating your code for Python 3.9."
msgstr ""

#: ../Doc/c-api/object.rst:382
msgid ""
"If set in a vectorcall *nargsf* argument, the callee is allowed to "
"temporarily change ``args[-1]``. In other words, *args* points to argument 1 "
"(not 0) in the allocated vector. The callee must restore the value of "
"``args[-1]`` before returning."
msgstr ""

#: ../Doc/c-api/object.rst:387
msgid ""
"Whenever they can do so cheaply (without additional allocation), callers are "
"encouraged to use :const:`PY_VECTORCALL_ARGUMENTS_OFFSET`. Doing so will "
"allow callables such as bound methods to make their onward calls (which "
"include a prepended *self* argument) cheaply."
msgstr ""

#: ../Doc/c-api/object.rst:396
msgid ""
"Given a vectorcall *nargsf* argument, return the actual number of arguments. "
"Currently equivalent to ``nargsf & ~PY_VECTORCALL_ARGUMENTS_OFFSET``."
msgstr ""

#: ../Doc/c-api/object.rst:404
msgid ""
"Same as :c:func:`_PyObject_Vectorcall` except that the keyword arguments are "
"passed as a dictionary in *kwdict*. This may be ``NULL`` if there are no "
"keyword arguments."
msgstr ""

#: ../Doc/c-api/object.rst:408
msgid ""
"For callables supporting :c:data:`vectorcall <PyTypeObject."
"tp_vectorcall_offset>`, the arguments are internally converted to the "
"vectorcall convention. Therefore, this function adds some overhead compared "
"to :c:func:`_PyObject_Vectorcall`. It should only be used if the caller "
"already has a dictionary ready to use."
msgstr ""

#: ../Doc/c-api/object.rst:427
msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""

#: ../Doc/c-api/object.rst:430
msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size as "
"Py_ssize_t."
msgstr ""

#: ../Doc/c-api/object.rst:437
msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not hashable and "
"return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""

#: ../Doc/c-api/object.rst:445
msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""

#: ../Doc/c-api/object.rst:452
msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""

#: ../Doc/c-api/object.rst:461
msgid ""
"When *o* is non-``NULL``, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"``NULL``.  This is equivalent to the Python expression ``type(o)``. This "
"function increments the reference count of the return value. There's really "
"no reason to use this function instead of the common expression ``o-"
">ob_type``, which returns a pointer of type :c:type:`PyTypeObject\\*`, "
"except when the incremented reference count is needed."
msgstr ""

#: ../Doc/c-api/object.rst:472
msgid ""
"Return true if the object *o* is of type *type* or a subtype of *type*.  "
"Both parameters must be non-``NULL``."
msgstr ""

#: ../Doc/c-api/object.rst:481
msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""

#: ../Doc/c-api/object.rst:488
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, default)``."
msgstr ""

#: ../Doc/c-api/object.rst:498
#, fuzzy
msgid ""
"Return element of *o* corresponding to the object *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""
"Récupère un attribut nommé *attr_name* de l'objet *o*. Renvoie la valeur de "
"l'attribut en cas de succès, ou *NULL* en cas d'échec. Ceci est équivalent à "
"l'expression Python ``o.attr_name``."

#: ../Doc/c-api/object.rst:504
#, fuzzy
msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``.  This function *does not* steal a reference to *v*."
msgstr ""
"Définit la valeur de l'attribut nommé *attr_name*, pour l'objet *o*, à la "
"valeur *v*. Lève une exception et renvoie ``-1`` en cas d'échec ; renvoie "
"``0`` en cas de succès. Ceci est équivalent à l'instruction Python ``o."
"attr_name = v``."

#: ../Doc/c-api/object.rst:512
#, fuzzy
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Supprime la correspondance associée à la chaîne *key* dans l'objet *o*. "
"Renvoie ``-1`` en cas d'échec. C'est l'équivalent de la commande Python "
"``del o[key]``."

#: ../Doc/c-api/object.rst:518
msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"``NULL`` if there was an error.  If the argument is ``NULL``, this is like "
"the Python ``dir()``, returning the names of the current locals; in this "
"case, if no execution frame is active then ``NULL`` is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""

#: ../Doc/c-api/object.rst:527
msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns ``NULL`` if the "
"object cannot be iterated."
msgstr ""
