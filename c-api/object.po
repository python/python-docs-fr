# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-28 15:29+0200\n"
"PO-Revision-Date: 2018-10-20 21:22+0200\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: \n"
"X-Generator: Poedit 2.2\n"

#: ../Doc/c-api/object.rst:6
msgid "Object Protocol"
msgstr "Protocole Objet"

#: ../Doc/c-api/object.rst:11
msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"Le singleton ``NotImplemented``, utilisé pour signaler qu'une opération "
"n'est pas implémentée pour la combinaison de type en question."

#: ../Doc/c-api/object.rst:17
msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, increment the reference count of NotImplemented and "
"return it)."
msgstr ""
"Traite proprement le renvoi de :c:data:`Py_NotImplemented` depuis "
"l'intérieur d'une fonction C (c'est-à-dire, incrémente le compteur de "
"référence de NotImplemented et le renvoie)."

#: ../Doc/c-api/object.rst:24
msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :const:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Affiche un objet *o*, sur le fichier *fp*. Retourne \"-1\" en cas d'erreur. "
"L'argument flags est utilisé pour permettre certaines options d'affichage. "
"La seule option actuellement gérée est :const:`Py_PRINT_RAW`; si donné, le  :"
"func:`str` de l'objet est écrit à la place de :func:`repr`."

#: ../Doc/c-api/object.rst:32 ../Doc/c-api/object.rst:39
msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise.  "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``.  This "
"function always succeeds."
msgstr ""
"Retourne \"1\" si *o* a l'attribut *attr_name*, et \"0\" sinon. Ceci est "
"équivalent à l'expression Python ``hasattr(o, attr_name)``. Cette fonction "
"réussit toujours."

#: ../Doc/c-api/object.rst:46
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or *NULL* on failure.  This is the equivalent of "
"the Python expression ``o.attr_name``."
msgstr ""
"Récupère un attribut nommé *attr_name* de l'objet *o*. Retourne la valeur de "
"l'attribut en cas de succès, ou *NULL* en cas d'échec. Ceci est équivalent à "
"l'expression Python \"o.attr_name\"."

#: ../Doc/c-api/object.rst:53
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or *NULL* on failure. This is the equivalent of "
"the Python expression ``o.attr_name``."
msgstr ""
"Récupère un attribut nommé *attr_name* de l'objet *o*. Retourne la valeur de "
"l'attribut en cas de succès, ou *NULL* en cas d'échec. Ceci est équivalent à "
"l'expression Python \"o.attr_name\"."

#: ../Doc/c-api/object.rst:60
msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Fonction générique de requête d'attribut qui doit être mise dans le *slot* "
"`tp_getattro`` d'un type objet. Elle cherche un descripteur dans un "
"dictionnaire de classe dans le MRO de l'objet ainsi qu'un attribut dans le :"
"attr:`~object.__dict__`  de l'objet (si présent). Comme défini dans :ref:"
"`descriptors`, les descripteurs de données sont prioritaires sur les "
"attributs d'instance, contrairement aux autres descripteurs.\vSinon, une :"
"exc:`AttributeError` est levée."

#: ../Doc/c-api/object.rst:70 ../Doc/c-api/object.rst:81
msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Définit la valeur de l'attribut nommé  *attr_name*, pour l'objet *o*, à la "
"valeur *v*. Lève une exception et retourne \"-1\" en cas d'échec; retourne "
"\"0\" si succès. Ceci est équivalent à l'énoncé Python ``o.attr_name = v``."

#: ../Doc/c-api/object.rst:75
msgid ""
"If *v* is *NULL*, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttr`."
msgstr ""
"Si *v* est *NULL*, l'attribut est supprimé. Cette construction n'a plus lieu "
"d'être, nous vous conseillons d'utiliser :c:func:PyObject_DelAttr."

#: ../Doc/c-api/object.rst:86
msgid ""
"If *v* is *NULL*, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Si *v* est *NULL*, l'attribut est supprimé. Cette construction n'a plus lieu "
"d'être, nous vous conseillons d'utiliser :c:func:PyObject_DelAttr."

#: ../Doc/c-api/object.rst:92
msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Fonction générique de définition et de suppression d'attributs qui est faite "
"pour être mise dans le :c:member:`~PyTypeObject.tp_setattro` d'un type "
"objet. Il cherche un descripteur de données dans le dictionnaire de classes "
"dans le MRO de l'objet et, si ce descripteur est trouvé, c'est lui qui est "
"utilisé pour la préférence pour la suppression et la définition de "
"l'attribut dans le dictionnaire d'instance. Sinon, l'attribut est défini ou "
"supprimé dans le  :attr:`~object.__dict__` de l'objet (si présent).\vEn cas "
"de succès, \"0\" est retourné, sinon une :exc:`AttributeError` est levée et "
"-1 est retourné."

#: ../Doc/c-api/object.rst:104 ../Doc/c-api/object.rst:110
msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Supprime l'attribut nommé *attr_name*, pour l'objet *o*. Retourne \"-1\" en "
"cas d'échec. Ceci est l'équivalent de l'expression Python ``del o."
"attr_name``."

#: ../Doc/c-api/object.rst:116
msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"Une implémentation générique de l'accesseur d'un descripteur de  "
"``__dict__``. Il crée le dictionnaire si nécessaire."

#: ../Doc/c-api/object.rst:124
msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"Une implémentation générique du mutateur d'un descripteur de  ``__dict__``. "
"Cette implémentation n'autorise pas la suppression du dictionnaire."

#: ../Doc/c-api/object.rst:132
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*. Returns the value of the comparison on success, or *NULL* on "
"failure."
msgstr ""
"Compare les valeurs de *o1* et *o2* en utilisant l'opération spécifiée par "
"*opid*, qui doit être :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, ou :const:`Py_GE`, correspondant à ``<``, ``<=``, "
"``==``, ``!=``, ``>``, ou ``>=`` respectivement. Ceci est l'équivalent de "
"l'expression Python ``o1 op o2``, où ``op`` est l'opérateur correspondant à "
"*opid*.\vRetourne la valeur de la comparaison en cas de succès, ou *NULL* en "
"cas d'échec."

#: ../Doc/c-api/object.rst:142
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. Returns ``-1`` on error, "
"``0`` if the result is false, ``1`` otherwise. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*."
msgstr ""

#: ../Doc/c-api/object.rst:151
msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :const:`Py_EQ` and ``0`` for :const:`Py_NE`."
msgstr ""

#: ../Doc/c-api/object.rst:158
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, *NULL* on failure.  This is the equivalent of the "
"Python expression ``repr(o)``.  Called by the :func:`repr` built-in function."
msgstr ""

#: ../Doc/c-api/object.rst:162 ../Doc/c-api/object.rst:186
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""

#: ../Doc/c-api/object.rst:170
msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""

#: ../Doc/c-api/object.rst:181
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, *NULL* on failure.  This is the equivalent of the "
"Python expression ``str(o)``.  Called by the :func:`str` built-in function "
"and, therefore, by the :func:`print` function."
msgstr ""

#: ../Doc/c-api/object.rst:194
msgid ""
"Compute a bytes representation of object *o*.  *NULL* is returned on failure "
"and a bytes object on success.  This is equivalent to the Python expression "
"``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a TypeError "
"is raised when *o* is an integer instead of a zero-initialized bytes object."
msgstr ""

#: ../Doc/c-api/object.rst:203
msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""

#: ../Doc/c-api/object.rst:206 ../Doc/c-api/object.rst:225
msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""

#: ../Doc/c-api/object.rst:210
msgid ""
"If *cls* has a :meth:`~class.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in ``cls.__mro__``."
msgstr ""

#: ../Doc/c-api/object.rst:215
msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`__bases__` attribute (which must be a tuple of base classes)."
msgstr ""

#: ../Doc/c-api/object.rst:222
msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""

#: ../Doc/c-api/object.rst:229
msgid ""
"If *cls* has a :meth:`~class.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""

#: ../Doc/c-api/object.rst:233
msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`__class__` attribute."
msgstr ""

#: ../Doc/c-api/object.rst:236
msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`__bases__` attribute (which must be a tuple "
"of base classes)."
msgstr ""

#: ../Doc/c-api/object.rst:243
msgid ""
"Determine if the object *o* is callable.  Return ``1`` if the object is "
"callable and ``0`` otherwise.  This function always succeeds."
msgstr ""

#: ../Doc/c-api/object.rst:249
msgid ""
"Call a callable Python object *callable*, with arguments given by the tuple "
"*args*, and named arguments given by the dictionary *kwargs*."
msgstr ""

#: ../Doc/c-api/object.rst:252
msgid ""
"*args* must not be *NULL*, use an empty tuple if no arguments are needed. If "
"no named arguments are needed, *kwargs* can be *NULL*."
msgstr ""

#: ../Doc/c-api/object.rst:255 ../Doc/c-api/object.rst:266
#: ../Doc/c-api/object.rst:277 ../Doc/c-api/object.rst:296
#: ../Doc/c-api/object.rst:314
msgid "Returns the result of the call on success, or *NULL* on failure."
msgstr ""

#: ../Doc/c-api/object.rst:257
msgid ""
"This is the equivalent of the Python expression: ``callable(*args, "
"**kwargs)``."
msgstr ""

#: ../Doc/c-api/object.rst:263
msgid ""
"Call a callable Python object *callable*, with arguments given by the tuple "
"*args*.  If no arguments are needed, then *args* can be *NULL*."
msgstr ""

#: ../Doc/c-api/object.rst:268 ../Doc/c-api/object.rst:279
msgid "This is the equivalent of the Python expression: ``callable(*args)``."
msgstr ""

#: ../Doc/c-api/object.rst:273
msgid ""
"Call a callable Python object *callable*, with a variable number of C "
"arguments. The C arguments are described using a :c:func:`Py_BuildValue` "
"style format string.  The format can be *NULL*, indicating that no arguments "
"are provided."
msgstr ""

#: ../Doc/c-api/object.rst:281
msgid ""
"Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
"`PyObject_CallFunctionObjArgs` is a faster alternative."
msgstr ""

#: ../Doc/c-api/object.rst:284
msgid "The type of *format* was changed from ``char *``."
msgstr ""

#: ../Doc/c-api/object.rst:290
msgid ""
"Call the method named *name* of object *obj* with a variable number of C "
"arguments.  The C arguments are described by a :c:func:`Py_BuildValue` "
"format string that should  produce a tuple."
msgstr ""

#: ../Doc/c-api/object.rst:294
msgid "The format can be *NULL*, indicating that no arguments are provided."
msgstr ""

#: ../Doc/c-api/object.rst:298
msgid ""
"This is the equivalent of the Python expression: ``obj.name(arg1, "
"arg2, ...)``."
msgstr ""

#: ../Doc/c-api/object.rst:301
msgid ""
"Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
"`PyObject_CallMethodObjArgs` is a faster alternative."
msgstr ""

#: ../Doc/c-api/object.rst:304
msgid "The types of *name* and *format* were changed from ``char *``."
msgstr ""

#: ../Doc/c-api/object.rst:310
msgid ""
"Call a callable Python object *callable*, with a variable number of :c:type:"
"`PyObject\\*` arguments.  The arguments are provided as a variable number of "
"parameters followed by *NULL*."
msgstr ""

#: ../Doc/c-api/object.rst:316
msgid ""
"This is the equivalent of the Python expression: ``callable(arg1, "
"arg2, ...)``."
msgstr ""

#: ../Doc/c-api/object.rst:322
msgid ""
"Calls a method of the Python object *obj*, where the name of the method is "
"given as a Python string object in *name*.  It is called with a variable "
"number of :c:type:`PyObject\\*` arguments.  The arguments are provided as a "
"variable number of parameters followed by *NULL*. Returns the result of the "
"call on success, or *NULL* on failure."
msgstr ""

#: ../Doc/c-api/object.rst:333
msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""

#: ../Doc/c-api/object.rst:336
msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size as "
"Py_ssize_t."
msgstr ""

#: ../Doc/c-api/object.rst:343
msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not hashable and "
"return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""

#: ../Doc/c-api/object.rst:351
msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""

#: ../Doc/c-api/object.rst:358
msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""

#: ../Doc/c-api/object.rst:367
msgid ""
"When *o* is non-*NULL*, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"*NULL*.  This is equivalent to the Python expression ``type(o)``. This "
"function increments the reference count of the return value. There's really "
"no reason to use this function instead of the common expression ``o-"
">ob_type``, which returns a pointer of type :c:type:`PyTypeObject\\*`, "
"except when the incremented reference count is needed."
msgstr ""

#: ../Doc/c-api/object.rst:378
msgid ""
"Return true if the object *o* is of type *type* or a subtype of *type*.  "
"Both parameters must be non-*NULL*."
msgstr ""

#: ../Doc/c-api/object.rst:387
msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""

#: ../Doc/c-api/object.rst:394
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, default)``."
msgstr ""

#: ../Doc/c-api/object.rst:404
msgid ""
"Return element of *o* corresponding to the object *key* or *NULL* on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""

#: ../Doc/c-api/object.rst:410
msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``."
msgstr ""

#: ../Doc/c-api/object.rst:417
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""

#: ../Doc/c-api/object.rst:423
msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"*NULL* if there was an error.  If the argument is *NULL*, this is like the "
"Python ``dir()``, returning the names of the current locals; in this case, "
"if no execution frame is active then *NULL* is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""

#: ../Doc/c-api/object.rst:432
msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns *NULL* if the "
"object cannot be iterated."
msgstr ""
