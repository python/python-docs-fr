# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-05 23:16+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr ""

#: ../Doc/c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and :c:func:"
"`PyObject_DelItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides mapping protocol or supports slicing, "
"and ``0`` otherwise.  Note that it returns ``1`` for Python classes with a :"
"meth:`__getitem__` method since in general case it is impossible to "
"determine what type of keys it supports. This function always succeeds."
msgstr ""

#: ../Doc/c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""

#: ../Doc/c-api/mapping.rst:31
msgid ""
"Return element of *o* corresponding to the string *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:38
msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. See "
"also :c:func:`PyObject_SetItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:45
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``. This "
"is an alias of :c:func:`PyObject_DelItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:52
msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""

#: ../Doc/c-api/mapping.rst:58 ../Doc/c-api/mapping.rst:69
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""

#: ../Doc/c-api/mapping.rst:62
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method will get suppressed. To get error reporting use :c:func:"
"`PyObject_GetItem()` instead."
msgstr ""

#: ../Doc/c-api/mapping.rst:73
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method and creating a temporary string object will get suppressed. To get "
"error reporting use :c:func:`PyMapping_GetItemString()` instead."
msgstr ""

#: ../Doc/c-api/mapping.rst:80
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../Doc/c-api/mapping.rst:83 ../Doc/c-api/mapping.rst:92
#: ../Doc/c-api/mapping.rst:101
msgid "Previously, the function returned a list or a tuple."
msgstr ""

#: ../Doc/c-api/mapping.rst:89
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../Doc/c-api/mapping.rst:98
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
