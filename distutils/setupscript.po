# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2020-04-16 22:30+0200\n"
"Last-Translator: Philippe GALVAN\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.3\n"

#: distutils/setupscript.rst:5
msgid "Writing the Setup Script"
msgstr "Rédaction du script ``setup.py``"

#: distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Ce document est conservé uniquement jusqu'à ce que la documentation de "
"``setuptools``, présente à l'adresse https://setuptools.readthedocs.io/en/"
"latest/setuptools.html, couvre indépendamment toutes les informations "
"pertinentes actuellement incluses ici."

#: distutils/setupscript.rst:9
msgid ""
"The setup script is the centre of all activity in building, distributing, "
"and installing modules using the Distutils.  The main purpose of the setup "
"script is to describe your module distribution to the Distutils, so that the "
"various commands that operate on your modules do the right thing.  As we saw "
"in section :ref:`distutils-simple-example` above, the setup script consists "
"mainly of a call to :func:`setup`, and most information supplied to the "
"Distutils by the module developer is supplied as keyword arguments to :func:"
"`setup`."
msgstr ""
"Le script ``setup.py`` est au centre de toute opération de construction, de "
"distribution et d'installation des modules utilisant les *Distutils*. "
"L'objectif principal du script ``setup.py`` est de décrire le module aux "
"*Distutils*, de telle sorte que les diverses commandes qui agissent sur "
"votre module fassent les bonnes choses. Comme nous avons vu dans la section :"
"ref:`distutils-simple-example` au-dessus, le script ``setup.py`` consiste "
"principalement à un appel à :func:`setup`, et la plupart des informations "
"fournies aux *Distutils* par le développeur du module sont fournies en tant "
"qu'arguments nommés à :func:`setup.py`."

#: distutils/setupscript.rst:17
msgid ""
"Here's a slightly more involved example, which we'll follow for the next "
"couple of sections: the Distutils' own setup script.  (Keep in mind that "
"although the Distutils are included with Python 1.6 and later, they also "
"have an independent existence so that Python 1.5.2 users can use them to "
"install other module distributions.  The Distutils' own setup script, shown "
"here, is used to install the package into Python 1.5.2.) ::"
msgstr ""
"Voici un exemple un peu plus concret, que nous allons suivre pour les "
"quelques sections suivantes : le propre script ``setup.py`` des *Distutils* "
"(gardez toujours à l'esprit qu'en dépit de l'inclusion des *Distutils* dans "
"python 1.6 et ses versions successives, ils ont aussi une existence à part "
"entière de telle sorte que les utilisateurs de Python 1.5.2 puissent les "
"utiliser pour installer d'autres modules. Le propre script ``setup.py`` des "
"*Distutils* montré ici est utilisé pour installer le paquet dans Python "
"1.5.2). ::"

#: distutils/setupscript.rst:37
msgid ""
"There are only two differences between this and the trivial one-file "
"distribution presented in section :ref:`distutils-simple-example`: more "
"metadata, and the specification of pure Python modules by package, rather "
"than by module.  This is important since the Distutils consist of a couple "
"of dozen modules split into (so far) two packages; an explicit list of every "
"module would be tedious to generate and difficult to maintain.  For more "
"information on the additional meta-data, see section :ref:`meta-data`."
msgstr ""
"Il y a seulement deux différences entre cet exemple et l'exemple trivial de "
"la distribution d'un unique fichier présenté dans la partie :ref:`distutils-"
"simple-example` : plus de métadonnées, et la définition de modules purement "
"Python par paquet, plutôt que par module. C'est important car les "
"*Distutils* sont composés de quelques douzaines de modules séparés (pour le "
"moment) en deux paquets ; une liste explicite de chaque module serait "
"pénible à générer et difficile à maintenir. Pour plus d'information sur les "
"métadonnées supplémentaires, voir la partie :ref:`meta-data`."

#: distutils/setupscript.rst:45
msgid ""
"Note that any pathnames (files or directories) supplied in the setup script "
"should be written using the Unix convention, i.e. slash-separated.  The "
"Distutils will take care of converting this platform-neutral representation "
"into whatever is appropriate on your current platform before actually using "
"the pathname.  This makes your setup script portable across operating "
"systems, which of course is one of the major goals of the Distutils.  In "
"this spirit, all pathnames in this document are slash-separated."
msgstr ""
"À noter que chaque chemin d'accès fourni au script ``setup.py`` doit être "
"écrit selon la convention Unix. Autrement dit, séparé par des barres "
"obliques (slash). Les *Distutils* prendront soin de convertir cette "
"représentation indépendante de la plateforme en une représentation adaptée à "
"votre plateforme actuelle avant d'effectivement utiliser le chemin d'accès. "
"Cela rend votre script ``setup.py`` portable d'un système d'exploitation à "
"l'autre, ce qui évidemment est l'un des buts majeurs des *Distutils*. Dans "
"cet esprit, tous les chemins d'accès dans ce document sont séparés par des "
"barres obliques (slash)."

#: distutils/setupscript.rst:53
msgid ""
"This, of course, only applies to pathnames given to Distutils functions.  If "
"you, for example, use standard Python functions such as :func:`glob.glob` "
"or :func:`os.listdir` to specify files, you should be careful to write "
"portable code instead of hardcoding path separators::"
msgstr ""
"Cela, évidemment, s'applique uniquement aux chemins d'accès passés aux "
"fonctions de *Distutils*. Si vous, par exemple, vous utilisez les fonctions "
"standards de Python telles que :func:`glob.glob` or :func:`os.listdir` pour "
"définir des fichiers, vous devez prendre soin d'écrire du code portable au "
"lieu de coder en dur les séparateurs de chemin ::"

#: distutils/setupscript.rst:65
msgid "Listing whole packages"
msgstr "Lister l'ensemble des paquets"

#: distutils/setupscript.rst:67
msgid ""
"The ``packages`` option tells the Distutils to process (build, distribute, "
"install, etc.) all pure Python modules found in each package mentioned in "
"the ``packages`` list.  In order to do this, of course, there has to be a "
"correspondence between package names and directories in the filesystem.  The "
"default correspondence is the most obvious one, i.e. package :mod:"
"`distutils` is found in the directory :file:`distutils` relative to the "
"distribution root. Thus, when you say ``packages = ['foo']`` in your setup "
"script, you are promising that the Distutils will find a file :file:`foo/"
"__init__.py` (which might be spelled differently on your system, but you get "
"the idea) relative to the directory where your setup script lives.  If you "
"break this promise, the Distutils will issue a warning but still process the "
"broken package anyway."
msgstr ""
"L'option ``packages`` dit aux *Distutils* de traiter (construire, "
"distribuer, installer, etc.) tous les modules en Python pur trouvés dans "
"chaque paquet mentionné dans la liste ``packages``. À cette fin, évidemment, "
"il faut une correspondance entre les noms des paquets et des répertoires "
"dans le système de fichiers. La correspondance par défaut est la plus "
"évidente. À savoir : le paquet :mod:`distutils` se trouve dans le "
"répertoire :file:`distutils` situé à la racine de la distribution. Ainsi, "
"quand vous écrivez ``packages = ['foo']`` dans votre script ``setup.py``, "
"vous vous engagez à ce que les *Distutils* trouvent un fichier ``foo/"
"__init__.py`` (qui peut s'épeler différemment sur votre système, mais vous "
"voyez l'idée) à un emplacement relatif au répertoire où se trouve le script "
"``setup.py``. Si ce n'est pas le cas, les *Distutils* lèvent un "
"avertissement mais traitent tout de même le paquet défectueux."

#: distutils/setupscript.rst:79
msgid ""
"If you use a different convention to lay out your source directory, that's "
"no problem: you just have to supply the ``package_dir`` option to tell the "
"Distutils about your convention.  For example, say you keep all Python "
"source under :file:`lib`, so that modules in the \"root package\" (i.e., not "
"in any package at all) are in :file:`lib`, modules in the :mod:`foo` package "
"are in :file:`lib/foo`, and so forth.  Then you would put ::"
msgstr ""
"Si vous utilisez une convention différente pour arranger votre répertoire de "
"sources, ce n'est pas un problème : vous avez seulement à fournir l'option "
"``package_dir`` pour prévenir les *Distutils* de l'usage de cette "
"convention. Par exemple, supposons que vous gardez toutes les sources Python "
"sous :file:`lib`, de telle sorte que les modules dans le « paquet "
"racine » (c'est-à-dire dans aucun paquet du tout) sont dans :file:`lib`, les "
"modules dans le paquet :mod:`foo` sont dans :file:`lib/foo`, et ainsi de "
"suite. Alors, vous pouvez mettre ::"

#: distutils/setupscript.rst:88
msgid ""
"in your setup script.  The keys to this dictionary are package names, and an "
"empty package name stands for the root package.  The values are directory "
"names relative to your distribution root.  In this case, when you say "
"``packages = ['foo']``, you are promising that the file :file:`lib/foo/"
"__init__.py` exists."
msgstr ""
"dans votre script ``setup.py``. Les clés de ce dictionnaire sont les noms "
"des paquets, et un nom de paquet vide fait office de paquet racine. Les "
"valeurs sont des noms de répertoires relatifs à la racine de votre "
"distribution. Dans ce cas, lorsque vous dites ``packages = ['foo']``, vous "
"vous engagez à ce que le fichier :file:`lib/foo/__init__.py` existe."

#: distutils/setupscript.rst:93
msgid ""
"Another possible convention is to put the :mod:`foo` package right in :file:"
"`lib`, the :mod:`foo.bar` package in :file:`lib/bar`, etc.  This would be "
"written in the setup script as ::"
msgstr ""
"Une autre convention possible est de mettre le paquet :mod:`foo` directement "
"dans :file:`lib`, le paquet :mod:`foo.bar` dans :file:`lib/bar`, etc. Cela "
"s'écrirait ainsi dans le script ``setup.py`` : ::"

#: distutils/setupscript.rst:99
msgid ""
"A ``package: dir`` entry in the ``package_dir`` dictionary implicitly "
"applies to all packages below *package*, so the :mod:`foo.bar` case is "
"automatically handled here.  In this example, having ``packages = ['foo', "
"'foo.bar']`` tells the Distutils to look for :file:`lib/__init__.py` and :"
"file:`lib/bar/__init__.py`.  (Keep in mind that although ``package_dir`` "
"applies recursively, you must explicitly list all packages in ``packages``: "
"the Distutils will *not* recursively scan your source tree looking for any "
"directory with an :file:`__init__.py` file.)"
msgstr ""

#: distutils/setupscript.rst:112
msgid "Listing individual modules"
msgstr "Lister chaque module indépendamment"

#: distutils/setupscript.rst:114
msgid ""
"For a small module distribution, you might prefer to list all modules rather "
"than listing packages---especially the case of a single module that goes in "
"the \"root package\" (i.e., no package at all).  This simplest case was "
"shown in section :ref:`distutils-simple-example`; here is a slightly more "
"involved example::"
msgstr ""
"Pour un petit projet, vous pouvez préférer lister tous les modules plutôt "
"que les paquets — surtout le cas d'un module seul qui va dans le « paquet "
"racine » (à savoir, aucun paquet du tout). Le cas le plus simple a été "
"montré dans la partie :ref:`distutils-simple-example` ; voici un exemple "
"plus concret ::"

#: distutils/setupscript.rst:121
msgid ""
"This describes two modules, one of them in the \"root\" package, the other "
"in the :mod:`pkg` package.  Again, the default package/directory layout "
"implies that these two modules can be found in :file:`mod1.py` and :file:"
"`pkg/mod2.py`, and that :file:`pkg/__init__.py` exists as well. And again, "
"you can override the package/directory correspondence using the "
"``package_dir`` option."
msgstr ""
"Deux modules sont décrits, l'un dans le paquet « racine », l'autre dans le "
"paquet :mod:`pkg`. Encore une fois, la structure paquet/répertoire par "
"défaut implique que ces deux modules peuvent être trouvés dans :file:`mod1."
"py` et :file:`pkg/mod2.py`, et que :file:`pkg/__init__.py` existe aussi. Là "
"aussi, vous pouvez redéfinir la correspondance paquet/répertoire en "
"utilisant l'option ``package_dir``."

#: distutils/setupscript.rst:131
msgid "Describing extension modules"
msgstr "Description des modules d'extension"

#: distutils/setupscript.rst:133
msgid ""
"Just as writing Python extension modules is a bit more complicated than "
"writing pure Python modules, describing them to the Distutils is a bit more "
"complicated. Unlike pure modules, it's not enough just to list modules or "
"packages and expect the Distutils to go out and find the right files; you "
"have to specify the extension name, source file(s), and any compile/link "
"requirements (include directories, libraries to link with, etc.)."
msgstr ""
"Tout comme écrire des modules d'extension Python est un peu plus compliqué "
"que d’écrire des modules purement en Python, les décrire aux *Distutils* est "
"un peu plus compliqué. Contrairement aux modules purs, il ne suffit pas de "
"simplement lister les modules ou les paquets et d'attendre que les "
"*Distutils* trouvent par eux-mêmes les bons fichiers ; vous devez définir le "
"nom de l'extension, du ou des fichiers de sources, et les prérequis de "
"compilation/lien (répertoires à inclure, bibliothèques à lier, etc.)."

#: distutils/setupscript.rst:142
msgid ""
"All of this is done through another keyword argument to :func:`setup`, the "
"``ext_modules`` option.  ``ext_modules`` is just a list of :class:"
"`~distutils.core.Extension` instances, each of which describes a single "
"extension module. Suppose your distribution includes a single extension, "
"called :mod:`foo` and implemented by :file:`foo.c`.  If no additional "
"instructions to the compiler/linker are needed, describing this extension is "
"quite simple::"
msgstr ""
"Tout ceci est fait à l'aide d'un autre argument nommé passé à :func:`setup`, "
"l'option ``ext_modules``. ``ext_modules`` est simplement une liste de "
"classes :class:`~distutils.core.Extension`, chacune décrivant une seule "
"extension de module. Supposons que votre distribution inclut une seule "
"extension appelée :mod:`foo` et implémentée par :file:`foo.c`. Si aucune "
"instruction supplémentaire au compilateur/lieur n'est requise, décrire cette "
"extension est assez simple ::"

#: distutils/setupscript.rst:152
msgid ""
"The :class:`Extension` class can be imported from :mod:`distutils.core` "
"along with :func:`setup`.  Thus, the setup script for a module distribution "
"that contains only this one extension and nothing else might be::"
msgstr ""
"La classe :class:`Extension` peut être importée depuis :mod:`distutils.core` "
"en même temps que :func:`setup`. Ainsi, le script ``setup.py`` pour un "
"module qui ne contient que cette seule extension et rien d'autre peut être ::"

#: distutils/setupscript.rst:162
msgid ""
"The :class:`Extension` class (actually, the underlying extension-building "
"machinery implemented by the :command:`build_ext` command) supports a great "
"deal of flexibility in describing Python extensions, which is explained in "
"the following sections."
msgstr ""
"La classe :class:`Extension` (en réalité, la machinerie sous-jacente "
"construisant les extensions implémentées par la commande :command:"
"`build_ext`) permet une grande flexibilité dans la description des "
"extensions Python, ce qui est expliqué dans les parties suivantes."

#: distutils/setupscript.rst:169
msgid "Extension names and packages"
msgstr "Nom des extensions et paquets"

#: distutils/setupscript.rst:171
msgid ""
"The first argument to the :class:`~distutils.core.Extension` constructor is "
"always the name of the extension, including any package names.  For "
"example, ::"
msgstr ""
"Le premier argument du constructeur :class:`~distutils.core.Extension` est "
"toujours le nom de l'extension, incluant tout nom de paquet. Par exemple ::"

#: distutils/setupscript.rst:176
msgid "describes an extension that lives in the root package, while ::"
msgstr "décrit une extension qui se situe dans le paquet racine, tandis que ::"

#: distutils/setupscript.rst:180
msgid ""
"describes the same extension in the :mod:`pkg` package.  The source files "
"and resulting object code are identical in both cases; the only difference "
"is where in the filesystem (and therefore where in Python's namespace "
"hierarchy) the resulting extension lives."
msgstr ""
"décrit la même extension dans le paquet :mod:`pkg`. Les fichiers sources et "
"le code objet résultant sont identiques dans les deux cas ; la seule "
"différence est où, dans le système de fichier (et conséquemment dans la "
"hiérarchie de l'espace de nommage de Python), l'extension résultante se "
"situe."

#: distutils/setupscript.rst:185
msgid ""
"If you have a number of extensions all in the same package (or all under the "
"same base package), use the ``ext_package`` keyword argument to :func:"
"`setup`.  For example, ::"
msgstr ""
"Si vous avez un certain nombre d'extensions toutes dans le même paquet (ou "
"toutes sous le même paquet de base), utilisez l'argument nommé "
"``ext_package`` de :func:`setup`. Par exemple ::"

#: distutils/setupscript.rst:195
msgid ""
"will compile :file:`foo.c` to the extension :mod:`pkg.foo`, and :file:`bar."
"c` to :mod:`pkg.subpkg.bar`."
msgstr ""
"compile :file:`foo.c` en l’extension :mod:`pkg.foo`, et :file:`bar.c` en :"
"mod:`pkg.subpkg.bar`."

#: distutils/setupscript.rst:200
msgid "Extension source files"
msgstr "Fichiers sources d'extension"

#: distutils/setupscript.rst:202
msgid ""
"The second argument to the :class:`~distutils.core.Extension` constructor is "
"a list of source files.  Since the Distutils currently only support C, C++, "
"and Objective-C extensions, these are normally C/C++/Objective-C source "
"files.  (Be sure to use appropriate extensions to distinguish C++ source "
"files: :file:`.cc` and :file:`.cpp` seem to be recognized by both Unix and "
"Windows compilers.)"
msgstr ""
"Le second argument du constructeur d'\\ :class:`~distutils.core.Extension` "
"est une liste de fichiers sources. Puisque les *Distutils* ne gèrent que les "
"extensions en C, C++ et Objective-C, ce sont normalement des fichiers "
"sources en C/C++/Objective-C (assurez vous d'utiliser les extensions "
"appropriées pour détecter les fichiers sources en C++ : :file:`.cc` et :file:"
"`.cpp` semblent être reconnus tant par les compilateurs Unix que Windows)."

#: distutils/setupscript.rst:209
msgid ""
"However, you can also include SWIG interface (:file:`.i`) files in the list; "
"the :command:`build_ext` command knows how to deal with SWIG extensions: it "
"will run SWIG on the interface file and compile the resulting C/C++ file "
"into your extension."
msgstr ""
"Néanmoins, vous pouvez également inclure des fichiers d'interface SWIG (:"
"file:`.i`) dans la liste ; la commande :command:`build_ext` sait comment "
"gérer les extensions SWIG : il lancera SWIG sur un fichier d'interface et "
"compilera le fichier en C/C++ en une extension."

#: distutils/setupscript.rst:216
msgid ""
"This warning notwithstanding, options to SWIG can be currently passed like "
"this::"
msgstr ""
"Malgré cet avertissement, les options peuvent être actuellement passées à "
"SWIG de la façon suivante ::"

#: distutils/setupscript.rst:225
msgid "Or on the commandline like this::"
msgstr "Ou en ligne de commande de cette façon ::"

#: distutils/setupscript.rst:229
msgid ""
"On some platforms, you can include non-source files that are processed by "
"the compiler and included in your extension.  Currently, this just means "
"Windows message text (:file:`.mc`) files and resource definition (:file:`."
"rc`) files for Visual C++. These will be compiled to binary resource (:file:"
"`.res`) files and linked into the executable."
msgstr ""
"Sur certaines plateformes, vous pouvez inclure des fichiers autres que des "
"sources qui seront traités par le compilateur et inclus dans votre "
"extension. Pour l'instant, cela concerne seulement les fichiers de messages "
"texte Windows (:file:`.mc`) et les fichiers de définition de ressource pour "
"Visual C++ (:file:`.rc`). Ils seront compilés en fichiers de ressources "
"binaires (:file:`.res`) et liés à l'exécutable."

#: distutils/setupscript.rst:237
msgid "Preprocessor options"
msgstr "Options de préprocesseur"

#: distutils/setupscript.rst:239
msgid ""
"Three optional arguments to :class:`~distutils.core.Extension` will help if "
"you need to specify include directories to search or preprocessor macros to "
"define/undefine: ``include_dirs``, ``define_macros``, and ``undef_macros``."
msgstr ""
"Trois arguments optionnels de :class:`~distutils.core.Extension` aident si "
"vous avez besoin de préciser les dossiers d’en-têtes à chercher ou les "
"macros de préprocesseurs à charger ou ignorer : ``include_dirs``, "
"``define_macros``, et ``undef_macros``."

#: distutils/setupscript.rst:243
msgid ""
"For example, if your extension requires header files in the :file:`include` "
"directory under your distribution root, use the ``include_dirs`` option::"
msgstr ""
"Par exemple, si votre extension nécessite des fichiers d'en-tête dans le "
"répertoire :file:`include` à la racine de votre distribution, utilisez "
"l'option ``include_dirs`` ::"

#: distutils/setupscript.rst:248
msgid ""
"You can specify absolute directories there; if you know that your extension "
"will only be built on Unix systems with X11R6 installed to :file:`/usr`, you "
"can get away with ::"
msgstr ""
"Ici, vous pouvez définir le chemin absolu des répertoires ; si vous savez "
"que votre extension sera compilée sur un système Unix avec ``X11R6`` "
"installé dans :file:`/usr`, vous pouvez vous en sortir avec ::"

#: distutils/setupscript.rst:254
msgid ""
"You should avoid this sort of non-portable usage if you plan to distribute "
"your code: it's probably better to write C code like  ::"
msgstr ""
"Il convient d'éviter ce type d'utilisation non portable si vous envisagez de "
"distribuer votre code : Il est probablement mieux d'écrire du code C comme ::"

#: distutils/setupscript.rst:259
msgid ""
"If you need to include header files from some other Python extension, you "
"can take advantage of the fact that header files are installed in a "
"consistent way by the Distutils :command:`install_headers` command.  For "
"example, the Numerical Python header files are installed (on a standard Unix "
"installation) to :file:`/usr/local/include/python1.5/Numerical`. (The exact "
"location will differ according to your platform and Python installation.)  "
"Since the Python include directory---\\ :file:`/usr/local/include/python1.5` "
"in this case---is always included in the search path when building Python "
"extensions, the best approach is to write C code like  ::"
msgstr ""
"Si vous avez besoin d'inclure des fichiers d'en-tête provenant d'autres "
"extensions Python, vous pouvez profiter du fait que les fichiers d'en-têtes "
"sont installés de façon cohérente par la commande :command:`install_headers` "
"des *Distutils*. Par exemple, les fichiers d'en-têtes de *Numerical Python* "
"(NumPy) sont installés (dans le cas d'une installation Unix standard) dans :"
"file:`/usr/local/include/python1.5/Numerical` — l'emplacement exact diffère "
"selon votre plateforme et votre installation de Python. Vu que le "
"répertoire :file:`include` de Python —\\ :file:`/usr/local/include/"
"python1.5` dans ce cas-ci — est toujours inclus dans le chemin de recherche "
"quand vous construisez des extensions Python, la meilleure approche est "
"d'écrire du code C comme ::"

#: distutils/setupscript.rst:271
msgid ""
"If you must put the :file:`Numerical` include directory right into your "
"header search path, though, you can find that directory using the Distutils :"
"mod:`distutils.sysconfig` module::"
msgstr ""
"Si vous devez mettre le répertoire :file:`include` de :file:`Numerical` "
"directement dans l'en-tête du chemin de recherche, cependant, vous pouvez "
"trouver ce répertoire en utilisant le module :mod:`distutils.sysconfig` des "
"*Distutils* ::"

#: distutils/setupscript.rst:281
msgid ""
"Even though this is quite portable---it will work on any Python "
"installation, regardless of platform---it's probably easier to just write "
"your C code in the sensible way."
msgstr ""
"Même si c'est assez portable — ça marche sur la plupart des installations de "
"Python, indépendamment de la plateforme — il est probablement plus facile "
"d'écrire un code C un peu plus réfléchi."

#: distutils/setupscript.rst:285
msgid ""
"You can define and undefine pre-processor macros with the ``define_macros`` "
"and ``undef_macros`` options. ``define_macros`` takes a list of ``(name, "
"value)`` tuples, where ``name`` is the name of the macro to define (a "
"string) and ``value`` is its value: either a string or ``None``.  (Defining "
"a macro ``FOO`` to ``None`` is the equivalent of a bare ``#define FOO`` in "
"your C source: with most compilers, this sets ``FOO`` to the string ``1``.)  "
"``undef_macros`` is just a list of macros to undefine."
msgstr ""
"Vous pouvez définir ou ignorer des macros de pré-processeur avec les options "
"``define_macros`` et ``undef_macros``. ``define_macros`` prend une liste de "
"paires ``(nom, valeur)``, où ``nom`` est le nom de la macro à définir (une "
"chaîne de caractères) et ``valeur`` est sa valeur ; soit une chaîne de "
"caractères, soit ``None`` (définir une macro ``FOO`` à ``None`` est "
"équivalent à un simple ``#define FOO`` dans votre source en C ; pour la "
"majorité des compilateurs, cela définit la valeur de ``FOO`` à la chaîne de "
"caractère ``1``). ``undef_macros`` est juste une liste de macros à supprimer."

#: distutils/setupscript.rst:293
msgid "For example::"
msgstr "Par exemple ::"

#: distutils/setupscript.rst:300
msgid "is the equivalent of having this at the top of every C source file::"
msgstr "est équivalent à avoir ceci au début de chaque fichier source en C ::"

#: distutils/setupscript.rst:309
msgid "Library options"
msgstr "Options des bibliothèques"

#: distutils/setupscript.rst:311
msgid ""
"You can also specify the libraries to link against when building your "
"extension, and the directories to search for those libraries.  The "
"``libraries`` option is a list of libraries to link against, "
"``library_dirs`` is a list of directories to search for libraries at  link-"
"time, and ``runtime_library_dirs`` is a list of directories to  search for "
"shared (dynamically loaded) libraries at run-time."
msgstr ""
"Vous pouvez aussi définir les bibliothèques à lier quand vous construisez "
"votre extension, ainsi que le répertoire de recherche pour ces "
"bibliothèques. L'option ``libraries`` est une liste de bibliothèques à lier, "
"``library_dirs`` est une liste de répertoires dans lesquels chercher des "
"bibliothèques au moment de la liaison, et ``runtime_library_dirs`` est une "
"liste de répertoires pour la recherche des bibliothèques partagées (chargées "
"dynamiquement) à l'exécution."

#: distutils/setupscript.rst:317
msgid ""
"For example, if you need to link against libraries known to be in the "
"standard library search path on target systems ::"
msgstr ""
"Par exemple, pour lier des bibliothèques que l'on sait dans le chemin des "
"bibliothèques standards des systèmes cibles ::"

#: distutils/setupscript.rst:323
msgid ""
"If you need to link with libraries in a non-standard location, you'll have "
"to include the location in ``library_dirs``::"
msgstr ""
"Pour lier une bibliothèque se trouvant à un emplacement non standard, vous "
"devez inclure son emplacement dans ``library_dirs`` ::"

#: distutils/setupscript.rst:330
msgid ""
"(Again, this sort of non-portable construct should be avoided if you intend "
"to distribute your code.)"
msgstr ""
"Là aussi, ce genre de construction non portable doit être évité si vous avez "
"l'intention de distribuer votre code."

#: distutils/setupscript.rst:337
msgid "Other options"
msgstr "Autres options"

#: distutils/setupscript.rst:339
msgid ""
"There are still some other options which can be used to handle special cases."
msgstr ""
"Il y a encore d'autres options qui peuvent être utilisées pour gérer des cas "
"spéciaux."

#: distutils/setupscript.rst:341
msgid ""
"The ``optional`` option is a boolean; if it is true, a build failure in the "
"extension will not abort the build process, but instead simply not install "
"the failing extension."
msgstr ""
"L'option ``optional`` est un booléen ; s'il est vrai, un échec de la "
"construction dans l'extension n'annule pas le processus de construction, "
"mais à la place, l'extension en échec ne sera pas installée."

#: distutils/setupscript.rst:345
msgid ""
"The ``extra_objects`` option is a list of object files to be passed to the "
"linker. These files must not have extensions, as the default extension for "
"the compiler is used."
msgstr ""
"L'option ``extra_objects`` est une liste d'objets fichiers à passer à "
"l'éditeur de liens. Ces fichiers ne doivent pas avoir d'extensions car "
"l'extension par défaut du compilateur est utilisée."

#: distutils/setupscript.rst:349
msgid ""
"``extra_compile_args`` and ``extra_link_args`` can be used to specify "
"additional command line options for the respective compiler and linker "
"command lines."
msgstr ""
"``extra_compile_args`` et ``extra_link_args`` peuvent être utilisées pour "
"définir des options additionnelles en ligne de commande propres aux lignes "
"de commandes respectives du compilateur et de l'éditeur de liens."

#: distutils/setupscript.rst:353
msgid ""
"``export_symbols`` is only useful on Windows.  It can contain a list of "
"symbols (functions or variables) to be exported. This option is not needed "
"when building compiled extensions: Distutils  will automatically add "
"``initmodule`` to the list of exported symbols."
msgstr ""
"``export_symbols`` est seulement utile sur Windows. Elle peut contenir une "
"liste de symboles (fonctions ou variables) à exporter. Cette option n'est "
"pas requise pour la construction d'extensions compilées : *Distutils* ajoute "
"automatiquement ``initmodule`` à la liste des symboles exportés."

#: distutils/setupscript.rst:358
msgid ""
"The ``depends`` option is a list of files that the extension depends on (for "
"example header files). The build command will call the compiler on the "
"sources to rebuild extension if any on this files has been modified since "
"the previous build."
msgstr ""
"L'option ``depends`` est une liste de fichiers dont les extensions dépendent "
"(par exemple les fichiers d'en-têtes). La commande ``build`` appelle le "
"compilateur sur les sources pour reconstruire l'extension si un de ces "
"fichiers a été modifié depuis la dernière construction."

#: distutils/setupscript.rst:364
msgid "Relationships between Distributions and Packages"
msgstr "Relations entre distributions et paquets"

#: distutils/setupscript.rst:366
msgid "A distribution may relate to packages in three specific ways:"
msgstr ""
"Une distribution peut se rapporter à des paquets de trois manières "
"spécifiques :"

#: distutils/setupscript.rst:368
msgid "It can require packages or modules."
msgstr "elle peut nécessiter des paquets ou des modules ;"

#: distutils/setupscript.rst:370
msgid "It can provide packages or modules."
msgstr "elle peut fournir des paquets ou des modules ;"

#: distutils/setupscript.rst:372
msgid "It can obsolete packages or modules."
msgstr "elle peut rendre obsolète des paquets ou des modules."

#: distutils/setupscript.rst:374
msgid ""
"These relationships can be specified using keyword arguments to the :func:"
"`distutils.core.setup` function."
msgstr ""
"Ces relations peuvent être définies en utilisant des paramètres nommés dans "
"la fonction :func:`distutils.core.setup`."

#: distutils/setupscript.rst:377
msgid ""
"Dependencies on other Python modules and packages can be specified by "
"supplying the *requires* keyword argument to :func:`setup`. The value must "
"be a list of strings.  Each string specifies a package that is required, and "
"optionally what versions are sufficient."
msgstr ""
"Les dépendances à d'autres modules et paquets Python peuvent être définies "
"en fournissant le paramètre nommé ``requires`` à :func:`setup`. La valeur "
"doit être une liste de chaînes de caractères. Chaque chaîne de caractères "
"définit un paquet requis et, en option, les versions minimales."

#: distutils/setupscript.rst:382
msgid ""
"To specify that any version of a module or package is required, the string "
"should consist entirely of the module or package name. Examples include "
"``'mymodule'`` and ``'xml.parsers.expat'``."
msgstr ""
"S'il n'est pas nécessaire de préciser la version d'un module ou d'un paquet, "
"la chaîne de caractères contient simplement les noms de modules ou de "
"paquets. Par exemple ``mymodule`` et ``'xml.parsers.expat'``."

#: distutils/setupscript.rst:386
msgid ""
"If specific versions are required, a sequence of qualifiers can be supplied "
"in parentheses.  Each qualifier may consist of a comparison operator and a "
"version number.  The accepted comparison operators are::"
msgstr ""
"Si des versions spécifiques sont requises, une suite de qualificatifs peut "
"être fournie entre parenthèses. Chaque qualificatif peut contenir un "
"opérateur de comparaison et un numéro de version. Les opérateurs de "
"comparaison acceptés sont ::"

#: distutils/setupscript.rst:393
msgid ""
"These can be combined by using multiple qualifiers separated by commas (and "
"optional whitespace).  In this case, all of the qualifiers must be matched; "
"a logical AND is used to combine the evaluations."
msgstr ""
"Ils peuvent être combinés en utilisant plusieurs qualificatifs séparés par "
"des virgules (et de façon optionnelle, des espaces). Dans ce cas, tous les "
"qualificatifs doivent être respectés ; un ET logique est utilisé pour "
"combiner les évaluations."

#: distutils/setupscript.rst:397
msgid "Let's look at a bunch of examples:"
msgstr "Jetons un œil à quelques exemples :"

#: distutils/setupscript.rst:400
msgid "Requires Expression"
msgstr "Valeur de ``requires``"

#: distutils/setupscript.rst:400 distutils/setupscript.rst:418
msgid "Explanation"
msgstr "Explication"

#: distutils/setupscript.rst:402
msgid "``==1.0``"
msgstr "``==1.0``"

#: distutils/setupscript.rst:402
msgid "Only version ``1.0`` is compatible"
msgstr "Seule la version ``1.0`` est compatible."

#: distutils/setupscript.rst:404
msgid "``>1.0, !=1.5.1, <2.0``"
msgstr "``>1.0, !=1.5.1, <2.0``"

#: distutils/setupscript.rst:404
msgid ""
"Any version after ``1.0`` and before ``2.0`` is compatible, except ``1.5.1``"
msgstr ""
"Toute version après ``1.0`` et avant ``2.0`` est compatible, à l'exception "
"de ``1.5.1``."

#: distutils/setupscript.rst:408
msgid ""
"Now that we can specify dependencies, we also need to be able to specify "
"what we provide that other distributions can require.  This is done using "
"the *provides* keyword argument to :func:`setup`. The value for this keyword "
"is a list of strings, each of which names a Python module or package, and "
"optionally identifies the version.  If the version is not specified, it is "
"assumed to match that of the distribution."
msgstr ""
"Maintenant que nous pouvons définir des dépendances, nous devons également "
"être en mesure de définir ce que d'autres distributions peuvent attendre de "
"notre part. Cela est réalisé en utilisant l'argument nommé *provides* dans :"
"func:`setup`. La valeur de cet argument est une liste de chaînes de "
"caractères, chacune d'entre elles étant un module Python ou un paquet et, de "
"façon optionnelle, identifie une version. Si la version n'est pas définie, "
"il est supposé qu'elle correspond à celle de la distribution."

#: distutils/setupscript.rst:415
msgid "Some examples:"
msgstr "Quelques exemples :"

#: distutils/setupscript.rst:418
msgid "Provides Expression"
msgstr "Valeur de ``provides``"

#: distutils/setupscript.rst:420
msgid "``mypkg``"
msgstr "``mypkg``"

#: distutils/setupscript.rst:420
msgid "Provide ``mypkg``, using the distribution version"
msgstr "Fournit ``mypkg`` en utilisant la version de la distribution."

#: distutils/setupscript.rst:423
msgid "``mypkg (1.1)``"
msgstr "``mypkg (1.1)``"

#: distutils/setupscript.rst:423
msgid "Provide ``mypkg`` version 1.1, regardless of the distribution version"
msgstr ""
"Fournit ``mypkg`` en version 1.1, indépendamment de la version de la "
"distribution."

#: distutils/setupscript.rst:427
msgid ""
"A package can declare that it obsoletes other packages using the *obsoletes* "
"keyword argument.  The value for this is similar to that of the *requires* "
"keyword: a list of strings giving module or package specifiers.  Each "
"specifier consists of a module or package name optionally followed by one or "
"more version qualifiers.  Version qualifiers are given in parentheses after "
"the module or package name."
msgstr ""
"On peut déclarer d'autres paquets obsolètes dans un paquet en utilisant "
"l'argument nommé *obsoletes*. La valeur pour celui-ci est similaire à celui "
"de l'argument nommé *requires* : une liste de chaînes de caractères donnant "
"les spécifications du module ou du paquet. Chaque spécification est "
"constituée d'un nom de module ou de paquet qui peut être suivi au choix par "
"un ou plusieurs qualificateurs de versions. Les qualificateurs de versions "
"sont donnés entre parenthèses après le nom de module ou de paquet."

#: distutils/setupscript.rst:434
msgid ""
"The versions identified by the qualifiers are those that are obsoleted by "
"the distribution being described.  If no qualifiers are given, all versions "
"of the named module or package are understood to be obsoleted."
msgstr ""
"Les versions identifiées par les qualificateurs sont celles qui sont rendues "
"obsolètes par la distribution décrite. Si aucun qualificateur n'est donné, "
"toutes les versions du module ou du paquet nommé sont considérées comme "
"obsolètes."

#: distutils/setupscript.rst:441
msgid "Installing Scripts"
msgstr "Installation des scripts"

#: distutils/setupscript.rst:443
msgid ""
"So far we have been dealing with pure and non-pure Python modules, which are "
"usually not run by themselves but imported by scripts."
msgstr ""
"Jusqu'à présent nous avons interagi avec des modules Python purs ou non, qui "
"ne sont habituellement pas lancés par eux-mêmes mais importés par des "
"scripts."

#: distutils/setupscript.rst:446
msgid ""
"Scripts are files containing Python source code, intended to be started from "
"the command line.  Scripts don't require Distutils to do anything very "
"complicated. The only clever feature is that if the first line of the script "
"starts with ``#!`` and contains the word \"python\", the Distutils will "
"adjust the first line to refer to the current interpreter location. By "
"default, it is replaced with the current interpreter location.  The :option:"
"`!--executable` (or :option:`!-e`) option will allow the interpreter path to "
"be explicitly overridden."
msgstr ""
"Les scripts sont des fichiers contenant du code source Python prévus pour "
"être lancés en ligne de commande. Les scripts n'ont pas besoin des "
"*Distutils* pour faire quoi que ce soit de très compliqué. La seule "
"fonctionnalité astucieuse est que la première ligne du script commence par "
"``#!`` et contient le mot « python », les *Distutils* ajusteront la première "
"ligne pour faire référence à l'emplacement actuel de l'interpréteur. Par "
"défaut, elle est remplacée par l'emplacement de l'interpréteur en fonction. "
"L'option :option:`!--executable` (ou :option:`!-e`) permet de définir "
"explicitement le chemin vers l'interpréteur."

#: distutils/setupscript.rst:454
msgid ""
"The ``scripts`` option simply is a list of files to be handled in this way.  "
"From the PyXML setup script::"
msgstr ""
"L'option ``scripts`` est simplement une liste de fichiers à utiliser de "
"cette façon. Dans le script ``setup.py`` de PyML ::"

#: distutils/setupscript.rst:461
msgid ""
"All the scripts will also be added to the ``MANIFEST`` file if no template "
"is provided.  See :ref:`manifest`."
msgstr ""
"Tous les scripts seront aussi ajoutés au fichier ``MANIFEST`` si aucun "
"modèle n'est fourni. Voir :ref:`manifest`."

#: distutils/setupscript.rst:469
msgid "Installing Package Data"
msgstr "Installation de paquets de données"

#: distutils/setupscript.rst:471
msgid ""
"Often, additional files need to be installed into a package.  These files "
"are often data that's closely related to the package's implementation, or "
"text files containing documentation that might be of interest to programmers "
"using the package.  These files are called :dfn:`package data`."
msgstr ""
"Souvent, des fichiers additionnels doivent être installés dans le paquet. "
"Ces fichiers sont souvent de la donnée qui est intimement liée à "
"l'implémentation du paquet, ou des fichiers textes contenant de la "
"documentation intéressant le programmeur utilisant le paquet. Ces fichiers "
"sont appelés :dfn:`paquets de données <package data>`."

#: distutils/setupscript.rst:476
msgid ""
"Package data can be added to packages using the ``package_data`` keyword "
"argument to the :func:`setup` function.  The value must be a mapping from "
"package name to a list of relative path names that should be copied into the "
"package.  The paths are interpreted as relative to the directory containing "
"the package (information from the ``package_dir`` mapping is used if "
"appropriate); that is, the files are expected to be part of the package in "
"the source directories. They may contain glob patterns as well."
msgstr ""
"Les paquets de données peuvent être ajoutés en utilisant l'argument nommé "
"``package_data`` dans la fonction :func:`setup`. La valeur doit être un "
"tableau de correspondances entre le nom du paquet et une liste de chemins "
"relatifs à copier dans le paquet. Les chemins sont interprétés relativement "
"au répertoire contenant le paquet (l'information du mappage ``package_dir`` "
"est utilisée le cas échéant) ; ceci étant, il convient que les fichiers "
"fassent partie du répertoire source du paquet. Ils peuvent également "
"contenir des motifs `glob`."

#: distutils/setupscript.rst:484
msgid ""
"The path names may contain directory portions; any necessary directories "
"will be created in the installation."
msgstr ""
"Les chemins d'accès peuvent contenir une hiérarchie de répertoires ; tout "
"répertoire nécessaire sera créé dans cette installation."

#: distutils/setupscript.rst:487
msgid ""
"For example, if a package should contain a subdirectory with several data "
"files, the files can be arranged like this in the source tree::"
msgstr ""
"Par exemple, si un paquet doit inclure un sous-répertoire avec plusieurs "
"fichiers de donnée, les fichiers peuvent être organisés dans l'arborescence "
"de la façon suivante ::"

#: distutils/setupscript.rst:500
msgid "The corresponding call to :func:`setup` might be::"
msgstr "L'appel correspondant à :func:`setup` peut s'écrire ::"

#: distutils/setupscript.rst:509
msgid ""
"All the files that match ``package_data`` will be added to the ``MANIFEST`` "
"file if no template is provided.  See :ref:`manifest`."
msgstr ""
"Tous les fichiers correspondant à ``package_data`` seront ajoutés au fichier "
"``MANIFEST`` si aucun modèle n'est fourni. Voir :ref:`manifest`."

#: distutils/setupscript.rst:517
msgid "Installing Additional Files"
msgstr "Installation de fichiers additionnels"

#: distutils/setupscript.rst:519
msgid ""
"The ``data_files`` option can be used to specify additional files needed by "
"the module distribution: configuration files, message catalogs, data files, "
"anything which doesn't fit in the previous categories."
msgstr ""
"L'option ``data_files`` peut être utilisée pour définir des fichiers "
"additionnels requis pour la distribution du module : fichiers de "
"configuration, catalogues de messages, fichiers de donnée, tout ce qui ne "
"rentre pas dans les catégories précédentes."

#: distutils/setupscript.rst:523
msgid ""
"``data_files`` specifies a sequence of (*directory*, *files*) pairs in the "
"following way::"
msgstr ""
"``data_files`` définit une séquence de paires (*répertoires*, *fichiers*) de "
"la façon suivante ::"

#: distutils/setupscript.rst:531
msgid ""
"Each (*directory*, *files*) pair in the sequence specifies the installation "
"directory and the files to install there."
msgstr ""
"Chaque paire (*répertoire*, *fichier*) dans la séquence définit le "
"répertoire d'installation et les fichiers à y installer."

#: distutils/setupscript.rst:534
msgid ""
"Each file name in *files* is interpreted relative to the :file:`setup.py` "
"script at the top of the package source distribution. Note that you can "
"specify the directory where the data files will be installed, but you cannot "
"rename the data files themselves."
msgstr ""
"Chaque nom de fichier dans *fichiers* est interprété relativement au script :"
"file:`setup.py` à la racine du paquet de la distribution source. Notez que "
"vous pouvez définir un répertoire où les fichiers de donnée seront "
"installés, mais vous ne pouvez pas renommer les fichiers de donnée eux-mêmes."

#: distutils/setupscript.rst:539
msgid ""
"The *directory* should be a relative path. It is interpreted relative to the "
"installation prefix (Python's ``sys.prefix`` for system installations; "
"``site.USER_BASE`` for user installations). Distutils allows *directory* to "
"be an absolute installation path, but this is discouraged since it is "
"incompatible with the wheel packaging format. No directory information from "
"*files* is used to determine the final location of the installed file; only "
"the name of the file is used."
msgstr ""
"Le *répertoire* doit être un chemin relatif. Il est interprété relativement "
"au préfixe d'installation (le ``sys.prefix`` de Python pour les "
"installations ``système`` ; ``site.USER_BASE`` pour les installations "
"``utilisateur``). *Distutils* permet à *répertoire* d'être un chemin "
"d'installation absolu, mais cela est déconseillé dans la mesure où c'est "
"incompatible avec la mise au format `wheel` du paquet. Aucune information de "
"répertoire provenant de *fichiers* n'est utilisée pour déterminer "
"l’emplacement final d'installation du fichier ; seul le nom du fichier est "
"utilisé."

#: distutils/setupscript.rst:547
msgid ""
"You can specify the ``data_files`` options as a simple sequence of files "
"without specifying a target directory, but this is not recommended, and the :"
"command:`install` command will print a warning in this case. To install data "
"files directly in the target directory, an empty string should be given as "
"the directory."
msgstr ""
"Vous pouvez définir les options ``data_files`` comme une simple succession "
"de fichiers sans définir de répertoire cible, mais cela n'est pas "
"recommandé, et la commande :command:`install` affichera un message d'alerte "
"dans ce cas. Pour installer des fichiers de donnée directement dans le "
"répertoire cible, une chaîne de caractère vide doit être donnée en tant que "
"répertoire."

#: distutils/setupscript.rst:553
msgid ""
"All the files that match ``data_files`` will be added to the ``MANIFEST`` "
"file if no template is provided.  See :ref:`manifest`."
msgstr ""
"Tous les fichiers correspondant à ``data_files`` seront ajoutés au fichier "
"``MANIFEST`` si aucun modèle n'est fourni. Voir :ref:`manifest`."

#: distutils/setupscript.rst:561
msgid "Additional meta-data"
msgstr "Métadonnées additionnelles"

#: distutils/setupscript.rst:563
msgid ""
"The setup script may include additional meta-data beyond the name and "
"version. This information includes:"
msgstr ""
"Le script ``setup.py`` peut inclure des métadonnées additionnelles en plus "
"du nom et de la version. Cela inclut les informations suivantes :"

#: distutils/setupscript.rst:567
msgid "Meta-Data"
msgstr "Métadonnées"

#: distutils/setupscript.rst:567
msgid "Description"
msgstr "Description"

#: distutils/setupscript.rst:567
msgid "Value"
msgstr "Valeur"

#: distutils/setupscript.rst:567
msgid "Notes"
msgstr "Notes"

#: distutils/setupscript.rst:569
msgid "``name``"
msgstr "``name``"

#: distutils/setupscript.rst:569
msgid "name of the package"
msgstr "nom du paquet"

#: distutils/setupscript.rst:569 distutils/setupscript.rst:571
#: distutils/setupscript.rst:573 distutils/setupscript.rst:578
#: distutils/setupscript.rst:585 distutils/setupscript.rst:601
msgid "short string"
msgstr "courte chaîne de caractères"

#: distutils/setupscript.rst:569 distutils/setupscript.rst:583
msgid "\\(1)"
msgstr "\\(1)"

#: distutils/setupscript.rst:571
msgid "``version``"
msgstr "``version``"

#: distutils/setupscript.rst:571
msgid "version of this release"
msgstr "version de la publication"

#: distutils/setupscript.rst:571
msgid "(1)(2)"
msgstr "(1)(2)"

#: distutils/setupscript.rst:573
msgid "``author``"
msgstr "``author``"

#: distutils/setupscript.rst:573
msgid "package author's name"
msgstr "nom de l'auteur du paquet"

#: distutils/setupscript.rst:573 distutils/setupscript.rst:575
#: distutils/setupscript.rst:578 distutils/setupscript.rst:580
msgid "\\(3)"
msgstr "\\(3)"

#: distutils/setupscript.rst:575
msgid "``author_email``"
msgstr "``author_email``"

#: distutils/setupscript.rst:575
msgid "email address of the package author"
msgstr "adresse courriel de l'auteur du paquet"

#: distutils/setupscript.rst:575 distutils/setupscript.rst:580
msgid "email address"
msgstr "adresse de courriel"

#: distutils/setupscript.rst:578
msgid "``maintainer``"
msgstr "``maintainer``"

#: distutils/setupscript.rst:578
msgid "package maintainer's name"
msgstr "nom du mainteneur du paquet"

#: distutils/setupscript.rst:580
msgid "``maintainer_email``"
msgstr "``maintainer_email``"

#: distutils/setupscript.rst:580
msgid "email address of the package maintainer"
msgstr "adresse du courriel du mainteneur du paquet"

#: distutils/setupscript.rst:583
msgid "``url``"
msgstr "``url``"

#: distutils/setupscript.rst:583
msgid "home page for the package"
msgstr "page d’accueil du paquet"

#: distutils/setupscript.rst:583 distutils/setupscript.rst:592
msgid "URL"
msgstr "URL"

#: distutils/setupscript.rst:585
msgid "``description``"
msgstr "``description``"

#: distutils/setupscript.rst:585
msgid "short, summary description of the package"
msgstr "bref résumé décrivant le paquet"

#: distutils/setupscript.rst:589
msgid "``long_description``"
msgstr "``long_description``"

#: distutils/setupscript.rst:589
msgid "longer description of the package"
msgstr "description plus complète du paquet"

#: distutils/setupscript.rst:589
msgid "long string"
msgstr "longue chaîne de caractères"

#: distutils/setupscript.rst:589
msgid "\\(4)"
msgstr "\\(4)"

#: distutils/setupscript.rst:592
msgid "``download_url``"
msgstr "``download_url``"

#: distutils/setupscript.rst:592
msgid "location where the package may be downloaded"
msgstr "endroit où le paquet peut être téléchargé"

#: distutils/setupscript.rst:595
msgid "``classifiers``"
msgstr "``classifiers``"

#: distutils/setupscript.rst:595
msgid "a list of classifiers"
msgstr "une liste de classificateurs"

#: distutils/setupscript.rst:595 distutils/setupscript.rst:597
#: distutils/setupscript.rst:599
msgid "list of strings"
msgstr "liste de chaînes de caractères"

#: distutils/setupscript.rst:595
msgid "(6)(7)"
msgstr "(6)(7)"

#: distutils/setupscript.rst:597
msgid "``platforms``"
msgstr "``platforms``"

#: distutils/setupscript.rst:597
msgid "a list of platforms"
msgstr "une liste de plateformes"

#: distutils/setupscript.rst:597 distutils/setupscript.rst:599
msgid "(6)(8)"
msgstr "(6)(8)"

#: distutils/setupscript.rst:599
msgid "``keywords``"
msgstr "``keywords``"

#: distutils/setupscript.rst:599
msgid "a list of keywords"
msgstr "une liste de mots-clés"

#: distutils/setupscript.rst:601
msgid "``license``"
msgstr "``license``"

#: distutils/setupscript.rst:601
msgid "license for the package"
msgstr "licence du paquet"

#: distutils/setupscript.rst:601
msgid "\\(5)"
msgstr "\\(5)"

#: distutils/setupscript.rst:604
msgid "Notes:"
msgstr "Notes :"

#: distutils/setupscript.rst:607
msgid "These fields are required."
msgstr "Ces champs sont requis."

#: distutils/setupscript.rst:610
msgid ""
"It is recommended that versions take the form *major.minor[.patch[.sub]]*."
msgstr ""
"Il est recommandé que les versions prennent la forme *majeure.mineure[."
"correctif[.sous-correctif]]*."

#: distutils/setupscript.rst:613
msgid ""
"Either the author or the maintainer must be identified. If maintainer is "
"provided, distutils lists it as the author in :file:`PKG-INFO`."
msgstr ""
"L'auteur ou un mainteneur doit être identifié. Si un mainteneur est fourni, "
"*distutils* l'indique en tant qu'auteur dans le fichier :file:`PKG-INFO`."

#: distutils/setupscript.rst:617
msgid ""
"The ``long_description`` field is used by PyPI when you publish a package, "
"to build its project page."
msgstr ""
"Le champ ``long_description`` est utilisé par PyPI quand vous publiez un "
"paquet pour construire sa page de projet."

#: distutils/setupscript.rst:621
msgid ""
"The ``license`` field is a text indicating the license covering the package "
"where the license is not a selection from the \"License\" Trove classifiers. "
"See the ``Classifier`` field. Notice that there's a ``licence`` distribution "
"option which is deprecated but still acts as an alias for ``license``."
msgstr ""
"Le champ ``license`` est un texte indiquant la licence du paquet quand la "
"licence n'est pas indiquée dans les classificateurs de type « Licence » "
"Trove. Voir le champ ``Classifier``. À noter qu'il y a une option de "
"distribution ``licence`` qui est obsolète mais agit toujours comme un alias "
"pour ``license``."

#: distutils/setupscript.rst:628
msgid "This field must be a list."
msgstr "Ce champ doit être une liste."

#: distutils/setupscript.rst:631
msgid ""
"The valid classifiers are listed on `PyPI <https://pypi.org/classifiers>`_."
msgstr ""
"Les classificateurs valides sont listés sur `PyPI <https://pypi.org/"
"classifiers>`_."

#: distutils/setupscript.rst:635
msgid ""
"To preserve backward compatibility, this field also accepts a string. If you "
"pass a comma-separated string ``'foo, bar'``, it will be converted to "
"``['foo', 'bar']``, Otherwise, it will be converted to a list of one string."
msgstr ""
"Pour préserver la rétrocompatibilité, ce champ accepte aussi une chaîne de "
"caractères. Si vous passez une chaine de caractères séparée par des virgules "
"``'truc, machin'``, elle sera convertie en ``['truc', 'machin']``, "
"Autrement, elle sera convertie en une liste d'une chaîne de caractères."

#: distutils/setupscript.rst:641
msgid "'short string'"
msgstr "'courte chaîne de caractères'"

#: distutils/setupscript.rst:641
msgid "A single line of text, not more than 200 characters."
msgstr "Une simple ligne de texte ne dépassant par 200 caractères."

#: distutils/setupscript.rst:645
msgid "'long string'"
msgstr "'longue chaîne de caractères'"

#: distutils/setupscript.rst:644
msgid ""
"Multiple lines of plain text in reStructuredText format (see http://docutils."
"sourceforge.net/)."
msgstr ""
"De multiples lignes de texte au format ReStructuredText (voir http://"
"docutils.sourceforge.net/)."

#: distutils/setupscript.rst:648
msgid "'list of strings'"
msgstr "'liste de chaînes de caractères'"

#: distutils/setupscript.rst:648
msgid "See below."
msgstr "Voir ci-dessous."

#: distutils/setupscript.rst:650
msgid ""
"Encoding the version information is an art in itself. Python packages "
"generally adhere to the version format *major.minor[.patch][sub]*. The major "
"number is 0 for initial, experimental releases of software. It is "
"incremented for releases that represent major milestones in a package. The "
"minor number is incremented when important new features are added to the "
"package. The patch number increments when bug-fix releases are made. "
"Additional trailing version information is sometimes used to indicate sub-"
"releases.  These are \"a1,a2,...,aN\" (for alpha releases, where "
"functionality and API may change), \"b1,b2,...,bN\" (for beta releases, "
"which only fix bugs) and \"pr1,pr2,...,prN\" (for final pre-release release "
"testing). Some examples:"
msgstr ""
"Encoder les informations de version est un art en soi. Les paquets Python "
"adhèrent généralement au format de version *majeure.mineure[.correctif]"
"[sous]*. Le numéro majeur 0 est utilisé pour les publications "
"expérimentales, initiales d'un logiciel. Il est incrémenté pour les "
"publications qui représentent des étapes majeures pour le paquet. Le nombre "
"mineur est incrémenté quand d'importantes nouvelles fonctionnalités sont "
"ajoutées au paquet. Le numéro de correctif s'incrémente lors de la "
"publication d'une correction de bogue est faite. Celles-ci sont \"*a1,a2,...,"
"aN*\" (pour les publications alpha, où les fonctionnalités et l'API peut "
"changer), \"*b1,b2,...,bN*\" (pour les publications *beta*, qui corrigent "
"seulement les bogues) et \"*pr1,pr2,...,prN*\" (pour les ultimes pré-"
"publication et publications de test). Quelques exemples :"

#: distutils/setupscript.rst:662
msgid "0.1.0"
msgstr "0.1.0"

#: distutils/setupscript.rst:662
msgid "the first, experimental release of a package"
msgstr "la première, publication expérimentale du paquet"

#: distutils/setupscript.rst:665
msgid "1.0.1a2"
msgstr "1.0.1a2"

#: distutils/setupscript.rst:665
msgid "the second alpha release of the first patch version of 1.0"
msgstr "la seconde publication alpha du premier correctif de la version 1.0"

#: distutils/setupscript.rst:667
msgid "``classifiers`` must be specified in a list::"
msgstr "les ``classifiers`` doivent être définis dans une liste ::"

#: distutils/setupscript.rst:688
msgid ""
":class:`~distutils.core.setup` now warns when ``classifiers``, ``keywords`` "
"or ``platforms`` fields are not specified as a list or a string."
msgstr ""
":class:`~distutils.core.setup` alerte maintenant lorsque les champs "
"``classifiers``, ``keywords`` ou ``platforms`` ne sont pas définis en tant "
"que liste ou chaîne de caractères."

#: distutils/setupscript.rst:695
msgid "Debugging the setup script"
msgstr "Débogage du script ``setup.py``"

#: distutils/setupscript.rst:697
msgid ""
"Sometimes things go wrong, and the setup script doesn't do what the "
"developer wants."
msgstr ""
"Parfois les choses tournent mal et le script ``setup.py`` ne fait pas ce que "
"le développeur veut."

#: distutils/setupscript.rst:700
msgid ""
"Distutils catches any exceptions when running the setup script, and print a "
"simple error message before the script is terminated.  The motivation for "
"this behaviour is to not confuse administrators who don't know much about "
"Python and are trying to install a package.  If they get a big long "
"traceback from deep inside the guts of Distutils, they may think the package "
"or the Python installation is broken because they don't read all the way "
"down to the bottom and see that it's a permission problem."
msgstr ""
"*Distutils* intercepte toute exception lors de l'exécution du script ``setup."
"py`` et affiche un message d'erreur simple avant d'arrêter le script. L'idée "
"est de ne pas embrouiller les administrateurs qui ne savent pas grand-chose "
"de Python et qui essayent d'installer un paquet. S'ils reçoivent une grosse "
"et longue trace d'appels provenant des entrailles de *Distutils*, ils "
"peuvent penser que le paquet ou que l'installation de Python est corrompue "
"car, ils ne lisent pas tout jusqu'en bas alors que c'est un problème de "
"droits."

#: distutils/setupscript.rst:708
msgid ""
"On the other hand, this doesn't help the developer to find the cause of the "
"failure. For this purpose, the :envvar:`DISTUTILS_DEBUG` environment "
"variable can be set to anything except an empty string, and distutils will "
"now print detailed information about what it is doing, dump the full "
"traceback when an exception occurs, and print the whole command line when an "
"external program (like a C compiler) fails."
msgstr ""
"D'un autre côté, cela n'aide pas le développeur à trouver la cause du "
"problème. À cette fin, la variable d'environnement :envvar:`DISTUTILS_DEBUG` "
"peut être assignée à n'importe quoi sauf une chaîne de caractères vide, et "
"*distutils* affichera maintenant une information détaillée à propos de ce "
"qu'il fait, déversera la trace d'appels complète lors d'une exception, et "
"affichera la ligne de commande complète quand un programme externe (comme un "
"compilateur C) échoue."
