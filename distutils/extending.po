# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:00+0100\n"
"PO-Revision-Date: 2020-02-04 21:20+0100\n"
"Last-Translator: ZepmanBC <zepman@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../Doc/distutils/extending.rst:5
msgid "Extending Distutils"
msgstr "Extension de Distutils"

#: Doc/distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Cette page est conservée uniquement jusqu'à ce que la documentation "
"``setuptool`` sur https://setuptools.readthedocs.io/en/latest/setuptools."
"html couvre de manière indépendante toutes les informations pertinentes "
"actuellement incluses ici."

#: ../Doc/distutils/extending.rst:9
msgid ""
"Distutils can be extended in various ways.  Most extensions take the form of "
"new commands or replacements for existing commands.  New commands may be "
"written to support new types of platform-specific packaging, for example, "
"while replacements for existing commands may be made to modify details of "
"how the command operates on a package."
msgstr ""
"*Distutils* peut être étendu de multiples façons. La plupart des extensions "
"sont soit des nouvelles commandes soit des remplacements de commandes "
"existantes. De nouvelles commandes pourraient par exemple servir à "
"l'empaquetage pour des plateformes spécifiques tandis que des remplacements "
"peuvent modifier certains aspects des commandes existantes."

#: ../Doc/distutils/extending.rst:15
msgid ""
"Most extensions of the distutils are made within :file:`setup.py` scripts "
"that want to modify existing commands; many simply add a few file extensions "
"that should be copied into packages in addition to :file:`.py` files as a "
"convenience."
msgstr ""
"La plupart des extensions de *distutils* sont faites dans le script :file:"
"`setup.py`. La plupart ajoutent simplement quelques extensions de fichiers "
"qui devraient être copiés dans le paquet en plus des fichiers :file:`.py`."

#: ../Doc/distutils/extending.rst:20
msgid ""
"Most distutils command implementations are subclasses of the :class:"
"`distutils.cmd.Command` class.  New commands may directly inherit from :"
"class:`Command`, while replacements often derive from :class:`Command` "
"indirectly, directly subclassing the command they are replacing.  Commands "
"are required to derive from :class:`Command`."
msgstr ""
"La plupart des implémentations des commandes *distutils* sont des sous-"
"classes de :class:`distutils.cmd.Command`. Les nouvelles commandes peuvent "
"hériter directement de :class:`Command`, alors que les remplacements "
"dérivent souvent de :class:`Command` indirectement, directement sous-"
"classant la commande qu'ils remplacent. Les commandes doivent dériver de la "
"classe :class:`Command`."

#: ../Doc/distutils/extending.rst:35
msgid "Integrating new commands"
msgstr "Intégrer de nouvelles commandes"

#: ../Doc/distutils/extending.rst:37
msgid ""
"There are different ways to integrate new command implementations into "
"distutils.  The most difficult is to lobby for the inclusion of the new "
"features in distutils itself, and wait for (and require) a version of Python "
"that provides that support.  This is really hard for many reasons."
msgstr ""
"Il y a différentes façons d’intégrer de nouvelles implémentations de "
"commandes dans *distutils*. La plus difficile est de faire pression pour "
"inclure une nouvelle fonctionnalité dans *distutils* même, et d’attendre (et "
"demander) une version de Python l'implémentant. C'est très difficile pour "
"beaucoup de raisons."

#: ../Doc/distutils/extending.rst:42
msgid ""
"The most common, and possibly the most reasonable for most needs, is to "
"include the new implementations with your :file:`setup.py` script, and cause "
"the :func:`distutils.core.setup` function use them::"
msgstr ""
"La plus commune, et possiblement la plus raisonnable pour la plupart des "
"cas, est d'inclure les nouvelles implémentations dans votre fichier :file:"
"`setup.py`, et de faire en sorte que la fonction :func:`distutils.core."
"setup` les utilise ::"

#: ../Doc/distutils/extending.rst:57
msgid ""
"This approach is most valuable if the new implementations must be used to "
"use a particular package, as everyone interested in the package will need to "
"have the new command implementation."
msgstr ""
"Cette approche est la plus valable si les nouvelles implémentations doivent "
"être utilisées pour utiliser un paquet particulier, vu que toutes les "
"personnes intéressées par le paquet devront avoir ces nouvelles "
"implémentations de commandes."

#: ../Doc/distutils/extending.rst:61
msgid ""
"Beginning with Python 2.4, a third option is available, intended to allow "
"new commands to be added which can support existing :file:`setup.py` scripts "
"without requiring modifications to the Python installation.  This is "
"expected to allow third-party extensions to provide support for additional "
"packaging systems, but the commands can be used for anything distutils "
"commands can be used for.  A new configuration option, ``command_packages`` "
"(command-line option :option:`!--command-packages`), can be used to specify "
"additional packages to be searched for modules implementing commands.  Like "
"all distutils options, this can be specified on the command line or in a "
"configuration file.  This option can only be set in the ``[global]`` section "
"of a configuration file, or before any commands on the command line.  If set "
"in a configuration file, it can be overridden from the command line; setting "
"it to an empty string on the command line causes the default to be used.  "
"This should never be set in a configuration file provided with a package."
msgstr ""
"Depuis Python 2.4, une troisième option est disponible, prévue pour "
"permettre d'ajouter de nouvelles commandes compatibles avec le script "
"existant :file:`setup.py` sans avoir besoin de modifier l'installation "
"Python. C'est fait pour que les extensions tierces puissent rester "
"compatibles avec d'autres systèmes d'empaquetage, mais les commandes peuvent "
"être utilisées pour tout ce que les commandes de *distutils* peuvent faire. "
"Une nouvelle option de configuration, ``command_packages`` (option shell :"
"option:`!--command-packages`), peut être utilisée pour spécifier des "
"recherches de paquets additionnels pour des modules qui implémentent des "
"commandes. Comme toutes les options *distutils*, cela peut être spécifié en "
"ligne de commande ou dans un fichier de configuration. Cette option peut "
"être fixée dans la section ``[global]`` d'un fichier de configuration, ou "
"avant n'importe quelle commande dans un shell. Si définie dans un fichier de "
"configuration, elle peut être écrasée depuis la ligne de commande. Mettre "
"une chaine de caractères vide en valeur de cette option forcera "
"l'utilisation de la valeur par défaut. Cela ne devrait jamais être fixé dans "
"un fichier de configuration donné avec un paquet."

#: ../Doc/distutils/extending.rst:76
msgid ""
"This new option can be used to add any number of packages to the list of "
"packages searched for command implementations; multiple package names should "
"be separated by commas.  When not specified, the search is only performed in "
"the :mod:`distutils.command` package.  When :file:`setup.py` is run with the "
"option ``--command-packages distcmds,buildcmds``, however, the packages :mod:"
"`distutils.command`, :mod:`distcmds`, and :mod:`buildcmds` will be searched "
"in that order.  New commands are expected to be implemented in modules of "
"the same name as the command by classes sharing the same name.  Given the "
"example command line option above, the command :command:`bdist_openpkg` "
"could be implemented by the class :class:`distcmds.bdist_openpkg."
"bdist_openpkg` or :class:`buildcmds.bdist_openpkg.bdist_openpkg`."
msgstr ""
"Cette nouvelle option peut être utilisée pour ajouter n'importe quel nombre "
"de paquet à la liste des paquets recherchés pour les implémentations de "
"commandes ; plusieurs noms de paquets doivent être séparés par des virgules. "
"Quand non spécifié, la recherche est seulement faite dans le paquet :mod:"
"`distutils.command`. Cependant, lorsque :file:`setup.py` est lancé avec "
"l'option ``--command-packages distcmds,buildcmds``, les paquets :mod:"
"`distutils.command`, :mod:`distcmds`, et :mod:`buildcmds` seront cherchés "
"dans cet ordre.  Il est attendu des nouvelles commandes d’être implémentées "
"en modules du même nom que la commande en utilisant des classes partageant "
"le même nom.  Comme dans l'exemple shell donné ci-dessus, la commande :"
"command:`bdist_openpkg` pourrait être implémentée avec la classe :class:"
"`distcmds.bdist_openpkg.bdist_openpkg` ou :class:`buildcmds.bdist_openpkg."
"bdist_openpkg`."

#: ../Doc/distutils/extending.rst:90
msgid "Adding new distribution types"
msgstr "Ajout de nouveaux types de distribution"

#: ../Doc/distutils/extending.rst:92
msgid ""
"Commands that create distributions (files in the :file:`dist/` directory) "
"need to add ``(command, filename)`` pairs to ``self.distribution."
"dist_files`` so that :command:`upload` can upload it to PyPI.  The "
"*filename* in the pair contains no path information, only the name of the "
"file itself.  In dry-run mode, pairs should still be added to represent what "
"would have been created."
msgstr ""
"Les commandes qui créent des distributions (fichiers dans le dossier :file:"
"`dist/`) doivent ajouter la paire ``(command, filename)`` à ``self."
"distribution.dist_files`` pour que :command:`upload` puisse publier sur "
"PyPI. Le nom de fichier (*filename*) dans la paire ne contiens pas de "
"chemin, juste le nom du fichier lui-même. En mode *dry-run*, les paires "
"doivent toujours être ajoutées pour représenter ce qui aurait été créé."
