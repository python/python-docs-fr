# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-28 15:29+0200\n"
"PO-Revision-Date: 2018-11-16 09:10+0100\n"
"Last-Translator: \n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.4\n"

#: ../Doc/distutils/builtdist.rst:5
msgid "Creating Built Distributions"
msgstr "Créer une distribution compilée"

#: ../Doc/distutils/builtdist.rst:7
msgid ""
"A \"built distribution\" is what you're probably used to thinking of either "
"as a \"binary package\" or an \"installer\" (depending on your background).  "
"It's not necessarily binary, though, because it might contain only Python "
"source code and/or byte-code; and we don't call it a package, because that "
"word is already spoken for in Python.  (And \"installer\" is a term specific "
"to the world of mainstream desktop systems.)"
msgstr ""
"Une \"distribution compilée\" vous fait surement penser à un \"paquet binaire"
"\" ou à un \"installateur\" (tout dépend de votre environnement). Ce n'est "
"cependant pas forcément un binaire, il peut ne contenir que des sources "
"Python et / ou du *byte-code* ; et nous n'appelons pas ça un *package* parce "
"que ce mot est déjà utilisée dans Python (et \"installateur\" est un terme "
"spécifique au monde des systèmes de bureau). "

#: ../Doc/distutils/builtdist.rst:14
msgid ""
"A built distribution is how you make life as easy as possible for installers "
"of your module distribution: for users of RPM-based Linux systems, it's a "
"binary RPM; for Windows users, it's an executable installer; for Debian-"
"based Linux users, it's a Debian package; and so forth.  Obviously, no one "
"person will be able to create built distributions for every platform under "
"the sun, so the Distutils are designed to enable module developers to "
"concentrate on their specialty---writing code and creating source "
"distributions---while an intermediary species called *packagers* springs up "
"to turn source distributions into built distributions for as many platforms "
"as there are packagers."
msgstr ""
"Une distribution compilée est une manière de rendre la vie plus facile à "
"ceux qui installent votre module : pour les utilisateurs de système Linux "
"basé sur RPM, ce sera des binaire RPM ; pour les utilisateurs de Windows, "
"c'est un installateur exécutable ; pour les utilisateurs de Linux basé sur "
"Debian, c'est un paquet Debian ; et ainsi de suite. Évidemment, personne "
"n'est capable de créer une distribution compilée pour toute les plateformes "
"existantes, donc Distutils est fait pour permettre aux développeurs de se "
"concentrer sur leurs spécialités --- écrire du code et créer des "
"distribution source --- pendant que d'autres, appelés *packagers* s'occupent "
"de transformer les sources en paquets pour chaque plateforme."

#: ../Doc/distutils/builtdist.rst:24
msgid ""
"Of course, the module developer could be their own packager; or the packager "
"could be a volunteer \"out there\" somewhere who has access to a platform "
"which the original developer does not; or it could be software periodically "
"grabbing new source distributions and turning them into built distributions "
"for as many platforms as the software has access to.  Regardless of who they "
"are, a packager uses the setup script and the :command:`bdist` command "
"family to generate built distributions."
msgstr ""
"Bien sur, le développeur du module peut être son propre *packager* ; ou le "
"*packager* peut être un volontaire \"quelque part\" qui a accès à une "
"plateforme que le développeur initial n'a pas ; ou bien un logiciel qui "
"prend les sources périodiquement et les transforme en une distribution "
"compilée pour autant de plateforme que le logiciel a accès.  Peu importe qui "
"ils sont, les *packagers* utilisent ``setup.py`` et la famille de commandes :"
"command:`bdist` afin de générer une distribution compilée."

#: ../Doc/distutils/builtdist.rst:32
msgid ""
"As a simple example, if I run the following command in the Distutils source "
"tree::"
msgstr ""
"Pour prendre un exemple simple, si je lance la commande suivante dans les "
"sources de Distutils ::"

#: ../Doc/distutils/builtdist.rst:37
msgid ""
"then the Distutils builds my module distribution (the Distutils itself in "
"this case), does a \"fake\" installation (also in the :file:`build` "
"directory), and creates the default type of built distribution for my "
"platform.  The default format for built distributions is a \"dumb\" tar file "
"on Unix, and a simple executable installer on Windows.  (That tar file is "
"considered \"dumb\" because it has to be unpacked in a specific location to "
"work.)"
msgstr ""
"alors Distutils construit ma distribution du module (Distutils lui même dans "
"ce cas), fait une \"fausse\" installation (aussi dans le dossier :file:"
"`build`) et crée le type de distribution compilée par défaut pour ma "
"plateforme. Le format par défaut est un \"bête\" fichier *tar* pour Unix et "
"un simple installateur exécutable pour Windows (ce fichier *tar* est "
"considéré comme \"bête\" car il doit être décompressé à un endroit précis "
"pour fonctionner)."

#: ../Doc/distutils/builtdist.rst:44
msgid ""
"Thus, the above command on a Unix system creates :file:`Distutils-1.0.{plat}."
"tar.gz`; unpacking this tarball from the right place installs the Distutils "
"just as though you had downloaded the source distribution and run ``python "
"setup.py install``.  (The \"right place\" is either the root of the "
"filesystem or  Python's :file:`{prefix}` directory, depending on the options "
"given to the :command:`bdist_dumb` command; the default is to make dumb "
"distributions relative to :file:`{prefix}`.)"
msgstr ""
"Par conséquent, la commande si dessus crée le fichier :file:`Distutils-1.0."
"{plat}.tar.gz` sur les systèmes Unix ; décompresser cette archive *tar* au "
"bon endroit installe Distutils exactement comme si vous aviez téléchargé la "
"distribution source et lancé ``python setup.py install`` (le \"bon endroit\" "
"est soit la racine du système de fichier, ou le dossier de Python :file:"
"`{prefix}`, tout dépend des options données à la commande :command:"
"`bdist_dumb` ; la valeur par défaut est de créer une distribution \"bête\" "
"relative à :file:`{prefix}`)."

#: ../Doc/distutils/builtdist.rst:52
msgid ""
"Obviously, for pure Python distributions, this isn't any simpler than just "
"running ``python setup.py install``\\ ---but for non-pure distributions, "
"which include extensions that would need to be compiled, it can mean the "
"difference between someone being able to use your extensions or not.  And "
"creating \"smart\" built distributions, such as an RPM package or an "
"executable installer for Windows, is far more convenient for users even if "
"your distribution doesn't include any extensions."
msgstr ""
"Évidemment, pour une distribution en Python pur, ce n'est pas aussi simple "
"que de simplement lancer ``python setup.py install``\\ ---mais pour une "
"distribution non-pure qui inclut des extensions qui devraient être "
"compilées, ça peut faire la différence entre quelqu'un qui sera capable "
"d'utiliser votre extension, ou non. De plus créer une distribution compilée "
"\"intelligente\" tel qu'un paquet RPM ou un installateur exécutable Windows, "
"est bien plus pratique pour les utilisateurs, même si votre module n'inclut "
"aucune extension."

#: ../Doc/distutils/builtdist.rst:60
msgid ""
"The :command:`bdist` command has a :option:`!--formats` option, similar to "
"the :command:`sdist` command, which you can use to select the types of built "
"distribution to generate: for example, ::"
msgstr ""
"La commande :command:`bdist` a l'option :option:`!--formats`, similaire à la "
"commande :command:`sdist`, que vous pouvez utiliser pour sélectionner le "
"type de distribution compilée à générer : par exemple,"

#: ../Doc/distutils/builtdist.rst:66
msgid ""
"would, when run on a Unix system, create :file:`Distutils-1.0.{plat}.zip`\\ "
"---again, this archive would be unpacked from the root directory to install "
"the Distutils."
msgstr ""
"serait, lors d'une exécution sur un système Unix, crée :file:`Distutils-1.0."
"{plat}.zip`\\ ---à nouveau, cette archive devra être décompressé depuis la "
"racine pour installer Distutils."

#: ../Doc/distutils/builtdist.rst:70
msgid "The available formats for built distributions are:"
msgstr "Les formats disponible pour les distributions compilées sont :"

#: ../Doc/distutils/builtdist.rst:73
msgid "Format"
msgstr "Format"

#: ../Doc/distutils/builtdist.rst:73
msgid "Description"
msgstr "Description"

#: ../Doc/distutils/builtdist.rst:73
msgid "Notes"
msgstr "Notes"

#: ../Doc/distutils/builtdist.rst:75
msgid "``gztar``"
msgstr "``gztar``"

#: ../Doc/distutils/builtdist.rst:75
msgid "gzipped tar file (:file:`.tar.gz`)"
msgstr "Fichier *tar* *gzippé* (:file:`.tar.gz`)"

#: ../Doc/distutils/builtdist.rst:75
msgid "\\(1)"
msgstr "\\(1)"

#: ../Doc/distutils/builtdist.rst:78
msgid "``bztar``"
msgstr "``bztar``"

#: ../Doc/distutils/builtdist.rst:78
msgid "bzipped tar file (:file:`.tar.bz2`)"
msgstr "Fichier *tar* de type *bzipped* (:file:`.tar.bz2`)"

#: ../Doc/distutils/builtdist.rst:81
msgid "``xztar``"
msgstr "``xztar``"

#: ../Doc/distutils/builtdist.rst:81
msgid "xzipped tar file (:file:`.tar.xz`)"
msgstr "Fichier *tar* de type *xzipped* (:file:`.tar.xz`)"

#: ../Doc/distutils/builtdist.rst:84
msgid "``ztar``"
msgstr "``ztar``"

#: ../Doc/distutils/builtdist.rst:84
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr "Fichier *tar* compressé par *compress* (:file:`.tar.Z`)"

#: ../Doc/distutils/builtdist.rst:84
msgid "\\(3)"
msgstr "\\(3)"

#: ../Doc/distutils/builtdist.rst:87
msgid "``tar``"
msgstr "``tar``"

#: ../Doc/distutils/builtdist.rst:87
msgid "tar file (:file:`.tar`)"
msgstr "fichier *tar* (:file:`.tar`)"

#: ../Doc/distutils/builtdist.rst:89
msgid "``zip``"
msgstr "``zip``"

#: ../Doc/distutils/builtdist.rst:89
msgid "zip file (:file:`.zip`)"
msgstr "Fichier *zip* (:file:`.zip`)"

#: ../Doc/distutils/builtdist.rst:89
msgid "(2),(4)"
msgstr "(2),(4)"

#: ../Doc/distutils/builtdist.rst:91
msgid "``rpm``"
msgstr "``rpm``"

#: ../Doc/distutils/builtdist.rst:91
msgid "RPM"
msgstr "RPM"

#: ../Doc/distutils/builtdist.rst:91
msgid "\\(5)"
msgstr "\\(5)"

#: ../Doc/distutils/builtdist.rst:93
msgid "``pkgtool``"
msgstr "``pkgtool``"

#: ../Doc/distutils/builtdist.rst:93
msgid "Solaris :program:`pkgtool`"
msgstr "Solaris :program:`pkgtool`"

#: ../Doc/distutils/builtdist.rst:95
msgid "``sdux``"
msgstr "``sdux``"

#: ../Doc/distutils/builtdist.rst:95
msgid "HP-UX :program:`swinstall`"
msgstr "HP-UX :program:`swinstall`"

#: ../Doc/distutils/builtdist.rst:97
msgid "``wininst``"
msgstr "``wininst``"

#: ../Doc/distutils/builtdist.rst:97
msgid "self-extracting ZIP file for Windows"
msgstr "Fichier zip auto-extracteur Windows"

#: ../Doc/distutils/builtdist.rst:97
msgid "\\(4)"
msgstr "\\(4)"

#: ../Doc/distutils/builtdist.rst:100
msgid "``msi``"
msgstr "``msi``"

#: ../Doc/distutils/builtdist.rst:100
msgid "Microsoft Installer."
msgstr "Installateur Microsoft."

#: ../Doc/distutils/builtdist.rst:103
msgid "Added support for the ``xztar`` format."
msgstr "Ajout du support des fichiers ``xztar``."

#: ../Doc/distutils/builtdist.rst:107
msgid "Notes:"
msgstr "Notes :"

#: ../Doc/distutils/builtdist.rst:110
msgid "default on Unix"
msgstr "Par défaut sur Unix"

#: ../Doc/distutils/builtdist.rst:113
msgid "default on Windows"
msgstr "Par défaut sur Windows"

#: ../Doc/distutils/builtdist.rst:116
msgid "requires external :program:`compress` utility."
msgstr "Nécessite un programme externe :program:`compress`."

#: ../Doc/distutils/builtdist.rst:119
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""
"nécessite soit un utilitaire :program:`zip` extérieur ou le module :mod:"
"`zipfile` (inclut dans la bibliothèque standard depuis Python 1.6)"

#: ../Doc/distutils/builtdist.rst:123
msgid ""
"requires external :program:`rpm` utility, version 3.0.4 or better (use ``rpm "
"--version`` to find out which version you have)"
msgstr ""
"Nécessite un programme externe :program:`rpm`, version 3.0.4 ou mieux "
"(utilisez ``rpm --version`` pour connaître quelle version vous avez)"

#: ../Doc/distutils/builtdist.rst:126
msgid ""
"You don't have to use the :command:`bdist` command with the :option:`!--"
"formats` option; you can also use the command that directly implements the "
"format you're interested in.  Some of these :command:`bdist` \"sub-commands"
"\" actually generate several similar formats; for instance, the :command:"
"`bdist_dumb` command generates all the \"dumb\" archive formats (``tar``, "
"``gztar``, ``bztar``, ``xztar``, ``ztar``, and ``zip``), and :command:"
"`bdist_rpm` generates both binary and source RPMs.  The :command:`bdist` sub-"
"commands, and the formats generated by each, are:"
msgstr ""
"Vous ne devez pas utiliser la commande :command:`bdist` avec l'option :"
"option:`!--formats` ; Vous pouvez également utiliser la commande qui "
"implémente directement le format qui vous intéresse. Certaines de ces \"sous-"
"commandes\" :command:`bdist` génèrent plusieurs formats similaire ; par "
"exemple, La commande :command:`bdist_dumb` génère les archives aux formats "
"\"bête\" (``tar``, ``gztar``, ``bztar``, ``xztar``, ``ztar``, et ``zip``), "
"et :command:`bdist_rpm` génère les binaires RPM et ainsi que les sources. "
"Les sous-commandes :command:`bdist`, et les formats générés par chacun, "
"sont :"

#: ../Doc/distutils/builtdist.rst:136
msgid "Command"
msgstr "Commande"

#: ../Doc/distutils/builtdist.rst:136
msgid "Formats"
msgstr "Formats"

#: ../Doc/distutils/builtdist.rst:138
msgid ":command:`bdist_dumb`"
msgstr ":command:`bdist_dumb`"

#: ../Doc/distutils/builtdist.rst:138
msgid "tar, gztar, bztar, xztar, ztar, zip"
msgstr "tar, gztar, bztar, xztar, ztar, zip"

#: ../Doc/distutils/builtdist.rst:140
msgid ":command:`bdist_rpm`"
msgstr ":command:`bdist_rpm`"

#: ../Doc/distutils/builtdist.rst:140
msgid "rpm, srpm"
msgstr "rpm, srpm"

#: ../Doc/distutils/builtdist.rst:142
msgid ":command:`bdist_wininst`"
msgstr ":command:`bdist_wininst`"

#: ../Doc/distutils/builtdist.rst:142
msgid "wininst"
msgstr "wininst"

#: ../Doc/distutils/builtdist.rst:144
msgid ":command:`bdist_msi`"
msgstr ":command:`bdist_msi`"

#: ../Doc/distutils/builtdist.rst:144
msgid "msi"
msgstr "msi"

#: ../Doc/distutils/builtdist.rst:147
msgid ""
"The following sections give details on the individual :command:`bdist_\\*` "
"commands."
msgstr ""
"Le chapitre suivant donne des détails individuel sur les commandes :command:"
"`bdist_\\*`."

#: ../Doc/distutils/builtdist.rst:163
msgid "Creating RPM packages"
msgstr "Créer un paquet RPM"

#: ../Doc/distutils/builtdist.rst:165
msgid ""
"The RPM format is used by many popular Linux distributions, including Red "
"Hat, SuSE, and Mandrake.  If one of these (or any of the other RPM-based "
"Linux distributions) is your usual environment, creating RPM packages for "
"other users of that same distribution is trivial. Depending on the "
"complexity of your module distribution and differences between Linux "
"distributions, you may also be able to create RPMs that work on different "
"RPM-based distributions."
msgstr ""
"Le format RPM est utilisé par beaucoup de distributions Linux populaires, "
"incluant Red Hat, SuSE et Mandrake. Si l'une d'entre elle (ou n'importe "
"quelle autre distribution basé sur RPM) est votre environnement habituel, "
"créer un paquet pour les autres utilisateur de ces distributions est "
"trivial. Cela dépend de la complexité de votre module et des différences "
"entre les distributions Linux, vous pourrez aussi créer des RPM qui "
"fonctionneront sur des distributions RPM différentes."

#: ../Doc/distutils/builtdist.rst:172
msgid ""
"The usual way to create an RPM of your module distribution is to run the :"
"command:`bdist_rpm` command::"
msgstr ""
"La manière habituelle de créer un RPM de votre module est d'utiliser la "
"commande :command:`bdist_rpm` ::"

#: ../Doc/distutils/builtdist.rst:177
msgid "or the :command:`bdist` command with the :option:`!--format` option::"
msgstr ""

#: ../Doc/distutils/builtdist.rst:181
msgid ""
"The former allows you to specify RPM-specific options; the latter allows  "
"you to easily specify multiple formats in one run.  If you need to do both, "
"you can explicitly specify multiple :command:`bdist_\\*` commands and their "
"options::"
msgstr ""
"La première vous permet de spécifier des options spécifique à RPM ; la "
"dernière vous permet de spécifier plusieurs format d'un seul coup. Si vous "
"avez besoin d'utiliser les deux, vous pouvez explicitement spécifier "
"plusieurs commande :command:`bdist_\\*` et leurs options ::"

#: ../Doc/distutils/builtdist.rst:188
msgid ""
"Creating RPM packages is driven by a :file:`.spec` file, much as using the "
"Distutils is driven by the setup script.  To make your life easier, the :"
"command:`bdist_rpm` command normally creates a :file:`.spec` file based on "
"the information you supply in the setup script, on the command line, and in "
"any Distutils configuration files.  Various options and sections in the :"
"file:`.spec` file are derived from options in the setup script as follows:"
msgstr ""
"La création de Package RPM est configurée par une fichier :file:`.spec`, un "
"peu comme Distutils est configuré par script *setup.py*. Pour vous faciliter "
"la tâche, la commande :command:`bdist_rpm` crée normalement un fichier :file:"
"`.spec` basé sur les informations que vous fournissez dans *setup.py*,  dans "
"les options de la ligne de commande et dans la configuration de Distutils. "
"Beaucoup d'options du fichier :file:`.spec` sont dérivées des options du "
"script de préparation suivant :"

#: ../Doc/distutils/builtdist.rst:196 ../Doc/distutils/builtdist.rst:220
msgid "RPM :file:`.spec` file option or section"
msgstr "Option de fichier RPM :file:`.spec`"

#: ../Doc/distutils/builtdist.rst:196
msgid "Distutils setup script option"
msgstr "Options du script de préparation Distutils"

#: ../Doc/distutils/builtdist.rst:198
msgid "Name"
msgstr "Nom"

#: ../Doc/distutils/builtdist.rst:198
msgid "``name``"
msgstr "``name``"

#: ../Doc/distutils/builtdist.rst:200
msgid "Summary (in preamble)"
msgstr "*Summary* (dans le préambule)"

#: ../Doc/distutils/builtdist.rst:200
msgid "``description``"
msgstr "``description``"

#: ../Doc/distutils/builtdist.rst:202
msgid "Version"
msgstr "*Version*"

#: ../Doc/distutils/builtdist.rst:202
msgid "``version``"
msgstr "``version``"

#: ../Doc/distutils/builtdist.rst:204 ../Doc/distutils/builtdist.rst:227
msgid "Vendor"
msgstr "*vendor*"

#: ../Doc/distutils/builtdist.rst:204
msgid ""
"``author`` and ``author_email``, or  --- & ``maintainer`` and "
"``maintainer_email``"
msgstr ""
"``author`` et ``author_email``, ou  --- & ``maintainer`` et "
"``maintainer_email``"

#: ../Doc/distutils/builtdist.rst:208
msgid "Copyright"
msgstr "Copyright"

#: ../Doc/distutils/builtdist.rst:208
msgid "``license``"
msgstr "``license``"

#: ../Doc/distutils/builtdist.rst:210
msgid "Url"
msgstr "*Url*"

#: ../Doc/distutils/builtdist.rst:210
msgid "``url``"
msgstr "``url``"

#: ../Doc/distutils/builtdist.rst:212
msgid "%description (section)"
msgstr "%description (section)"

#: ../Doc/distutils/builtdist.rst:212
msgid "``long_description``"
msgstr "``long_description``"

#: ../Doc/distutils/builtdist.rst:215
msgid ""
"Additionally, there are many options in :file:`.spec` files that don't have "
"corresponding options in the setup script.  Most of these are handled "
"through options to the :command:`bdist_rpm` command as follows:"
msgstr ""
"De plus, il y a beaucoup d'options dans le fichier :file:`.spec` qui n'ont "
"aucun équivalent dans le script de préparation. La plupart de celles ci sont "
"gérées par les options de la commande :command:`bdist_rpm` suivant :"

#: ../Doc/distutils/builtdist.rst:220
msgid ":command:`bdist_rpm` option"
msgstr "Option de :command:`bdist_rpm`"

#: ../Doc/distutils/builtdist.rst:220
msgid "default value"
msgstr "Valeur par défaut"

#: ../Doc/distutils/builtdist.rst:223
msgid "Release"
msgstr "Version"

#: ../Doc/distutils/builtdist.rst:223
msgid "``release``"
msgstr "``release``"

#: ../Doc/distutils/builtdist.rst:223
msgid "\"1\""
msgstr "\"1\""

#: ../Doc/distutils/builtdist.rst:225
msgid "Group"
msgstr "*Group*"

#: ../Doc/distutils/builtdist.rst:225
msgid "``group``"
msgstr "``group``"

#: ../Doc/distutils/builtdist.rst:225
msgid "\"Development/Libraries\""
msgstr "\"Développement/Bibliothèques\""

#: ../Doc/distutils/builtdist.rst:227
msgid "``vendor``"
msgstr "``vendor``"

#: ../Doc/distutils/builtdist.rst:227
msgid "(see above)"
msgstr "(voir au-dessus)"

#: ../Doc/distutils/builtdist.rst:229
msgid "Packager"
msgstr "*Packager*"

#: ../Doc/distutils/builtdist.rst:229
msgid "``packager``"
msgstr "``packager``"

#: ../Doc/distutils/builtdist.rst:229 ../Doc/distutils/builtdist.rst:231
#: ../Doc/distutils/builtdist.rst:233 ../Doc/distutils/builtdist.rst:235
#: ../Doc/distutils/builtdist.rst:237 ../Doc/distutils/builtdist.rst:239
#: ../Doc/distutils/builtdist.rst:241 ../Doc/distutils/builtdist.rst:243
msgid "(none)"
msgstr "(none)"

#: ../Doc/distutils/builtdist.rst:231
msgid "Provides"
msgstr "*Provides*"

#: ../Doc/distutils/builtdist.rst:231
msgid "``provides``"
msgstr "``provides``"

#: ../Doc/distutils/builtdist.rst:233
msgid "Requires"
msgstr "*Requires*"

#: ../Doc/distutils/builtdist.rst:233
msgid "``requires``"
msgstr "``requires``"

#: ../Doc/distutils/builtdist.rst:235
msgid "Conflicts"
msgstr "*Conflicts*"

#: ../Doc/distutils/builtdist.rst:235
msgid "``conflicts``"
msgstr "``conflicts``"

#: ../Doc/distutils/builtdist.rst:237
msgid "Obsoletes"
msgstr "*Obsoletes*"

#: ../Doc/distutils/builtdist.rst:237
msgid "``obsoletes``"
msgstr "``obsoletes``"

#: ../Doc/distutils/builtdist.rst:239
msgid "Distribution"
msgstr "*Distribution*"

#: ../Doc/distutils/builtdist.rst:239
msgid "``distribution_name``"
msgstr "``distribution_name``"

#: ../Doc/distutils/builtdist.rst:241
msgid "BuildRequires"
msgstr "*BuildRequires*"

#: ../Doc/distutils/builtdist.rst:241
msgid "``build_requires``"
msgstr "``build_requires``"

#: ../Doc/distutils/builtdist.rst:243
msgid "Icon"
msgstr "*Icon*"

#: ../Doc/distutils/builtdist.rst:243
msgid "``icon``"
msgstr "``icon``"

#: ../Doc/distutils/builtdist.rst:246
msgid ""
"Obviously, supplying even a few of these options on the command-line would "
"be tedious and error-prone, so it's usually best to put them in the setup "
"configuration file, :file:`setup.cfg`\\ ---see section :ref:`setup-config`.  "
"If you distribute or package many Python module distributions, you might "
"want to put options that apply to all of them in your personal Distutils "
"configuration file (:file:`~/.pydistutils.cfg`).  If you want to temporarily "
"disable this file, you can pass the :option:`!--no-user-cfg` option to :file:"
"`setup.py`."
msgstr ""

#: ../Doc/distutils/builtdist.rst:254
msgid ""
"There are three steps to building a binary RPM package, all of which are "
"handled automatically by the Distutils:"
msgstr ""
"La création de binaire RPM se fait en trois étapes, chacune gérée "
"automatiquement par Distutils :"

#: ../Doc/distutils/builtdist.rst:257
msgid ""
"create a :file:`.spec` file, which describes the package (analogous  to the "
"Distutils setup script; in fact, much of the information in the  setup "
"script winds up in the :file:`.spec` file)"
msgstr ""
"Créer un fichier :file:`.spec` qui décrira le paquet (comme le script de "
"préparation Distutils, en réalité la plupart des informations du script de "
"préparation se retrouve dans le fichier :file:`.spec`)"

#: ../Doc/distutils/builtdist.rst:261
msgid "create the source RPM"
msgstr "crée un RPM source"

#: ../Doc/distutils/builtdist.rst:263
msgid ""
"create the \"binary\" RPM (which may or may not contain binary code, "
"depending on whether your module distribution contains Python extensions)"
msgstr ""
"Créer le RPM \"binaire\" (qui peut ou non contenir des binaires, tout dépend "
"de si votre module contiens des extensions)"

#: ../Doc/distutils/builtdist.rst:266
msgid ""
"Normally, RPM bundles the last two steps together; when you use the "
"Distutils, all three steps are typically bundled together."
msgstr ""
"Normalement, RPM réunit les deux dernières étapes ensemble ; quand vous "
"utilisez Distutils, les trois étapes sont regroupées."

#: ../Doc/distutils/builtdist.rst:269
msgid ""
"If you wish, you can separate these three steps.  You can use the :option:"
"`!--spec-only` option to make :command:`bdist_rpm` just create the :file:`."
"spec` file and exit; in this case, the :file:`.spec` file will be written to "
"the \"distribution directory\"---normally :file:`dist/`, but customizable "
"with the :option:`!--dist-dir` option.  (Normally, the :file:`.spec` file "
"winds up deep in the \"build tree,\" in a temporary directory created by :"
"command:`bdist_rpm`.)"
msgstr ""

#: ../Doc/distutils/builtdist.rst:297
msgid "Creating Windows Installers"
msgstr "Créer un installateur Windows"

#: ../Doc/distutils/builtdist.rst:299
msgid ""
"Executable installers are the natural format for binary distributions on "
"Windows.  They display a nice graphical user interface, display some "
"information about the module distribution to be installed taken from the "
"metadata in the setup script, let the user select a few options, and start "
"or cancel the installation."
msgstr ""
"Les installateurs exécutable sont le format naturel pour les distributions "
"sur Windows. Ils affichent une jolie interface graphique, montrent quelques "
"informations à propos du module qui va être installé, tiré des métadonnées "
"dans le script de préparation, laisse l'utilisateur choisir quelques options "
"et démarrer ou annuler l'installation."

#: ../Doc/distutils/builtdist.rst:305
msgid ""
"Since the metadata is taken from the setup script, creating Windows "
"installers is usually as easy as running::"
msgstr ""
"Étant donné que les métadonnées sont tirées du script de préparation, créer "
"un installateur Windows est généralement facile, il suffit de lancer ::"

#: ../Doc/distutils/builtdist.rst:310
msgid "or the :command:`bdist` command with the :option:`!--formats` option::"
msgstr ""

#: ../Doc/distutils/builtdist.rst:314
msgid ""
"If you have a pure module distribution (only containing pure Python modules "
"and packages), the resulting installer will be version independent and have "
"a name like :file:`foo-1.0.win32.exe`.  These installers can even be created "
"on Unix platforms or Mac OS X."
msgstr ""
"Si vous avez un module pur (contenant seulement des modules et des packages "
"en Python pur), l'installateur final ne sera lié a aucune version de Python "
"et aura un nom du type :file:`foo-1.0.win32.exe`. Ces installateurs peuvent "
"même être créés sur les plateformes Unix ou Mac OS X."

#: ../Doc/distutils/builtdist.rst:319
msgid ""
"If you have a non-pure distribution, the extensions can only be created on a "
"Windows platform, and will be Python version dependent. The installer "
"filename will reflect this and now has the form :file:`foo-1.0.win32-py2.0."
"exe`.  You have to create a separate installer for every Python version you "
"want to support."
msgstr ""
"Si vous avez une distribution \"non-pure\", l'extension peut être créée "
"uniquement pour les plateformes Windows et sera lié à une version de Python. "
"Le nom de l'installateur reflétera ça et sera de format :file:`foo-1.0.win32-"
"py2.0.exe`. Vous devrez créer un installateur pour chaque version de Python "
"que vous voulez supporter."

#: ../Doc/distutils/builtdist.rst:325
msgid ""
"The installer will try to compile pure modules into :term:`bytecode` after "
"installation on the target system in normal and optimizing mode.  If you "
"don't want this to happen for some reason, you can run the :command:"
"`bdist_wininst` command with the :option:`!--no-target-compile` and/or the :"
"option:`!--no-target-optimize` option."
msgstr ""

#: ../Doc/distutils/builtdist.rst:331
msgid ""
"By default the installer will display the cool \"Python Powered\" logo when "
"it is run, but you can also supply your own 152x261 bitmap which must be a "
"Windows :file:`.bmp` file with the :option:`!--bitmap` option."
msgstr ""

#: ../Doc/distutils/builtdist.rst:335
msgid ""
"The installer will also display a large title on the desktop background "
"window when it is run, which is constructed from the name of your "
"distribution and the version number.  This can be changed to another text by "
"using the :option:`!--title` option."
msgstr ""

#: ../Doc/distutils/builtdist.rst:340
msgid ""
"The installer file will be written to the \"distribution directory\" --- "
"normally :file:`dist/`, but customizable with the :option:`!--dist-dir` "
"option."
msgstr ""

#: ../Doc/distutils/builtdist.rst:346
msgid "Cross-compiling on Windows"
msgstr "Compiler pour toute les plateformes Windows"

#: ../Doc/distutils/builtdist.rst:348
msgid ""
"Starting with Python 2.6, distutils is capable of cross-compiling between "
"Windows platforms.  In practice, this means that with the correct tools "
"installed, you can use a 32bit version of Windows to create 64bit extensions "
"and vice-versa."
msgstr ""
"Depuis Python 2.6, *distutils* est capable de compiler pour toute les "
"plateformes de Windows. En pratique, cela signifie qu'avec les bons outils "
"installés, vous pouvez utiliser une version 32 bits de Windows pour créer "
"une extension 64 bits et vice-versa."

#: ../Doc/distutils/builtdist.rst:353
msgid ""
"To build for an alternate platform, specify the :option:`!--plat-name` "
"option to the build command.  Valid values are currently 'win32', and  'win-"
"amd64'. For example, on a 32bit version of Windows, you could execute::"
msgstr ""

#: ../Doc/distutils/builtdist.rst:359
msgid ""
"to build a 64bit version of your extension.  The Windows Installers also "
"support this option, so the command::"
msgstr ""
"Pour construire une version 64 bits de votre module. L'installateur Windows "
"supporte aussi cette option, donc la commande ::"

#: ../Doc/distutils/builtdist.rst:364
msgid ""
"would create a 64bit installation executable on your 32bit version of "
"Windows."
msgstr ""
"créera un installateur exécutable 64 bits depuis votre version 32 bits de "
"Windows."

#: ../Doc/distutils/builtdist.rst:366
msgid ""
"To cross-compile, you must download the Python source code and cross-compile "
"Python itself for the platform you are targeting - it is not possible from a "
"binary installation of Python (as the .lib etc file for other platforms are "
"not included.)  In practice, this means the user of a 32 bit operating "
"system will need to use Visual Studio 2008 to open the :file:`PCbuild/"
"PCbuild.sln` solution in the Python source tree and build the \"x64\" "
"configuration of the 'pythoncore' project before cross-compiling extensions "
"is possible."
msgstr ""
"Pour effectuer une compilation croisée (*cross-compile* en anglais), vous "
"devez télécharger le code source de Python et le compiler pour la plateforme "
"cible, il est impossible de le faire depuis une installation de Python (vu "
"que les fichiers *.lib* pour les autres plateformes ne sont pas inclus). En "
"pratique, cela veut dire qu'un utilisateur de système 32 bits devra utiliser "
"Visual Studio 2008 pour ouvrir la solution :file:`PCBuild/PCbuild.sln` dans "
"l'arborescence des sources de Python et construire la version *x64* du "
"projet *pythoncore* avant de pouvoir compiler son extension."

#: ../Doc/distutils/builtdist.rst:375
msgid ""
"Note that by default, Visual Studio 2008 does not install 64bit compilers or "
"tools.  You may need to reexecute the Visual Studio setup process and select "
"these tools (using Control Panel->[Add/Remove] Programs is a convenient way "
"to check or modify your existing install.)"
msgstr ""
"Remarquez que par défaut Visual Studio 2008 n'installe pas les outils et "
"compilateur 64 bits. Vous devrez peut être réexécuter le processus "
"d'installation et sélectionner ces outils (utiliser le *Panneau de Contrôle -"
"> [Ajouter/Supprimer]* est un bon moyen de vérifier ou modifier votre "
"installation existante.)"

#: ../Doc/distutils/builtdist.rst:383
msgid "The Postinstallation script"
msgstr "Le script de post-installation"

#: ../Doc/distutils/builtdist.rst:385
msgid ""
"Starting with Python 2.3, a postinstallation script can be specified with "
"the :option:`!--install-script` option.  The basename of the script must be "
"specified, and the script filename must also be listed in the scripts "
"argument to the setup function."
msgstr ""

#: ../Doc/distutils/builtdist.rst:390
msgid ""
"This script will be run at installation time on the target system after all "
"the files have been copied, with ``argv[1]`` set to :option:`!-install`, and "
"again at uninstallation time before the files are removed with ``argv[1]`` "
"set to :option:`!-remove`."
msgstr ""

#: ../Doc/distutils/builtdist.rst:395
msgid ""
"The installation script runs embedded in the windows installer, every output "
"(``sys.stdout``, ``sys.stderr``) is redirected into a buffer and will be "
"displayed in the GUI after the script has finished."
msgstr ""
"Le script d'installation s'exécute intégré à la fenêtre d'installation, "
"chaque sortie (``sys.stdout``, ``sys.stderr``) est redirigé dans le tampon "
"et sera affiché dans le GUI après que les scripts soient finis."

#: ../Doc/distutils/builtdist.rst:399
msgid ""
"Some functions especially useful in this context are available as additional "
"built-in functions in the installation script."
msgstr ""
"certaines fonctions spécialement utiles dans ce contexte sont disponibles "
"comme fonctions intégrées additionnelles  dans le script d'installation."

#: ../Doc/distutils/builtdist.rst:406
msgid ""
"These functions should be called when a directory or file is created by the "
"postinstall script at installation time.  It will register *path* with the "
"uninstaller, so that it will be removed when the distribution is "
"uninstalled. To be safe, directories are only removed if they are empty."
msgstr ""
"Ces fonctions peuvent être appelées lorsqu'un répertoire ou un fichier est "
"crée par le script de post installation au moment de l'installation. Cela va "
"enregistrer le *chemin* avec le des-installateur, de sorte qu'il soit retiré "
"lors de la des-installation de la distribution. pour être sûr, les "
"répertoires sont uniquement retirés s'ils sont vides."

#: ../Doc/distutils/builtdist.rst:414
msgid ""
"This function can be used to retrieve special folder locations on Windows "
"like the Start Menu or the Desktop.  It returns the full path to the folder. "
"*csidl_string* must be one of the following strings::"
msgstr ""
"Cette fonction peut être utilisée pour extraire des localisations de "
"fichiers spéciaux sous Windows comme un menu démarrer ou le Bureau. Cela "
"renvoie le chemin complet pour le fichier. *csidl_string* doit être unes des "
"chaines suivantes ::"

#: ../Doc/distutils/builtdist.rst:434
msgid "If the folder cannot be retrieved, :exc:`OSError` is raised."
msgstr "Si le fichier ne peut être extrait, :exc:`OSError` est obtenu.."

#: ../Doc/distutils/builtdist.rst:436
msgid ""
"Which folders are available depends on the exact Windows version, and "
"probably also the configuration.  For details refer to Microsoft's "
"documentation of the :c:func:`SHGetSpecialFolderPath` function."
msgstr ""
"Quel dossier est disponible dépend de la version exacte de Windows, et "
"probablement aussi de la configuration. pour des détails se référer à la "
"documentation Microsoft de la fonction :c:func:`SHGetSpecialFolderPath`."

#: ../Doc/distutils/builtdist.rst:443
msgid ""
"This function creates a shortcut. *target* is the path to the program to be "
"started by the shortcut. *description* is the description of the shortcut. "
"*filename* is the title of the shortcut that the user will see. *arguments* "
"specifies the command line arguments, if any. *workdir* is the working "
"directory for the program. *iconpath* is the file containing the icon for "
"the shortcut, and *iconindex* is the index of the icon in the file "
"*iconpath*.  Again, for details consult the Microsoft documentation for the :"
"class:`IShellLink` interface."
msgstr ""
"Cette fonction crée un raccourci. *cible* est le chemin au programme auquel "
"mène le raccourci. *description* est la description du raccourci. "
"*nomfichier* est le titre du raccourci que verra l'utilisateur. *arguments* "
"spécifie les arguments de la ligne de commande, si existant. *cheminRep* est "
"le répertoire de travail pour le programme. *cheminIcone* est le fichier "
"contenant l’icône pour le raccourci, et *IndexIcone* est l'index pour "
"l’icône dans le fichier *cheminIcone*. Encore, pour les détails consulter la "
"documentation Microsoft pour l'interface :class:`ILienShell`."

#: ../Doc/distutils/builtdist.rst:454
msgid "Vista User Access Control (UAC)"
msgstr "Contrôle d'accès utilisateur Vista (UAC)"

#: ../Doc/distutils/builtdist.rst:456
msgid ""
"Starting with Python 2.6, bdist_wininst supports a :option:`!--user-access-"
"control` option.  The default is 'none' (meaning no UAC handling is done), "
"and other valid values are 'auto' (meaning prompt for UAC elevation if "
"Python was installed for all users) and 'force' (meaning always prompt for "
"elevation)."
msgstr ""
