# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-04 10:00+0100\n"
"PO-Revision-Date: 2020-02-04 21:19+0100\n"
"Last-Translator: ZepmanBC <zepman@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../Doc/distutils/apiref.rst:5
msgid "API Reference"
msgstr "Référence de l'API"

#: ../Doc/distutils/apiref.rst:11
msgid "`New and changed setup.py arguments in setuptools`_"
msgstr ""

#: ../Doc/distutils/apiref.rst:10
msgid ""
"The ``setuptools`` project adds new capabilities to the ``setup`` function "
"and other APIs, makes the API consistent across different Python versions, "
"and is hence recommended over using ``distutils`` directly."
msgstr ""

#: Doc/distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Cette page est conservée uniquement jusqu'à ce que la documentation "
"``setuptool`` sur https://setuptools.readthedocs.io/en/latest/setuptools."
"html couvre de manière indépendante toutes les informations pertinentes "
"actuellement incluses ici."

#: ../Doc/distutils/apiref.rst:19
msgid ":mod:`distutils.core` --- Core Distutils functionality"
msgstr ""
":mod:`distutils.core` --- Fonctionnalités principales du module Distutils"

#: ../Doc/distutils/apiref.rst:25
msgid ""
"The :mod:`distutils.core` module is the only module that needs to be "
"installed to use the Distutils. It provides the :func:`setup` (which is "
"called from the setup script). Indirectly provides the  :class:`distutils."
"dist.Distribution` and :class:`distutils.cmd.Command` class."
msgstr ""
"Le module :mod:`distutils.core` est le seul module qui a besoin d'être "
"installé pour utiliser Distutils. Il fournit le :func:`setup` (qui est "
"appelé par le script *setup.py*). Il fournit indirectement les classes :"
"class:`distutils.dist.Distribution` et :class:`distutils.cmd.Command`."

#: ../Doc/distutils/apiref.rst:33
msgid ""
"The basic do-everything function that does most everything you could ever "
"ask for from a Distutils method."
msgstr ""
"La fonction de base à tout faire qui fait presque tout ce dont vous pourriez "
"attendre d'une méthode Distutils."

#: ../Doc/distutils/apiref.rst:36
msgid ""
"The setup function takes a large number of arguments. These are laid out in "
"the following table."
msgstr ""
"La fonction ``setup`` prend un grand nombre d'arguments. Ils sont présentés "
"dans le tableau suivant."

#: ../Doc/distutils/apiref.rst:42 ../Doc/distutils/apiref.rst:185
msgid "argument name"
msgstr "nom de l'argument"

#: ../Doc/distutils/apiref.rst:42 ../Doc/distutils/apiref.rst:143
#: ../Doc/distutils/apiref.rst:185
msgid "value"
msgstr "valeur"

#: ../Doc/distutils/apiref.rst:42 ../Doc/distutils/apiref.rst:185
msgid "type"
msgstr "type"

#: ../Doc/distutils/apiref.rst:44 ../Doc/distutils/apiref.rst:187
msgid "*name*"
msgstr "*name*"

#: ../Doc/distutils/apiref.rst:44
msgid "The name of the package"
msgstr "Le nom du paquet"

#: ../Doc/distutils/apiref.rst:44 ../Doc/distutils/apiref.rst:46
#: ../Doc/distutils/apiref.rst:50 ../Doc/distutils/apiref.rst:53
#: ../Doc/distutils/apiref.rst:56 ../Doc/distutils/apiref.rst:58
#: ../Doc/distutils/apiref.rst:61 ../Doc/distutils/apiref.rst:68
#: ../Doc/distutils/apiref.rst:72 ../Doc/distutils/apiref.rst:75
#: ../Doc/distutils/apiref.rst:96 ../Doc/distutils/apiref.rst:106
#: ../Doc/distutils/apiref.rst:187 ../Doc/distutils/apiref.rst:278
msgid "a string"
msgstr "une chaîne de caractères"

#: ../Doc/distutils/apiref.rst:46
msgid "*version*"
msgstr "*version*"

#: ../Doc/distutils/apiref.rst:46
msgid "The version number of the package; see :mod:`distutils.version`"
msgstr "Le numéro de version du paquet, voir :mod:`distutils.version`"

#: ../Doc/distutils/apiref.rst:50
msgid "*description*"
msgstr "*description*"

#: ../Doc/distutils/apiref.rst:50
msgid "A single line describing the package"
msgstr "Une ligne unique décrivant le paquet"

#: ../Doc/distutils/apiref.rst:53
msgid "*long_description*"
msgstr "*long_description*"

#: ../Doc/distutils/apiref.rst:53
msgid "Longer description of the package"
msgstr "Une description plus longue du paquet"

#: ../Doc/distutils/apiref.rst:56
msgid "*author*"
msgstr "*author*"

#: ../Doc/distutils/apiref.rst:56
msgid "The name of the package author"
msgstr "Le nom de l'auteur du paquet"

#: ../Doc/distutils/apiref.rst:58
msgid "*author_email*"
msgstr "*author_email*"

#: ../Doc/distutils/apiref.rst:58
msgid "The email address of the package author"
msgstr "L'adresse e-mail de l'auteur du paquet"

#: ../Doc/distutils/apiref.rst:61
msgid "*maintainer*"
msgstr "*maintainer*"

#: ../Doc/distutils/apiref.rst:61
msgid ""
"The name of the current maintainer, if different from the author. Note that "
"if the maintainer is provided, distutils will use it as the author in :file:"
"`PKG-INFO`"
msgstr ""
"Le nom de l'actuel mainteneur, s'il est différent de l'auteur. Remarquez que "
"si *maintainer* est fourni, *distutils* l'utilise à la place de *author* "
"dans :file:`PKG-INFO`."

#: ../Doc/distutils/apiref.rst:68
msgid "*maintainer_email*"
msgstr "*maintainer_email*"

#: ../Doc/distutils/apiref.rst:68
msgid ""
"The email address of the current maintainer, if different from the author"
msgstr "Le courriel de l'actuel mainteneur, si différent de l'auteur"

#: ../Doc/distutils/apiref.rst:72
msgid "*url*"
msgstr "*url*"

#: ../Doc/distutils/apiref.rst:72
msgid "A URL for the package (homepage)"
msgstr "Une URL pour le paquet (page d'accueil)"

#: ../Doc/distutils/apiref.rst:75
msgid "*download_url*"
msgstr "*download_url*"

#: ../Doc/distutils/apiref.rst:75
msgid "A URL to download the package"
msgstr "Une URL pour télécharger le paquet"

#: ../Doc/distutils/apiref.rst:77
msgid "*packages*"
msgstr "*packages*"

#: ../Doc/distutils/apiref.rst:77
msgid "A list of Python packages that distutils will manipulate"
msgstr "Une liste des paquets Python que *distutils* va manipuler"

#: ../Doc/distutils/apiref.rst:77 ../Doc/distutils/apiref.rst:80
#: ../Doc/distutils/apiref.rst:83 ../Doc/distutils/apiref.rst:100
#: ../Doc/distutils/apiref.rst:193 ../Doc/distutils/apiref.rst:207
#: ../Doc/distutils/apiref.rst:223 ../Doc/distutils/apiref.rst:226
#: ../Doc/distutils/apiref.rst:230 ../Doc/distutils/apiref.rst:234
#: ../Doc/distutils/apiref.rst:240 ../Doc/distutils/apiref.rst:247
#: ../Doc/distutils/apiref.rst:258 ../Doc/distutils/apiref.rst:267
#: ../Doc/distutils/apiref.rst:275
msgid "a list of strings"
msgstr "une liste de chaînes de caractères"

#: ../Doc/distutils/apiref.rst:80
msgid "*py_modules*"
msgstr "*py_modules*"

#: ../Doc/distutils/apiref.rst:80
msgid "A list of Python modules that distutils will manipulate"
msgstr "Une liste de modules Python que *distutils* va manipuler"

#: ../Doc/distutils/apiref.rst:83
msgid "*scripts*"
msgstr "*scripts*"

#: ../Doc/distutils/apiref.rst:83
msgid "A list of standalone script files to be built and installed"
msgstr "Une liste de scripts autonomes à construire et à installer"

#: ../Doc/distutils/apiref.rst:87
msgid "*ext_modules*"
msgstr "*ext_modules*"

#: ../Doc/distutils/apiref.rst:87
msgid "A list of Python extensions to be built"
msgstr "Une liste des extensions Python à construire"

#: ../Doc/distutils/apiref.rst:87
msgid "a list of instances of :class:`distutils.core.Extension`"
msgstr "une liste d'instances de :class:`distutils.core.Extension`"

#: ../Doc/distutils/apiref.rst:90
msgid "*classifiers*"
msgstr "*classifiers*"

#: ../Doc/distutils/apiref.rst:90
msgid "A list of categories for the package"
msgstr "Une liste de catégories pour le paquet"

#: ../Doc/distutils/apiref.rst:90
msgid ""
"a list of strings; valid classifiers are listed on `PyPI <https://pypi.org/"
"classifiers>`_."
msgstr ""
"une liste des chaînes de caractères, les classificateurs valides sont listés "
"sur `PyPI <https://pypi.org/pypi?:action=list_classifiers>`_."

#: ../Doc/distutils/apiref.rst:93
msgid "*distclass*"
msgstr "*distclass*"

#: ../Doc/distutils/apiref.rst:93
msgid "the :class:`Distribution` class to use"
msgstr "la classe :class:`Distribution` à utiliser"

#: ../Doc/distutils/apiref.rst:93
msgid "a subclass of :class:`distutils.core.Distribution`"
msgstr "une sous classe de :class:`distutils.core.Distribution`"

#: ../Doc/distutils/apiref.rst:96
msgid "*script_name*"
msgstr "*script_name*"

#: ../Doc/distutils/apiref.rst:96
msgid "The name of the setup.py script - defaults to ``sys.argv[0]``"
msgstr "Le nom du script *setup.py* . Initialisé par ``sys.argv[0]``"

#: ../Doc/distutils/apiref.rst:100
msgid "*script_args*"
msgstr "*script_args*"

#: ../Doc/distutils/apiref.rst:100
msgid "Arguments to supply to the setup script"
msgstr "Arguments à fournir au script d'installation"

#: ../Doc/distutils/apiref.rst:103
msgid "*options*"
msgstr "*options*"

#: ../Doc/distutils/apiref.rst:103
msgid "default options for the setup script"
msgstr "options par défaut pour le script d'installation"

#: ../Doc/distutils/apiref.rst:103 ../Doc/distutils/apiref.rst:113
#: ../Doc/distutils/apiref.rst:119
msgid "a dictionary"
msgstr "un dictionnaire"

#: ../Doc/distutils/apiref.rst:106
msgid "*license*"
msgstr "*license*"

#: ../Doc/distutils/apiref.rst:106
msgid "The license for the package"
msgstr "La licence pour le paquet"

#: ../Doc/distutils/apiref.rst:108
msgid "*keywords*"
msgstr "*keywords*"

#: ../Doc/distutils/apiref.rst:108
msgid "Descriptive meta-data, see :pep:`314`"
msgstr "Méta-données descriptives, voir :pep:`314`"

#: ../Doc/distutils/apiref.rst:108 ../Doc/distutils/apiref.rst:111
msgid "a list of strings or a comma-separated string"
msgstr ""
"Une liste de chaînes de caractères ou une chaîne de caractère dont les "
"éléments sont séparés par des virgules."

#: ../Doc/distutils/apiref.rst:111
msgid "*platforms*"
msgstr "*platforms*"

#: ../Doc/distutils/apiref.rst:113
msgid "*cmdclass*"
msgstr "*cmdclass*"

#: ../Doc/distutils/apiref.rst:113
msgid "A mapping of command names to :class:`Command` subclasses"
msgstr ""
"Un dictionnaire des noms de commandes et des sous-classes :class:`Command`"

#: ../Doc/distutils/apiref.rst:116
msgid "*data_files*"
msgstr "*data_files*"

#: ../Doc/distutils/apiref.rst:116
msgid "A list of data files to install"
msgstr "Une liste de fichiers de données à installer"

#: ../Doc/distutils/apiref.rst:116
msgid "a list"
msgstr "une liste"

#: ../Doc/distutils/apiref.rst:119
msgid "*package_dir*"
msgstr "*package_dir*"

#: ../Doc/distutils/apiref.rst:119
msgid "A mapping of package to directory names"
msgstr "Un dictionnaire des paquets et des noms de dossiers"

#: ../Doc/distutils/apiref.rst:127
msgid ""
"Run a setup script in a somewhat controlled environment, and return  the :"
"class:`distutils.dist.Distribution` instance that drives things.   This is "
"useful if you need to find out the distribution meta-data  (passed as "
"keyword args from *script* to :func:`setup`), or  the contents of the config "
"files or command-line."
msgstr ""
"Exécute un script d'installation dans un environnement quelque peu contrôlé, "
"et renvoie une instance :class:`distutils.dist.distribution` qui contrôle "
"l’exécution. Ceci est utile si vous avez besoin de connaître les méta-"
"données de la distribution (passées sous forme d'arguments nommés de "
"*script* à la fonction :func:`setup`), ou le contenu des fichiers de "
"configuration ou de la ligne de commande."

#: ../Doc/distutils/apiref.rst:133
msgid ""
"*script_name* is a file that will be read and run with :func:`exec`.  ``sys."
"argv[0]`` will be replaced with *script* for the duration of the call.  "
"*script_args* is a list of strings; if supplied, ``sys.argv[1:]`` will be "
"replaced by *script_args* for the duration  of the call."
msgstr ""
"*script_name* est un fichier qui sera lu et exécuté avec :func:`exec`. ``sys."
"argv[0]`` sera remplacé par *script* par la durée de l'appel. *script_args* "
"est une liste de chaînes de caractères; si fourni, ``sys.argv[1:]`` sera "
"remplacé par *script_args* pour la durée de l'appel."

#: ../Doc/distutils/apiref.rst:138
msgid ""
"*stop_after* tells :func:`setup` when to stop processing; possible  values:"
msgstr "*stop_after* dit à :func:`setup` quand s'arrêter; valeurs possibles:"

#: ../Doc/distutils/apiref.rst:143 ../Doc/distutils/apiref.rst:562
#: ../Doc/distutils/apiref.rst:1583
msgid "description"
msgstr "description"

#: ../Doc/distutils/apiref.rst:145
msgid "*init*"
msgstr "*init*"

#: ../Doc/distutils/apiref.rst:145
msgid ""
"Stop after the :class:`Distribution` instance has been created  and "
"populated with the keyword arguments to :func:`setup`"
msgstr ""
"S'arrête une fois que l'instance :class:`Distribution` a été créée et "
"renseignée avec les arguments-clés de :func:`setup`"

#: ../Doc/distutils/apiref.rst:149
msgid "*config*"
msgstr "*config*"

#: ../Doc/distutils/apiref.rst:149
msgid ""
"Stop after config files have been parsed (and their data stored in the :"
"class:`Distribution` instance)"
msgstr ""
"S'arrête une fois que les fichiers de configuration ont été parcouru (et que "
"leurs données ont été stockées dans l'instance :class:`Distribution`)"

#: ../Doc/distutils/apiref.rst:153
msgid "*commandline*"
msgstr "*commandline*"

#: ../Doc/distutils/apiref.rst:153
msgid ""
"Stop after the command-line (``sys.argv[1:]`` or  *script_args*) have been "
"parsed (and the data stored in the :class:`Distribution` instance.)"
msgstr ""
"S'arrête une fois que la ligne de commande (``sys.argv[1:]`` ou "
"*script_args*) a été parcouru (et les données stockées dans l'instance :"
"class:`Distribution`)"

#: ../Doc/distutils/apiref.rst:158
msgid "*run*"
msgstr "*run*"

#: ../Doc/distutils/apiref.rst:158
msgid ""
"Stop after all commands have been run (the same as  if :func:`setup` had "
"been called in the usual way). This is the default value."
msgstr ""
"S'arrête une fois que toutes les commandes ont été exécutées (comme si :func:"
"`setup` fût appelé de la manière habituelle). Ceci est la valeur par défaut."

#: ../Doc/distutils/apiref.rst:164
msgid ""
"In addition, the :mod:`distutils.core` module exposed a number of  classes "
"that live elsewhere."
msgstr ""
"De plus, le module :mod:`distutils.core` a exposé un nombre de classe qui "
"existent ailleurs."

#: ../Doc/distutils/apiref.rst:167
msgid ":class:`~distutils.extension.Extension` from :mod:`distutils.extension`"
msgstr ""
":class:`~distutils.extension.Extension` du module :mod:`distutils.extension`"

#: ../Doc/distutils/apiref.rst:169
msgid ":class:`~distutils.cmd.Command` from :mod:`distutils.cmd`"
msgstr ":class:`~distutils.cmd.Command` du module :mod:`distutils.cmd`"

#: ../Doc/distutils/apiref.rst:171
msgid ":class:`~distutils.dist.Distribution` from :mod:`distutils.dist`"
msgstr ":class:`~distutils.dist.Distribution` du module :mod:`distutils.dist`"

#: ../Doc/distutils/apiref.rst:173
msgid ""
"A short description of each of these follows, but see the relevant module "
"for the full reference."
msgstr ""
"Une courte description de chacune d'elle suit, mais consultez le module "
"concerné pour une référence complète."

#: ../Doc/distutils/apiref.rst:179
msgid ""
"The Extension class describes a single C or C++ extension module in a setup "
"script. It accepts the following keyword arguments in its constructor:"
msgstr ""
"La classe *Extension* décrit un seul module d'extension C ou C++ dans un "
"script d'installation. Elle accepte dans son constructeur les arguments "
"nommés suivants:"

#: ../Doc/distutils/apiref.rst:187
msgid ""
"the full name of the extension, including any packages --- ie. *not* a "
"filename or pathname, but Python dotted name"
msgstr ""
"Le nom complet de l'extension, incluant n'importe quel paquet --- c-à-d "
"*pas* un nom de fichier ou de chemin mais un nom Python séparé par des "
"points."

#: ../Doc/distutils/apiref.rst:193
msgid "*sources*"
msgstr "*sources*"

#: ../Doc/distutils/apiref.rst:193
msgid ""
"list of source filenames, relative to the distribution root (where the setup "
"script lives), in Unix form (slash-separated) for portability. Source files "
"may be C, C++, SWIG (.i), platform-specific resource files, or whatever else "
"is recognized by the :command:`build_ext` command as source for a Python "
"extension."
msgstr ""
"Listes des noms de fichier des sources, relatifs à la racine de la "
"distribution (où est placé le script *setup.py*), dans un format Unix "
"(séparé par des slashs) dans un souci de portabilité. Les fichiers de code "
"source peuvent être du C, C++, SWIG (*.i*), des fichiers de ressources "
"spécifiques à la plateforme ou tout autre reconnu par la commande :command:"
"`build_ext` comme source d'une extension Python."

#: ../Doc/distutils/apiref.rst:207
msgid "*include_dirs*"
msgstr "*include_dirs*"

#: ../Doc/distutils/apiref.rst:207
msgid ""
"list of directories to search for C/C++ header files (in Unix form for "
"portability)"
msgstr ""
"Liste des répertoires où chercher les fichiers d'entêtes C/C++ (en format "
"Unix dans un souci de portabilité)."

#: ../Doc/distutils/apiref.rst:211
msgid "*define_macros*"
msgstr "*define_macros*"

#: ../Doc/distutils/apiref.rst:211
msgid ""
"list of macros to define; each macro is defined using a 2-tuple ``(name, "
"value)``, where *value* is either the string to define it to or ``None`` to "
"define it without a particular value (equivalent of ``#define FOO`` in "
"source or :option:`!-DFOO` on Unix C compiler command line)"
msgstr ""
"Liste de macros à définir ; chaque macro est définie à l'aide d'un couple "
"``(name, value)``, où *value* correspond soit à la chaîne sur laquelle la "
"macro doit être définie, soit à ``None`` pour définir la macro sur aucune "
"valeur particulière (équivalent à ``#define TRUC`` dans la source ou à :"
"option:`!-DTRUC` dans la ligne de commande du compilateur C Unix."

#: ../Doc/distutils/apiref.rst:211
msgid "a list of tuples"
msgstr "une liste de tuples"

#: ../Doc/distutils/apiref.rst:223
msgid "*undef_macros*"
msgstr "*undef_macros*"

#: ../Doc/distutils/apiref.rst:223
msgid "list of macros to undefine explicitly"
msgstr "Liste de macros à ignorer explicitement."

#: ../Doc/distutils/apiref.rst:226
msgid "*library_dirs*"
msgstr "*library_dirs*"

#: ../Doc/distutils/apiref.rst:226
msgid "list of directories to search for C/C++ libraries at link time"
msgstr ""
"Liste de répertoires à parcourir pour chercher les bibliothèques C/C++ lors "
"de la phase d'édition de liens."

#: ../Doc/distutils/apiref.rst:230
msgid "*libraries*"
msgstr "*libraries*"

#: ../Doc/distutils/apiref.rst:230
msgid "list of library names (not filenames or paths) to link against"
msgstr ""
"Liste de noms de bibliothèques à lier à la compilation. Pas de noms de "
"fichiers ou de chemin."

#: ../Doc/distutils/apiref.rst:234
msgid "*runtime_library_dirs*"
msgstr "*runtime_library_dirs*"

#: ../Doc/distutils/apiref.rst:234
msgid ""
"list of directories to search for C/C++ libraries at run time (for shared "
"extensions, this is when the extension is loaded)"
msgstr ""
"Liste de répertoires à parcourir pour les bibliothèques C/C++ lors de la "
"phase d'exécution.  Pour les extensions partagées, c'est à ce moment que "
"l'extension est chargée. "

#: ../Doc/distutils/apiref.rst:240
msgid "*extra_objects*"
msgstr "*extra_objects*"

#: ../Doc/distutils/apiref.rst:240
msgid ""
"list of extra files to link with (eg. object files not implied by 'sources', "
"static library that must be explicitly specified, binary resource files, "
"etc.)"
msgstr ""
"Liste des fichiers supplémentaires à lier (par exemple les fichiers d'objets "
"non explicités dans les 'sources', bibliothèque statique qui doit être "
"explicitement spécifiée, fichiers de ressources binaires, etc. )."

#: ../Doc/distutils/apiref.rst:247
msgid "*extra_compile_args*"
msgstr "*extra_compile_args*"

#: ../Doc/distutils/apiref.rst:247
msgid ""
"any extra platform- and compiler-specific information to use when compiling "
"the source files in 'sources'. For platforms and compilers where a command "
"line makes sense, this is typically a list of command-line arguments, but "
"for other platforms it could be anything."
msgstr ""
"Toute information supplémentaire spécifique à la plate-forme et au "
"compilateur à utiliser lors de la compilation des fichiers sources dans "
"'sources'. Pour les plates-formes et les compilateurs où une ligne de "
"commande a du sens, il s'agit généralement d'une liste d'arguments de ligne "
"de commande, mais pour d'autres plates-formes, cela peut être n'importe quoi."

#: ../Doc/distutils/apiref.rst:258
msgid "*extra_link_args*"
msgstr "*extra_link_args*"

#: ../Doc/distutils/apiref.rst:258
msgid ""
"any extra platform- and compiler-specific information to use when linking "
"object files together to create the extension (or to create a new static "
"Python interpreter). Similar interpretation as for 'extra_compile_args'."
msgstr ""
"Toute information supplémentaire spécifique à la plate-forme et au "
"compilateur à utiliser lors de la liaison de fichiers objets pour créer "
"l'extension (ou pour créer un nouvel interpréteur Python statique). "
"Interprétation similaire à celle de *extra_compile_args*."

#: ../Doc/distutils/apiref.rst:267
msgid "*export_symbols*"
msgstr "*export_symbols*"

#: ../Doc/distutils/apiref.rst:267
msgid ""
"list of symbols to be exported from a shared extension. Not used on all "
"platforms, and not generally necessary for Python extensions, which "
"typically export exactly one symbol: ``init`` + extension_name."
msgstr ""
"Liste des symboles à exporter à partir d'une extension partagée. N'est pas "
"utilisé sur toutes les plates-formes et n'est généralement pas nécessaire "
"pour les extensions Python, qui exportent généralement exactement un "
"symbole : ``init + nom_de_l'extension``."

#: ../Doc/distutils/apiref.rst:275
msgid "*depends*"
msgstr "*depends*"

#: ../Doc/distutils/apiref.rst:275
msgid "list of files that the extension depends on"
msgstr "Liste des fichiers dont dépend l'extension."

#: ../Doc/distutils/apiref.rst:278
msgid "*language*"
msgstr "*language*"

#: ../Doc/distutils/apiref.rst:278
msgid ""
"extension language (i.e. ``'c'``, ``'c++'``, ``'objc'``). Will be detected "
"from the source extensions if not provided."
msgstr ""
"Langage de l'extension (par exemple ``'c'``, ``'c++'``, ``'objc'``). Il sera "
"détecté selon l'extension de la source s'il n'est pas précisé."

#: ../Doc/distutils/apiref.rst:284
msgid "*optional*"
msgstr "*optional*"

#: ../Doc/distutils/apiref.rst:284
msgid ""
"specifies that a build failure in the extension should not abort the build "
"process, but simply skip the extension."
msgstr ""
"Spécifie qu'un échec de compilation dans l'extension ne doit pas interrompre "
"le processus de compilation, mais simplement ignorer l'extension."

#: ../Doc/distutils/apiref.rst:284
msgid "a boolean"
msgstr "un booléen"

#: ../Doc/distutils/apiref.rst:292
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin."
msgstr ""

#: ../Doc/distutils/apiref.rst:298
msgid ""
"A :class:`Distribution` describes how to build, install and package up a "
"Python software package."
msgstr ""
"Une classe :class:`Distribution` décrit comment compiler, installer et "
"empaqueter un paquet logiciel Python."

#: ../Doc/distutils/apiref.rst:301
msgid ""
"See the :func:`setup` function for a list of keyword arguments accepted  by "
"the Distribution constructor. :func:`setup` creates a Distribution instance."
msgstr ""
"Voir la fonction :func:`setup` pour une liste des arguments de mots-clés "
"acceptés par le constructeur *Distribution*. :func:`setup` crée une instance "
"de Distribution."

#: ../Doc/distutils/apiref.rst:304
msgid ""
":class:`~distutils.core.Distribution` now warns if ``classifiers``, "
"``keywords`` and ``platforms`` fields are not specified as a list or a "
"string."
msgstr ""
":class:`~distutils.core.Distribution` avertit maintenant si les champs "
"``classifiers``, ``keywords`` et ``platforms`` ne sont pas spécifiés comme "
"une liste ou une chaîne de caractères."

#: ../Doc/distutils/apiref.rst:311
msgid ""
"A :class:`Command` class (or rather, an instance of one of its subclasses) "
"implement a single distutils command."
msgstr ""
"Une classe :class:`Command` (ou plutôt une instance d'une de ses sous-"
"classes) implémente une commande *distutils* unique."

#: ../Doc/distutils/apiref.rst:316
msgid ":mod:`distutils.ccompiler` --- CCompiler base class"
msgstr ":mod:`distutils.ccompiler` — Classe de base CCompiler"

#: ../Doc/distutils/apiref.rst:322
msgid ""
"This module provides the abstract base class for the :class:`CCompiler` "
"classes.  A :class:`CCompiler` instance can be used for all the compile  and "
"link steps needed to build a single project. Methods are provided to  set "
"options for the compiler --- macro definitions, include directories,  link "
"path, libraries and the like."
msgstr ""
"Ce module fournit la classe de base abstraite pour les classes :class:"
"`CCompiler`.  Une instance de :class:`CCompiler` peut être utilisée pour "
"toutes les étapes de compilation et de liaison nécessaires à la compilation "
"d'un projet unique. Des méthodes sont fournies pour définir des options pour "
"le compilateur --- définitions de macros, inclusion des répertoires, des "
"chemins de liens, des bibliothèques, etc."

#: ../Doc/distutils/apiref.rst:328
msgid "This module provides the following functions."
msgstr "Ce module fournit les fonctions suivantes."

#: ../Doc/distutils/apiref.rst:333
msgid ""
"Generate linker options for searching library directories and linking with "
"specific libraries.  *libraries* and *library_dirs* are, respectively, lists "
"of library names (not filenames!) and search directories.  Returns a list of "
"command-line options suitable for use with some compiler (depending on the "
"two format strings passed in)."
msgstr ""
"Génère des options de liaison pour chercher dans les répertoires des "
"bibliothèques et pour effectuer les liaisons avec des bibliothèques "
"spécifiques.  *libraries* et *library_dirs* sont, respectivement, des listes "
"de noms de bibliothèques (pas de noms de fichiers !) et de répertoires à "
"rechercher.  Renvoie une liste d'options de ligne de commande utilisables "
"avec certains compilateurs (en fonction des deux chaînes de format "
"transmises)."

#: ../Doc/distutils/apiref.rst:342
msgid ""
"Generate C pre-processor options (:option:`!-D`, :option:`!-U`, :option:`!-"
"I`) as used by at least two types of compilers: the typical Unix compiler "
"and Visual C++. *macros* is the usual thing, a list of 1- or 2-tuples, where "
"``(name,)`` means undefine (:option:`!-U`) macro *name*, and ``(name, "
"value)`` means define (:option:`!-D`) macro *name* to *value*.  "
"*include_dirs* is just a list of directory names to be added to the header "
"file search path (:option:`!-I`). Returns a list of command-line options "
"suitable for either Unix compilers or Visual C++."
msgstr ""
"Génère les options du préprocesseur C (:option:`!-D`, :option:`!-U`, :option:"
"`!-I`) utilisées par au moins deux types de compilateurs : les compilateurs "
"type Unix et Visual C++. *macros* est une liste de couples où ``(name,)`` "
"est traité comme *non définie* (:option:`!-U`); ``(name, value)`` est traité "
"comme *définie* (:option:`!-D`). *include_dirs* est la liste de noms de "
"répertoires à ajouter au chemin de recherche du fichier d'en-tête (:option:"
"`!-I`). Renvoie une liste d'options de ligne de commande pour les "
"compilateurs Unix ou Visual C+++."

#: ../Doc/distutils/apiref.rst:354
msgid "Determine the default compiler to use for the given platform."
msgstr ""
"Détermine le compilateur par défaut a utiliser par une plateforme donnée."

#: ../Doc/distutils/apiref.rst:356
msgid ""
"*osname* should be one of the standard Python OS names (i.e. the ones "
"returned by ``os.name``) and *platform* the common value returned by ``sys."
"platform`` for the platform in question."
msgstr ""
"*osname* doit être l'un des noms d'OS Python standard (c'est-à-dire un des "
"noms renvoyés par ``os.name``) et *platform* la valeur commune renvoyés par "
"``sys.platform`` pour la plate-forme en question."

#: ../Doc/distutils/apiref.rst:360
msgid ""
"The default values are ``os.name`` and ``sys.platform`` in case the "
"parameters are not given."
msgstr ""
"Les valeurs par défaut sont ``os.name`` et ``sys.platform`` si les "
"paramètres ne sont pas fournis."

#: ../Doc/distutils/apiref.rst:366
msgid ""
"Factory function to generate an instance of some CCompiler subclass for the "
"supplied platform/compiler combination. *plat* defaults to ``os.name`` (eg. "
"``'posix'``, ``'nt'``), and *compiler*  defaults to the default compiler for "
"that platform. Currently only ``'posix'`` and ``'nt'`` are supported, and "
"the default compilers are \"traditional Unix interface\" (:class:"
"`UnixCCompiler` class) and Visual C++ (:class:`MSVCCompiler` class).  Note "
"that it's perfectly possible to ask for a Unix compiler object under "
"Windows, and a Microsoft compiler object under Unix---if you supply a value "
"for *compiler*, *plat* is ignored."
msgstr ""
"Fonction de génération produisant une instance d'une sous-classe CCompiler "
"pour la combinaison plateforme/compilateur fournie. Par défaut, *plat* est "
"le ``os.name`` (par exemple ``'posix'``, ``'nt'``), et *compiler* est le "
"compilateur par défaut pour cette plate-forme. Actuellement, seuls "
"``'posix'`` et ``'nt'`` sont gérés, et les compilateurs par défaut sont ceux "
"qui gèrent une \"interface Unix traditionnelle\" (:class:`UnixCCompiler`) et "
"Visual C++ (:class:`MSVCCompiler`).  Notez qu'il est tout à fait possible de "
"demander un objet compilateur Unix sous Windows, et un objet compilateur "
"Microsoft sous Unix. Si vous fournissez une valeur pour *compiler*, *plat* "
"est ignoré."

#: ../Doc/distutils/apiref.rst:382
msgid ""
"Print list of available compilers (used by the :option:`!--help-compiler` "
"options to :command:`build`, :command:`build_ext`, :command:`build_clib`)."
msgstr ""
"Affiche la liste des compilateurs disponibles (utilisés par l'option :option:"
"`!--help-compiler` pour les commandes :command:`build`, :command:"
"`build_ext`, :command:`build_clib`)."

#: ../Doc/distutils/apiref.rst:388
msgid ""
"The abstract base class :class:`CCompiler` defines the interface that  must "
"be implemented by real compiler classes.  The class also has  some utility "
"methods used by several compiler classes."
msgstr ""
"La classe de base abstraite :class:`CCompiler` définit l'interface qui doit "
"être implémentée par des classes de compilateur concrètes.  La classe "
"possède également quelques méthodes utilitaires utilisées par plusieurs "
"classes de compilateurs."

#: ../Doc/distutils/apiref.rst:392
msgid ""
"The basic idea behind a compiler abstraction class is that each instance can "
"be used for all the compile/link steps in building a single project.  Thus, "
"attributes common to all of those compile and link steps --- include "
"directories, macros to define, libraries to link against, etc. --- are "
"attributes of the compiler instance.  To allow for variability in how "
"individual files are treated, most of those attributes may be varied on a "
"per-compilation or per-link basis."
msgstr ""
"L'idée de base derrière une classe abstraite de compilateur est que chaque "
"instance peut être utilisée pour toutes les étapes de compilation/lien dans "
"la construction d'un seul projet.  Ainsi, les attributs communs à toutes ces "
"étapes de compilation et de liaison (ce qui inclut les répertoires, les "
"macros à définir, les bibliothèques à relier, etc.) sont des attributs de "
"l'instance du compilateur.  Pour tenir compte des variations dans la façon "
"dont chaque fichier est traité, la plupart de ces attributs peuvent être "
"modifiés en fonction de chaque compilation ou de chaque lien."

#: ../Doc/distutils/apiref.rst:400
msgid ""
"The constructor for each subclass creates an instance of the Compiler "
"object. Flags are *verbose* (show verbose output), *dry_run* (don't actually "
"execute the steps) and *force* (rebuild everything, regardless of "
"dependencies). All of these flags default to ``0`` (off). Note that you "
"probably don't want to instantiate :class:`CCompiler` or one of its "
"subclasses directly - use the :func:`distutils.CCompiler.new_compiler` "
"factory function instead."
msgstr ""
"Le constructeur de chaque sous-classe crée une instance de l'objet "
"*Compiler*. Les paramètres optionnels sont *verbose* (affiche plus "
"d'information à l'exécution), *dry_run* (ne pas exécuter les étapes) et "
"*force* (tout reconstruire, indépendamment des dépendances). Tous ces "
"paramètres ont la valeur par défaut ``0`` (désactivé). Notez que vous ne "
"voulez probablement pas instancier directement la classe :class:`CCompiler` "
"ou une de ses sous-classes. Utilisez plutôt la fonction génératrice :func:"
"`distutils.CCompiler.new_compiler`."

#: ../Doc/distutils/apiref.rst:407
msgid ""
"The following methods allow you to manually alter compiler options for  the "
"instance of the Compiler class."
msgstr ""
"Les méthodes suivantes vous permettent de modifier manuellement les options "
"du compilateur de l'instance de la classe *Compiler*."

#: ../Doc/distutils/apiref.rst:413
msgid ""
"Add *dir* to the list of directories that will be searched for header files. "
"The compiler is instructed to search directories in the order in which they "
"are supplied by successive calls to :meth:`add_include_dir`."
msgstr ""
"Ajoute *dir* à la liste des répertoires qui sont recherchés pour les "
"fichiers d'en-tête. Le compilateur est chargé de rechercher les répertoires "
"dans l'ordre dans lequel ils sont fournis par des appels successifs à :meth:"
"`add_include_dir`."

#: ../Doc/distutils/apiref.rst:420
msgid ""
"Set the list of directories that will be searched to *dirs* (a list of "
"strings). Overrides any preceding calls to :meth:`add_include_dir`; "
"subsequent calls to :meth:`add_include_dir` add to the list passed to :meth:"
"`set_include_dirs`. This does not affect any list of standard include "
"directories that the compiler may search by default."
msgstr ""
"Affecte la liste des répertoires qui seront recherchés à la valeur de *dirs* "
"(une liste de chaînes). Remplace tous les appels précédents de :meth:"
"`add_include_dir` ; les appels suivants de :meth:`add_include_dir` "
"s'ajoutent à la liste transmise par :meth:`set_include_dirs`. Ceci n'affecte "
"pas la liste des répertoires d'inclusion standard que le compilateur peut "
"rechercher par défaut."

#: ../Doc/distutils/apiref.rst:429
msgid ""
"Add *libname* to the list of libraries that will be included in all links "
"driven by this compiler object.  Note that *libname* should \\*not\\* be the "
"name of a file containing a library, but the name of the library itself: the "
"actual filename will be inferred by the linker, the compiler, or the "
"compiler class (depending on the platform)."
msgstr ""
"Ajoute *libname* à la liste des bibliothèques qui seront incluses dans tous "
"les liens gérés par l'objet compilateur.  Notez que *libname* ne *doit pas "
"être* le nom d'un fichier contenant une bibliothèque, mais le nom de la "
"bibliothèque elle-même : le nom du fichier sera déduit par l'éditeur de "
"liens, le compilateur ou la classe de compilation (selon la plate-forme)."

#: ../Doc/distutils/apiref.rst:435
msgid ""
"The linker will be instructed to link against libraries in the order they "
"were supplied to :meth:`add_library` and/or :meth:`set_libraries`.  It is "
"perfectly valid to duplicate library names; the linker will be instructed to "
"link against libraries as many times as they are mentioned."
msgstr ""
"L'éditeur de liens est chargé de lier les bibliothèques dans l'ordre dans "
"lequel elles sont fournies à :meth:`add_library` et/ou :meth:"
"`set_libraries`.  Il est parfaitement valide de dupliquer les noms de "
"bibliothèques ; l'éditeur de liens est chargé de créer des liens avec les "
"bibliothèques autant de fois que les noms sont mentionnées."

#: ../Doc/distutils/apiref.rst:443
msgid ""
"Set the list of libraries to be included in all links driven by this "
"compiler object to *libnames* (a list of strings).  This does not affect any "
"standard system libraries that the linker may include by default."
msgstr ""
"Affecte la liste des bibliothèques à inclure dans tous les liens gérés par "
"l'objet compilateur avec la valeur de *libnames* (une liste des chaînes de "
"caractères).  Ceci n'affecte pas les bibliothèques système standard que "
"l'éditeur de liens peut inclure par défaut."

#: ../Doc/distutils/apiref.rst:450
msgid ""
"Add *dir* to the list of directories that will be searched for libraries "
"specified to :meth:`add_library` and :meth:`set_libraries`.  The linker will "
"be instructed to search for libraries in the order they are supplied to :"
"meth:`add_library_dir` and/or :meth:`set_library_dirs`."
msgstr ""
"Ajoute *dir* à la liste des répertoires qui seront recherchés pour les "
"bibliothèques spécifiées dans :meth:`add_library` et :meth:`set_libraries`.  "
"L'éditeur de liens est chargé de rechercher les bibliothèques dans l'ordre "
"dans lequel elles sont fournies à :meth:`add_library_dir` et/ou :meth:"
"`set_library_dirs`."

#: ../Doc/distutils/apiref.rst:458
msgid ""
"Set the list of library search directories to *dirs* (a list of strings).  "
"This does not affect any standard library search path that the linker may "
"search by default."
msgstr ""
"Affecte la liste des répertoires de recherche de bibliothèque avec la valeur "
"de *dirs* (une liste de chaînes de caractères).  Cela n'affecte pas le "
"chemin de recherche standard de la bibliothèque que l'éditeur de liens peut "
"rechercher par défaut."

#: ../Doc/distutils/apiref.rst:465
msgid ""
"Add *dir* to the list of directories that will be searched for shared "
"libraries at runtime."
msgstr ""
"Ajoute *dir* à la liste des répertoires qui seront recherchés par les "
"bibliothèques partagées au moment de l'exécution."

#: ../Doc/distutils/apiref.rst:471
msgid ""
"Set the list of directories to search for shared libraries at runtime to "
"*dirs* (a list of strings).  This does not affect any standard search path "
"that the runtime linker may search by default."
msgstr ""
"Affecte la liste des répertoires pour rechercher les bibliothèques partagées "
"au moment de l'exécution à la valeur de *dirs* (une liste des chaînes de "
"caractères).  Ceci n'affecte aucun chemin de recherche standard que "
"l'éditeur de liens d'exécution peut rechercher par défaut."

#: ../Doc/distutils/apiref.rst:478
msgid ""
"Define a preprocessor macro for all compilations driven by this compiler "
"object. The optional parameter *value* should be a string; if it is not "
"supplied, then the macro will be defined without an explicit value and the "
"exact outcome depends on the compiler used."
msgstr ""
"Définit une macro de préprocesseur pour toutes les compilations gérées par "
"cet objet compilateur. Le paramètre optionnel *value* doit être une chaîne "
"de caractères ; s'il n'est pas fourni, alors la macro sera définie sans "
"valeur explicite et le résultat exact dépendra du compilateur utilisé."

#: ../Doc/distutils/apiref.rst:488
msgid ""
"Undefine a preprocessor macro for all compilations driven by this compiler "
"object.  If the same macro is defined by :meth:`define_macro` and undefined "
"by :meth:`undefine_macro` the last call takes precedence (including multiple "
"redefinitions or undefinitions).  If the macro is redefined/undefined on a "
"per-compilation basis (ie. in the call to :meth:`compile`), then that takes "
"precedence."
msgstr ""
"Désactive une macro de préprocesseur pour toutes les compilations gérées par "
"cet objet compilateur.  Si la même macro est définie par :meth:"
"`define_macro` et ensuite désactivée par un appel à :meth:`undefine_macro`, "
"le dernier appel est prioritaire (y compris en cas de redéfinitions "
"multiples).  Si la macro est redéfinie/désactivée par compilation (c'est-à-"
"dire dans l'appel à :meth:`compile`), alors cet appel prévaut."

#: ../Doc/distutils/apiref.rst:498
msgid ""
"Add *object* to the list of object files (or analogues, such as explicitly "
"named library files or the output of \"resource compilers\") to be included "
"in every link driven by this compiler object."
msgstr ""
"Ajoute *objet* à la liste des fichiers objets (ou analogues, tels que les "
"fichiers de bibliothèque explicitement nommés ou la sortie des "
"\"compilateurs de ressources\") à inclure dans chaque lien qui est géré par "
"ce compilateur d'objets."

#: ../Doc/distutils/apiref.rst:505
msgid ""
"Set the list of object files (or analogues) to be included in every link to "
"*objects*.  This does not affect any standard object files that the linker "
"may include by default (such as system libraries)."
msgstr ""
"Définit la liste des fichiers objets (ou analogues) à inclure dans chaque "
"lien à la valeur de *objects*.  Ceci n'affecte pas les fichiers d'objets "
"standard que l'éditeur de liens peut inclure par défaut (comme les "
"bibliothèques système)."

#: ../Doc/distutils/apiref.rst:509
msgid ""
"The following methods implement methods for autodetection of compiler  "
"options, providing some functionality similar to GNU :program:`autoconf`."
msgstr ""
"Les méthodes suivantes offre des services pour l'auto-détection des options "
"du compilateur. Elles offrent des fonctionnalités similaires à celles du "
"programme GNU :program:`autoconf`."

#: ../Doc/distutils/apiref.rst:515
msgid ""
"Detect the language of a given file, or list of files. Uses the  instance "
"attributes :attr:`language_map` (a dictionary), and  :attr:`language_order` "
"(a list) to do the job."
msgstr ""
"Détecte le langage d'un fichier donné, ou d'une liste de fichiers. Utilise "
"les attributs d'instance :attr:`language_map` (un dictionnaire) et :attr:"
"`language_order` (une liste) pour faire le travail."

#: ../Doc/distutils/apiref.rst:522
msgid ""
"Search the specified list of directories for a static or shared library file "
"*lib* and return the full path to that file.  If *debug* is true, look for a "
"debugging version (if that makes sense on the current platform).  Return "
"``None`` if *lib* wasn't found in any of the specified directories."
msgstr ""
"Recherche dans la liste des répertoires spécifiés un fichier de bibliothèque "
"statique ou partagée *lib* et renvoie le chemin complet vers ce fichier. Si "
"*debug* est vrai, recherche une version de débogage (si cela a du sens sur "
"la plate-forme actuelle). Renvoie ``None`` si *lib* n'a pas été trouvé dans "
"l'un des répertoires spécifiés."

#: ../Doc/distutils/apiref.rst:530
msgid ""
"Return a boolean indicating whether *funcname* is supported on the current "
"platform.  The optional arguments can be used to augment the compilation "
"environment by providing additional include files and paths and libraries "
"and paths."
msgstr ""
"Renvoie un booléen indiquant si *funcname* est pris en charge sur la plate-"
"forme courante.  Les arguments optionnels peuvent être utilisés pour "
"enrichir l'environnement de compilation en fournissant des fichiers, des "
"répertoires de fichiers, des bibliothèques, des répertoires de bibliothèques "
"supplémentaires"

#: ../Doc/distutils/apiref.rst:538
msgid ""
"Return the compiler option to add *dir* to the list of directories searched "
"for libraries."
msgstr ""
"Renvoie l'option de compilation pour ajouter *dir* à la liste des "
"répertoires recherchés pour les bibliothèques."

#: ../Doc/distutils/apiref.rst:544
msgid ""
"Return the compiler option to add *lib* to the list of libraries linked into "
"the shared library or executable."
msgstr ""
"Renvoie l'option de compilation pour ajouter *lib* à la liste des "
"bibliothèques liées à la bibliothèque partagée ou à l'exécutable."

#: ../Doc/distutils/apiref.rst:550
msgid ""
"Return the compiler option to add *dir* to the list of directories searched "
"for runtime libraries."
msgstr ""
"Renvoie l'option de compilation pour ajouter *dir* à la liste des "
"répertoires recherchés par les bibliothèques d'exécution."

#: ../Doc/distutils/apiref.rst:556
msgid ""
"Define the executables (and options for them) that will be run to perform "
"the various stages of compilation.  The exact set of executables that may be "
"specified here depends on the compiler class (via the 'executables' class "
"attribute), but most will have:"
msgstr ""
"Définit les exécutables (et leurs options) qui seront exécutés pour "
"effectuer les différentes étapes de compilation.  L'ensemble exact des "
"exécutables qui peuvent être spécifiés ici dépend de la classe du "
"compilateur (via l'attribut de classe *executables*), mais la plupart "
"utilisent :"

#: ../Doc/distutils/apiref.rst:562
msgid "attribute"
msgstr "attribut"

#: ../Doc/distutils/apiref.rst:564
msgid "*compiler*"
msgstr "*compiler*"

#: ../Doc/distutils/apiref.rst:564
msgid "the C/C++ compiler"
msgstr "Le compilateur C/C++."

#: ../Doc/distutils/apiref.rst:566
msgid "*linker_so*"
msgstr "*linker_so*"

#: ../Doc/distutils/apiref.rst:566
msgid "linker used to create shared objects and libraries"
msgstr ""
"L'éditeur de liens utilisé pour la création d'objets ou de bibliothèques "
"partagées."

#: ../Doc/distutils/apiref.rst:569
msgid "*linker_exe*"
msgstr "*linker_exe*"

#: ../Doc/distutils/apiref.rst:569
msgid "linker used to create binary executables"
msgstr "L'éditeur de lien utilisé pour créer des exécutables binaires."

#: ../Doc/distutils/apiref.rst:571
msgid "*archiver*"
msgstr "*archiver*"

#: ../Doc/distutils/apiref.rst:571
msgid "static library creator"
msgstr "Créateur de bibliothèque statique."

#: ../Doc/distutils/apiref.rst:574
msgid ""
"On platforms with a command-line (Unix, DOS/Windows), each of these is a "
"string that will be split into executable name and (optional) list of "
"arguments. (Splitting the string is done similarly to how Unix shells "
"operate: words are delimited by spaces, but quotes and backslashes can "
"override this.  See :func:`distutils.util.split_quoted`.)"
msgstr ""
"Sur les plates-formes disposant d'un outil de ligne de commande (Unix, DOS/"
"Windows), chacun de ces éléments est une chaîne qui sera fractionnée en un "
"nom exécutable et, éventuellement, une liste d'arguments. Le fractionnement "
"de la chaîne est réalisée selon la même procédure que celle appliquée par "
"les *shells* Unix : les mots sont délimités par des espaces, mais les "
"guillemets et les antislashs permettent de les ignorer. Voir :func:"
"`distutils.util.split_quoted`."

#: ../Doc/distutils/apiref.rst:580
msgid "The following methods invoke stages in the build process."
msgstr ""
"Les méthodes suivantes permettent d'exécuter des étapes lors de processus de "
"construction."

#: ../Doc/distutils/apiref.rst:585
msgid ""
"Compile one or more source files. Generates object files (e.g.  transforms "
"a :file:`.c` file to a :file:`.o` file.)"
msgstr ""
"Compile un ou plusieurs fichiers source. Génère des fichiers objets (par "
"exemple, transforme un fichier :file:`.c` en fichier :file:`.o`)."

#: ../Doc/distutils/apiref.rst:588
msgid ""
"*sources* must be a list of filenames, most likely C/C++ files, but in "
"reality anything that can be handled by a particular compiler and compiler "
"class (eg. :class:`MSVCCompiler` can handle resource files in *sources*).  "
"Return a list of object filenames, one per source filename in *sources*.  "
"Depending on the implementation, not all source files will necessarily be "
"compiled, but all corresponding object filenames will be returned."
msgstr ""
"*sources* doit être une liste de noms de fichiers, généralement des fichiers "
"C/C++, mais elle pourrait contenir n'importe quel fichier géré par un "
"compilateur et une classe de compilateur (par exemple, :class:`MSVCCompiler` "
"peut gérer les fichiers de ressources dans *sources*). Renvoie une liste de "
"noms de fichiers objet : un objet par nom de fichier dans *sources*. Selon "
"les cas, tous les fichiers source ne seront pas forcément compilés, mais "
"tous les noms de fichiers objet correspondants seront renvoyés."

#: ../Doc/distutils/apiref.rst:595
msgid ""
"If *output_dir* is given, object files will be put under it, while retaining "
"their original path component.  That is, :file:`foo/bar.c` normally compiles "
"to :file:`foo/bar.o` (for a Unix implementation); if *output_dir* is "
"*build*, then it would compile to :file:`build/foo/bar.o`."
msgstr ""
"Si *output_dir* est donné, les fichiers objets seront placés à l'intérieur, "
"tout en conservant leurs chemins relatifs.  Par exemple, le :file:`truc/"
"machin.c` compile normalement en :file:`truc/machin.o` (pour une "
"implémentation Unix) ; si *output_dir* a la valeur *build*, alors il "
"compilera en :file:`build/truc/machin.o`."

#: ../Doc/distutils/apiref.rst:600
msgid ""
"*macros*, if given, must be a list of macro definitions.  A macro definition "
"is either a ``(name, value)`` 2-tuple or a ``(name,)`` 1-tuple. The former "
"defines a macro; if the value is ``None``, the macro is defined without an "
"explicit value.  The 1-tuple case undefines a macro.  Later definitions/"
"redefinitions/undefinitions take precedence."
msgstr ""
"Le paramètre *macros*, s'il est donné, doit être une liste de définitions de "
"macros.  Une définition de macro est soit un couple ``(nom, valeur)``, ou un "
"singleton ``(nom,)``. Le premier définit une macro ; si la valeur est "
"``None``, la macro est définie sans valeur explicite.  L'utilisation d'un "
"singleton désactive la macro.  Les définitions, redéfinitions ou "
"désactivations ultérieures priment."

#: ../Doc/distutils/apiref.rst:606
msgid ""
"*include_dirs*, if given, must be a list of strings, the directories to add "
"to the default include file search path for this compilation only."
msgstr ""
"*include_dirs* doit être une liste de chaînes de caractères contenant les "
"répertoires à ajouter au chemin de recherche par défaut pour cette "
"compilation uniquement."

#: ../Doc/distutils/apiref.rst:609
msgid ""
"*debug* is a boolean; if true, the compiler will be instructed to output "
"debug symbols in (or alongside) the object file(s)."
msgstr ""
"*debug* est un booléen ; si sa valeur est *vraie*, le compilateur est chargé "
"d'afficher les symboles de débogage dans (ou à côté) du ou des fichiers "
"objets."

#: ../Doc/distutils/apiref.rst:612
msgid ""
"*extra_preargs* and *extra_postargs* are implementation-dependent. On "
"platforms that have the notion of a command-line (e.g. Unix, DOS/Windows), "
"they are most likely lists of strings: extra command-line arguments to "
"prepend/append to the compiler command line.  On other platforms, consult "
"the implementation class documentation.  In any event, they are intended as "
"an escape hatch for those occasions when the abstract compiler framework "
"doesn't cut the mustard."
msgstr ""
"*extra_preargs* et *extra_postargs* dépendent de l'implémentation. Sur les "
"plates-formes qui ont une ligne de commande (par exemple Unix, DOS/Windows), "
"il s'agit très probablement de listes de chaînes de caractères. Ce sont des "
"arguments supplémentaires à ajouter avant (*preargs*) et après (*postargs*) "
"la ligne de commande du compilateur.  Sur d'autres plates-formes, consultez "
"la documentation de la classe d'implémentation. Ces paramètres sont exposés "
"pour permettre de sortir du cadre de la classe abstraite en cas de nécessité."

#: ../Doc/distutils/apiref.rst:619
msgid ""
"*depends*, if given, is a list of filenames that all targets depend on.  If "
"a source file is older than any file in depends, then the source file will "
"be recompiled.  This supports dependency tracking, but only at a coarse "
"granularity."
msgstr ""
"*depends* est une liste de noms de fichiers dont dépendent toutes les "
"cibles.  Si un fichier source est plus ancien qu'un fichier dans *depends*, "
"alors le fichier source sera recompilé.  Cela permet un suivi des "
"dépendances à un niveau macro. "

#: ../Doc/distutils/apiref.rst:624
msgid "Raises :exc:`CompileError` on failure."
msgstr "Lève :exc:`CompileError` en cas d'échec."

#: ../Doc/distutils/apiref.rst:629
msgid ""
"Link a bunch of stuff together to create a static library file. The \"bunch "
"of stuff\" consists of the list of object files supplied as *objects*, the "
"extra object files supplied to :meth:`add_link_object` and/or :meth:"
"`set_link_objects`, the libraries supplied to :meth:`add_library` and/or :"
"meth:`set_libraries`, and the libraries supplied as *libraries* (if any)."
msgstr ""
"Relie un ensemble d'éléments pour créer un fichier de bibliothèque statique. "
"L'ensemble d'éléments se compose de la liste des fichiers d'objets fournis "
"comme *objets*, des fichiers d'objets supplémentaires fournis à :meth:"
"`add_link_object` et/ou :meth:`set_link_objects`, des bibliothèques fournies "
"à :meth:`add_library` et/ou :meth:`set_libraries` et les bibliothèques "
"fournies à *libraries* (le cas échéant)."

#: ../Doc/distutils/apiref.rst:635
msgid ""
"*output_libname* should be a library name, not a filename; the filename will "
"be inferred from the library name.  *output_dir* is the directory where the "
"library file will be put."
msgstr ""
"*output_libname* doit être un nom de bibliothèque et non un nom de fichier ; "
"le nom de fichier sera déduit du nom de bibliothèque.  *output_dir* est le "
"répertoire dans lequel le fichier bibliothèque sera placé."

#: ../Doc/distutils/apiref.rst:641
msgid ""
"*debug* is a boolean; if true, debugging information will be included in the "
"library (note that on most platforms, it is the compile step where this "
"matters: the *debug* flag is included here just for consistency)."
msgstr ""
"*debug* est un booléen ; si sa valeur est *vraie*, les informations de "
"débogage seront incluses dans la bibliothèque (notez que sur la plupart des "
"plateformes, c'est à l'étape de compilation que ce paramètre est pris en "
"compte : le paramètre *debug* est inclus ici pour assurer une cohérence)."

#: ../Doc/distutils/apiref.rst:645 ../Doc/distutils/apiref.rst:687
msgid ""
"*target_lang* is the target language for which the given objects are being "
"compiled. This allows specific linkage time treatment of certain languages."
msgstr ""
"*target_lang* est le langage cible pour lequel les objets donnés sont "
"compilés. Cela permet un traitement spécifique du temps de liaison dans "
"certains langages."

#: ../Doc/distutils/apiref.rst:648
msgid "Raises :exc:`LibError` on failure."
msgstr "Lève :exc:`LibError` en cas d'échec."

#: ../Doc/distutils/apiref.rst:653
msgid ""
"Link a bunch of stuff together to create an executable or shared library "
"file."
msgstr ""
"Relie un ensemble d'éléments pour créer un fichier exécutable ou une "
"bibliothèque partagée."

#: ../Doc/distutils/apiref.rst:655
msgid ""
"The \"bunch of stuff\" consists of the list of object files supplied as "
"*objects*. *output_filename* should be a filename.  If *output_dir* is "
"supplied, *output_filename* is relative to it (i.e. *output_filename* can "
"provide directory components if needed)."
msgstr ""
"L'ensemble d'éléments se compose de la liste des fichiers objets fournis "
"comme *objets*. *output_filename* devrait être un nom de fichier.  Si "
"*output_dir* est fourni, *output_filename* lui est relatif (c'est-à-dire que "
"*output_filename* peut  être un chemin vers un fichier )."

#: ../Doc/distutils/apiref.rst:660
msgid ""
"*libraries* is a list of libraries to link against.  These are library "
"names, not filenames, since they're translated into filenames in a platform-"
"specific way (eg. *foo* becomes :file:`libfoo.a` on Unix and :file:`foo.lib` "
"on DOS/Windows).  However, they can include a directory component, which "
"means the linker will look in that specific directory rather than searching "
"all the normal locations."
msgstr ""
"*libraries* est une liste de bibliothèques avec lesquelles il est possible "
"d'établir des liens.  Ce sont des noms de bibliothèques, pas des noms de "
"fichiers, puisqu'ils sont traduits en noms de fichiers d'une manière "
"spécifique à la plate-forme (par exemple *truc* devient :file:`libtruc.a` "
"sous Unix et :file:`truc.lib` sous DOS/Windows).  Cependant, ils peuvent "
"inclure un chemin, ce qui signifie que l'éditeur de liens cherchera dans ce "
"chemin spécifique plutôt que de rechercher tous les emplacements standard."

#: ../Doc/distutils/apiref.rst:667
msgid ""
"*library_dirs*, if supplied, should be a list of directories to search for "
"libraries that were specified as bare library names (ie. no directory "
"component).  These are on top of the system default and those supplied to :"
"meth:`add_library_dir` and/or :meth:`set_library_dirs`.  "
"*runtime_library_dirs* is a list of directories that will be embedded into "
"the shared library and used to search for other shared libraries that \\*it"
"\\* depends on at run-time.  (This may only be relevant on Unix.)"
msgstr ""
"*library_dirs*, s'il est fourni, doit être une liste de répertoires à "
"rechercher pour les bibliothèques qui ont été spécifiées comme des "
"bibliothèques pures (c'est-à-dire sans aucun répertoire).  Celles-ci "
"s'ajoutent aux valeurs par défaut du système et à celles fournies à :meth:"
"`add_library_dir` et/ou :meth:`set_library_dirs`.  *runtime_library_dirs* "
"est une liste de répertoires qui seront intégrés dans la bibliothèque "
"partagée et utilisés pour rechercher d'autres bibliothèques partagées dont "
"elle dépend à l'exécution.  (Ceci est probablement valable uniquement sous "
"UNIX.)"

#: ../Doc/distutils/apiref.rst:675
msgid ""
"*export_symbols* is a list of symbols that the shared library will export. "
"(This appears to be relevant only on Windows.)"
msgstr ""
"*export_symbols* est une liste de symboles que la bibliothèque partagée va "
"exporter. (Ceci est probablement valable uniquement sous Window.)"

#: ../Doc/distutils/apiref.rst:678
msgid ""
"*debug* is as for :meth:`compile` and :meth:`create_static_lib`,  with the "
"slight distinction that it actually matters on most platforms (as opposed "
"to :meth:`create_static_lib`, which includes a *debug* flag mostly for "
"form's sake)."
msgstr ""
"*debug* s'utilise comme pour :meth:`compile` et :meth:`create_static_lib`, "
"avec la nuance qu'elle a ici une importance sur la plupart des plateformes "
"(par opposition à :meth:`create_static_lib` qui inclut une option *debug* "
"pour se conformer à l'interface)."

#: ../Doc/distutils/apiref.rst:683
msgid ""
"*extra_preargs* and *extra_postargs* are as for :meth:`compile`  (except of "
"course that they supply command-line arguments for the particular linker "
"being used)."
msgstr ""
"*extra_preargs* et *extra_postargs* s'utilisent comme pour :meth:`compile` "
"(sauf bien sûr qu'ils fournissent des arguments à la ligne de commande pour "
"l'éditeur de liens spécifique utilisé)."

#: ../Doc/distutils/apiref.rst:690
msgid "Raises :exc:`LinkError` on failure."
msgstr "Lève :exc:`LinkError` en cas d'échec."

#: ../Doc/distutils/apiref.rst:695
msgid ""
"Link an executable.  *output_progname* is the name of the file executable, "
"while *objects* are a list of object filenames to link in. Other arguments  "
"are as for the :meth:`link` method."
msgstr ""
"Lie un exécutable.  *output_progname* est le nom de l'exécutable du fichier, "
"tandis que *objects* est une liste de noms de fichiers objets à lier. Les "
"autres arguments sont les mêmes que pour la méthode :meth:`link`."

#: ../Doc/distutils/apiref.rst:702
msgid ""
"Link a shared library. *output_libname* is the name of the output  library, "
"while *objects* is a list of object filenames to link in.  Other arguments "
"are as for the :meth:`link` method."
msgstr ""
"Lie une bibliothèque partagée. *output_libname* est le nom de la "
"bibliothèque de sortie, tandis que *objects* est une liste de noms de "
"fichiers d'objets à lier.  Les autres arguments sont les mêmes que pour la "
"méthode :meth:`link`."

#: ../Doc/distutils/apiref.rst:709
msgid ""
"Link a shared object. *output_filename* is the name of the shared object "
"that will be created, while *objects* is a list of object filenames  to link "
"in. Other arguments are as for the :meth:`link` method."
msgstr ""
"Lie un objet partagé. *output_filename* est le nom de l'objet partagé qui "
"sera créé, tandis que *objects* est une liste de noms de fichiers d'objets à "
"lier. Les autres arguments sont les mêmes que pour la méthode :meth:`link`."

#: ../Doc/distutils/apiref.rst:716
msgid ""
"Preprocess a single C/C++ source file, named in *source*. Output will be "
"written to file named *output_file*, or *stdout* if *output_file* not "
"supplied. *macros* is a list of macro definitions as for :meth:`compile`, "
"which will augment the macros set with :meth:`define_macro` and :meth:"
"`undefine_macro`. *include_dirs* is a list of directory names that will be "
"added to the  default list, in the same way as :meth:`add_include_dir`."
msgstr ""
"Prétraitement d'un seul fichier source C/C++, désigné dans *source*. La "
"sortie du traitement est écrite dans un fichier nommé *output_file*, ou dans "
"*stdout* si *output_file* n'est pas fourni. *macros* est une liste de "
"définitions de macros comme pour :meth:`compile`, qui vont s'ajouter aux "
"macros définies avec :meth:`define_macro` et :meth:`undefine_macro`. "
"*include_dirs* est une liste de noms de répertoires qui seront ajoutés à la "
"liste par défaut, de la même manière que :meth:`add_include_dir`."

#: ../Doc/distutils/apiref.rst:723
msgid "Raises :exc:`PreprocessError` on failure."
msgstr "Lève  :exc:`PreprocessError` en cas d'échec."

#: ../Doc/distutils/apiref.rst:725
msgid ""
"The following utility methods are defined by the :class:`CCompiler` class, "
"for use by the various concrete subclasses."
msgstr ""
"Les méthodes utilitaires suivantes sont définies par la classe :class:"
"`CCompiler`, à l'usage des différentes sous-classes concrètes."

#: ../Doc/distutils/apiref.rst:731
msgid ""
"Returns the filename of the executable for the given *basename*.  Typically "
"for non-Windows platforms this is the same as the basename,  while Windows "
"will get a :file:`.exe` added."
msgstr ""
"Renvoie le nom de fichier de l'exécutable pour un  *nom de base* donné.  "
"Généralement, pour les plates-formes non Windows, c'est le même nom que le "
"nom de base, tandis que sur Windows l'extension :file:`.exe` sera ajouté."

#: ../Doc/distutils/apiref.rst:738
msgid ""
"Returns the filename for the given library name on the current platform. On "
"Unix a library with *lib_type* of ``'static'`` will typically  be of the "
"form :file:`liblibname.a`, while a *lib_type* of ``'dynamic'``  will be of "
"the form :file:`liblibname.so`."
msgstr ""
"Renvoie le nom de fichier pour le nom de bibliothèque donné sur la plate-"
"forme actuelle. Sous Unix, une bibliothèque avec un *lib_type* de type "
"``static`` sera généralement de la forme :file:`liblibname.a`, tandis qu'un "
"*lib_type* de type ``dynamic`` sera de la forme :file:`liblibname.so`."

#: ../Doc/distutils/apiref.rst:746
msgid ""
"Returns the name of the object files for the given source files. "
"*source_filenames* should be a list of filenames."
msgstr ""
"Renvoie le nom des fichiers objets pour les fichiers sources donnés. "
"*source_filenames* doit être une liste de noms de fichiers."

#: ../Doc/distutils/apiref.rst:752
msgid ""
"Returns the name of a shared object file for the given file name *basename*."
msgstr ""
"Renvoie le nom d'un fichier objet partagé pour le nom de fichier *basename*."

#: ../Doc/distutils/apiref.rst:757
msgid ""
"Invokes :func:`distutils.util.execute`. This method invokes a  Python "
"function *func* with the given arguments *args*, after  logging and taking "
"into account the *dry_run* flag."
msgstr ""
"Invoque :func:`distutils.util.execute`. Cette méthode invoque une fonction "
"Python *func* avec les arguments *args* , après journalisation et prise en "
"compte de l'option *dry_run*."

#: ../Doc/distutils/apiref.rst:764
msgid ""
"Invokes :func:`distutils.util.spawn`. This invokes an external  process to "
"run the given command."
msgstr ""
"Invoque :func:`distutils.util.spawn`.  Invoque un processus externe pour "
"exécuter la commande donnée."

#: ../Doc/distutils/apiref.rst:770
msgid ""
"Invokes :func:`distutils.dir_util.mkpath`. This creates a directory  and any "
"missing ancestor directories."
msgstr ""
"Invoque :func:`distutils.dir_util.mkpath`. Crée un répertoire et tous les "
"répertoires parents manquants."

#: ../Doc/distutils/apiref.rst:776
msgid "Invokes :meth:`distutils.file_util.move_file`. Renames *src* to  *dst*."
msgstr "Invoque :meth:`distutils.file_util.move_file`. Renomme *src* en *dst*."

#: ../Doc/distutils/apiref.rst:781
msgid "Write a message using :func:`distutils.log.debug`."
msgstr "Écrit un message en utilisant :func:`distutils.log.debug`."

#: ../Doc/distutils/apiref.rst:786
msgid "Write a warning message *msg* to standard error."
msgstr ""
"Écris un message d'avertissement *msg* dans la sortie d'erreur standard."

#: ../Doc/distutils/apiref.rst:791
msgid ""
"If the *debug* flag is set on this :class:`CCompiler` instance, print  *msg* "
"to standard output, otherwise do nothing."
msgstr ""
"Si l'option *debug* est activée pour cette instance de :class:`CCompiler`, "
"affiche *msg* sur la sortie standard, sinon  rien ne s'affiche."

#: ../Doc/distutils/apiref.rst:803
msgid ":mod:`distutils.unixccompiler` --- Unix C Compiler"
msgstr ":mod:`distutils.unixccompiler` — Compilateur C Unix"

#: ../Doc/distutils/apiref.rst:809
msgid ""
"This module provides the :class:`UnixCCompiler` class, a subclass of :class:"
"`CCompiler` that handles the typical Unix-style command-line  C compiler:"
msgstr ""
"Ce module fournit la classe :class:`UnixCCompiler`, une sous-classe de la "
"classe :class:`CCompiler` qui gère les compilateurs C ayant une interface en "
"ligne de commande conforme au standard Unix :"

#: ../Doc/distutils/apiref.rst:812
msgid "macros defined with :option:`!-Dname[=value]`"
msgstr "macros définies avec l'option :option:`!-Dname[=value]`."

#: ../Doc/distutils/apiref.rst:814
msgid "macros undefined with :option:`!-Uname`"
msgstr "macros désaffectées avec :option:`!-Uname`."

#: ../Doc/distutils/apiref.rst:816
msgid "include search directories specified with :option:`!-Idir`"
msgstr ""
"inclut les répertoires de recherche spécifiés avec l'option :option:`!-Idir`."

#: ../Doc/distutils/apiref.rst:818
msgid "libraries specified with :option:`!-llib`"
msgstr "bibliothèques spécifiées avec l'option :option:`!-llib`"

#: ../Doc/distutils/apiref.rst:820
msgid "library search directories specified with :option:`!-Ldir`"
msgstr ""
"répertoires de recherche des bibliothèques définis avec l'option :option:`!-"
"Ldir`."

#: ../Doc/distutils/apiref.rst:822
msgid ""
"compile handled by :program:`cc` (or similar) executable with :option:`!-c` "
"option: compiles :file:`.c` to :file:`.o`"
msgstr ""
"compilation gérée par :program:`cc` (ou similaire) exécutable avec l'option :"
"option:`!-c` compile :file:`.c` vers :file:`.o`."

#: ../Doc/distutils/apiref.rst:825
msgid ""
"link static library handled by :program:`ar` command (possibly with :program:"
"`ranlib`)"
msgstr ""
"édition de liens pour une bibliothèque statique gérée par le programme en "
"ligne de commande :program:`ar` (éventuellement avec le programme :program:"
"`ranlib`)."

#: ../Doc/distutils/apiref.rst:828
msgid "link shared library handled by :program:`cc` :option:`!-shared`"
msgstr ""
"édition de liens pour une bibliothèque gérée par :program:`cc` :option:`!-"
"shared`."

#: ../Doc/distutils/apiref.rst:832
msgid ":mod:`distutils.msvccompiler` --- Microsoft Compiler"
msgstr ":mod:`distutils.msvccompiler` — Compilateur Microsoft"

#: ../Doc/distutils/apiref.rst:839
msgid ""
"This module provides :class:`MSVCCompiler`, an implementation of the "
"abstract :class:`CCompiler` class for Microsoft Visual Studio. Typically, "
"extension modules need to be compiled with the same compiler that was used "
"to compile Python. For Python 2.3 and earlier, the compiler was Visual "
"Studio 6. For Python 2.4 and 2.5, the compiler is Visual Studio .NET 2003."
msgstr ""
"Ce module fournit :class:`MSVCCompiler`, une implémentation de la classe "
"abstraite :class:`CCompiler` pour Microsoft Visual Studio. Généralement, les "
"modules d'extension doivent être compilés avec le même compilateur que celui "
"utilisé pour compiler Python. Pour Python 2.3 et les versions antérieures, "
"le compilateur était Visual Studio 6. Pour Python 2.4 et 2.5, le compilateur "
"est Visual Studio .NET 2003."

#: ../Doc/distutils/apiref.rst:845
msgid ""
":class:`MSVCCompiler` will normally choose the right compiler, linker etc. "
"on its own. To override this choice, the environment variables "
"*DISTUTILS_USE_SDK* and *MSSdk* must be both set. *MSSdk* indicates that the "
"current environment has been setup by the SDK's ``SetEnv.Cmd`` script, or "
"that the environment variables had been registered when the SDK was "
"installed; *DISTUTILS_USE_SDK* indicates that the distutils user has made an "
"explicit choice to override the compiler selection by :class:`MSVCCompiler`."
msgstr ""
"La classe :class:`MSVCCompiler` sélectionnera normalement le bon "
"compilateur, éditeur de liens, etc. Pour remplacer ces choix, les variables "
"d'environnement *DISTUTILS_USE_SDK* et *MSSdk* doivent être toutes les deux "
"définies. *MSSdk* indique que l'environnement courant a été configuré par le "
"script ``SetEnv.Cmd`` du kit de développement logiciel (*SDK*), ou que les "
"variables d'environnement ont été enregistrées lorsque le kit a été "
"installé ; *DISTUTILS_USE_SDK* indique que l'utilisateur de *distutils* a "
"choisi explicitement de remplacer le compilateur utilisé par :class:"
"`MSVCCompiler`."

#: ../Doc/distutils/apiref.rst:855
msgid ":mod:`distutils.bcppcompiler` --- Borland Compiler"
msgstr ":mod:`distutils.bcppcompiler` — Compilateur Borland"

#: ../Doc/distutils/apiref.rst:860
msgid ""
"This module provides :class:`BorlandCCompiler`, a subclass of the abstract :"
"class:`CCompiler` class for the Borland C++ compiler."
msgstr ""
"Ce module fournit :class:`BorlandCCompiler`, une sous-classe de la classe "
"abstraite :class:`CCompiler` classe pour le compilateur Borland C++."

#: ../Doc/distutils/apiref.rst:865
msgid ":mod:`distutils.cygwincompiler` --- Cygwin Compiler"
msgstr ":mod:`distutils.cygwincompiler` — Compilateur Cygwin"

#: ../Doc/distutils/apiref.rst:870
msgid ""
"This module provides the :class:`CygwinCCompiler` class, a subclass of :"
"class:`UnixCCompiler` that handles the Cygwin port of the GNU C compiler to "
"Windows.  It also contains the Mingw32CCompiler class which handles the "
"mingw32 port of GCC (same as cygwin in no-cygwin mode)."
msgstr ""
"Ce module fournit la classe :class:`CygwinCCompiler`, une sous-classe de la "
"classe :class:`UnixCCompiler` qui gère *Cygwin*, le portage du compilateur "
"GNU C sur Windows.  Il contient également la classe Mingw32CCompiler qui "
"gère le portage *mingw32* de GCC (comme *cygwin* en mode *no-cygwin*)."

#: ../Doc/distutils/apiref.rst:877
msgid ":mod:`distutils.archive_util` ---  Archiving utilities"
msgstr ":mod:`distutils.archive_util` — Utilitaires d'archivage"

#: ../Doc/distutils/apiref.rst:883
msgid ""
"This module provides a few functions for creating archive files, such as "
"tarballs or zipfiles."
msgstr ""
"Ce module fournit quelques fonctions pour créer des fichiers d'archive, tels "
"que des archives aux formats *tarballs* ou *zipfiles*."

#: ../Doc/distutils/apiref.rst:889
msgid ""
"Create an archive file (eg. ``zip`` or ``tar``).  *base_name*  is the name "
"of the file to create, minus any format-specific extension;  *format* is the "
"archive format: one of ``zip``, ``tar``, ``gztar``, ``bztar``, ``xztar``, or "
"``ztar``. *root_dir* is a directory that will be the root directory of the "
"archive; ie. we typically ``chdir`` into *root_dir* before  creating the "
"archive.  *base_dir* is the directory where we start  archiving from; ie. "
"*base_dir* will be the common prefix of all files and directories in the "
"archive.  *root_dir* and *base_dir* both default to the current directory. "
"Returns the name of the archive file."
msgstr ""
"Crée un fichier d'archive (par exemple ``zip`` ou ``tar``).  *base_name* est "
"le nom du fichier à créer, sans extension spécifique indiquant le format. "
"*format* est le format d'archive : un parmi ``zip``, ``tar``, ``gztar``, "
"``bztar``, ``xztar``, ``xztar``, ou ``ztar``. *root_dir* est un répertoire "
"qui sera le répertoire racine de l'archive ; c'est-à-dire que le programme "
"se positionne dans *root_dir* avant de créer l'archive.  *base_dir* est le "
"répertoire à partir duquel se lance l'archivage ; par exemple, *base_dir* "
"est le préfixe commun à tous les fichiers et répertoires de l'archive.  "
"*root_dir* et *base_dir* sont tous deux par défaut dans le répertoire "
"courant. Renvoie le nom du fichier archive."

#: ../Doc/distutils/apiref.rst:899
msgid "Added support for the ``xztar`` format."
msgstr "Ajout du support des fichiers ``xztar``."

#: ../Doc/distutils/apiref.rst:905
msgid ""
"'Create an (optional compressed) archive as a tar file from all files in and "
"under *base_dir*. *compress* must be ``'gzip'`` (the default), ``'bzip2'``, "
"``'xz'``, ``'compress'``, or ``None``.  For the ``'compress'`` method the "
"compression utility named by :program:`compress` must be on the default "
"program search path, so this is probably Unix-specific.  The output tar file "
"will be named :file:`base_dir.tar`, possibly plus the appropriate "
"compression extension (``.gz``, ``.bz2``, ``.xz`` or ``.Z``).  Return the "
"output filename."
msgstr ""
"Crée une archive (compressée en option) sous forme de fichier au format "
"*tar* à partir de tous les fichiers dans et sous *base_dir*. *compress* doit "
"être ``'gzip'`` (par défaut), ``'bzip2'``, ``'xz'``, ``'compress'`` ou "
"``None``.  Pour la méthode ``'compress'`` l'utilitaire de compression nommé "
"par :program:`compress` doit être sur le chemin de recherche par défaut, "
"donc c'est sans doute spécifique à Unix.  Le fichier *tar* de sortie sera "
"nommé :file:`base_dir.tar`, avec l'extension de compression appropriée (``."
"gz``, ``.bz2``, ``.xz`` ou ``.Z``).  Renvoie le nom du fichier de sortie."

#: ../Doc/distutils/apiref.rst:914
msgid "Added support for the ``xz`` compression."
msgstr "Ajout du support de la compression ``xz``."

#: ../Doc/distutils/apiref.rst:920
msgid ""
"Create a zip file from all files in and under *base_dir*.  The output zip "
"file will be named *base_name* + :file:`.zip`.  Uses either the  :mod:"
"`zipfile` Python module (if available) or the InfoZIP :file:`zip`  utility "
"(if installed and found on the default search path).  If neither  tool is "
"available, raises :exc:`DistutilsExecError`.   Returns the name of the "
"output zip file."
msgstr ""
"Crée un fichier zip à partir de tous les fichiers dans et sous *base_dir*.  "
"Le fichier zip de sortie est nommé *base_name* + :file:`.zip`.  Utilise soit "
"le module Python :mod:`zipfile` (si disponible) ou l'utilitaire InfoZIP :"
"file:`zip` (s'il est installé et trouvé sur le chemin de recherche par "
"défaut).  Si aucun des deux outils n'est disponible, lève :exc:"
"`DistutilsExecError`.   Renvoie le nom du fichier zip de sortie."

#: ../Doc/distutils/apiref.rst:928
msgid ":mod:`distutils.dep_util` --- Dependency checking"
msgstr ":mod:`distutils.dep_util` — Vérification des dépendances"

#: ../Doc/distutils/apiref.rst:934
msgid ""
"This module provides functions for performing simple, timestamp-based "
"dependency of files and groups of files; also, functions based entirely  on "
"such timestamp dependency analysis."
msgstr ""
"Ce module fournit des fonctions permettant d'effectuer des tests de "
"dépendance simples, basés sur les horodatages de fichiers et de groupes de "
"fichiers, ainsi que des fonctionnalités entièrement basées sur ces analyses "
"de dépendance par rapport aux horodatages."

#: ../Doc/distutils/apiref.rst:941
msgid ""
"Return true if *source* exists and is more recently modified than *target*, "
"or if *source* exists and *target* doesn't. Return false if both exist and "
"*target* is the same age or newer  than *source*. Raise :exc:"
"`DistutilsFileError` if *source* does not exist."
msgstr ""
"Renvoie la valeur *true* si *source* existe et a été modifiée plus récemment "
"que *target*, ou si *source* existe et *target* n'existe pas. Renvoie la "
"valeur *false* si les deux existent et que *target* est aussi ou plus récent "
"que *source*. Lève :exc:`DistutilsFileError` si *source* n'existe pas."

#: ../Doc/distutils/apiref.rst:949
msgid ""
"Walk two filename lists in parallel, testing if each source is newer than "
"its corresponding target.  Return a pair of lists (*sources*, *targets*) "
"where source is newer than target, according to the semantics of :func:"
"`newer`."
msgstr ""
"Parcourt en parallèle deux listes de noms de fichiers, en vérifiant si "
"chaque source est plus récente que sa cible correspondante.  Renvoie une "
"paire de listes (*sources*, *cibles*) où la source est plus récente que la "
"cible, selon la sémantique de :func:`newer`."

#: ../Doc/distutils/apiref.rst:958
msgid ""
"Return true if *target* is out-of-date with respect to any file listed in "
"*sources*.  In other words, if *target* exists and is newer than every file "
"in *sources*, return false; otherwise return true. *missing* controls what "
"we do when a source file is missing; the default (``'error'``) is to blow up "
"with an :exc:`OSError` from  inside :func:`os.stat`; if it is ``'ignore'``, "
"we silently drop any missing source files; if it is ``'newer'``, any missing "
"source files make us assume that *target* is out-of-date (this is handy in "
"\"dry-run\" mode: it'll make you pretend to carry out commands that wouldn't "
"work because inputs are missing, but that doesn't matter because you're not "
"actually going to run the commands)."
msgstr ""
"Renvoie la valeur *True* si *target* a une date dépassée par rapport à un "
"fichier figurant dans *sources* En d'autres termes, si *target* existe et "
"est plus récente que chaque fichier dans *sources*, renvoie la valeur "
"*False* ; sinon renvoie la valeur *True*. *missing* contrôle ce qui se passe "
"lorsqu'un fichier source est manquant ; la valeur par défaut (``'error'``) "
"est de lever une exception :exc:`OSError` à l'intérieur de :func:`os.stat` ; "
"si *missing* vaut ``'ignore'``,tout fichier source manquant est ignoré. Si "
"*missing* vaut ``'newer'``, tout fichier source manquant indique que "
"*target* n'est plus à jour (ce qui est utile en mode *dry-run* : cela permet "
"d'exécuter des commandes qui ne fonctionneraient pas parce que des entrées "
"sont manquantes sans les exécuter réellement)."

#: ../Doc/distutils/apiref.rst:971
msgid ":mod:`distutils.dir_util` --- Directory tree operations"
msgstr ""
":mod:`distutils.dir_util` --- Opérations sur l'arborescence des répertoires"

#: ../Doc/distutils/apiref.rst:977
msgid ""
"This module provides functions for operating on directories and trees of "
"directories."
msgstr ""
"Ce module fournit des fonctions pour travailler sur des répertoires et des "
"arborescences de répertoires."

#: ../Doc/distutils/apiref.rst:983
msgid ""
"Create a directory and any missing ancestor directories.  If the directory "
"already exists (or if *name* is the empty string, which means the current "
"directory, which of course exists), then do nothing.  Raise :exc:"
"`DistutilsFileError` if unable to create some directory along the way (eg. "
"some sub-path exists, but is a file rather than a directory).  If *verbose* "
"is true, print a one-line summary of each mkdir to stdout.  Return the list "
"of directories actually created."
msgstr ""
"Crée un répertoire et tous les répertoires parents manquants.  Si le "
"répertoire existe déjà (ou si *name* est la chaîne vide, c'est-à-dire le "
"répertoire courant, qui existe bien sûr), alors ne fait rien.  Lève :exc:"
"`DistutilsFileError` s'il n'est pas possible de créer un répertoire en cours "
"de route (par exemple, un sous-chemin existe, mais est un fichier plutôt "
"qu'un répertoire).  Si *verbose* est vrai, affiche un résumé d'une ligne de "
"chaque *mkdir* vers *stdout*.  Renvoie la liste des répertoires réellement "
"créés."

#: ../Doc/distutils/apiref.rst:994
msgid ""
"Create all the empty directories under *base_dir* needed to put *files* "
"there. *base_dir* is just the name of a directory which doesn't necessarily "
"exist yet; *files* is a list of filenames to be interpreted relative to "
"*base_dir*. *base_dir* + the directory portion of every file in *files* will "
"be created if it doesn't already exist.  *mode*, *verbose* and *dry_run* "
"flags  are as for :func:`mkpath`."
msgstr ""
"Crée tous les répertoires vides sous *base_dir* nécessaires pour placer "
"*files*. *base_dir* est le nom d'un répertoire qui n'existe pas encore "
"nécessairement ; *files* est une liste de noms de fichiers relatifs à "
"*base_dir*. *base_dir* + la partie répertoire de chaque fichier dans *files* "
"est créée si elle n'existe pas déjà.  Les options *mode*, *verbose* et "
"*dry_run* sont les mêmes que pour :func:`mkpath`."

#: ../Doc/distutils/apiref.rst:1004
msgid ""
"Copy an entire directory tree *src* to a new location *dst*.  Both *src* and "
"*dst* must be directory names.  If *src* is not a directory, raise :exc:"
"`DistutilsFileError`.  If *dst* does  not exist, it is created with :func:"
"`mkpath`.  The end result of the  copy is that every file in *src* is copied "
"to *dst*, and  directories under *src* are recursively copied to *dst*. "
"Return the list of files that were copied or might have been copied, using "
"their output name. The return value is unaffected by *update* or *dry_run*: "
"it is simply the list of all files under *src*, with the names changed to be "
"under *dst*."
msgstr ""
"Copie une arborescence de répertoires entière *src* vers un nouvel "
"emplacement *dst*.  *src* et *dst* doivent tous deux être des noms de "
"répertoire.  Si *src* n'est pas un répertoire, lève :exc:"
"`DistutilsFileError`.  Si *dst* n'existe pas, il est créé avec :func:"
"`mkpath`.  Le résultat final de la copie est que chaque fichier dans *src* "
"est copié dans *dst*, et les répertoires sous *src* sont récursivement "
"copiés dans *dst*. Renvoie la liste des fichiers qui ont été copiés ou qui "
"auraient pu l'être, en utilisant leur nom de sortie. La valeur renvoyée "
"n'est pas affectée par *update* ou *dry_run* : c'est tout simplement la "
"liste de tous les fichiers sous *src*, avec les noms modifiés pour être sous "
"*dst*."

#: ../Doc/distutils/apiref.rst:1014
msgid ""
"*preserve_mode* and *preserve_times* are the same as for :func:`distutils."
"file_util.copy_file`; note that they only apply to regular files, not to "
"directories.  If *preserve_symlinks* is true, symlinks will be copied as "
"symlinks (on platforms that support them!); otherwise (the default), the "
"destination of the symlink will be copied.  *update* and *verbose* are the "
"same as for :func:`copy_file`."
msgstr ""
"Les modes *preserve_mode* et *preserve_times* sont les mêmes que pour :func:"
"`distutils.file_util.copy_file` ; il faut savoir que cela ne concerne que "
"les fichiers réguliers, et non les dossiers.  Si *preserve_symlinks* est "
"vrai, les liens symboliques seront copiés en tant que liens symboliques (sur "
"les plateformes qui les gèrent !); sinon (par défaut), la destination du "
"lien sera copiée.  *update* et *verbose* sont les mêmes que pour :func:"
"`copy_file`."

#: ../Doc/distutils/apiref.rst:1022
msgid ""
"Files in *src* that begin with :file:`.nfs` are skipped (more information on "
"these files is available in answer D2 of the `NFS FAQ page <http://nfs."
"sourceforge.net/#section_d>`_)."
msgstr ""
"Les fichiers dans *src* qui commencent par :file:`.nfs` sont ignorés (plus "
"d'informations sur ces fichiers sont disponibles dans la réponse *D2* de la "
"page `NFS FAQ page <http://nfs.sourceforge.net/#section_d>`_)."

#: ../Doc/distutils/apiref.rst:1026
msgid "NFS files are ignored."
msgstr "Les fichiers NFS sont ignorés."

#: ../Doc/distutils/apiref.rst:1031
msgid ""
"Recursively remove *directory* and all files and directories underneath it. "
"Any errors are ignored (apart from being reported to ``sys.stdout`` if "
"*verbose* is true)."
msgstr ""
"Supprime récursivement *directory* et tous les fichiers et répertoires en "
"dessous. Toutes les erreurs sont ignorées (sauf si *verbose* est vrai, elles "
"sont affichées sur ``sys.stdout``)."

#: ../Doc/distutils/apiref.rst:1037
msgid ":mod:`distutils.file_util` --- Single file operations"
msgstr ":mod:`distutils.file_util` — Traitements mono-fichier"

#: ../Doc/distutils/apiref.rst:1043
msgid ""
"This module contains some utility functions for operating on individual "
"files."
msgstr ""
"Ce module contient quelques fonctions de service pour travailler sur des "
"fichiers individuels."

#: ../Doc/distutils/apiref.rst:1048
msgid ""
"Copy file *src* to *dst*. If *dst* is a directory, then *src* is copied "
"there with the same name; otherwise, it must be a filename. (If the file "
"exists, it will be ruthlessly clobbered.) If *preserve_mode* is true (the "
"default), the file's mode (type and permission bits, or whatever is "
"analogous on the current platform) is copied. If *preserve_times* is true "
"(the default), the last-modified and last-access times are copied as well. "
"If *update* is true, *src* will only be copied if *dst* does not exist, or "
"if *dst* does exist but is older than *src*."
msgstr ""
"Copie le fichier *src* dans *dst*. Si *dst* est un répertoire, alors *src* y "
"est copié avec le même nom ; sinon, il faut que ce soit un nom de fichier. "
"Si *preserve_mode* est vrai (par défaut), le mode du fichier (son type et "
"ses bits de permission, ou ce qui est analogue sur la plate-forme actuelle) "
"sont copiés. Si *preserve_times* est vrai (par défaut), les horodatages de "
"la dernière modification et du dernier accès sont également copiés. Si "
"*update* est vrai, *src* ne peut être copié que si *dst* n'existe pas, ou si "
"*dst* existe mais est plus ancien que *src*."

#: ../Doc/distutils/apiref.rst:1057
msgid ""
"*link* allows you to make hard links (using :func:`os.link`) or symbolic "
"links (using :func:`os.symlink`) instead of copying: set it to ``'hard'`` or "
"``'sym'``; if it is ``None`` (the default), files are copied. Don't set "
"*link* on systems that don't support it: :func:`copy_file` doesn't check if "
"hard or symbolic linking is available.  It uses :func:`_copy_file_contents` "
"to copy file contents."
msgstr ""
"*link* permets de créer des liens physiques (en utilisant :func:`os.link`) "
"ou symboliques (en utilisant :func:`os.symlink`) au lieu de les copier : "
"paramétrez la valeur a ``'hard'`` ou ``'sym'`` ; si elle vaut ``None`` (par "
"défaut), les fichiers sont copiés. Ne définissez pas *link* sur les systèmes "
"qui ne les gèrent pas : :func:`copy_file` ne vérifie pas si des liens "
"symboliques ou physiques sont disponibles.  La fonction :func:"
"`_copy_file_contents` est utilisée pour copier le contenu des fichiers."

#: ../Doc/distutils/apiref.rst:1064
msgid ""
"Return a tuple ``(dest_name, copied)``: *dest_name* is the actual  name of "
"the output file, and *copied* is true if the file was copied  (or would have "
"been copied, if *dry_run* true)."
msgstr ""
"Renvoie un couple ``(dest_name, copied)`` : *dest_name* est le nom réel du "
"fichier de sortie, et *copied* est vrai si le fichier a été copié (ou aurait "
"été copié, si *dry_run* est vrai)."

#: ../Doc/distutils/apiref.rst:1078
msgid ""
"Move file *src* to *dst*. If *dst* is a directory, the file will be moved "
"into it with the same name; otherwise, *src* is just renamed to *dst*.  "
"Returns the new full name of the file."
msgstr ""
"Déplace le fichier *src* vers *dst*. Si *dst* est un répertoire, le fichier "
"y est déplacé avec le même nom ; sinon, *src* est simplement renommé *dst*.  "
"Renvoie le nouveau nom complet du fichier."

#: ../Doc/distutils/apiref.rst:1084
msgid ""
"Handles cross-device moves on Unix using :func:`copy_file`.  What about "
"other systems?"
msgstr ""
"Gère les déplacements inter-périphériques sous Unix en utilisant :func:"
"`copy_file`. Qu'en est-il sur les autres systèmes ?"

#: ../Doc/distutils/apiref.rst:1090
msgid ""
"Create a file called *filename* and write *contents* (a sequence of strings "
"without line terminators) to it."
msgstr ""
"Crée un fichier appelé *filename* et y écrit *contents* (une séquence de "
"chaînes sans terminaison de ligne)."

#: ../Doc/distutils/apiref.rst:1095
msgid ":mod:`distutils.util` --- Miscellaneous other utility functions"
msgstr ":mod:`distutils.util` — Autres fonctions de service"

#: ../Doc/distutils/apiref.rst:1101
msgid ""
"This module contains other assorted bits and pieces that don't fit into  any "
"other utility module."
msgstr ""
"Ce module contient d'autres éléments qui ne correspondent à aucun autre "
"module de service."

#: ../Doc/distutils/apiref.rst:1107
msgid ""
"Return a string that identifies the current platform.  This is used mainly "
"to distinguish platform-specific build directories and platform-specific "
"built distributions.  Typically includes the OS name and version and the "
"architecture (as supplied by 'os.uname()'), although the exact information "
"included depends on the OS; e.g., on Linux, the kernel version isn't "
"particularly important."
msgstr ""
"Renvoie une chaîne qui identifie la plate-forme courante.  Ceci est utilisé "
"pour distinguer les répertoires de compilation spécifiques aux plates-formes "
"et les distributions construites spécifiques aux plates-formes.  Cette "
"chaîne inclut en règle générale le nom et la version de l'OS et "
"l'architecture (tels que fournis par la fonction ``os.uname()`` ). Bien que "
"l'information exacte dépend de l'OS, par exemple, sous Linux, la version "
"noyau ne joue pas un grand rôle."

#: ../Doc/distutils/apiref.rst:1114
msgid "Examples of returned values:"
msgstr "Exemples de valeurs renvoyées :"

#: ../Doc/distutils/apiref.rst:1116
msgid "``linux-i586``"
msgstr "``linux-i586``"

#: ../Doc/distutils/apiref.rst:1117
msgid "``linux-alpha``"
msgstr "``linux-alpha``"

#: ../Doc/distutils/apiref.rst:1118
msgid "``solaris-2.6-sun4u``"
msgstr "``solaris-2.6-sun4u``"

#: ../Doc/distutils/apiref.rst:1120
msgid "For non-POSIX platforms, currently just returns ``sys.platform``."
msgstr ""
"Pour les plates-formes qui ne sont pas POSIX, renvoie simplement ``sys."
"platform``."

#: ../Doc/distutils/apiref.rst:1122
msgid ""
"For Mac OS X systems the OS version reflects the minimal version on which "
"binaries will run (that is, the value of ``MACOSX_DEPLOYMENT_TARGET`` during "
"the build of Python), not the OS version of the current system."
msgstr ""
"Pour les systèmes Mac OS X, la version du système d'exploitation correspond "
"à la version minimale sur laquelle les binaires pourront être exécutés "
"(c'est-à-dire la valeur de ``MACOSX_DEPLOYMENT_TARGET`` pendant la "
"compilation de Python), et non la version du système actuel."

#: ../Doc/distutils/apiref.rst:1126
msgid ""
"For universal binary builds on Mac OS X the architecture value reflects the "
"universal binary status instead of the architecture of the current "
"processor. For 32-bit universal binaries the architecture is ``fat``, for 64-"
"bit universal binaries the architecture is ``fat64``, and for 4-way "
"universal binaries the architecture is ``universal``. Starting from Python "
"2.7 and Python 3.2 the architecture ``fat3`` is used for a 3-way universal "
"build (ppc, i386, x86_64) and ``intel`` is used for a universal build with "
"the i386 and x86_64 architectures"
msgstr ""
"Pour les binaires universels construits sur Mac OS X, la valeur de "
"l'architecture reflète l'état du binaire universel au lieu de celle de "
"l'architecture du processeur en cours. Pour les binaires universels 32 bits, "
"l'architecture est ``fat``,  pour les binaires universels 64 bits, "
"l'architecture est ``fat64``, et pour les binaires universels 4 voies, "
"l'architecture est ``universelle``. A partir de Python 2.7 et Python 3.2, "
"l'architecture ``fat3`` est utilisée pour une compilation universelle à 3 "
"voies (*ppc*, *i386*, *x86_64*) et ``intel`` est utilisée pour une "
"compilation universelle avec les architectures *i386* et *x86_64*"

#: ../Doc/distutils/apiref.rst:1135
msgid "Examples of returned values on Mac OS X:"
msgstr "Exemples de valeurs renvoyées sous Mac OS X :"

#: ../Doc/distutils/apiref.rst:1137
msgid "``macosx-10.3-ppc``"
msgstr "``macosx-10.3-ppc``"

#: ../Doc/distutils/apiref.rst:1139
msgid "``macosx-10.3-fat``"
msgstr "``macosx-10.3-fat``"

#: ../Doc/distutils/apiref.rst:1141
msgid "``macosx-10.5-universal``"
msgstr "``macosx-10.5-universal``"

#: ../Doc/distutils/apiref.rst:1143
msgid "``macosx-10.6-intel``"
msgstr "``macosx-10.6-intel``"

#: ../Doc/distutils/apiref.rst:1148
msgid ""
"Return 'pathname' as a name that will work on the native filesystem, i.e. "
"split it on '/' and put it back together again using the current directory "
"separator. Needed because filenames in the setup script are always supplied "
"in Unix style, and have to be converted to the local convention before we "
"can actually use them in the filesystem.  Raises :exc:`ValueError` on non-"
"Unix-ish systems if *pathname* either  starts or ends with a slash."
msgstr ""
"Renvoie un chemin *pathname* qui fonctionne sur le système de fichiers "
"natif. Par exemple, il sépare le chemin sur */* et le recompose en utilisant "
"le séparateur de répertoires courant. Cela est nécessaire parce que les noms "
"de fichiers dans les scripts d'installations sont toujours fournis dans le "
"style Unix, et doivent être convertis dans la convention du système avant "
"d'être utilisé par le système de fichiers.  Lève :exc:`ValueError` sur les "
"systèmes non UNIX si *pathname* commence ou se termine par une barre oblique "
"(*slash* en anglais)."

#: ../Doc/distutils/apiref.rst:1158
msgid ""
"Return *pathname* with *new_root* prepended.  If *pathname* is relative, "
"this is equivalent to ``os.path.join(new_root,pathname)`` Otherwise, it "
"requires making *pathname* relative and then joining the two, which is "
"tricky on DOS/Windows."
msgstr ""
"Renvoie un chemin *pathname* préfixé avec *new_root*. Si *pathname* est "
"relatif, c`est l'équivalent de ``os.path.join(new_root,pathname)`` Sinon, il "
"faut rendre *pathname* relatif et joindre les deux, ce qui est dangereux "
"sous DOS/Windows."

#: ../Doc/distutils/apiref.rst:1165
msgid ""
"Ensure that 'os.environ' has all the environment variables we guarantee that "
"users can use in config files, command-line options, etc.  Currently this "
"includes:"
msgstr ""
"Vérifie que 'os.environ' possède toutes les variables d'environnement "
"utilisables dans les fichiers de configuration, les options en ligne de "
"commande, etc.  À l'heure actuelle, cela comprend :"

#: ../Doc/distutils/apiref.rst:1169
msgid ":envvar:`HOME` - user's home directory (Unix only)"
msgstr ""
":envvar:`HOME`. Répertoire d’accueil de l'utilisateur (Unix uniquement)"

#: ../Doc/distutils/apiref.rst:1170
msgid ""
":envvar:`PLAT` - description of the current platform, including hardware and "
"OS (see :func:`get_platform`)"
msgstr ""
":envvar:`PLAT`. Description de la plate-forme actuelle, y compris le "
"matériel et le l'OS (voir :func:`get_platform`)"

#: ../Doc/distutils/apiref.rst:1176
msgid ""
"Perform shell/Perl-style variable substitution on *s*.  Every occurrence of "
"``$`` followed by a name is considered a variable, and variable is "
"substituted by the value found in the *local_vars* dictionary, or in ``os."
"environ`` if it's not in *local_vars*. *os.environ* is first checked/"
"augmented to guarantee that it contains certain values: see :func:"
"`check_environ`.  Raise :exc:`ValueError` for any variables not found in "
"either *local_vars* or ``os.environ``."
msgstr ""
"Exécute la substitution de variable de style shell/Perl sur *s*.  Chaque "
"occurrence de ``$`` suivie d'un nom est considérée comme une variable, et la "
"variable est remplacée par la valeur trouvée dans le dictionnaire "
"*local_vars*, ou dans ``os.environ`` si elle ne se trouve pas dans "
"*local_vars*. *os.environ* est d'abord vérifié/étendu pour garantir qu'elle "
"contient certaines valeurs : voir :func:`check_environ`. Lève :exc:"
"`ValueError` pour toute variable non trouvée dans *local_vars* ou ``os."
"environ``."

#: ../Doc/distutils/apiref.rst:1183
msgid ""
"Note that this is not a fully-fledged string interpolation function. A valid "
"``$variable`` can consist only of upper and lower case letters, numbers and "
"an underscore. No { } or ( ) style quoting is available."
msgstr ""
"Remarquez qu'il ne s'agit pas d'une fonction d'interpolation de chaîne à "
"part entière. Une ``$variable`` valide ne peut être composée que de lettres "
"majuscules et minuscules, de chiffres et d'un tiret bas. Aucune syntaxe de "
"type {} ou () pour indiquer des variables n'est disponible."

#: ../Doc/distutils/apiref.rst:1190
msgid ""
"Split a string up according to Unix shell-like rules for quotes and "
"backslashes. In short: words are delimited by spaces, as long as those "
"spaces are not escaped by a backslash, or inside a quoted string. Single and "
"double quotes are equivalent, and the quote characters can be backslash-"
"escaped.  The backslash is stripped from any two-character escape sequence, "
"leaving only the escaped character.  The quote characters are stripped from "
"any quoted string.  Returns a list of words."
msgstr ""
"Sépare une chaîne de caractères selon les règles de type shell Unix pour les "
"guillemets et les barres obliques inverses. En bref : les mots sont "
"délimités par des espaces, tant que ces espaces ne sont pas échappées par "
"une barre oblique inversée, ou à l'intérieur d'une chaîne guillemets. Les "
"guillemets simples et doubles sont équivalents, et les caractères entre "
"guillemets peuvent être échappés à l'aide d'une barre oblique inversée.  La "
"barre oblique inversée est supprimée de toute séquence d'échappement à deux "
"caractères, ne laissant que le caractère échappé.  Les caractères guillemets "
"sont supprimés de toute chaîne de caractères entre guillemets.  Renvoie une "
"liste de mots."

#: ../Doc/distutils/apiref.rst:1203
msgid ""
"Perform some action that affects the outside world (for instance, writing to "
"the filesystem).  Such actions are special because they are disabled by the "
"*dry_run* flag.  This method takes  care of all that bureaucracy for you; "
"all you have to do is supply the function to call and an argument tuple for "
"it (to embody the \"external action\" being performed), and an optional "
"message to print."
msgstr ""
"Exécute une action qui affecte le monde extérieur (par exemple, écrire dans "
"le système de fichiers).  De telles actions sont spéciales car elles sont "
"désactivées par l'option *dry_run*.  Cette méthode s'occupe de tout. Vous "
"devez simplement fournir la fonction à appeler avec un couple d'argument lui "
"correspondant et un message facultatif à afficher."

#: ../Doc/distutils/apiref.rst:1212
msgid "Convert a string representation of truth to true (1) or false (0)."
msgstr ""
"Convertit une chaîne de caractères représentant une valeur booléenne en "
"``1`` (si elle est évaluée comme vraie) ou ``0`` (si elle est évaluée comme "
"fausse)."

#: ../Doc/distutils/apiref.rst:1214
msgid ""
"True values are ``y``, ``yes``, ``t``, ``true``, ``on``  and ``1``; false "
"values are ``n``, ``no``, ``f``, ``false``,  ``off`` and ``0``.  Raises :exc:"
"`ValueError` if *val*  is anything else."
msgstr ""
"Les valeurs *vraies* sont , ``y``, ``yes``, ``t``, ``true``, ``on``  et  "
"``1``. Les valeurs *fausses* sont ``n``, ``no``, ``f``, ``false``, ``off`` "
"et ``0``.  Lève :exc:`ValueError` si *val* est autre chose."

#: ../Doc/distutils/apiref.rst:1221
msgid ""
"Byte-compile a collection of Python source files to :file:`.pyc` files in a :"
"file:`__pycache__` subdirectory (see :pep:`3147` and :pep:`488`). *py_files* "
"is a list of files to compile; any files that don't end in :file:`.py` are "
"silently skipped.  *optimize* must be one of the following:"
msgstr ""
"Effectue une compilation vers du *bytecode* Python à partir d'un ensemble de "
"fichiers sources Python dans un fichier :file:`.pyc` dans un sous "
"répertoire :file:`__pycache__` (voir :pep:`3147` et :pep:`488`). *py_files* "
"est une liste de fichiers à compiler ; tous les fichiers qui ne se terminent "
"pas par :file:`.py` sont ignorés en silence.  *optimize* doit être l'un des "
"éléments suivants :"

#: ../Doc/distutils/apiref.rst:1226
msgid "``0`` - don't optimize"
msgstr "``0``: ne pas optimiser"

#: ../Doc/distutils/apiref.rst:1227
msgid "``1`` - normal optimization (like ``python -O``)"
msgstr "``1``: optimisation normale (comme ``python -O``)"

#: ../Doc/distutils/apiref.rst:1228
msgid "``2`` - extra optimization (like ``python -OO``)"
msgstr "``2``: optimisation supplémentaire (comme ``python -OO``)"

#: ../Doc/distutils/apiref.rst:1230
msgid "If *force* is true, all files are recompiled regardless of timestamps."
msgstr ""
"Si *force* est vrai, tous les fichiers sont recompilés indépendamment des "
"horodatages."

#: ../Doc/distutils/apiref.rst:1232
msgid ""
"The source filename encoded in each :term:`bytecode` file defaults to the "
"filenames listed in *py_files*; you can modify these with *prefix* and "
"*basedir*. *prefix* is a string that will be stripped off of each source "
"filename, and *base_dir* is a directory name that will be prepended (after "
"*prefix* is stripped).  You can supply either or both (or neither) of "
"*prefix* and *base_dir*, as you wish."
msgstr ""
"Le nom du fichier source encodé dans chaque fichier :term:`bytecode` est par "
"défaut le nom présent dans la liste des noms de fichiers source *py_files* ; "
"vous pouvez modifier dynamiquement ses noms avec *prefix* et *basedir*. "
"*prefix* est une chaîne de caractères qui sera supprimée de chaque nom de "
"fichier source, et *base_dir* est un nom de répertoire qui sera préfixé au "
"nom (après que le *prefixe* soit supprimé).  Vous pouvez choisir de fournir "
"l'un ou l'autre (ou les deux) paramètres : *prefixe* et *base_dir*."

#: ../Doc/distutils/apiref.rst:1239
msgid ""
"If *dry_run* is true, doesn't actually do anything that would affect the "
"filesystem."
msgstr ""
"Si *dry_run* est vrai, ne fait rien qui puisse affecter le système de "
"fichiers."

#: ../Doc/distutils/apiref.rst:1242
msgid ""
"Byte-compilation is either done directly in this interpreter process with "
"the standard :mod:`py_compile` module, or indirectly by writing a temporary "
"script and executing it.  Normally, you should let :func:`byte_compile` "
"figure out to use direct compilation or not (see the source for details).  "
"The *direct* flag is used by the script generated in indirect mode; unless "
"you know what you're doing, leave it set to ``None``."
msgstr ""
"La compilation binaire se fait soit directement dans l'interpréteur courant "
"avec le module standard :mod:`py_compile`, soit indirectement en écrivant un "
"script temporaire et en l'exécutant.  Normalement, vous devez laisser :func:"
"`byte_compile` choisir d'utiliser la compilation directe ou non (voir le "
"code-source pour les détails).  Le paramètre *direct* est utilisé par le "
"script généré en mode indirect ; à moins que vous ne sachiez ce que vous "
"faites, laissez le paramètre à ``None`` (Aucun)."

#: ../Doc/distutils/apiref.rst:1249
msgid ""
"Create ``.pyc`` files with an :func:`import magic tag <imp.get_tag>` in "
"their name, in a :file:`__pycache__` subdirectory instead of files without "
"tag in the current directory."
msgstr ""
"Crée des fichiers ``.pyc`` avec un sous-répertoire :func:`import magic tag "
"<imp.get_tag>` dans leur nom, dans le sous répertoire :file:`__pycache__` "
"plutôt que dans le répertoire courant, sans tag."

#: ../Doc/distutils/apiref.rst:1254
msgid "Create ``.pyc`` files according to :pep:`488`."
msgstr "Crée des fichiers ``.pyc`` selon la :pep:`488`."

#: ../Doc/distutils/apiref.rst:1260
msgid ""
"Return a version of *header* escaped for inclusion in an :rfc:`822` header, "
"by ensuring there are 8 spaces space after each newline. Note that it does "
"no other modification of the string."
msgstr ""
"Renvoie une version de *header* traitée avec les échappements compatibles "
"avec les en-têtes :rfc:`822`, en s'assurant qu'il y a 8 espaces après chaque "
"nouvelle ligne. Notez qu'il ne fait aucune autre modification de la chaîne "
"de caractères."

#: ../Doc/distutils/apiref.rst:1270
msgid ":mod:`distutils.dist` --- The Distribution class"
msgstr ":mod:`distutils.dist` — La classe Distribution"

#: ../Doc/distutils/apiref.rst:1277
msgid ""
"This module provides the :class:`~distutils.core.Distribution` class, which "
"represents the module distribution being built/installed/distributed."
msgstr ""
"Ce module fournit la classe :class:`~distutils.core.Distribution`, qui "
"représente le module *distribution* en cours de construction/installation/"
"distribution."

#: ../Doc/distutils/apiref.rst:1282
msgid ":mod:`distutils.extension` --- The Extension class"
msgstr ":mod:`distutils.extension` — La classe Extension"

#: ../Doc/distutils/apiref.rst:1289
msgid ""
"This module provides the :class:`Extension` class, used to describe C/C++ "
"extension modules in setup scripts."
msgstr ""
"Ce module fournit la classe :class:`Extension`, utilisée pour décrire les "
"modules d'extension C/C++ dans les scripts de configuration."

#: ../Doc/distutils/apiref.rst:1297
msgid ":mod:`distutils.debug` --- Distutils debug mode"
msgstr ":mod:`distutils.debug` — Mode de débogage du module *Distutils*"

#: ../Doc/distutils/apiref.rst:1303
msgid "This module provides the DEBUG flag."
msgstr "Ce module fournit l'option *DEBUG*."

#: ../Doc/distutils/apiref.rst:1307
msgid ":mod:`distutils.errors` --- Distutils exceptions"
msgstr ":mod:`distutils.errors` — Exceptions du module *Distutils*"

#: ../Doc/distutils/apiref.rst:1313
msgid ""
"Provides exceptions used by the Distutils modules.  Note that Distutils "
"modules may raise standard exceptions; in particular, SystemExit is usually "
"raised for errors that are obviously the end-user's fault (eg. bad command-"
"line arguments)."
msgstr ""
"Fournit les exceptions utilisées par les modules de *Distutils*.  Notez que "
"les modules *Distutils* peuvent soulever des exceptions standard ; en "
"particulier, ``SystemExit`` est généralement levée pour les erreurs qui sont "
"manifestement de la responsabilité de l'utilisateur final (ex : mauvais "
"argument en ligne de commande)."

#: ../Doc/distutils/apiref.rst:1317
msgid ""
"This module is safe to use in ``from ... import *`` mode; it only exports "
"symbols whose names start with ``Distutils`` and end with ``Error``."
msgstr ""
"Ce module est utilisable avec la syntaxe ``from ... import *`` ; il "
"n'exporte que des symboles dont le nom commence par ``Distutils`` et se "
"termine par ``Error``."

#: ../Doc/distutils/apiref.rst:1322
msgid ""
":mod:`distutils.fancy_getopt` --- Wrapper around the standard getopt module"
msgstr ""
":mod:`distutils.fancy_getopt` --- Encapsulation du module *getopt* standard"

#: ../Doc/distutils/apiref.rst:1328
msgid ""
"This module provides a wrapper around the standard :mod:`getopt`  module "
"that provides the following additional features:"
msgstr ""
"Ce module est une encapsulation du module standard :mod:`getopt` qui apporte "
"les fonctionnalités supplémentaires suivantes :"

#: ../Doc/distutils/apiref.rst:1331
msgid "short and long options are tied together"
msgstr "Les options *short* et *long* sont liées entre elles."

#: ../Doc/distutils/apiref.rst:1333
msgid ""
"options have help strings, so :func:`fancy_getopt` could potentially  create "
"a complete usage summary"
msgstr ""
"Les options ont des pages d'aide, donc :func:`fancy_getopt` pourrait "
"potentiellement créer un résumé d'utilisation complet"

#: ../Doc/distutils/apiref.rst:1336
msgid "options set attributes of a passed-in object"
msgstr "Les options définissent les attributs à partir d'un objet fourni."

#: ../Doc/distutils/apiref.rst:1338
msgid ""
"boolean options can have \"negative aliases\" --- eg. if :option:`!--quiet` "
"is the \"negative alias\" of :option:`!--verbose`, then :option:`!--quiet` "
"on the command line sets *verbose* to false."
msgstr ""
"Les options booléennes peuvent avoir des \"alias négatifs\" --- par exemple "
"l'option :option:`!-quiet` est *l'alias négatif* de :option:`!--verbose`, "
"l'option :option:`!-quiet` sur la ligne de commande met *verbose* à faux."

#: ../Doc/distutils/apiref.rst:1344
msgid ""
"Wrapper function. *options* is a list of ``(long_option, short_option, "
"help_string)`` 3-tuples as described in the constructor for :class:"
"`FancyGetopt`. *negative_opt* should be a dictionary mapping option names to "
"option names, both the key and value should be in the *options* list. "
"*object* is an object which will be used to store values (see the :meth:"
"`getopt` method of the :class:`FancyGetopt` class). *args* is the argument "
"list. Will use ``sys.argv[1:]`` if you  pass ``None`` as *args*."
msgstr ""
"Encapsulation de la fonction ``getopt``. *options* est une liste de triplets "
"``(long_option, short_option, help_string)`` comme décrit dans le "
"constructeur de la classe :class:`FancyGetopt`. *negative_opt* doit être un "
"dictionnaire associant les noms des options aux noms des options, la clé et "
"la valeur doivent être dans la liste *options*. *object* est un objet qui "
"sera utilisé pour stocker des valeurs (voir la méthode :meth:`getopt` de la "
"classe  :class:`FancyGetopt`). *args* est la liste des arguments. Utilise "
"``sys.argv[1 :]`` si ``None`` est passé à *args*."

#: ../Doc/distutils/apiref.rst:1355
msgid "Wraps *text* to less than *width* wide."
msgstr ""
"Ajoute des retours à la ligne à *texte* de manière à ce que la largeur soit "
"inférieure à *largeur*."

#: ../Doc/distutils/apiref.rst:1360
msgid ""
"The option_table is a list of 3-tuples: ``(long_option, short_option, "
"help_string)``"
msgstr ""
"La liste *option_table* est constituée de triplets : ``(long_option, "
"short_option, help_string*)``"

#: ../Doc/distutils/apiref.rst:1363
msgid ""
"If an option takes an argument, its *long_option* should have ``'='`` "
"appended; *short_option* should just be a single character, no ``':'`` in "
"any case. *short_option* should be ``None`` if a *long_option*  doesn't have "
"a corresponding *short_option*. All option tuples must have long options."
msgstr ""
"Si une option prend un argument, sa *long_option* doit se terminer par "
"``'='``. *short_option* doit être un seul caractère, jamais ``':'`'. "
"*option_courte* doit être ``None`` si *long_option* n'a pas de "
"*short_option* correspondante. Tous les triplets d'options doivent avoir des "
"options longues."

#: ../Doc/distutils/apiref.rst:1368
msgid "The :class:`FancyGetopt` class provides the following methods:"
msgstr "La classe :class:`FancyGetopt` fournit les méthodes suivantes :"

#: ../Doc/distutils/apiref.rst:1373
msgid "Parse command-line options in args. Store as attributes on *object*."
msgstr ""
"Analyse les options de ligne de commande des arguments. Les stocke en tant "
"qu'attributs de *objet*."

#: ../Doc/distutils/apiref.rst:1375
msgid ""
"If *args* is ``None`` or not supplied, uses ``sys.argv[1:]``.  If *object* "
"is ``None`` or not supplied, creates a new :class:`OptionDummy` instance, "
"stores option values there, and returns a tuple ``(args, object)``.  If "
"*object* is supplied, it is modified in place and :func:`getopt` just "
"returns *args*; in both cases, the returned *args* is a modified copy of the "
"passed-in *args* list, which is left untouched."
msgstr ""
"Si *args* est ``None`` ou n'est pas définie, utilise ``sys.argv[1:]``. Si "
"*object* est ``None`` ou n'est pas définie, créer une nouvelle instance de "
"la classe :class:`OptionDummy` , stocke les valeurs d'options dans "
"l'instance et renvoie un couple ``(args, object)``. Si *objet* est fourni, "
"il est modifié sur place et :func:`getopt` renvoie simplement *args*; dans "
"les deux cas, Les arguments *args* renvoyés sont une copie modifiée de la "
"liste *args* transmise, qui est n'est pas modifiée."

#: ../Doc/distutils/apiref.rst:1387
msgid ""
"Returns the list of ``(option, value)`` tuples processed by the previous run "
"of :meth:`getopt`  Raises :exc:`RuntimeError` if :meth:`getopt` hasn't been "
"called yet."
msgstr ""
"Renvoie la liste des couples ``(option, valeur)`` traités par l'exécution "
"précédente de :meth:`getopt`. Déclenche :exc:`RuntimeError` si :meth:"
"`getopt` n'a pas encore été appelée."

#: ../Doc/distutils/apiref.rst:1394
msgid ""
"Generate help text (a list of strings, one per suggested line of output) "
"from the option table for this :class:`FancyGetopt` object."
msgstr ""
"Génère un texte d'aide (une liste de chaînes, une par ligne de sortie "
"suggérée) de la liste d'options pour l'objet de la classe :class:"
"`FancyGetopt`."

#: ../Doc/distutils/apiref.rst:1397
msgid "If supplied, prints the supplied *header* at the top of the help."
msgstr "S'il est fourni, affiche l'en-tête *header* en haut de l'aide."

#: ../Doc/distutils/apiref.rst:1401
msgid ":mod:`distutils.filelist` --- The FileList class"
msgstr ":mod:`distutils.filelist` — La classe *FileList* liste des fichiers"

#: ../Doc/distutils/apiref.rst:1408
msgid ""
"This module provides the :class:`FileList` class, used for poking about the "
"filesystem and building lists of files."
msgstr ""
"Ce module fournit la classe :class:`FileList`, utilisée pour parcourir le "
"système de fichiers et construire des listes de fichiers."

#: ../Doc/distutils/apiref.rst:1413
#, fuzzy
msgid ":mod:`distutils.log` --- Simple :pep:`282`-style logging"
msgstr ""
":mod:`distutils.log` --- Journalisation basée sur le style de la PEP 282"

#: ../Doc/distutils/apiref.rst:1420
msgid ":mod:`distutils.spawn` --- Spawn a sub-process"
msgstr ":mod:`distutils.spawn` — Crée un sous-processus"

#: ../Doc/distutils/apiref.rst:1426
msgid ""
"This module provides the :func:`spawn` function, a front-end to  various "
"platform-specific functions for launching another program in a  sub-process. "
"Also provides :func:`find_executable` to search the path for a given "
"executable name."
msgstr ""
"Ce module offre la fonction :func:`spawn`, une interface avec diverses "
"fonctions spécifiques à la plate-forme pour lancer un autre programme dans "
"un sous-processus. Inclut également :func:`find_executable` pour rechercher "
"le chemin d'accès pour un nom d'exécutable donné."

#: ../Doc/distutils/apiref.rst:1433
msgid ":mod:`distutils.sysconfig` --- System configuration information"
msgstr ""
":mod:`distutils.sysconfig` --- Informations de configuration du système"

#: ../Doc/distutils/apiref.rst:1442
msgid ""
"The :mod:`distutils.sysconfig` module provides access to Python's low-level "
"configuration information.  The specific configuration variables available "
"depend heavily on the platform and configuration. The specific variables "
"depend on the build process for the specific version of Python being run; "
"the variables are those found in the :file:`Makefile` and configuration "
"header that are installed with Python on Unix systems.  The configuration "
"header is called :file:`pyconfig.h` for Python versions starting with 2.2, "
"and :file:`config.h` for earlier versions of Python."
msgstr ""
"Le module :mod:`distutils.sysconfig` donne accès aux informations de "
"configuration bas niveau de Python.  Les variables de configuration "
"spécifiques disponibles dépendent de la plate-forme et de la configuration. "
"Les variables spécifiques dépendent du processus de compilation de la "
"version *spécifique* de Python en cours d'exécution. Les variables sont "
"celles qui se trouvent dans le fichier :file:`Makefile` et dans les entêtes "
"de configuration installés avec Python sur des systèmes Unix.  Le fichier "
"des entêtes de configuration s'appelle :file:`pyconfig.h` pour les versions "
"de Python commençant par 2.2, et :file:`config.h` pour les versions "
"antérieures de Python."

#: ../Doc/distutils/apiref.rst:1451
msgid ""
"Some additional functions are provided which perform some useful "
"manipulations for other parts of the :mod:`distutils` package."
msgstr ""
"Quelques fonctions supplémentaires sont fournies pour effectuer des "
"manipulations utiles pour d'autres parties du paquet :mod:`distutils`."

#: ../Doc/distutils/apiref.rst:1457
msgid "The result of ``os.path.normpath(sys.prefix)``."
msgstr "Le résultat de ``os.path.normpath(sys.prefix)``."

#: ../Doc/distutils/apiref.rst:1462
msgid "The result of ``os.path.normpath(sys.exec_prefix)``."
msgstr "Le résultat de ``os.path.normpath(sys.exec_prefix)``."

#: ../Doc/distutils/apiref.rst:1467
msgid ""
"Return the value of a single variable.  This is equivalent to "
"``get_config_vars().get(name)``."
msgstr ""
"Retourne la valeur d'une seule variable.  C'est l'équivalent de "
"``get_config_vars().get(name)``."

#: ../Doc/distutils/apiref.rst:1473
msgid ""
"Return a set of variable definitions.  If there are no arguments, this "
"returns a dictionary mapping names of configuration variables to values.  If "
"arguments are provided, they should be strings, and the return value will be "
"a sequence giving the associated values. If a given name does not have a "
"corresponding value, ``None`` will be included for that variable."
msgstr ""
"Retourne un ensemble de définitions de variables.  S'il n'y a pas "
"d'arguments, cela renvoie un dictionnaire qui associe les noms des variables "
"de configuration aux valeurs.  Si des arguments sont spécifiés, ils doivent "
"être des chaînes de caractères, et la valeur renvoyée sera une séquence "
"donnant les valeurs correspondantes. Si un nom donné n'a pas de valeur "
"correspondante, la valeur ``None`` sera utilisée pour cette variable."

#: ../Doc/distutils/apiref.rst:1482
msgid ""
"Return the full path name of the configuration header.  For Unix, this will "
"be the header generated by the :program:`configure` script; for other "
"platforms the header will have been supplied directly by the Python source "
"distribution.  The file is a platform-specific text file."
msgstr ""
"Renvoie le nom complet du chemin d'accès de l'en-tête de configuration.  "
"Pour Unix, c'est l'en-tête généré par le script :program:`configure` ; pour "
"les autres plates-formes, l'en-tête provient directement de la distribution "
"source Python.  Le fichier est un fichier texte spécifique à la plate-forme."

#: ../Doc/distutils/apiref.rst:1490
msgid ""
"Return the full path name of the :file:`Makefile` used to build Python.  For "
"Unix, this will be a file generated by the :program:`configure` script; the "
"meaning for other platforms will vary.  The file is a platform-specific text "
"file, if it exists. This function is only useful on POSIX platforms."
msgstr ""
"Renvoie le nom complet du chemin d'accès du fichier :file:`Makefile` utilisé "
"pour construire Python.  Pour Unix, c'est le fichier généré par le script :"
"program:`configure`. La définition pour les autres plateformes varie.  S'il "
"existe, il s'agit d'un fichier texte spécifique à la plate-forme. Cette "
"fonction n'est utile que sur les plates-formes POSIX."

#: ../Doc/distutils/apiref.rst:1498
msgid ""
"Return the directory for either the general or platform-dependent C include "
"files.  If *plat_specific* is true, the platform-dependent include directory "
"is returned; if false or omitted, the platform-independent directory is "
"returned. If *prefix* is given, it is used as either the prefix instead of :"
"const:`PREFIX`, or as the exec-prefix instead of :const:`EXEC_PREFIX` if "
"*plat_specific* is true."
msgstr ""
"Renvoie le répertoire pour les fichiers d'inclusion C standards ou "
"dépendants de la plate-forme.  Si *plat_specific* est vrai, le répertoire "
"*include* dépendant de la plate-forme est renvoyé ; si la valeur est *faux* "
"ou *None*, le répertoire indépendant de la plate-forme est renvoyé. Si "
"*prefix* est donné, il est utilisé soit comme préfixe au lieu de :const:"
"`PREFIX`, soit comme préfixe d'exécution au lieu de :const:`EXEC_PREFIX` si "
"*plat_specific* est vrai."

#: ../Doc/distutils/apiref.rst:1508
msgid ""
"Return the directory for either the general or platform-dependent library "
"installation.  If *plat_specific* is true, the platform-dependent include "
"directory is returned; if false or omitted, the platform-independent "
"directory is returned.  If *prefix* is given, it is used as either the "
"prefix instead of :const:`PREFIX`, or as the exec-prefix instead of :const:"
"`EXEC_PREFIX` if *plat_specific* is true.  If *standard_lib* is true, the "
"directory for the standard library is returned rather than the directory for "
"the installation of third-party extensions."
msgstr ""
"Renvoie le répertoire pour l'installation de la bibliothèque standard ou "
"dépendante de la plate-forme.  Si *plat_specific* est vrai, le répertoire "
"*include* dépendant de la plate-forme est renvoyé ; si la valeur est *faux* "
"ou *None*, le répertoire indépendant de la plate-forme est renvoyé.  Si "
"*prefix* est donné, il est utilisé soit comme préfixe au lieu de :const:"
"`PREFIX`, soit comme préfixe d'exécution au lieu de :const:`EXEC_PREFIX` si "
"*plat_specific* est vrai. Si *standard_lib* est vrai, le répertoire de la "
"bibliothèque standard est renvoyé plutôt que le répertoire d'installation "
"des extensions tierces."

#: ../Doc/distutils/apiref.rst:1517
msgid ""
"The following function is only intended for use within the :mod:`distutils` "
"package."
msgstr ""
"La fonction suivante est uniquement destinée à être utilisée dans le paquet :"
"mod:`distutils`."

#: ../Doc/distutils/apiref.rst:1523
msgid ""
"Do any platform-specific customization of a :class:`distutils.ccompiler."
"CCompiler` instance."
msgstr ""
"Exécute toute personnalisation spécifique à la plate-forme d'une instance :"
"class:`distutils.ccompiler.CCompiler`."

#: ../Doc/distutils/apiref.rst:1526
msgid ""
"This function is only needed on Unix at this time, but should be called "
"consistently to support forward-compatibility.  It inserts the information "
"that varies across Unix flavors and is stored in Python's :file:`Makefile`.  "
"This information includes the selected compiler, compiler and linker "
"options, and the extension used by the linker for shared objects."
msgstr ""
"Cette fonction n'est nécessaire que sous Unix pour le moment, mais doit être "
"appelée de manière cohérente pour supporter la compatibilité ascendante.  "
"Elle insère des informations qui varient d'une version à l'autre d'Unix et "
"qui sont stockées dans le fichier Python :file:`Makefile`.  Ces informations "
"comprennent le compilateur, les options du compilateur et de l'éditeur de "
"liens sélectionnés, ainsi que l'extension utilisée par l'éditeur de liens "
"pour les objets partagés."

#: ../Doc/distutils/apiref.rst:1532
msgid ""
"This function is even more special-purpose, and should only be used from "
"Python's own build procedures."
msgstr ""
"Cette fonction est encore plus spéciale, et ne devrait être utilisée que "
"dans les procédures de compilation de Python."

#: ../Doc/distutils/apiref.rst:1538
msgid ""
"Inform the :mod:`distutils.sysconfig` module that it is being used as part "
"of the build process for Python.  This changes a lot of relative locations "
"for files, allowing them to be located in the build area rather than in an "
"installed Python."
msgstr ""
"Informe le module :mod:`distutils.sysconfig` qu'il est utilisé dans le cadre "
"du processus de compilation de Python.  Cela change beaucoup d'emplacements "
"relatifs pour les fichiers, ce qui les place dans la zone de compilation "
"plutôt que dans un interpréteur Python installé."

#: ../Doc/distutils/apiref.rst:1545
msgid ":mod:`distutils.text_file` --- The TextFile class"
msgstr ":mod:`distutils.text_file` — La classe TextFile"

#: ../Doc/distutils/apiref.rst:1551
msgid ""
"This module provides the :class:`TextFile` class, which gives an interface  "
"to text files that (optionally) takes care of stripping comments, ignoring  "
"blank lines, and joining lines with backslashes."
msgstr ""
"Ce module fournit la classe :class:`TextFile`, qui donne une interface aux "
"fichiers texte qui s'occupe (optionnellement) de supprimer les commentaires, "
"d'ignorer les lignes vides et de joindre les lignes avec des antislash."

#: ../Doc/distutils/apiref.rst:1558
msgid ""
"This class provides a file-like object that takes care of all  the things "
"you commonly want to do when processing a text file  that has some line-by-"
"line syntax: strip comments (as long as ``#``  is your comment character), "
"skip blank lines, join adjacent lines by escaping the newline (ie. backslash "
"at end of line), strip leading and/or trailing whitespace.  All of these are "
"optional and independently controllable."
msgstr ""
"Cette classe fournit un objet de type fichier qui se charge de tout ce que "
"vous voulez généralement faire lors du traitement d'un fichier texte ayant "
"une syntaxe ligne par ligne : Suppression des commentaires (tant que ``#`` "
"est votre caractère de commentaire), passer les lignes vides, joindre des "
"lignes adjacentes en échappant la nouvelle ligne (les lignes se terminant "
"par une antislash), supprime les espace blancs avant et après le texte etc.  "
"Toutes ces fonctions sont optionnelles et peuvent être commandées "
"indépendamment."

#: ../Doc/distutils/apiref.rst:1565
msgid ""
"The class provides a :meth:`warn` method so you can generate  warning "
"messages that report physical line number, even if the  logical line in "
"question spans multiple physical lines.  Also  provides :meth:`unreadline` "
"for implementing line-at-a-time lookahead."
msgstr ""
"La classe fournit une méthode :meth:`warn` pour pouvoir générer des messages "
"d'avertissement qui renvoie le numéro de ligne physique, même si la ligne "
"logique en question couvre plusieurs lignes physiques.  Fournit également :"
"meth:`unreadline` pour implémenter un système prospectif ligne par ligne."

#: ../Doc/distutils/apiref.rst:1570
msgid ""
":class:`TextFile` instances are create with either *filename*, *file*, or "
"both. :exc:`RuntimeError` is raised if both are ``None``. *filename* should "
"be a string, and *file* a file object (or something that provides :meth:"
"`readline` and :meth:`close`  methods).  It is recommended that you supply "
"at least *filename*,  so that :class:`TextFile` can include it in warning "
"messages.  If *file* is not supplied, :class:`TextFile` creates its own "
"using the :func:`open` built-in function."
msgstr ""
"Les instances de :class:`TextFile` sont créées soit avec *filename*, soit "
"avec *file* ou bien les deux. :exc:`RuntimeError` est levé si les deux "
"valent ``None``. *filename* doit être une chaîne de caractères, et *file* un "
"objet fichier (ou quelque chose qui fournit les méthodes :meth:`readline` "
"et :meth:`close`). Il est recommandé de fournir au moins *filename*, afin "
"que :class:`TextFile` puisse l'inclure dans les messages d'avertissement.  "
"Si *file* n'est pas fourni, :class:`TextFile` crée son propre fichier en "
"utilisant la fonction :func:`open`."

#: ../Doc/distutils/apiref.rst:1578
msgid ""
"The options are all boolean, and affect the values returned by :meth:"
"`readline`"
msgstr ""
"Les options sont toutes booléennes et affectent les valeurs renvoyées par :"
"meth:`readline`."

#: ../Doc/distutils/apiref.rst:1583
msgid "option name"
msgstr "Nom des options"

#: ../Doc/distutils/apiref.rst:1583
msgid "default"
msgstr "default"

#: ../Doc/distutils/apiref.rst:1585
msgid "*strip_comments*"
msgstr "*strip_comments*"

#: ../Doc/distutils/apiref.rst:1585
msgid ""
"strip from ``'#'`` to end-of-line, as well as any whitespace leading up to "
"the ``'#'``\\ ---unless it is escaped by a backslash"
msgstr ""
"Supprime les caractères à partir de ``'#'`` jusqu'à la fin de la ligne, "
"ainsi que tout espace blanc menant au premier ``'#'`` --- à moins qu'il ne "
"soit échappé par une antislash"

#: ../Doc/distutils/apiref.rst:1585 ../Doc/distutils/apiref.rst:1594
#: ../Doc/distutils/apiref.rst:1599
msgid "true"
msgstr "*true*"

#: ../Doc/distutils/apiref.rst:1591
msgid "*lstrip_ws*"
msgstr "*lstrip_ws*"

#: ../Doc/distutils/apiref.rst:1591
msgid "strip leading whitespace from each line before returning it"
msgstr ""
"Efface les espaces blancs en début de chaque ligne avant de la renvoyer."

#: ../Doc/distutils/apiref.rst:1591 ../Doc/distutils/apiref.rst:1609
#: ../Doc/distutils/apiref.rst:1620
msgid "false"
msgstr "*false*"

#: ../Doc/distutils/apiref.rst:1594
msgid "*rstrip_ws*"
msgstr "*rstrip_ws*"

#: ../Doc/distutils/apiref.rst:1594
msgid ""
"strip trailing whitespace (including line terminator!) from each line before "
"returning it."
msgstr ""
"Efface les espaces blancs de fin de ligne (y compris le terminateur de "
"ligne !) de chaque ligne avant de la renvoyer."

#: ../Doc/distutils/apiref.rst:1599
msgid "*skip_blanks*"
msgstr "*skip_blanks*"

#: ../Doc/distutils/apiref.rst:1599
msgid ""
"skip lines that are empty \\*after\\* stripping comments and whitespace.  "
"(If both lstrip_ws and rstrip_ws are false, then some lines may consist of "
"solely whitespace: these will \\*not\\* be skipped, even if *skip_blanks* is "
"true.)"
msgstr ""
"Ignore les lignes qui sont vides \\*après\\* la suppression des commentaires "
"et des espaces.  (Si *lstrip_ws* et *rstrip_ws* sont tous les deux faux, "
"alors certaines lignes peuvent être composées uniquement d'espaces : elles "
"ne seront pas ignorées, même si *skip_blanks* est vrai."

#: ../Doc/distutils/apiref.rst:1609
msgid "*join_lines*"
msgstr "*join_lines*"

#: ../Doc/distutils/apiref.rst:1609
msgid ""
"if a backslash is the last non-newline character on a line after stripping "
"comments and whitespace, join the following line to it to form one logical "
"line; if N consecutive lines end with a backslash, then N+1 physical lines "
"will be joined to form one logical line."
msgstr ""
"Si sur la ligne, une antislash est le dernier caractère et que ce caractère "
"n'est pas le caractère de nouvelle ligne. Joint la ligne suivante pour "
"former une ligne logique. Si N lignes consécutives se terminent par une "
"antislash, alors N+1 lignes physiques seront liées pour former une seul "
"ligne logique."

#: ../Doc/distutils/apiref.rst:1620
msgid "*collapse_join*"
msgstr "*collapse_join*"

#: ../Doc/distutils/apiref.rst:1620
msgid ""
"strip leading whitespace from lines that are joined to their predecessor; "
"only matters if ``(join_lines and not lstrip_ws)``"
msgstr ""
"Supprime les espaces blancs des lignes qui sont jointes à leur prédécesseur. "
"n'est utile que que si ``(join_lines and not lstrip_ws)``."

#: ../Doc/distutils/apiref.rst:1627
msgid ""
"Note that since *rstrip_ws* can strip the trailing newline, the semantics "
"of :meth:`readline` must differ from those of the built-in file object's :"
"meth:`readline` method!  In particular, :meth:`readline`  returns ``None`` "
"for end-of-file: an empty string might just be a  blank line (or an all-"
"whitespace line), if *rstrip_ws* is true  but *skip_blanks* is not."
msgstr ""
"Notez que puisque *rstrip_ws* peut effacer la fin de la ligne, la sémantique "
"de :meth:`readline` doit être différente de celle de la méthode standard :"
"meth:`readline` des objets fichier !  En particulier, :meth:`readline` "
"renvoie ``None`` pour indiquer la fin du fichier: une chaîne vide peut être "
"juste une ligne blanche (ou une ligne entièrement blanche), si *rstrip_ws* "
"est vrai mais pas si *skip_blanks* est faux."

#: ../Doc/distutils/apiref.rst:1636
msgid ""
"Open a new file *filename*.  This overrides any *file* or *filename* "
"constructor arguments."
msgstr ""
"Ouvre un nouveau fichier *filename*.  Remplace tous les arguments du "
"constructeur *file* ou *filename*."

#: ../Doc/distutils/apiref.rst:1642
msgid ""
"Close the current file and forget everything we know about it (including the "
"filename and the current line number)."
msgstr ""
"Ferme le fichier courant et oublie toutes les informations connues à son "
"sujet (y compris le nom du fichier et le numéro de la ligne courante)."

#: ../Doc/distutils/apiref.rst:1648
msgid ""
"Print (to stderr) a warning message tied to the current logical line in the "
"current file.  If the current logical line in the file spans multiple "
"physical lines, the warning refers to the whole range, such as ``\"lines "
"3-5\"``.  If *line* is supplied,  it overrides the current line number; it "
"may be a list or tuple  to indicate a range of physical lines, or an integer "
"for a  single physical line."
msgstr ""
"Affiche (vers *stderr*) un message d'avertissement lié à la ligne logique "
"courante dans le fichier courant. Si la ligne logique courante dans le "
"fichier s'étend sur plusieurs lignes physiques, l'avertissement se réfère à "
"une plage de lignes physiques, telles que ``\"lignes 3-5\"``. Si *line* est "
"fourni, il remplace le numéro de la ligne courante ; il peut s'agir d'une "
"liste ou d'un couple pour indiquer une plage de lignes physiques, ou d'un "
"entier pour une seule ligne physique."

#: ../Doc/distutils/apiref.rst:1658
msgid ""
"Read and return a single logical line from the current file (or from an "
"internal buffer if lines have previously been \"unread\" with :meth:"
"`unreadline`).  If the *join_lines* option  is true, this may involve "
"reading multiple physical lines concatenated into a single string.  Updates "
"the current line number,  so calling :meth:`warn` after :meth:`readline` "
"emits a warning  about the physical line(s) just read.  Returns ``None`` on "
"end-of-file,  since the empty string can occur if *rstrip_ws* is true but  "
"*strip_blanks* is not."
msgstr ""
"Lit et renvoie une seule ligne logique à partir du fichier courant (ou à "
"partir d'un tampon interne si les lignes ont déjà été marqué comme non lue "
"avec :meth:`unreadline`).  Si l'option *join_lines* est vraie, cela peut "
"impliquer la lecture de plusieurs lignes physiques concaténées en une seule "
"chaîne.  Met à jour le numéro de la ligne courante. Appeler :meth:`warn` "
"après :meth:`readline` émet donc un avertissement sur la ou les lignes "
"physiques qui viennent d'être lues. Renvoie ``None`` à la fin du fichier, "
"puisque la chaîne vide peut se produire si *rstrip_ws* est vrai mais pas si "
"*strip_blanks* est faux."

#: ../Doc/distutils/apiref.rst:1669
msgid ""
"Read and return the list of all logical lines remaining in the current file. "
"This updates the current line number to the last line of the file."
msgstr ""
"Lit et renvoie la liste de toutes les lignes logiques restant dans le "
"fichier courant. Met à jour le numéro de la ligne courante à la dernière "
"ligne du fichier."

#: ../Doc/distutils/apiref.rst:1675
msgid ""
"Push *line* (a string) onto an internal buffer that will be checked by "
"future :meth:`readline` calls.  Handy for implementing a parser with line-at-"
"a-time lookahead. Note that lines that are \"unread\" with :meth:"
"`unreadline` are not subsequently re-cleansed (whitespace  stripped, or "
"whatever) when read with :meth:`readline`. If multiple calls are made to :"
"meth:`unreadline` before a call to :meth:`readline`, the lines will be "
"returned most in most recent first order."
msgstr ""
"Insère la ligne *line* (une chaîne de caractères) dans un tampon interne qui "
"sera vérifié par les futurs appels de :meth:`readline`.  Utile pour "
"implémenter un analyseur prospectif ligne par ligne. Notez que les lignes "
"qui sont \"non lues\" avec :meth:`unreadline` ne sont ensuite pas traitées "
"de nouveau (espace blancs, ou autre) quand elles sont lues avec :meth:"
"`readline`. Si plusieurs appels sont faits à :meth:`unreadline` avant un "
"appel à :meth:`readline`, les lignes sont renvoyées dans l'ordre de la plus "
"récente première à la plus ancienne."

#: ../Doc/distutils/apiref.rst:1684
msgid ":mod:`distutils.version` --- Version number classes"
msgstr ":mod:`distutils.version` — Classes de numéros de version"

#: ../Doc/distutils/apiref.rst:1699
msgid ":mod:`distutils.cmd` --- Abstract base class for Distutils commands"
msgstr ""
":mod:`distutils.cmd` --- Classe de base abstraite pour les commandes "
"*Distutils*"

#: ../Doc/distutils/apiref.rst:1706
msgid "This module supplies the abstract base class :class:`Command`."
msgstr "Ce module fournit la classe de base abstraite :class:`Command`."

#: ../Doc/distutils/apiref.rst:1711
msgid ""
"Abstract base class for defining command classes, the \"worker bees\" of the "
"Distutils.  A useful analogy for command classes is to think of them as "
"subroutines with local variables called *options*.  The options are declared "
"in :meth:`initialize_options` and defined (given their final values) in :"
"meth:`finalize_options`, both of which must be defined by every command "
"class.  The distinction between the two is necessary because option values "
"might come from the outside world (command line, config file, ...), and any "
"options dependent on other options must be computed after these outside "
"influences have been processed --- hence :meth:`finalize_options`.  The body "
"of the subroutine, where it does all its work based on the values of its "
"options, is the :meth:`run` method, which must also be implemented by every "
"command class."
msgstr ""
"Classe de base abstraite pour définir les classes de commandes, les "
"\"ouvrières\" de *Distutils*. Une analogie utile pour les classes de "
"commandes est de les considérer comme des sous-routines avec des variables "
"locales appelées *options*.  Les options sont déclarées dans :meth:"
"`initialiser_options` et définies (compte tenu de leur valeur finale) dans :"
"meth:`finalize_options`, qui doivent être définies pour chaque classe de "
"commande.  La distinction entre les deux est nécessaire parce que les "
"valeurs des options peuvent venir de l'extérieur (ligne de commande, fichier "
"de configuration, ....), et toutes les options dépendantes d'autres options "
"doivent être calculées après que ces options externes aient été traitées --- "
"ce qui explique :meth:`finalize_options`. Le corps de la sous-routine, où "
"s'effectue tout le travail est basé sur les valeurs de ses options, est la "
"méthode :meth:`run`, qui doit être implémentée par chaque classe de commande."

#: ../Doc/distutils/apiref.rst:1724
msgid ""
"The class constructor takes a single argument *dist*, a :class:`~distutils."
"core.Distribution` instance."
msgstr ""
"Le constructeur prend un seul argument, *dist*, une instance de :class:"
"`~distutils.core.Distribution`."

#: ../Doc/distutils/apiref.rst:1729
msgid "Creating a new Distutils command"
msgstr "Créer une nouvelle commande *Distutils*"

#: ../Doc/distutils/apiref.rst:1731
msgid "This section outlines the steps to create a new Distutils command."
msgstr ""
"Cette section décrit les étapes pour créer une nouvelle commande *Distutils*."

#: ../Doc/distutils/apiref.rst:1733
msgid ""
"A new command lives in a module in the :mod:`distutils.command` package. "
"There is a sample template in that directory called :file:"
"`command_template`.  Copy this file to a new module with the same name as "
"the new command you're implementing.  This module should implement a class "
"with the same name as the module (and the command).  So, for instance, to "
"create the command ``peel_banana`` (so that users can run ``setup.py "
"peel_banana``), you'd copy :file:`command_template` to :file:`distutils/"
"command/peel_banana.py`, then edit it so that it's implementing the class :"
"class:`peel_banana`, a subclass of :class:`distutils.cmd.Command`."
msgstr ""
"Une nouvelle commande doit résider dans un module du package :mod:`distutils."
"command`. Il existe un exemple de modèle dans ce répertoire nommé :file:"
"`command_template`. Copiez ce fichier dans un nouveau module portant le même "
"nom que la nouvelle commande que vous implémentez. Ce module doit "
"implémenter une classe portant le même nom que le module (et la commande). "
"Par exemple, pour créer la commande ``peel_banana`` (afin que les "
"utilisateurs puissent exécuter ``setup.py peel_banana``), vous devez copier "
"le fichier :file:`commande_template` dans :file:`distutils/command/"
"peel_banana.py`, puis l'éditer pour qu'il implémente la classe :class:"
"`peel_banana`, une sous-classe de la classe :class:`distutils.cmd.Command`."

#: ../Doc/distutils/apiref.rst:1743
msgid "Subclasses of :class:`Command` must define the following methods."
msgstr ""
"Les sous-classes de la classe :class:`Command` doivent définir les méthodes "
"suivantes."

#: ../Doc/distutils/apiref.rst:1747
msgid ""
"Set default values for all the options that this command supports.  Note "
"that these defaults may be overridden by other commands, by the setup "
"script, by config files, or by the command-line.  Thus, this is not the "
"place to code dependencies between options; generally, :meth:"
"`initialize_options` implementations are just a bunch of ``self.foo = None`` "
"assignments."
msgstr ""
"Définit des valeurs par défaut pour toutes les options que cette commande "
"gère. Notez que ces valeurs par défaut peuvent être remplacées par d'autres "
"commandes, par le script d'installation, par des fichiers de configuration "
"ou par la ligne de commande. Ce n'est donc pas l'endroit idéal pour "
"introduire des dépendances entre les options. En règle générale, les "
"méthodes suivantes :meth:`initialize_options` ne font que des assignations "
"de type ``self.truc = None``."

#: ../Doc/distutils/apiref.rst:1756
msgid ""
"Set final values for all the options that this command supports. This is "
"always called as late as possible, ie.  after any option assignments from "
"the command-line or from other commands have been done.  Thus, this is the "
"place to code option dependencies: if *foo* depends on *bar*, then it is "
"safe to set *foo* from *bar* as long as *foo* still has the same value it "
"was assigned in :meth:`initialize_options`."
msgstr ""
"Définit les valeurs finales pour toutes les options que cette commande gère. "
"Cette méthode doit toujours être appelée le plus tard possible, c'est-à-dire "
"après que toutes les affectations des options de la ligne de commande ou que "
"d'autres commandes ont été faites. C'est donc l'endroit idéal pour "
"introduire des dépendances d'options : si *truc* dépend de *machin*, alors "
"il est sûr de mettre *truc* de *machin* aussi longtemps que *truc* a "
"toujours la même valeur qui lui a été attribué par :meth:"
"`initialize_options`."

#: ../Doc/distutils/apiref.rst:1766
msgid ""
"A command's raison d'etre: carry out the action it exists to perform, "
"controlled by the options initialized in :meth:`initialize_options`, "
"customized by other commands, the setup script, the command-line, and config "
"files, and finalized in :meth:`finalize_options`.  All terminal output and "
"filesystem interaction should be done by :meth:`run`."
msgstr ""
"La raison d'être d'une commande : exécuter l'action programmée en étant "
"contrôlée par les options initialisées dans :meth:`initialize_options`, "
"personnalisées par d'autres commandes, par le script de configuration, par "
"la ligne de commande et les fichiers de configuration, puis finalisée dans :"
"meth:`finalize_options`. Toutes les interactions avec le système de fichiers "
"et la sortie du terminal doivent être effectuées par :meth:`run`."

#: ../Doc/distutils/apiref.rst:1775
msgid ""
"*sub_commands* formalizes the notion of a \"family\" of commands, e.g. "
"``install`` as the parent with sub-commands ``install_lib``, "
"``install_headers``, etc.  The parent of a family of commands defines "
"*sub_commands* as a class attribute; it's a list of 2-tuples "
"``(command_name, predicate)``, with *command_name* a string and *predicate* "
"a function, a string or ``None``.  *predicate* is a method of the parent "
"command that determines whether the corresponding command is applicable in "
"the current situation.  (E.g. ``install_headers`` is only applicable if we "
"have any C header files to install.)  If *predicate* is ``None``, that "
"command is always applicable."
msgstr ""
"*sub_commands* formalise la notion de \"famille\" de commandes, par exemple. "
"``install`` est le parent des sous-commandes ``install_lib``, "
"``install_headers``, etc. Le parent d'une famille de commandes définit "
"*sub_commands* en tant qu'attribut de classe ; c'est une liste de couples "
"``(command_name, predicate)``, avec *command_name* le nom de la commande et "
"*predicate* une fonction, une chaîne ou ``None``. *predicate* est une "
"méthode de la commande parent qui détermine si la commande correspondante "
"est applicable dans la situation actuelle. Par exemple : ``install_headers`` "
"n'est applicable que s'il existe des fichiers d'en-tête C à installer. Si "
"*predicate* est ``None``, cette commande est toujours effectuée."

#: ../Doc/distutils/apiref.rst:1786
msgid ""
"*sub_commands* is usually defined at the *end* of a class, because "
"predicates can be methods of the class, so they must already have been "
"defined.  The canonical example is the :command:`install` command."
msgstr ""
"*sub_commands* est généralement défini à la *fin* d'une classe, car les "
"prédicats peuvent être des méthodes de la classe, ils doivent donc déjà "
"avoir été définis. L'exemple canonique est la commande :command:`install`."

#: ../Doc/distutils/apiref.rst:1792
msgid ":mod:`distutils.command` --- Individual Distutils commands"
msgstr ":mod:`distutils.command` — Commandes *Distutils* individuelles"

#: ../Doc/distutils/apiref.rst:1803
msgid ":mod:`distutils.command.bdist` --- Build a binary installer"
msgstr ":mod:`distutils.command.bdist` — Construit un installateur binaire"

#: ../Doc/distutils/apiref.rst:1813
msgid ""
":mod:`distutils.command.bdist_packager` --- Abstract base class for packagers"
msgstr ""
":mod:`distutils.command.bdist_packager` --- Classe de base abstraite pour "
"empaqueteurs"

#: ../Doc/distutils/apiref.rst:1823
msgid ":mod:`distutils.command.bdist_dumb` --- Build a \"dumb\" installer"
msgstr ""
":mod:`distutils.command.bdist_dumb` --- Construit un installateur passif "
"(*dumb*)"

#: ../Doc/distutils/apiref.rst:1833
msgid ""
":mod:`distutils.command.bdist_msi` --- Build a Microsoft Installer binary "
"package"
msgstr ""
":mod:`distutils.command.bdist_msi` --- Construit un installateur Microsoft"

#: ../Doc/distutils/apiref.rst:1840
msgid "Builds a `Windows Installer`_ (.msi) binary package."
msgstr "Construit un installateur `Windows Installeur`_ (*.msi*)"

#: ../Doc/distutils/apiref.rst:1844
msgid ""
"In most cases, the ``bdist_msi`` installer is a better choice than the "
"``bdist_wininst`` installer, because it provides better support for Win64 "
"platforms, allows administrators to perform non-interactive installations, "
"and allows installation through group policies."
msgstr ""
"Dans la plupart des cas, l'installateur ``bdist_msi`` est un meilleur choix "
"que l'installateur ``bdist_wininst``, car il gère mieux les plates-formes "
"*Win64*, et permet en plus aux administrateurs d'effectuer des installations "
"non interactives ainsi que des installations via des stratégies de groupe."

#: ../Doc/distutils/apiref.rst:1851
msgid ""
":mod:`distutils.command.bdist_rpm` --- Build a binary distribution as a "
"Redhat RPM and SRPM"
msgstr ""
":mod:`distutils.command.bdist_rpm` --- Construit une distribution binaire au "
"format Redhat RPM et SRPM"

#: ../Doc/distutils/apiref.rst:1861
msgid ":mod:`distutils.command.bdist_wininst` --- Build a Windows installer"
msgstr ""
":mod:`distutils.command.bdist_wininst` --- Construit un installateur Windows"

#: ../Doc/distutils/apiref.rst:1866
msgid "Use bdist_wheel (wheel packages) instead."
msgstr ""

#: ../Doc/distutils/apiref.rst:1874
msgid ":mod:`distutils.command.sdist` --- Build a source distribution"
msgstr ":mod:`distutils.command.sdist` — Construit une distribution source"

#: ../Doc/distutils/apiref.rst:1884
msgid ":mod:`distutils.command.build` --- Build all files of a package"
msgstr ""
":mod:`distutils.command.build` --- Construit tous les fichiers d'un paquet"

#: ../Doc/distutils/apiref.rst:1894
msgid ""
":mod:`distutils.command.build_clib` --- Build any C libraries in a package"
msgstr ""
":mod:`distutils.command.build_clib` --- Construit toutes les bibliothèques C "
"d'un paquet"

#: ../Doc/distutils/apiref.rst:1904
msgid ""
":mod:`distutils.command.build_ext` --- Build any extensions in a package"
msgstr ""
":mod:`distutils.command.build_ext` --- Construit toutes les extensions d'un "
"paquet"

#: ../Doc/distutils/apiref.rst:1914
msgid ""
":mod:`distutils.command.build_py` --- Build the .py/.pyc files of a package"
msgstr ""
":mod:`distutils.command.build_py` --- Construit les fichiers *.py/.pyc* d'un "
"paquet"

#: ../Doc/distutils/apiref.rst:1924
msgid ""
"Alternative implementation of build_py which also runs the 2to3 conversion "
"library on each .py file that is going to be installed. To use this in a "
"setup.py file for a distribution that is designed to run with both Python 2."
"x and 3.x, add::"
msgstr ""
"Implémentation alternative de *build_py* qui exécute également la "
"bibliothèque de conversion *2to3* sur chaque fichier *.py* qui va être "
"installé. Pour l'utiliser dans un fichier *setup.py* pour une distribution "
"conçue pour fonctionner avec *Python 2.x* et *3.x*, ajouter ::"

#: ../Doc/distutils/apiref.rst:1934
msgid "to your setup.py, and later::"
msgstr "à votre *setup.py* et, plus tard ::"

#: ../Doc/distutils/apiref.rst:1938
msgid "to the invocation of setup()."
msgstr "à l'appel de *setup()*."

#: ../Doc/distutils/apiref.rst:1942
msgid ""
":mod:`distutils.command.build_scripts` --- Build the scripts of a package"
msgstr ""
":mod:`distutils.command.build_scripts` --- Construit les scripts d'un paquet"

#: ../Doc/distutils/apiref.rst:1952
msgid ":mod:`distutils.command.clean` --- Clean a package build area"
msgstr ""
":mod:`distutils.command.clean` --- Nettoie un dossier de compilation d'un "
"paquet"

#: ../Doc/distutils/apiref.rst:1957
msgid ""
"This command removes the temporary files created by :command:`build` and its "
"subcommands, like intermediary compiled object files.  With the ``--all`` "
"option, the complete build directory will be removed."
msgstr ""
"Cette commande supprime les fichiers temporaires créés par la commande :"
"command:`build` et ses sous-commandes, comme les fichiers objets compilés "
"intermédiaires.  Avec l'option ``--all``, le répertoire de compilation sera "
"supprimé."

#: ../Doc/distutils/apiref.rst:1961
msgid ""
"Extension modules built :ref:`in place <distutils-build-ext-inplace>` will "
"not be cleaned, as they are not in the build directory."
msgstr ""
"Les modules d'extension construits :ref:`sur place <distutils-build-ext-"
"inplace>` ne seront pas effacés, car ils ne sont pas dans le répertoire "
"*build*."

#: ../Doc/distutils/apiref.rst:1966
msgid ":mod:`distutils.command.config` --- Perform package configuration"
msgstr ""
":mod:`distutils.command.config` --- Effectue la configuration d'un paquet"

#: ../Doc/distutils/apiref.rst:1976
msgid ":mod:`distutils.command.install` --- Install a package"
msgstr ":mod:`distutils.command.install` — Installe un paquet"

#: ../Doc/distutils/apiref.rst:1986
msgid ""
":mod:`distutils.command.install_data` --- Install data files from a package"
msgstr ""
":mod:`distutils.command.install_data` --- Installe les fichiers de données "
"d'un paquet"

#: ../Doc/distutils/apiref.rst:1996
msgid ""
":mod:`distutils.command.install_headers` --- Install C/C++ header files from "
"a package"
msgstr ""
":mod:`distutils.command.install_headers` --- Installe les fichiers d'en-tête "
"C/C++ d'un paquet"

#: ../Doc/distutils/apiref.rst:2006
msgid ""
":mod:`distutils.command.install_lib` --- Install library files from a package"
msgstr ""
":mod:`distutils.command.install_lib` --- Installe les fichiers de "
"bibliothèque à partir d'un paquet"

#: ../Doc/distutils/apiref.rst:2016
msgid ""
":mod:`distutils.command.install_scripts` --- Install script files from a "
"package"
msgstr ""
":mod:`distutils.command.install_scripts` --- Installe les fichiers de script "
"d'un paquet"

#: ../Doc/distutils/apiref.rst:2026
msgid ""
":mod:`distutils.command.register` --- Register a module with the Python "
"Package Index"
msgstr ""
":mod:`distutils.command.register` --- Enregistre un module dans l'Index des "
"paquets Python (*Python Package Index* ou *PyPI* en anglais)"

#: ../Doc/distutils/apiref.rst:2032
msgid ""
"The ``register`` command registers the package with the Python Package  "
"Index. This is described in more detail in :pep:`301`."
msgstr ""
"La commande ``register`` enregistre le paquet dans l'index des paquets "
"Python. Plus de détails à ce sujet dans la :pep:`301`."

#: ../Doc/distutils/apiref.rst:2039
msgid ":mod:`distutils.command.check` --- Check the meta-data of a package"
msgstr ""
":mod:`distutils.command.check` --- Vérifie les méta-données d'un paquet"

#: ../Doc/distutils/apiref.rst:2045
msgid ""
"The ``check`` command performs some tests on the meta-data of a package. For "
"example, it verifies that all required meta-data are provided as the "
"arguments passed to the :func:`setup` function."
msgstr ""
"La commande ``check`` effectue des tests sur les méta-données d'un paquet. "
"Par exemple, elle vérifie que toutes les méta-données requises sont fournies "
"lorsque les arguments sont passés à la fonction :func:`setup`."
