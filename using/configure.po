# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: 2023-03-20 09:35+0100\n"
"Last-Translator: Ezlo Picori <ezlo@protonmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.1\n"

#: using/configure.rst:3
msgid "Configure Python"
msgstr "Configurer Python"

#: using/configure.rst:8
msgid "Build Requirements"
msgstr ""

#: using/configure.rst:10
msgid "Features and minimum versions required to build CPython:"
msgstr ""

#: using/configure.rst:12
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required."
msgstr ""

#: using/configure.rst:17
msgid "On Windows, Microsoft Visual Studio 2017 or later is required."
msgstr ""

#: using/configure.rst:19
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating-"
"point numbers and `floating-point Not-a-Number (NaN) <https://en.wikipedia."
"org/wiki/NaN#Floating_point>`_."
msgstr ""

#: using/configure.rst:23
msgid "Support for threads."
msgstr ""

#: using/configure.rst:25
msgid ""
"OpenSSL 1.1.1 is the minimum version and OpenSSL 3.0.9 is the recommended "
"minimum version for the :mod:`ssl` and :mod:`hashlib` extension modules."
msgstr ""

#: using/configure.rst:28
msgid "SQLite 3.15.2 for the :mod:`sqlite3` extension module."
msgstr ""

#: using/configure.rst:30
msgid "Tcl/Tk 8.5.12 for the :mod:`tkinter` module."
msgstr ""

#: using/configure.rst:32
msgid ""
"Autoconf 2.71 and aclocal 1.16.5 are required to regenerate the :file:"
"`configure` script."
msgstr ""

#: using/configure.rst:35
msgid "Tcl/Tk version 8.3.1 is now required."
msgstr ""

#: using/configure.rst:38
msgid ""
"On Windows, Visual Studio 2015 or later is now required. Tcl/Tk version 8.4 "
"is now required."
msgstr ""

#: using/configure.rst:42
msgid ""
"Selected C99 features are now required, like ``<stdint.h>`` and ``static "
"inline`` functions."
msgstr ""

#: using/configure.rst:46
msgid "Thread support and OpenSSL 1.0.2 are now required."
msgstr ""

#: using/configure.rst:49
msgid "OpenSSL 1.1.1 is now required. Require SQLite 3.7.15."
msgstr ""

#: using/configure.rst:53
msgid ""
"C11 compiler, IEEE 754 and NaN support are now required. On Windows, Visual "
"Studio 2017 or later is required. Tcl/Tk version 8.5.12 is now required for "
"the :mod:`tkinter` module."
msgstr ""

#: using/configure.rst:58
msgid "Autoconf 2.71, aclocal 1.16.5 and SQLite 3.15.2 are now required."
msgstr ""

#: using/configure.rst:61
msgid ""
"See also :pep:`7` \"Style Guide for C Code\" and :pep:`11` \"CPython "
"platform support\"."
msgstr ""

#: using/configure.rst:66
#, fuzzy
msgid "Generated files"
msgstr "Options générales"

#: using/configure.rst:68
msgid ""
"To reduce build dependencies, Python source code contains multiple generated "
"files. Commands to regenerate all generated files::"
msgstr ""

#: using/configure.rst:71
msgid ""
"make regen-all\n"
"make regen-stdlib-module-names\n"
"make regen-limited-abi\n"
"make regen-configure"
msgstr ""

#: using/configure.rst:76
msgid ""
"The ``Makefile.pre.in`` file documents generated files, their inputs, and "
"tools used to regenerate them. Search for ``regen-*`` make targets."
msgstr ""

#: using/configure.rst:80
#, fuzzy
msgid "configure script"
msgstr "Options de configuration"

#: using/configure.rst:82
msgid ""
"The ``make regen-configure`` command regenerates the ``aclocal.m4`` file and "
"the ``configure`` script using the ``Tools/build/regen-configure.sh`` shell "
"script which uses an Ubuntu container to get the same tools versions and "
"have a reproducible output."
msgstr ""

#: using/configure.rst:87
msgid "The container is optional, the following command can be run locally::"
msgstr ""

#: using/configure.rst:89
msgid "autoreconf -ivf -Werror"
msgstr ""

#: using/configure.rst:91
msgid ""
"The generated files can change depending on the exact ``autoconf-archive``, "
"``aclocal`` and ``pkg-config`` versions."
msgstr ""

#: using/configure.rst:98
msgid "Configure Options"
msgstr "Options de configuration"

#: using/configure.rst:100
#, fuzzy
msgid "List all :file:`configure` script options using::"
msgstr ""
"Il est possible d'obtenir toutes les options de ``./configure`` avec ::"

#: using/configure.rst:102
msgid "./configure --help"
msgstr ""

#: using/configure.rst:104
msgid ""
"See also the :file:`Misc/SpecialBuilds.txt` in the Python source "
"distribution."
msgstr ""
"Voir aussi le fichier :file:`Misc/SpecialBuilds.txt` dans la distribution "
"des sources Python."

#: using/configure.rst:107
msgid "General Options"
msgstr "Options générales"

#: using/configure.rst:111
#, fuzzy
msgid ""
"Support loadable extensions in the :mod:`!_sqlite` extension module (default "
"is no) of the :mod:`sqlite3` module."
msgstr ""
"Active la prise en charge des extensions chargeables dans le module "
"d'extension :mod:`_sqlite` (désactivé par défaut)."

#: using/configure.rst:114
msgid ""
"See the :meth:`sqlite3.Connection.enable_load_extension` method of the :mod:"
"`sqlite3` module."
msgstr ""
"Voir la méthode  :meth:`sqlite3.Connection.enable_load_extension` du module :"
"mod:`sqlite3`."

#: using/configure.rst:121
msgid ""
"Disable IPv6 support (enabled by default if supported), see the :mod:"
"`socket` module."
msgstr ""
"Désactive la prise en charge d'IPv6 (activé par défaut si géré), voir le "
"module :mod:`socket`."

#: using/configure.rst:126
msgid "Define the size in bits of Python :class:`int` digits: 15 or 30 bits."
msgstr ""
"Définit la taille en bits des chiffres Python :class:`int` : 15 ou 30 bits."

#: using/configure.rst:128
msgid "By default, the digit size is 30."
msgstr "La valeur par défaut est ``30`` bits."

#: using/configure.rst:130
msgid "Define the ``PYLONG_BITS_IN_DIGIT`` to ``15`` or ``30``."
msgstr "Définit ``PYLONG_BITS_IN_DIGIT`` à ``15`` ou ``30``."

#: using/configure.rst:132
msgid "See :data:`sys.int_info.bits_per_digit <sys.int_info>`."
msgstr "Voir :data:`sys.int_info.bits_per_digit <sys.int_info>`."

#: using/configure.rst:136
msgid "Set the Python executable suffix to *SUFFIX*."
msgstr "Définit à *SUFFIX* le suffixe de l'exécutable Python."

#: using/configure.rst:138
msgid ""
"The default suffix is ``.exe`` on Windows and macOS (``python.exe`` "
"executable), ``.js`` on Emscripten node, ``.html`` on Emscripten browser, ``."
"wasm`` on WASI, and an empty string on other platforms (``python`` "
"executable)."
msgstr ""
"Le suffixe par défaut est ``.exe`` sur Windows et macOS (exécutable ``python."
"exe``), ``.js`` pour Emscripten (``node``), ``.html`` pour Emscripten "
"(navigateur), ``.wasm`` pour WASI, et une chaîne vide sur les autres "
"plateformes (exécutable ``python``)."

#: using/configure.rst:143
msgid ""
"The default suffix on WASM platform is one of ``.js``, ``.html`` or ``."
"wasm``."
msgstr ""
"les suffixes par défaut pour la plateforme WASM sont maintenant ``.js``, ``."
"html`` et ``.wasm``."

#: using/configure.rst:149
#, fuzzy
msgid ""
"Select the default time zone search path for :const:`zoneinfo.TZPATH`. See "
"the :ref:`Compile-time configuration <zoneinfo_data_compile_time_config>` of "
"the :mod:`zoneinfo` module."
msgstr ""
"Définit le chemin par défaut de recherche des fuseaux horaires pour :data:"
"`zoneinfo.TZPATH`. Voir la :ref:`Configuration à la compilation "
"<zoneinfo_data_compile_time_config>` du module :mod:`zoneinfo`."

#: using/configure.rst:153
msgid ""
"Default: ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/zoneinfo:/"
"etc/zoneinfo``."
msgstr ""
"Par défaut : ``/usr/share/zoneinfo:/usr/lib/zoneinfo:/usr/share/lib/"
"zoneinfo:/etc/zoneinfo``."

#: using/configure.rst:155
msgid "See :data:`os.pathsep` path separator."
msgstr "Voir le séparateur de chemins :data:`os.pathsep`."

#: using/configure.rst:161
msgid ""
"Build the ``_decimal`` extension module using a thread-local context rather "
"than a coroutine-local context (default), see the :mod:`decimal` module."
msgstr ""
"Compile le module d'extension ``_decimal`` en utilisant un contexte local au "
"fil d'exécution plutôt qu'un contexte local de coroutine (défaut). Voir le "
"module :mod:`decimal`."

#: using/configure.rst:164
#, fuzzy
msgid "See :const:`decimal.HAVE_CONTEXTVAR` and the :mod:`contextvars` module."
msgstr "Voir :data:`decimal.HAVE_CONTEXTVAR` et le module :mod:`contextvars`."

#: using/configure.rst:170
msgid "Override order to check db backends for the :mod:`dbm` module"
msgstr ""
"Change l'ordre de détection des implémentations de base de données pour le "
"module :mod:`dbm`."

#: using/configure.rst:172
msgid ""
"A valid value is a colon (``:``) separated string with the backend names:"
msgstr ""
"Une valeur valide est une chaîne de noms d'implémentations séparés par des "
"deux-points (``:``) :"

#: using/configure.rst:174
msgid "``ndbm``;"
msgstr "``ndbm`` ;"

#: using/configure.rst:175
msgid "``gdbm``;"
msgstr "``gdbm`` ;"

#: using/configure.rst:176
msgid "``bdb``."
msgstr "``bdb``."

#: using/configure.rst:180
msgid "Disable C locale coercion to a UTF-8 based locale (enabled by default)."
msgstr ""
"Désactive le forçage des paramètres régionaux C pour un paramètre régional "
"basé sur UTF-8 (activé par défaut)."

#: using/configure.rst:182
msgid "Don't define the ``PY_COERCE_C_LOCALE`` macro."
msgstr "Ne pas définir la macro ``PY_COERCE_C_LOCALE``."

#: using/configure.rst:184
msgid "See :envvar:`PYTHONCOERCECLOCALE` and the :pep:`538`."
msgstr "Voir :envvar:`PYTHONCOERCECLOCALE` et la :pep:`538`."

#: using/configure.rst:188
msgid "Disable all freelists except the empty tuple singleton."
msgstr ""

#: using/configure.rst:194
msgid "Python library directory name (default is ``lib``)."
msgstr "Nom du dossier de bibliothèques Python (par défaut : ``lib``)."

#: using/configure.rst:196
msgid "Fedora and SuSE use ``lib64`` on 64-bit platforms."
msgstr "Fedora et SuSE utilisent ``lib64`` sur les systèmes 64-bit."

#: using/configure.rst:198
msgid "See :data:`sys.platlibdir`."
msgstr "Voir :data:`sys.platlibdir`."

#: using/configure.rst:204
msgid ""
"Directory of wheel packages used by the :mod:`ensurepip` module (none by "
"default)."
msgstr ""
"Dossier de paquets *wheel* utilisé par le module :mod:`ensurepip` (par "
"défaut : aucun)."

#: using/configure.rst:207
#, fuzzy
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the :mod:`!ensurepip."
"_bundled` package."
msgstr ""
"La politique de paquets de certaines distributions Linux déconseille "
"l'inclusion des dépendances. Par exemple, Fedora installe les paquets "
"*wheel* dans le répertoire ``/usr/share/python-wheels/`` et n'installe pas "
"le paquet :mod:`ensurepip._bundled`."

#: using/configure.rst:216
msgid ""
"Whether configure should use :program:`pkg-config` to detect build "
"dependencies."
msgstr ""
"Est-ce que *configure* doit utiliser :program:`pkg-config` pour détecter les "
"dépendances de construction."

#: using/configure.rst:219
msgid "``check`` (default): :program:`pkg-config` is optional"
msgstr "``check`` (par défaut) : :program:`pkg-config` est optionnel"

#: using/configure.rst:220
msgid "``yes``: :program:`pkg-config` is mandatory"
msgstr "``yes`` : :program:`pkg-config` est obligatoire"

#: using/configure.rst:221
msgid "``no``: configure does not use :program:`pkg-config` even when present"
msgstr ""
"``no`` : *configure* n'utilise pas :program:`pkg-config` même s'il est "
"présent"

#: using/configure.rst:227
#, fuzzy
msgid "Turn on internal Python performance statistics gathering."
msgstr "Active la collecte des statistiques internes."

#: using/configure.rst:229
msgid ""
"By default, statistics gathering is off. Use ``python3 -X pystats`` command "
"or set ``PYTHONSTATS=1`` environment variable to turn on statistics "
"gathering at Python startup."
msgstr ""

#: using/configure.rst:233
msgid ""
"At Python exit, dump statistics if statistics gathering was on and not "
"cleared."
msgstr ""

#: using/configure.rst:708
msgid "Effects:"
msgstr ""

#: using/configure.rst:238
#, fuzzy
msgid "Add :option:`-X pystats <-X>` command line option."
msgstr "Ajout de l'option de ligne de commande :option:`-X showrefcount <-X>`."

#: using/configure.rst:239
#, fuzzy
msgid "Add :envvar:`!PYTHONSTATS` environment variable."
msgstr "Ajout de la variable d'environnement :envvar:`PYTHONTHREADDEBUG`."

#: using/configure.rst:240
#, fuzzy
msgid "Define the ``Py_STATS`` macro."
msgstr "Voir la macro ``PyDoc_STRVAR()``."

#: using/configure.rst:241
msgid "Add functions to the :mod:`sys` module:"
msgstr ""

#: using/configure.rst:243
#, fuzzy
msgid ":func:`!sys._stats_on`: Turns on statistics gathering."
msgstr "Active la collecte des statistiques internes."

#: using/configure.rst:244
msgid ":func:`!sys._stats_off`: Turns off statistics gathering."
msgstr ""

#: using/configure.rst:245
msgid ":func:`!sys._stats_clear`: Clears the statistics."
msgstr ""

#: using/configure.rst:246
msgid ""
":func:`!sys._stats_dump`: Dump statistics to file, and clears the statistics."
msgstr ""

#: using/configure.rst:248
#, fuzzy
msgid ""
"The statistics will be dumped to a arbitrary (probably unique) file in ``/"
"tmp/py_stats/`` (Unix) or ``C:\\temp\\py_stats\\`` (Windows). If that "
"directory does not exist, results will be printed on stderr."
msgstr ""
"Les statistiques sont placées dans un fichier arbitraire (probablement "
"unique) dans ``/tmp/py_stats/`` ou ``C:\\temp\\py_stats\\`` sous Windows."

#: using/configure.rst:252
msgid "Use ``Tools/scripts/summarize_stats.py`` to read the stats."
msgstr ""
"Utilisez ``Tools/scripts/summarize_stats.py`` pour lire les statistiques."

#: using/configure.rst:254
msgid "Statistics:"
msgstr ""

#: using/configure.rst:256
msgid "Opcode:"
msgstr ""

#: using/configure.rst:258
msgid "Specialization: success, failure, hit, deferred, miss, deopt, failures;"
msgstr ""

#: using/configure.rst:259
msgid "Execution count;"
msgstr ""

#: using/configure.rst:260
msgid "Pair count."
msgstr ""

#: using/configure.rst:262
msgid "Call:"
msgstr ""

#: using/configure.rst:264
msgid "Inlined Python calls;"
msgstr ""

#: using/configure.rst:265
msgid "PyEval calls;"
msgstr ""

#: using/configure.rst:266
msgid "Frames pushed;"
msgstr ""

#: using/configure.rst:267
msgid "Frame object created;"
msgstr ""

#: using/configure.rst:268
msgid ""
"Eval calls: vector, generator, legacy, function VECTORCALL, build class, "
"slot, function \"ex\", API, method."
msgstr ""

#: using/configure.rst:271
msgid "Object:"
msgstr ""

#: using/configure.rst:273
msgid "incref and decref;"
msgstr ""

#: using/configure.rst:274
msgid "interpreter incref and decref;"
msgstr ""

#: using/configure.rst:275
msgid "allocations: all, 512 bytes, 4 kiB, big;"
msgstr ""

#: using/configure.rst:276
msgid "free;"
msgstr ""

#: using/configure.rst:277
msgid "to/from free lists;"
msgstr ""

#: using/configure.rst:278
msgid "dictionary materialized/dematerialized;"
msgstr ""

#: using/configure.rst:279
msgid "type cache;"
msgstr ""

#: using/configure.rst:280
msgid "optimization attempts;"
msgstr ""

#: using/configure.rst:281
msgid "optimization traces created/executed;"
msgstr ""

#: using/configure.rst:282
msgid "uops executed."
msgstr ""

#: using/configure.rst:284
msgid "Garbage collector:"
msgstr ""

#: using/configure.rst:286
msgid "Garbage collections;"
msgstr ""

#: using/configure.rst:287
msgid "Objects visited;"
msgstr ""

#: using/configure.rst:288
msgid "Objects collected."
msgstr ""

#: using/configure.rst:296
msgid ""
"Enables **experimental** support for running Python without the :term:"
"`global interpreter lock` (GIL): free threading build."
msgstr ""

#: using/configure.rst:299
msgid ""
"Defines the ``Py_GIL_DISABLED`` macro and adds ``\"t\"`` to :data:`sys."
"abiflags`."
msgstr ""

#: using/configure.rst:302
msgid "See :ref:`whatsnew313-free-threaded-cpython` for more detail."
msgstr ""

#: using/configure.rst:308
msgid "Path to ``pkg-config`` utility."
msgstr ""

#: using/configure.rst:313
#, fuzzy
msgid "``pkg-config`` options."
msgstr "Options de configuration"

#: using/configure.rst:317
#, fuzzy
msgid "C compiler options"
msgstr "Options de configuration"

#: using/configure.rst:1228
msgid "C compiler command."
msgstr ""

#: using/configure.rst:1240
msgid "C compiler flags."
msgstr ""

#: using/configure.rst:329
msgid "C preprocessor command."
msgstr ""

#: using/configure.rst:333
msgid "C preprocessor flags, e.g. :samp:`-I{include_dir}`."
msgstr ""

#: using/configure.rst:779
msgid "Linker options"
msgstr ""

#: using/configure.rst:341
msgid "Linker flags, e.g. :samp:`-L{library_directory}`."
msgstr ""

#: using/configure.rst:345
msgid "Libraries to pass to the linker, e.g. :samp:`-l{library}`."
msgstr ""

#: using/configure.rst:349
msgid "Name for machine-dependent library files."
msgstr ""

#: using/configure.rst:353
msgid "Options for third-party dependencies"
msgstr ""

#: using/configure.rst:360
msgid ""
"C compiler and linker flags to link Python to ``libbz2``, used by :mod:`bz2` "
"module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:366
msgid ""
"C compiler and linker flags for ``libncurses`` or ``libncursesw``, used by :"
"mod:`curses` module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:372
msgid "C compiler and linker flags for ``gdbm``."
msgstr ""

#: using/configure.rst:377
msgid ""
"C compiler and linker flags for ``libb2`` (:ref:`BLAKE2 <hashlib-blake2>`), "
"used by :mod:`hashlib` module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:383
msgid ""
"C compiler and linker flags for ``libedit``, used by :mod:`readline` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:389
msgid ""
"C compiler and linker flags for ``libffi``, used by :mod:`ctypes` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:395
msgid ""
"C compiler and linker flags for ``libmpdec``, used by :mod:`decimal` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:400
msgid ""
"These environment variables have no effect unless :option:`--with-system-"
"libmpdec` is specified."
msgstr ""

#: using/configure.rst:406
msgid ""
"C compiler and linker flags for ``liblzma``, used by :mod:`lzma` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:412
msgid ""
"C compiler and linker flags for ``libreadline``, used by :mod:`readline` "
"module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:418
msgid ""
"C compiler and linker flags for ``libsqlite3``, used by :mod:`sqlite3` "
"module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:424
msgid ""
"C compiler and linker flags for ``libuuid``, used by :mod:`uuid` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:430
msgid "C compiler and linker flags for PANEL, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:432
msgid ""
"C compiler and linker flags for ``libpanel`` or ``libpanelw``, used by :mod:"
"`curses.panel` module, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:438
msgid "C compiler and linker flags for TCLTK, overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:443
msgid ""
"C compiler and linker flags for ``libzlib``, used by :mod:`gzip` module, "
"overriding ``pkg-config``."
msgstr ""

#: using/configure.rst:448
msgid "WebAssembly Options"
msgstr "Options de WebAssembly"

#: using/configure.rst:452
msgid "Set build flavor for ``wasm32-emscripten``."
msgstr "Définit la version de construction pour ``wasm32-emscripten``."

#: using/configure.rst:454
msgid "``browser`` (default): preload minimal stdlib, default MEMFS."
msgstr ""
"``browser`` (par défaut) : précharge une version minimale de la *stdlib*, "
"par défaut MEMFS."

#: using/configure.rst:455
msgid "``node``: NODERAWFS and pthread support."
msgstr "``node``: NODERAWFS et la gestion des *pthread*."

#: using/configure.rst:461
msgid "Turn on dynamic linking support for WASM."
msgstr "Active la gestion d'édition de liens dynamique pour WASM"

#: using/configure.rst:463
msgid ""
"Dynamic linking enables ``dlopen``. File size of the executable increases "
"due to limited dead code elimination and additional features."
msgstr ""
"L'édition de liens dynamique autorise ``dlopen``. La taille du fichier "
"exécutable augmente en raison de l'élimination moindre du code mort et des "
"fonctionnalités supplémentaires."

#: using/configure.rst:470
msgid "Turn on pthreads support for WASM."
msgstr "Active la gestion des *pthreads* pour WASM."

#: using/configure.rst:476
msgid "Install Options"
msgstr "Options d'installation"

#: using/configure.rst:480
msgid ""
"Install architecture-independent files in PREFIX. On Unix, it defaults to :"
"file:`/usr/local`."
msgstr ""

#: using/configure.rst:483
msgid "This value can be retrieved at runtime using :data:`sys.prefix`."
msgstr ""

#: using/configure.rst:485
msgid ""
"As an example, one can use ``--prefix=\"$HOME/.local/\"`` to install a "
"Python in its home directory."
msgstr ""

#: using/configure.rst:490
msgid ""
"Install architecture-dependent files in EPREFIX, defaults to :option:`--"
"prefix`."
msgstr ""

#: using/configure.rst:492
msgid "This value can be retrieved at runtime using :data:`sys.exec_prefix`."
msgstr ""

#: using/configure.rst:496
#, fuzzy
msgid ""
"Don't build nor install test modules, like the :mod:`test` package or the :"
"mod:`!_testcapi` extension module (built and installed by default)."
msgstr ""
"Désactive la compilation et l'installation des modules de test, comme le "
"paquet :mod:`test` et le module d'extension :mod:`_testcapi` (compilés et "
"installés par défaut)."

#: using/configure.rst:503
msgid "Select the :mod:`ensurepip` command run on Python installation:"
msgstr ""
"Sélectionne la commande :mod:`ensurepip` exécutée à l'installation de "
"Python :"

#: using/configure.rst:505
msgid ""
"``upgrade`` (default): run ``python -m ensurepip --altinstall --upgrade`` "
"command."
msgstr ""
"``upgrade`` (défaut) : exécute la commande ``python -m ensurepip --"
"altinstall --upgrade`` ;"

#: using/configure.rst:507
msgid "``install``: run ``python -m ensurepip --altinstall`` command;"
msgstr ""
"``install`` : exécute la commande ``python -m ensurepip --altinstall`` ;"

#: using/configure.rst:508
msgid "``no``: don't run ensurepip;"
msgstr "``no`` : n'exécute pas *ensurepip*."

#: using/configure.rst:514
msgid "Performance options"
msgstr "Options de performance"

#: using/configure.rst:516
#, fuzzy
msgid ""
"Configuring Python using ``--enable-optimizations --with-lto`` (PGO + LTO) "
"is recommended for best performance. The experimental ``--enable-bolt`` flag "
"can also be used to improve performance."
msgstr ""
"Pour de meilleures performances, il est recommandé de configurer Python avec "
"``--enable-optimizations --with-lto`` (*PGO* + *LTO*)."

#: using/configure.rst:522
msgid ""
"Enable Profile Guided Optimization (PGO) using :envvar:`PROFILE_TASK` "
"(disabled by default)."
msgstr ""
"Active l'optimisation guidée par profilage (*Profile Guided Optimization*, "
"PGO) en utilisant :envvar:`PROFILE_TASK` (désactivé par défaut)."

#: using/configure.rst:525
msgid ""
"The C compiler Clang requires ``llvm-profdata`` program for PGO. On macOS, "
"GCC also requires it: GCC is just an alias to Clang on macOS."
msgstr ""
"L'utilisation de PGO avec le compilateur C Clang nécessite ``llvm-"
"profdata``. Sur macOS, GCC est juste un alias vers Clang et partage donc "
"cette contrainte."

#: using/configure.rst:528
msgid ""
"Disable also semantic interposition in libpython if ``--enable-shared`` and "
"GCC is used: add ``-fno-semantic-interposition`` to the compiler and linker "
"flags."
msgstr ""
"Désactive également l'interposition sémantique dans *libpython* si GCC est "
"utilisé avec ``--enable-shared`` : ajoute l'option ``-fno-semantic-"
"interposition`` à la compilation et à l'édition des liens."

#: using/configure.rst:534
msgid ""
"During the build, you may encounter compiler warnings about profile data not "
"being available for some source files. These warnings are harmless, as only "
"a subset of the code is exercised during profile data acquisition. To "
"disable these warnings on Clang, manually suppress them by adding ``-Wno-"
"profile-instr-unprofiled`` to :envvar:`CFLAGS`."
msgstr ""

#: using/configure.rst:543
msgid "Use ``-fno-semantic-interposition`` on GCC."
msgstr "Utilisation de ``-fno-semantic-interposition`` avec GCC."

#: using/configure.rst:548
msgid ""
"Environment variable used in the Makefile: Python command line arguments for "
"the PGO generation task."
msgstr ""
"Variable d'environnement utilisée dans le ``Makefile`` : arguments Python "
"utilisés pour la tâche de préparation de la PGO."

#: using/configure.rst:551
msgid "Default: ``-m test --pgo --timeout=$(TESTTIMEOUT)``."
msgstr "Par défaut : ``-m test --pgo --timeout=$(TESTTIMEOUT)``."

#: using/configure.rst:555
msgid "Task failure is no longer ignored silently."
msgstr ""

#: using/configure.rst:560
msgid "Enable Link Time Optimization (LTO) in any build (disabled by default)."
msgstr ""
"Active l'optimisation à l'édition des liens (*Link Time Optimization*, LTO) "
"à la compilation (désactivé par défaut)."

#: using/configure.rst:562
msgid ""
"The C compiler Clang requires ``llvm-ar`` for LTO (``ar`` on macOS), as well "
"as an LTO-aware linker (``ld.gold`` or ``lld``)."
msgstr ""
"Le compilateur C Clang nécessite ``llvm-ar`` pour la LTO (``ar`` sur macOS), "
"ainsi qu'un éditeur de liens implémentant la LTO (``ld.gold`` ou ``lld``)."

#: using/configure.rst:567
msgid "To use ThinLTO feature, use ``--with-lto=thin`` on Clang."
msgstr ""
"Pour avoir la fonctionnalité ThinLTO, utilisez ``--with-lto=thin`` avec "
"Clang."

#: using/configure.rst:570
msgid ""
"Use ThinLTO as the default optimization policy on Clang if the compiler "
"accepts the flag."
msgstr ""

#: using/configure.rst:575
msgid ""
"Enable usage of the `BOLT post-link binary optimizer <https://github.com/"
"llvm/llvm-project/tree/main/bolt>`_ (disabled by default)."
msgstr ""

#: using/configure.rst:579
msgid ""
"BOLT is part of the LLVM project but is not always included in their binary "
"distributions. This flag requires that ``llvm-bolt`` and ``merge-fdata`` are "
"available."
msgstr ""

#: using/configure.rst:583
msgid ""
"BOLT is still a fairly new project so this flag should be considered "
"experimental for now. Because this tool operates on machine code its success "
"is dependent on a combination of the build environment + the other "
"optimization configure args + the CPU architecture, and not all combinations "
"are supported. BOLT versions before LLVM 16 are known to crash BOLT under "
"some scenarios. Use of LLVM 16 or newer for BOLT optimization is strongly "
"encouraged."
msgstr ""

#: using/configure.rst:591
msgid ""
"The :envvar:`!BOLT_INSTRUMENT_FLAGS` and :envvar:`!BOLT_APPLY_FLAGS` :"
"program:`configure` variables can be defined to override the default set of "
"arguments for :program:`llvm-bolt` to instrument and apply BOLT data to "
"binaries, respectively."
msgstr ""

#: using/configure.rst:600
msgid ""
"Arguments to ``llvm-bolt`` when creating a `BOLT optimized binary <https://"
"github.com/facebookarchive/BOLT>`_."
msgstr ""

#: using/configure.rst:607
msgid "Arguments to ``llvm-bolt`` when instrumenting binaries."
msgstr ""

#: using/configure.rst:613
msgid ""
"Enable computed gotos in evaluation loop (enabled by default on supported "
"compilers)."
msgstr ""
"Autorise les *gotos* calculés dans les boucles (activé par défaut pour les "
"compilateurs qui le gèrent)."

#: using/configure.rst:618
#, fuzzy
msgid ""
"Disable the fast :ref:`mimalloc <mimalloc>` allocator (enabled by default)."
msgstr ""
"Désactive l'allocateur spécialisé de mémoire de Python :ref:`pymalloc "
"<pymalloc>` (activé par défaut)."

#: using/configure.rst:628
msgid "See also :envvar:`PYTHONMALLOC` environment variable."
msgstr "Voir aussi la variable d'environnement :envvar:`PYTHONMALLOC`."

#: using/configure.rst:625
msgid ""
"Disable the specialized Python memory allocator :ref:`pymalloc <pymalloc>` "
"(enabled by default)."
msgstr ""
"Désactive l'allocateur spécialisé de mémoire de Python :ref:`pymalloc "
"<pymalloc>` (activé par défaut)."

#: using/configure.rst:632
msgid ""
"Disable static documentation strings to reduce the memory footprint (enabled "
"by default). Documentation strings defined in Python are not affected."
msgstr ""
"Désactive les chaînes de documentation statiques pour réduire l'empreinte "
"mémoire (activé par défaut). Les chaînes définies dans Python ne sont pas "
"affectées."

#: using/configure.rst:635
msgid "Don't define the ``WITH_DOC_STRINGS`` macro."
msgstr "Ne définit pas la macro ``WITH_DOC_STRINGS``."

#: using/configure.rst:637
msgid "See the ``PyDoc_STRVAR()`` macro."
msgstr "Voir la macro ``PyDoc_STRVAR()``."

#: using/configure.rst:641
msgid "Enable C-level code profiling with ``gprof`` (disabled by default)."
msgstr "Active le profilage du code C avec ``gprof`` (désactivé par défaut)."

#: using/configure.rst:645
msgid ""
"Add ``-fstrict-overflow`` to the C compiler flags (by default we add ``-fno-"
"strict-overflow`` instead)."
msgstr ""

#: using/configure.rst:652
msgid "Python Debug Build"
msgstr "Compilation de Python en mode débogage"

#: using/configure.rst:654
msgid ""
"A debug build is Python built with the :option:`--with-pydebug` configure "
"option."
msgstr ""
"Une compilation de Python en mode débogage se fait avec l'option de "
"configuration :option:`--with-pydebug`."

#: using/configure.rst:657
msgid "Effects of a debug build:"
msgstr "Effets du mode débogage :"

#: using/configure.rst:659
msgid ""
"Display all warnings by default: the list of default warning filters is "
"empty in the :mod:`warnings` module."
msgstr ""
"Affichage de tous les avertissements par défaut : le filtre par défaut des "
"avertissements est vide dans le module :mod:`warnings`."

#: using/configure.rst:661
msgid "Add ``d`` to :data:`sys.abiflags`."
msgstr "Ajout de ``d`` à :data:`sys.abiflags`."

#: using/configure.rst:662
#, fuzzy
msgid "Add :func:`!sys.gettotalrefcount` function."
msgstr "Ajout de la fonction :func:`sys.gettotalrefcount`."

#: using/configure.rst:663
msgid "Add :option:`-X showrefcount <-X>` command line option."
msgstr "Ajout de l'option de ligne de commande :option:`-X showrefcount <-X>`."

#: using/configure.rst:664
msgid ""
"Add :option:`-d` command line option and :envvar:`PYTHONDEBUG` environment "
"variable to debug the parser."
msgstr ""

#: using/configure.rst:666
msgid ""
"Add support for the ``__lltrace__`` variable: enable low-level tracing in "
"the bytecode evaluation loop if the variable is defined."
msgstr ""
"Prise en charge de la variable ``__ltrace__`` : si la variable est définie, "
"active le traçage de bas niveau dans la boucle d'évaluation du code "
"intermédiaire."

#: using/configure.rst:668
msgid ""
"Install :ref:`debug hooks on memory allocators <default-memory-allocators>` "
"to detect buffer overflow and other memory errors."
msgstr ""
"Installation des :ref:`debug hooks on memory allocators <default-memory-"
"allocators>` pour détecter les débordements de mémoire tampon et autres "
"erreurs de mémoire."

#: using/configure.rst:670
msgid "Define ``Py_DEBUG`` and ``Py_REF_DEBUG`` macros."
msgstr "Définition des macros ``Py_DEBUG`` et ``Py_REF_DEBUG``."

#: using/configure.rst:671
msgid ""
"Add runtime checks: code surrounded by ``#ifdef Py_DEBUG`` and ``#endif``. "
"Enable ``assert(...)`` and ``_PyObject_ASSERT(...)`` assertions: don't set "
"the ``NDEBUG`` macro (see also the :option:`--with-assertions` configure "
"option). Main runtime checks:"
msgstr ""
"Ajout de vérifications à l'exécution : codes entourés de ``#ifdef Py_DEBUG`` "
"et ``#endif``. Active les assertions ``assert(...)`` et "
"``_PyObject_ASSERT(...)`` : ne définit pas la macro ``NDEBUG`` (voir aussi "
"l'option de configuration :option:`--with-assertions`). Les principales "
"vérifications à l'exécution :"

#: using/configure.rst:676
msgid "Add sanity checks on the function arguments."
msgstr "Ajout des contrôles d'intégrité sur les arguments de fonction."

#: using/configure.rst:677
msgid ""
"Unicode and int objects are created with their memory filled with a pattern "
"to detect usage of uninitialized objects."
msgstr ""
"Les objets ``unicode`` et ``int`` sont créés avec un motif particulier à "
"l'initialisation de leur mémoire afin de détecter l'usage d'objets non "
"initialisés."

#: using/configure.rst:679
msgid ""
"Ensure that functions which can clear or replace the current exception are "
"not called with an exception raised."
msgstr ""
"S'assurer que les fonctions qui peuvent effacer ou remplacer l'exception "
"courante ne sont pas appelées avec une exception levée."

#: using/configure.rst:681
msgid "Check that deallocator functions don't change the current exception."
msgstr ""
"S'assurer que les fonctions qui désallouent ne changent pas l'exception en "
"cours."

#: using/configure.rst:682
msgid ""
"The garbage collector (:func:`gc.collect` function) runs some basic checks "
"on objects consistency."
msgstr ""
"Le ramasse-miettes (la fonction :func:`gc.collect`) effectue quelques tests "
"basiques relatifs à la cohérence des objets."

#: using/configure.rst:684
#, fuzzy
msgid ""
"The :c:macro:`!Py_SAFE_DOWNCAST()` macro checks for integer underflow and "
"overflow when downcasting from wide types to narrow types."
msgstr ""
"La macro :c:macro:`Py_SAFE_DOWNCAST()` vérifie s'il y a des débordements "
"d'entier lors du passage de types grands vers des types plus petits."

#: using/configure.rst:687
msgid ""
"See also the :ref:`Python Development Mode <devmode>` and the :option:`--"
"with-trace-refs` configure option."
msgstr ""
"Voir aussi le :ref:`mode de développement Python <devmode>` et l'option de "
"configuration :option:`--with-trace-refs`."

#: using/configure.rst:690
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro (see the :"
"option:`--with-trace-refs` option)."
msgstr ""

#: using/configure.rst:697
msgid "Debug options"
msgstr ""

#: using/configure.rst:701
msgid ""
":ref:`Build Python in debug mode <debug-build>`: define the ``Py_DEBUG`` "
"macro (disabled by default)."
msgstr ""

#: using/configure.rst:706
msgid "Enable tracing references for debugging purpose (disabled by default)."
msgstr ""

#: using/configure.rst:710
msgid "Define the ``Py_TRACE_REFS`` macro."
msgstr ""

#: using/configure.rst:711
#, fuzzy
msgid "Add :func:`!sys.getobjects` function."
msgstr "Ajout de la fonction :func:`sys.gettotalrefcount`."

#: using/configure.rst:712
msgid "Add :envvar:`PYTHONDUMPREFS` environment variable."
msgstr ""

#: using/configure.rst:714
msgid ""
"The :envvar:`PYTHONDUMPREFS` environment variable can be used to dump "
"objects and reference counts still alive at Python exit."
msgstr ""

#: using/configure.rst:717
msgid ":ref:`Statically allocated objects <static-types>` are not traced."
msgstr ""

#: using/configure.rst:721
msgid ""
"This build is now ABI compatible with release build and :ref:`debug build "
"<debug-build>`."
msgstr ""

#: using/configure.rst:727
msgid ""
"Build with C assertions enabled (default is no): ``assert(...);`` and "
"``_PyObject_ASSERT(...);``."
msgstr ""

#: using/configure.rst:730
msgid ""
"If set, the ``NDEBUG`` macro is not defined in the :envvar:`OPT` compiler "
"variable."
msgstr ""

#: using/configure.rst:733
msgid ""
"See also the :option:`--with-pydebug` option (:ref:`debug build <debug-"
"build>`) which also enables assertions."
msgstr ""

#: using/configure.rst:740
msgid "Enable Valgrind support (default is no)."
msgstr ""

#: using/configure.rst:744
msgid "Enable DTrace support (default is no)."
msgstr ""

#: using/configure.rst:746
msgid ""
"See :ref:`Instrumenting CPython with DTrace and SystemTap <instrumentation>`."
msgstr ""

#: using/configure.rst:753
msgid ""
"Enable AddressSanitizer memory error detector, ``asan`` (default is no)."
msgstr ""

#: using/configure.rst:759
msgid ""
"Enable MemorySanitizer allocation error detector, ``msan`` (default is no)."
msgstr ""

#: using/configure.rst:765
msgid ""
"Enable UndefinedBehaviorSanitizer undefined behaviour detector, ``ubsan`` "
"(default is no)."
msgstr ""

#: using/configure.rst:772
msgid "Enable ThreadSanitizer data race detector, ``tsan`` (default is no)."
msgstr ""

#: using/configure.rst:783
msgid "Enable building a shared Python library: ``libpython`` (default is no)."
msgstr ""

#: using/configure.rst:787
msgid ""
"Do not build ``libpythonMAJOR.MINOR.a`` and do not install ``python.o`` "
"(built and enabled by default)."
msgstr ""

#: using/configure.rst:794
msgid "Libraries options"
msgstr ""

#: using/configure.rst:798
msgid "Link against additional libraries (default is no)."
msgstr ""

#: using/configure.rst:802
msgid ""
"Build the :mod:`!pyexpat` module using an installed ``expat`` library "
"(default is no)."
msgstr ""

#: using/configure.rst:807
#, fuzzy
msgid ""
"Build the ``_decimal`` extension module using an installed ``mpdecimal`` "
"library, see the :mod:`decimal` module (default is yes)."
msgstr ""
"Compile le module d'extension ``_decimal`` en utilisant un contexte local au "
"fil d'exécution plutôt qu'un contexte local de coroutine (défaut). Voir le "
"module :mod:`decimal`."

#: using/configure.rst:812
msgid "Default to using the installed ``mpdecimal`` library."
msgstr ""

#: using/configure.rst:815
msgid ""
"A copy of the ``mpdecimal`` library sources will no longer be distributed "
"with Python 3.15."
msgstr ""

#: using/configure.rst:819
msgid ":option:`LIBMPDEC_CFLAGS` and :option:`LIBMPDEC_LIBS`."
msgstr ""

#: using/configure.rst:823
#, fuzzy
msgid "Designate a backend library for the :mod:`readline` module."
msgstr ""
"Change l'ordre de détection des implémentations de base de données pour le "
"module :mod:`dbm`."

#: using/configure.rst:825
msgid "readline: Use readline as the backend."
msgstr ""

#: using/configure.rst:826
msgid "editline: Use editline as the backend."
msgstr ""

#: using/configure.rst:832
msgid "Don't build the :mod:`readline` module (built by default)."
msgstr ""

#: using/configure.rst:834
msgid "Don't define the ``HAVE_LIBREADLINE`` macro."
msgstr ""

#: using/configure.rst:840
msgid ""
"Override ``libm`` math library to *STRING* (default is system-dependent)."
msgstr ""

#: using/configure.rst:844
msgid "Override ``libc`` C library to *STRING* (default is system-dependent)."
msgstr ""

#: using/configure.rst:848
msgid "Root of the OpenSSL directory."
msgstr ""

#: using/configure.rst:854
msgid "Set runtime library directory (rpath) for OpenSSL libraries:"
msgstr ""

#: using/configure.rst:856
msgid "``no`` (default): don't set rpath;"
msgstr ""

#: using/configure.rst:857
msgid ""
"``auto``: auto-detect rpath from :option:`--with-openssl` and ``pkg-config``;"
msgstr ""

#: using/configure.rst:859
msgid "*DIR*: set an explicit rpath."
msgstr ""

#: using/configure.rst:865
msgid "Security Options"
msgstr ""

#: using/configure.rst:869
msgid "Select hash algorithm for use in ``Python/pyhash.c``:"
msgstr ""

#: using/configure.rst:871
msgid "``siphash13`` (default);"
msgstr ""

#: using/configure.rst:872
msgid "``siphash24``;"
msgstr ""

#: using/configure.rst:873
msgid "``fnv``."
msgstr ""

#: using/configure.rst:877
msgid "``siphash13`` is added and it is the new default."
msgstr ""

#: using/configure.rst:882
msgid "Built-in hash modules:"
msgstr ""

#: using/configure.rst:884
msgid "``md5``;"
msgstr ""

#: using/configure.rst:885
msgid "``sha1``;"
msgstr ""

#: using/configure.rst:886
msgid "``sha256``;"
msgstr ""

#: using/configure.rst:887
msgid "``sha512``;"
msgstr ""

#: using/configure.rst:888
msgid "``sha3`` (with shake);"
msgstr ""

#: using/configure.rst:889
msgid "``blake2``."
msgstr ""

#: using/configure.rst:895
msgid "Override the OpenSSL default cipher suites string:"
msgstr ""

#: using/configure.rst:897
msgid "``python`` (default): use Python's preferred selection;"
msgstr ""

#: using/configure.rst:898
msgid "``openssl``: leave OpenSSL's defaults untouched;"
msgstr ""

#: using/configure.rst:899
msgid "*STRING*: use a custom string"
msgstr ""

#: using/configure.rst:901
msgid "See the :mod:`ssl` module."
msgstr ""

#: using/configure.rst:907
msgid ""
"The settings ``python`` and *STRING* also set TLS 1.2 as minimum protocol "
"version."
msgstr ""

#: using/configure.rst:911
msgid "macOS Options"
msgstr ""

#: using/configure.rst:913
msgid "See :source:`Mac/README.rst`."
msgstr ""

#: using/configure.rst:918
msgid ""
"Create a universal binary build. *SDKDIR* specifies which macOS SDK should "
"be used to perform the build (default is no)."
msgstr ""

#: using/configure.rst:924
msgid ""
"Create a Python.framework rather than a traditional Unix install. Optional "
"*INSTALLDIR* specifies the installation path (default is no)."
msgstr ""

#: using/configure.rst:929
msgid ""
"Specify the kind of universal binary that should be created. This option is "
"only valid when :option:`--enable-universalsdk` is set."
msgstr ""

#: using/configure.rst:932
msgid "Options:"
msgstr ""

#: using/configure.rst:934
msgid "``universal2``;"
msgstr ""

#: using/configure.rst:935
msgid "``32-bit``;"
msgstr ""

#: using/configure.rst:936
msgid "``64-bit``;"
msgstr ""

#: using/configure.rst:937
msgid "``3-way``;"
msgstr ""

#: using/configure.rst:938
msgid "``intel``;"
msgstr ""

#: using/configure.rst:939
msgid "``intel-32``;"
msgstr ""

#: using/configure.rst:940
msgid "``intel-64``;"
msgstr ""

#: using/configure.rst:941
msgid "``all``."
msgstr ""

#: using/configure.rst:945
msgid ""
"Specify the name for the python framework on macOS only valid when :option:"
"`--enable-framework` is set (default: ``Python``)."
msgstr ""

#: using/configure.rst:951
msgid ""
"The Python standard library contains strings that are known to trigger "
"automated inspection tool errors when submitted for distribution by the "
"macOS and iOS App Stores. If enabled, this option will apply the list of "
"patches that are known to correct app store compliance. A custom patch file "
"can also be specified. This option is disabled by default."
msgstr ""

#: using/configure.rst:960
#, fuzzy
msgid "iOS Options"
msgstr "Options de configuration"

#: using/configure.rst:962
msgid "See :source:`iOS/README.rst`."
msgstr ""

#: using/configure.rst:966
msgid ""
"Create a Python.framework. Unlike macOS, the *INSTALLDIR* argument "
"specifying the installation path is mandatory."
msgstr ""

#: using/configure.rst:971
msgid "Specify the name for the framework (default: ``Python``)."
msgstr ""

#: using/configure.rst:975
msgid "Cross Compiling Options"
msgstr ""

#: using/configure.rst:977
msgid ""
"Cross compiling, also known as cross building, can be used to build Python "
"for another CPU architecture or platform. Cross compiling requires a Python "
"interpreter for the build platform. The version of the build Python must "
"match the version of the cross compiled host Python."
msgstr ""

#: using/configure.rst:984
msgid ""
"configure for building on BUILD, usually guessed by :program:`config.guess`."
msgstr ""

#: using/configure.rst:988
msgid "cross-compile to build programs to run on HOST (target platform)"
msgstr ""

#: using/configure.rst:992
msgid "path to build ``python`` binary for cross compiling"
msgstr ""

#: using/configure.rst:998
msgid "An environment variable that points to a file with configure overrides."
msgstr ""

#: using/configure.rst:1000
msgid "Example *config.site* file:"
msgstr ""

#: using/configure.rst:1002
msgid ""
"# config.site-aarch64\n"
"ac_cv_buggy_getaddrinfo=no\n"
"ac_cv_file__dev_ptmx=yes\n"
"ac_cv_file__dev_ptc=no"
msgstr ""

#: using/configure.rst:1011
msgid "Program to run CPython for the host platform for cross-compilation."
msgstr ""

#: using/configure.rst:1016
msgid "Cross compiling example::"
msgstr ""

#: using/configure.rst:1018
msgid ""
"CONFIG_SITE=config.site-aarch64 ../configure \\\n"
"    --build=x86_64-pc-linux-gnu \\\n"
"    --host=aarch64-unknown-linux-gnu \\\n"
"    --with-build-python=../x86_64/python"
msgstr ""

#: using/configure.rst:1025
msgid "Python Build System"
msgstr ""

#: using/configure.rst:1028
msgid "Main files of the build system"
msgstr ""

#: using/configure.rst:1030
msgid ":file:`configure.ac` => :file:`configure`;"
msgstr ""

#: using/configure.rst:1031
msgid ""
":file:`Makefile.pre.in` => :file:`Makefile` (created by :file:`configure`);"
msgstr ""

#: using/configure.rst:1032
msgid ":file:`pyconfig.h` (created by :file:`configure`);"
msgstr ""

#: using/configure.rst:1033
msgid ""
":file:`Modules/Setup`: C extensions built by the Makefile using :file:"
"`Module/makesetup` shell script;"
msgstr ""

#: using/configure.rst:1037
msgid "Main build steps"
msgstr ""

#: using/configure.rst:1039
msgid "C files (``.c``) are built as object files (``.o``)."
msgstr ""

#: using/configure.rst:1040
msgid "A static ``libpython`` library (``.a``) is created from objects files."
msgstr ""

#: using/configure.rst:1041
msgid ""
"``python.o`` and the static ``libpython`` library are linked into the final "
"``python`` program."
msgstr ""

#: using/configure.rst:1043
msgid "C extensions are built by the Makefile (see :file:`Modules/Setup`)."
msgstr ""

#: using/configure.rst:1046
msgid "Main Makefile targets"
msgstr ""

#: using/configure.rst:1049
msgid "make"
msgstr ""

#: using/configure.rst:1051
msgid ""
"For the most part, when rebuilding after editing some code or refreshing "
"your checkout from upstream, all you need to do is execute ``make``, which "
"(per Make's semantics) builds the default target, the first one defined in "
"the Makefile.  By tradition (including in the CPython project) this is "
"usually the ``all`` target. The ``configure`` script expands an ``autoconf`` "
"variable, ``@DEF_MAKE_ALL_RULE@`` to describe precisely which targets ``make "
"all`` will build. The three choices are:"
msgstr ""

#: using/configure.rst:1060
msgid "``profile-opt`` (configured with ``--enable-optimizations``)"
msgstr ""

#: using/configure.rst:1061
msgid "``build_wasm`` (configured with ``--with-emscripten-target``)"
msgstr ""

#: using/configure.rst:1062
msgid ""
"``build_all`` (configured without explicitly using either of the others)"
msgstr ""

#: using/configure.rst:1064
msgid ""
"Depending on the most recent source file changes, Make will rebuild any "
"targets (object files and executables) deemed out-of-date, including running "
"``configure`` again if necessary. Source/target dependencies are many and "
"maintained manually however, so Make sometimes doesn't have all the "
"information necessary to correctly detect all targets which need to be "
"rebuilt.  Depending on which targets aren't rebuilt, you might experience a "
"number of problems. If you have build or test problems which you can't "
"otherwise explain, ``make clean && make`` should work around most dependency "
"problems, at the expense of longer build times."
msgstr ""

#: using/configure.rst:1077
msgid "make platform"
msgstr ""

#: using/configure.rst:1079
msgid ""
"Build the ``python`` program, but don't build the standard library extension "
"modules. This generates a file named ``platform`` which contains a single "
"line describing the details of the build platform, e.g., ``macosx-14.3-"
"arm64-3.12`` or ``linux-x86_64-3.13``."
msgstr ""

#: using/configure.rst:1086
msgid "make profile-opt"
msgstr ""

#: using/configure.rst:1088
msgid ""
"Build Python using profile-guided optimization (PGO).  You can use the "
"configure :option:`--enable-optimizations` option to make this the default "
"target of the ``make`` command (``make all`` or just ``make``)."
msgstr ""

#: using/configure.rst:1096
msgid "make clean"
msgstr ""

#: using/configure.rst:1098
msgid "Remove built files."
msgstr ""

#: using/configure.rst:1102
msgid "make distclean"
msgstr ""

#: using/configure.rst:1104
msgid ""
"In addition to the work done by ``make clean``, remove files created by the "
"configure script.  ``configure`` will have to be run before building again. "
"[#]_"
msgstr ""

#: using/configure.rst:1110
msgid "make install"
msgstr ""

#: using/configure.rst:1112
msgid "Build the ``all`` target and install Python."
msgstr ""

#: using/configure.rst:1116
msgid "make test"
msgstr ""

#: using/configure.rst:1118
msgid ""
"Build the ``all`` target and run the Python test suite with the ``--fast-"
"ci`` option. Variables:"
msgstr ""

#: using/configure.rst:1121
msgid "``TESTOPTS``: additional regrtest command-line options."
msgstr ""

#: using/configure.rst:1122
msgid "``TESTPYTHONOPTS``: additional Python command-line options."
msgstr ""

#: using/configure.rst:1123
msgid "``TESTTIMEOUT``: timeout in seconds (default: 10 minutes)."
msgstr ""

#: using/configure.rst:1127
msgid "make buildbottest"
msgstr ""

#: using/configure.rst:1129
msgid ""
"This is similar to ``make test``, but uses the ``--slow-ci`` option and "
"default timeout of 20 minutes, instead of ``--fast-ci`` option."
msgstr ""

#: using/configure.rst:1134
msgid "make regen-all"
msgstr ""

#: using/configure.rst:1136
msgid ""
"Regenerate (almost) all generated files. These include (but are not limited "
"to) bytecode cases, and parser generator file. ``make regen-stdlib-module-"
"names`` and ``autoconf`` must be run separately for the remaining `generated "
"files <#generated-files>`_."
msgstr ""

#: using/configure.rst:1143
msgid "C extensions"
msgstr ""

#: using/configure.rst:1145
msgid ""
"Some C extensions are built as built-in modules, like the ``sys`` module. "
"They are built with the ``Py_BUILD_CORE_BUILTIN`` macro defined. Built-in "
"modules have no ``__file__`` attribute:"
msgstr ""

#: using/configure.rst:1149
msgid ""
">>> import sys\n"
">>> sys\n"
"<module 'sys' (built-in)>\n"
">>> sys.__file__\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"AttributeError: module 'sys' has no attribute '__file__'"
msgstr ""

#: using/configure.rst:1159
msgid ""
"Other C extensions are built as dynamic libraries, like the ``_asyncio`` "
"module. They are built with the ``Py_BUILD_CORE_MODULE`` macro defined. "
"Example on Linux x86-64:"
msgstr ""

#: using/configure.rst:1163
msgid ""
">>> import _asyncio\n"
">>> _asyncio\n"
"<module '_asyncio' from '/usr/lib64/python3.9/lib-dynload/_asyncio."
"cpython-39-x86_64-linux-gnu.so'>\n"
">>> _asyncio.__file__\n"
"'/usr/lib64/python3.9/lib-dynload/_asyncio.cpython-39-x86_64-linux-gnu.so'"
msgstr ""

#: using/configure.rst:1171
msgid ""
":file:`Modules/Setup` is used to generate Makefile targets to build C "
"extensions. At the beginning of the files, C extensions are built as built-"
"in modules. Extensions defined after the ``*shared*`` marker are built as "
"dynamic libraries."
msgstr ""

#: using/configure.rst:1175
msgid ""
"The :c:macro:`!PyAPI_FUNC()`, :c:macro:`!PyAPI_DATA()` and :c:macro:"
"`PyMODINIT_FUNC` macros of :file:`Include/exports.h` are defined differently "
"depending if the ``Py_BUILD_CORE_MODULE`` macro is defined:"
msgstr ""

#: using/configure.rst:1179
msgid "Use ``Py_EXPORTED_SYMBOL`` if the ``Py_BUILD_CORE_MODULE`` is defined"
msgstr ""

#: using/configure.rst:1180
msgid "Use ``Py_IMPORTED_SYMBOL`` otherwise."
msgstr ""

#: using/configure.rst:1182
msgid ""
"If the ``Py_BUILD_CORE_BUILTIN`` macro is used by mistake on a C extension "
"built as a shared library, its :samp:`PyInit_{xxx}()` function is not "
"exported, causing an :exc:`ImportError` on import."
msgstr ""

#: using/configure.rst:1188
msgid "Compiler and linker flags"
msgstr ""

#: using/configure.rst:1190
msgid ""
"Options set by the ``./configure`` script and environment variables and used "
"by ``Makefile``."
msgstr ""

#: using/configure.rst:1194
msgid "Preprocessor flags"
msgstr ""

#: using/configure.rst:1198
msgid ""
"Value of :envvar:`CPPFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: using/configure.rst:1204
msgid ""
"(Objective) C/C++ preprocessor flags, e.g. :samp:`-I{include_dir}` if you "
"have headers in a nonstandard directory *include_dir*."
msgstr ""

#: using/configure.rst:1397
msgid ""
"Both :envvar:`CPPFLAGS` and :envvar:`LDFLAGS` need to contain the shell's "
"value to be able to build extension modules using the directories specified "
"in the environment variables."
msgstr ""

#: using/configure.rst:1217
msgid ""
"Extra preprocessor flags added for building the interpreter object files."
msgstr ""

#: using/configure.rst:1219
msgid ""
"Default: ``$(BASECPPFLAGS) -I. -I$(srcdir)/Include $(CONFIGURE_CPPFLAGS) "
"$(CPPFLAGS)``."
msgstr ""

#: using/configure.rst:1224
msgid "Compiler flags"
msgstr ""

#: using/configure.rst:1230
msgid "Example: ``gcc -pthread``."
msgstr ""

#: using/configure.rst:1234
msgid "C++ compiler command."
msgstr ""

#: using/configure.rst:1236
msgid "Example: ``g++ -pthread``."
msgstr ""

#: using/configure.rst:1244
msgid ""
":envvar:`CFLAGS_NODIST` is used for building the interpreter and stdlib C "
"extensions.  Use it when a compiler flag should *not* be part of :envvar:"
"`CFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: using/configure.rst:1248
msgid "In particular, :envvar:`CFLAGS` should not contain:"
msgstr ""

#: using/configure.rst:1250
msgid ""
"the compiler flag ``-I`` (for setting the search path for include files). "
"The ``-I`` flags are processed from left to right, and any flags in :envvar:"
"`CFLAGS` would take precedence over user- and package-supplied ``-I`` flags."
msgstr ""

#: using/configure.rst:1255
msgid ""
"hardening flags such as ``-Werror`` because distributions cannot control "
"whether packages installed by users conform to such heightened standards."
msgstr ""

#: using/configure.rst:1263
msgid ""
"Options passed to the :mod:`compileall` command line when building PYC files "
"in ``make install``. Default: ``-j0``."
msgstr ""

#: using/configure.rst:1270
msgid "Extra C compiler flags."
msgstr ""

#: using/configure.rst:1274
msgid ""
"Value of :envvar:`CFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: using/configure.rst:1281
msgid ""
"Value of :envvar:`CFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: using/configure.rst:1288
msgid "Base compiler flags."
msgstr ""

#: using/configure.rst:1292
msgid "Optimization flags."
msgstr ""

#: using/configure.rst:1296
msgid "Strict or non-strict aliasing flags used to compile ``Python/dtoa.c``."
msgstr ""

#: using/configure.rst:1302
msgid "Compiler flags used to build a shared library."
msgstr ""

#: using/configure.rst:1304
msgid "For example, ``-fPIC`` is used on Linux and on BSD."
msgstr ""

#: using/configure.rst:1308
msgid "Extra C flags added for building the interpreter object files."
msgstr ""

#: using/configure.rst:1310
msgid ""
"Default: ``$(CCSHARED)`` when :option:`--enable-shared` is used, or an empty "
"string otherwise."
msgstr ""

#: using/configure.rst:1315
msgid ""
"Default: ``$(BASECFLAGS) $(OPT) $(CONFIGURE_CFLAGS) $(CFLAGS) "
"$(EXTRA_CFLAGS)``."
msgstr ""

#: using/configure.rst:1319
msgid ""
"Default: ``$(CONFIGURE_CFLAGS_NODIST) $(CFLAGS_NODIST) -I$(srcdir)/Include/"
"internal``."
msgstr ""

#: using/configure.rst:1325
msgid "C flags used for building the interpreter object files."
msgstr ""

#: using/configure.rst:1327
msgid ""
"Default: ``$(PY_CFLAGS) $(PY_CFLAGS_NODIST) $(PY_CPPFLAGS) "
"$(CFLAGSFORSHARED)``."
msgstr ""

#: using/configure.rst:1333
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE``."
msgstr ""

#: using/configure.rst:1339
msgid ""
"Compiler flags to build a standard library extension module as a built-in "
"module, like the :mod:`posix` module."
msgstr ""

#: using/configure.rst:1342
msgid "Default: ``$(PY_STDMODULE_CFLAGS) -DPy_BUILD_CORE_BUILTIN``."
msgstr ""

#: using/configure.rst:1348
msgid "Purify command. Purify is a memory debugger program."
msgstr ""

#: using/configure.rst:1350
msgid "Default: empty string (not used)."
msgstr ""

#: using/configure.rst:1354
msgid "Linker flags"
msgstr ""

#: using/configure.rst:1358
msgid ""
"Linker command used to build programs like ``python`` and ``_testembed``."
msgstr ""

#: using/configure.rst:1360
msgid "Default: ``$(PURIFY) $(CC)``."
msgstr ""

#: using/configure.rst:1364
msgid ""
"Value of :envvar:`LDFLAGS` variable passed to the ``./configure`` script."
msgstr ""

#: using/configure.rst:1366
msgid ""
"Avoid assigning :envvar:`CFLAGS`, :envvar:`LDFLAGS`, etc. so users can use "
"them on the command line to append to these values without stomping the pre-"
"set values."
msgstr ""

#: using/configure.rst:1374
msgid ""
":envvar:`LDFLAGS_NODIST` is used in the same manner as :envvar:"
"`CFLAGS_NODIST`.  Use it when a linker flag should *not* be part of :envvar:"
"`LDFLAGS` once Python is installed (:gh:`65320`)."
msgstr ""

#: using/configure.rst:1378
msgid "In particular, :envvar:`LDFLAGS` should not contain:"
msgstr ""

#: using/configure.rst:1380
msgid ""
"the compiler flag ``-L`` (for setting the search path for libraries). The ``-"
"L`` flags are processed from left to right, and any flags in :envvar:"
"`LDFLAGS` would take precedence over user- and package-supplied ``-L`` flags."
msgstr ""

#: using/configure.rst:1387
msgid ""
"Value of :envvar:`LDFLAGS_NODIST` variable passed to the ``./configure`` "
"script."
msgstr ""

#: using/configure.rst:1394
msgid ""
"Linker flags, e.g. :samp:`-L{lib_dir}` if you have libraries in a "
"nonstandard directory *lib_dir*."
msgstr ""

#: using/configure.rst:1403
msgid ""
"Linker flags to pass libraries to the linker when linking the Python "
"executable."
msgstr ""

#: using/configure.rst:1406
msgid "Example: ``-lrt``."
msgstr ""

#: using/configure.rst:1410
msgid "Command to build a shared library."
msgstr ""

#: using/configure.rst:1412
msgid "Default: ``@LDSHARED@ $(PY_LDFLAGS)``."
msgstr ""

#: using/configure.rst:1416
msgid "Command to build ``libpython`` shared library."
msgstr ""

#: using/configure.rst:1418
msgid "Default: ``@BLDSHARED@ $(PY_CORE_LDFLAGS)``."
msgstr ""

#: using/configure.rst:1422
msgid "Default: ``$(CONFIGURE_LDFLAGS) $(LDFLAGS)``."
msgstr ""

#: using/configure.rst:1426
msgid "Default: ``$(CONFIGURE_LDFLAGS_NODIST) $(LDFLAGS_NODIST)``."
msgstr ""

#: using/configure.rst:1432
msgid "Linker flags used for building the interpreter object files."
msgstr ""

#: using/configure.rst:1438
msgid "Footnotes"
msgstr ""

#: using/configure.rst:1439
msgid ""
"``git clean -fdx`` is an even more extreme way to \"clean\" your checkout. "
"It removes all files not known to Git. When bug hunting using ``git "
"bisect``, this is `recommended between probes <https://github.com/python/"
"cpython/issues/114505#issuecomment-1907021718>`_ to guarantee a completely "
"clean build. **Use with care**, as it will delete all files not checked into "
"Git, including your new, uncommitted work."
msgstr ""

#~ msgid ""
#~ "Compile the Python ``main()`` function and link Python executable with C+"
#~ "+ compiler: ``$CXX``, or *COMPILER* if specified."
#~ msgstr ""
#~ "Utilise le compilateur C++ (``$CXX``, ou *COMPILER* si spécifié) pour "
#~ "compiler la fonction Python ``main()`` et l'édition des liens de "
#~ "l'exécutable Python."
