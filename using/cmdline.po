# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-29 00:24+0200\n"
"PO-Revision-Date: 2018-05-08 18:36+0200\n"
"Last-Translator: Julien Palard <julien@palard.fr>\n"
"Language-Team: \n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.2\n"

#: ../Doc/using/cmdline.rst:9
msgid "Command line and environment"
msgstr "Ligne de commande et environnement"

#: ../Doc/using/cmdline.rst:11
msgid ""
"The CPython interpreter scans the command line and the environment for "
"various settings."
msgstr ""
"L'interpréteur CPython analyse la ligne de commande et l'environnement à la "
"recherche de différents paramètres."

#: ../Doc/using/cmdline.rst:16
msgid ""
"Other implementations' command line schemes may differ.  See :ref:"
"`implementations` for further resources."
msgstr ""
"Le format des lignes de commande utilisé par d'autres implémentations peut "
"s'avérer différent. Voir :ref:`implementations` pour plus d'informations."

#: ../Doc/using/cmdline.rst:23
msgid "Command line"
msgstr "Ligne de commande"

#: ../Doc/using/cmdline.rst:25
msgid "When invoking Python, you may specify any of these options::"
msgstr ""
"Quand vous invoquez Python, vous pouvez spécifier n’importe laquelle de ces "
"options ::"

#: ../Doc/using/cmdline.rst:29
msgid ""
"The most common use case is, of course, a simple invocation of a script::"
msgstr ""
"Le cas d'utilisation le plus courant est, bien entendu, la simple invocation "
"d'un script ::"

#: ../Doc/using/cmdline.rst:37
msgid "Interface options"
msgstr "Options de l'interface"

#: ../Doc/using/cmdline.rst:39
msgid ""
"The interpreter interface resembles that of the UNIX shell, but provides "
"some additional methods of invocation:"
msgstr ""
"L'interface de l’interpréteur ressemble à celle du shell UNIX mais fournit "
"quelques méthodes d'invocation supplémentaires :"

#: ../Doc/using/cmdline.rst:42
msgid ""
"When called with standard input connected to a tty device, it prompts for "
"commands and executes them until an EOF (an end-of-file character, you can "
"produce that with :kbd:`Ctrl-D` on UNIX or :kbd:`Ctrl-Z, Enter` on Windows) "
"is read."
msgstr ""
"Quand l'interpréteur est appelé avec l'entrée standard connectée à un "
"périphérique tty, il lit les lignes de commande et les exécute jusqu'à ce "
"qu'un caractère EOF (caractère fin de fichier, que vous pouvez produire "
"avec  :kbd:`Ctrl-D` sous UNIX ou :kbd:`Ctrl-Z, Enter` sous Windows) soit lu."

#: ../Doc/using/cmdline.rst:45
msgid ""
"When called with a file name argument or with a file as standard input, it "
"reads and executes a script from that file."
msgstr ""
"Quand l'interpréteur est appelé avec un argument correspondant à un nom de "
"fichier ou avec un fichier comme entrée standard, il lit et exécute le "
"script contenu dans ce fichier."

#: ../Doc/using/cmdline.rst:47
msgid ""
"When called with a directory name argument, it reads and executes an "
"appropriately named script from that directory."
msgstr ""
"Quand l'interpréteur est appelé avec un argument correspondant à un "
"répertoire, il lit et exécute un script d’un certain nom dans ce répertoire."

#: ../Doc/using/cmdline.rst:49
msgid ""
"When called with ``-c command``, it executes the Python statement(s) given "
"as *command*.  Here *command* may contain multiple statements separated by "
"newlines. Leading whitespace is significant in Python statements!"
msgstr ""
"Quand l'interpréteur est appelé avec l'option ``-c commande``, il exécute la "
"ou les instructions Python données comme *commande*. Ici *commande* peut "
"contenir plusieurs instructions séparées par des fins de ligne. Les blancs "
"en début de ligne ne sont pas ignorés dans les instructions Python !"

#: ../Doc/using/cmdline.rst:52
msgid ""
"When called with ``-m module-name``, the given module is located on the "
"Python module path and executed as a script."
msgstr ""
"Quand l'interpréteur est appelé avec l'option ``-m nom-de-module``, le "
"module donné est recherché dans le chemin des modules Python et est exécuté "
"en tant que script."

#: ../Doc/using/cmdline.rst:55
msgid ""
"In non-interactive mode, the entire input is parsed before it is executed."
msgstr ""
"En mode non-interactif, toute l’entrée est analysée avant d’être exécutée."

#: ../Doc/using/cmdline.rst:57
msgid ""
"An interface option terminates the list of options consumed by the "
"interpreter, all consecutive arguments will end up in :data:`sys.argv` -- "
"note that the first element, subscript zero (``sys.argv[0]``), is a string "
"reflecting the program's source."
msgstr ""
"Une option d'interface termine la liste des options consommées par "
"l'interpréteur ; tous les arguments atterrissent dans :data:`sys.argv` "
"— notez que le premier élément, à l'indice zéro (``sys.argv|0]``), est une "
"chaîne de caractères indiquant la source du programme."

#: ../Doc/using/cmdline.rst:64
msgid ""
"Execute the Python code in *command*.  *command* can be one or more "
"statements separated by newlines, with significant leading whitespace as in "
"normal module code."
msgstr ""
"Exécute le code Python dans *command*. *command* peut être une ou plusieurs "
"instructions, séparées par des fins de ligne, dont les espaces en début de "
"ligne sont significatives, comme dans le code d’un module."

#: ../Doc/using/cmdline.rst:68
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be ``\"-c"
"\"`` and the current directory will be added to the start of :data:`sys."
"path` (allowing modules in that directory to be imported as top level "
"modules)."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` est ``\"-c"
"\"`` et le répertoire courant est ajouté au début de :data:`sys.path` "
"(permettant aux modules de ce répertoire d'être importés comme des modules "
"de premier niveau)."

#: ../Doc/using/cmdline.rst:76
msgid ""
"Search :data:`sys.path` for the named module and execute its contents as "
"the :mod:`__main__` module."
msgstr ""
"Parcourt :data:`sys.path` à la recherche du module donné et exécute son "
"contenu en tant que module :mod:`__main__`."

#: ../Doc/using/cmdline.rst:79
msgid ""
"Since the argument is a *module* name, you must not give a file extension "
"(``.py``).  The module name should be a valid absolute Python module name, "
"but the implementation may not always enforce this (e.g. it may allow you to "
"use a name that includes a hyphen)."
msgstr ""
"L'argument étant un nom de *module*, vous ne devez pas fournir d’extension "
"de fichier (``.py``). Le nom du module doit être un nom de module Python "
"valide, absolu, mais l'implémentation peut ne pas l'imposer (par exemple, "
"l'utilisation d'un trait d'union peut être autorisée)."

#: ../Doc/using/cmdline.rst:84
msgid ""
"Package names (including namespace packages) are also permitted. When a "
"package name is supplied instead of a normal module, the interpreter will "
"execute ``<pkg>.__main__`` as the main module. This behaviour is "
"deliberately similar to the handling of directories and zipfiles that are "
"passed to the interpreter as the script argument."
msgstr ""
"Les noms de paquets sont aussi autorisés (ainsi que les paquets-espace de "
"nommage, *namespace packages* en anglais). Quand un nom de paquet est donné "
"à la place d'un simple module, l'interpréteur exécute ``<pkg>.__main__`` "
"comme module principal. Ce comportement est délibérément identique au "
"traitement d'un dossier ou d'un fichier zip donné en argument à "
"l'interpréteur comme script."

#: ../Doc/using/cmdline.rst:93
msgid ""
"This option cannot be used with built-in modules and extension modules "
"written in C, since they do not have Python module files. However, it can "
"still be used for precompiled modules, even if the original source file is "
"not available."
msgstr ""
"Cette option ne peut pas être utilisée avec les modules natifs et les "
"modules d'extension écrits en C, étant donné qu'ils ne possèdent pas de "
"fichiers modules en Python. Cependant, elle peut toujours être utilisée pour "
"les modules pré-compilés, même si le fichier source original n'est pas "
"disponible."

#: ../Doc/using/cmdline.rst:98
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be the "
"full path to the module file (while the module file is being located, the "
"first element will be set to ``\"-m\"``). As with the :option:`-c` option, "
"the current directory will be added to the start of :data:`sys.path`."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` est le "
"chemin complet d'accès au fichier du module (pendant que le fichier est "
"recherché, le premier élément est mis à ``\"-m\"``). Comme avec l'option :"
"option:`-c`, le dossier courant est ajouté au début de :data:`sys.path`."

#: ../Doc/using/cmdline.rst:103
msgid ""
"Many standard library modules contain code that is invoked on their "
"execution as a script.  An example is the :mod:`timeit` module::"
msgstr ""
"De nombreux modules de la bibliothèque standard contiennent du code qui est "
"invoqué quand ils sont exécutés comme scripts. Un exemple est le module :mod:"
"`timeit`\\ ::"

#: ../Doc/using/cmdline.rst:111
msgid ":func:`runpy.run_module`"
msgstr ":func:`runpy.run_module`"

#: ../Doc/using/cmdline.rst:111 ../Doc/using/cmdline.rst:153
msgid "Equivalent functionality directly available to Python code"
msgstr "Fonctionnalité équivalente directement disponible en code Python"

#: ../Doc/using/cmdline.rst:113
msgid ":pep:`338` -- Executing modules as scripts"
msgstr ":pep:`338` -- Exécuter des modules en tant que scripts"

#: ../Doc/using/cmdline.rst:116
msgid "Supply the package name to run a ``__main__`` submodule."
msgstr "Fournir le nom d'un paquet pour exécuter un sous-module ``__main__``."

#: ../Doc/using/cmdline.rst:119
msgid "namespace packages are also supported"
msgstr "les paquets-espaces de nommage sont aussi gérés"

#: ../Doc/using/cmdline.rst:125
msgid ""
"Read commands from standard input (:data:`sys.stdin`).  If standard input is "
"a terminal, :option:`-i` is implied."
msgstr ""
"Lit les commandes depuis l'entrée standard (:data:`sys.stdin`). Si l'entrée "
"standard est un terminal, l'option :option:`-i` est activée implicitement."

#: ../Doc/using/cmdline.rst:128
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be ``\"-"
"\"`` and the current directory will be added to the start of :data:`sys."
"path`."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` est ``\"-"
"\"`` et le dossier courant est ajouté au début de :data:`sys.path`."

#: ../Doc/using/cmdline.rst:135
msgid ""
"Execute the Python code contained in *script*, which must be a filesystem "
"path (absolute or relative) referring to either a Python file, a directory "
"containing a ``__main__.py`` file, or a zipfile containing a ``__main__.py`` "
"file."
msgstr ""
"Exécute le code Python contenu dans *script*, qui doit être un chemin "
"d'accès (absolu ou relatif) à un fichier, faisant référence à un fichier "
"Python, à un répertoire contenant un fichier ``__main__.py`` ou à un fichier "
"zip contenant un fichier ``__main__.py``."

#: ../Doc/using/cmdline.rst:140
msgid ""
"If this option is given, the first element of :data:`sys.argv` will be the "
"script name as given on the command line."
msgstr ""
"Si cette option est donnée, le premier élément de :data:`sys.argv` est le "
"nom du script tel que donné sur la ligne de commande."

#: ../Doc/using/cmdline.rst:143
msgid ""
"If the script name refers directly to a Python file, the directory "
"containing that file is added to the start of :data:`sys.path`, and the file "
"is executed as the :mod:`__main__` module."
msgstr ""
"Si le nom du script se réfère directement à un fichier Python, le répertoire "
"contenant ce fichier est ajouté au début de :data:`sys.path` et le fichier "
"est exécuté en tant que module :mod:`__main__`."

#: ../Doc/using/cmdline.rst:147
msgid ""
"If the script name refers to a directory or zipfile, the script name is "
"added to the start of :data:`sys.path` and the ``__main__.py`` file in that "
"location is executed as the :mod:`__main__` module."
msgstr ""
"Si le nom du script fait référence à un dossier ou à un fichier zip, le nom "
"du script est ajouté au début de :data:`sys.path` et le fichier ``__main__."
"py`` à cet endroit est exécuté en tant que module :mod:`__main__`."

#: ../Doc/using/cmdline.rst:152
msgid ":func:`runpy.run_path`"
msgstr ":func:`runpy.run_path`"

#: ../Doc/using/cmdline.rst:156
msgid ""
"If no interface option is given, :option:`-i` is implied, ``sys.argv[0]`` is "
"an empty string (``\"\"``) and the current directory will be added to the "
"start of :data:`sys.path`.  Also, tab-completion and history editing is "
"automatically enabled, if available on your platform (see :ref:`rlcompleter-"
"config`)."
msgstr ""
"Si aucune option d'interface n'est donnée, l'option :option:`-i` est activée "
"implicitement, ``sys.argv[0]`` est une chaine vide (``\"\"``) et le dossier "
"courant est ajouté au début de :data:`sys.path`. Aussi, la complétion par "
"tabulation et l'édition de l'historique sont automatiquement activés, s'ils "
"sont disponibles sur votre système (voir :ref:`rlcompleter-config`)."

#: ../Doc/using/cmdline.rst:162
msgid ":ref:`tut-invoking`"
msgstr ":ref:`tut-invoking`"

#: ../Doc/using/cmdline.rst:164
msgid "Automatic enabling of tab-completion and history editing."
msgstr ""
"Activation automatique de la complétion par tabulation et édition de "
"l'historique."

#: ../Doc/using/cmdline.rst:169
msgid "Generic options"
msgstr "Options génériques"

#: ../Doc/using/cmdline.rst:175
msgid "Print a short description of all command line options."
msgstr ""
"Affiche une brève description de toutes les options de la ligne de commande."

#: ../Doc/using/cmdline.rst:181
msgid "Print the Python version number and exit.  Example output could be:"
msgstr "Affiche la version de Python et termine. Par exemple :"

#: ../Doc/using/cmdline.rst:187
msgid "When given twice, print more information about the build, like:"
msgstr ""
"Lorsque l'option est doublée, affiche davantage d'informations sur la "
"manière dont Python a été compilé, comme :"

#: ../Doc/using/cmdline.rst:194
msgid "The ``-VV`` option."
msgstr "L'option ``-VV``."

#: ../Doc/using/cmdline.rst:200
msgid "Miscellaneous options"
msgstr "Options diverses"

#: ../Doc/using/cmdline.rst:204
msgid ""
"Issue a warning when comparing :class:`bytes` or :class:`bytearray` with :"
"class:`str` or :class:`bytes` with :class:`int`.  Issue an error when the "
"option is given twice (:option:`!-bb`)."
msgstr ""
"Affiche un avertissement (*warning* en anglais) lors d'une comparaison d'un "
"objet de type :class:`bytes` ou :class:`bytearray` avec un objet de type :"
"class:`str` ou un objet de type :class:`bytes` avec un objet de type :class:"
"`int`. Lève une erreur si cette option est doublée (:option:`!-bb`)."

#: ../Doc/using/cmdline.rst:208
msgid "Affects comparisons of :class:`bytes` with :class:`int`."
msgstr "Concerne les comparaisons de :class:`bytes` avec :class:`int`."

#: ../Doc/using/cmdline.rst:213
msgid ""
"If given, Python won't try to write ``.pyc`` files on the import of source "
"modules.  See also :envvar:`PYTHONDONTWRITEBYTECODE`."
msgstr ""
"S'il est donné, Python ne tente pas d'écrire de fichier ``.pyc`` ou ``.pyo`` "
"à l'importation des modules sources. Voir aussi :envvar:"
"`PYTHONDONTWRITEBYTECODE`."

#: ../Doc/using/cmdline.rst:219
msgid ""
"Turn on parser debugging output (for wizards only, depending on compilation "
"options).  See also :envvar:`PYTHONDEBUG`."
msgstr ""
"Active la sortie de l'analyseur en mode débogage (pour les experts "
"uniquement, en fonction des options de compilation). Voir aussi :envvar:"
"`PYTHONDEBUG`."

#: ../Doc/using/cmdline.rst:225
msgid ""
"Ignore all :envvar:`PYTHON*` environment variables, e.g. :envvar:"
"`PYTHONPATH` and :envvar:`PYTHONHOME`, that might be set."
msgstr ""
"Ignore toutes les variables d'environnement :envvar:`PYTHON*` qui pourraient "
"être définies. Par exemple, :envvar:`PYTHONPATH` et :envvar:`PYTHONHOME`."

#: ../Doc/using/cmdline.rst:231
msgid ""
"When a script is passed as first argument or the :option:`-c` option is "
"used, enter interactive mode after executing the script or the command, even "
"when :data:`sys.stdin` does not appear to be a terminal.  The :envvar:"
"`PYTHONSTARTUP` file is not read."
msgstr ""
"Quand un script est passé comme premier argument ou que l'option :option:`-"
"c` est utilisée, entre en mode interactif après avoir exécuté le script ou "
"la commande, même lorsque :data:`sys.stdin` ne semble pas être un terminal. "
"Le fichier :envvar:`PYTHONSTARTUP` n'est pas lu."

#: ../Doc/using/cmdline.rst:236
msgid ""
"This can be useful to inspect global variables or a stack trace when a "
"script raises an exception.  See also :envvar:`PYTHONINSPECT`."
msgstr ""
"Cela peut être utile pour examiner les variables globales ou une trace de la "
"pile lorsque le script lève une exception. Voir aussi :envvar:"
"`PYTHONINSPECT`."

#: ../Doc/using/cmdline.rst:242
msgid ""
"Run Python in isolated mode. This also implies -E and -s. In isolated mode :"
"data:`sys.path` contains neither the script's directory nor the user's site-"
"packages directory. All :envvar:`PYTHON*` environment variables are ignored, "
"too. Further restrictions may be imposed to prevent the user from injecting "
"malicious code."
msgstr ""
"Lance Python en mode isolé. Cela implique aussi *-E* et *-s*. En mode "
"isolé, :data:`sys.path` ne contient ni le répertoire du script ni le "
"répertoire *site-packages* de l'utilisateur. Toutes les variables "
"d'environnement :envvar:`PYTHON*` sont aussi ignorées. Davantage de "
"restrictions peuvent être imposées pour éviter que l'utilisateur n'injecte "
"du code malicieux."

#: ../Doc/using/cmdline.rst:253
msgid ""
"Remove assert statements and any code conditional on the value of :const:"
"`__debug__`.  Augment the filename for compiled (:term:`bytecode`) files by "
"adding ``.opt-1`` before the ``.pyc`` extension (see :pep:`488`).  See also :"
"envvar:`PYTHONOPTIMIZE`."
msgstr ""
"Enlève les instructions *assert* et tout le code qui dépend de la valeur de :"
"const:`__debug__`. Ajoute ``.opt-1`` au nom de fichier du code intermédiaire "
"(:term:`bytecode`), avant l'extension ``.pyc`` (voir la :pep:`488`). Voir "
"aussi :envvar:`PYTHONOPTIMIZE`."

#: ../Doc/using/cmdline.rst:258 ../Doc/using/cmdline.rst:268
msgid "Modify ``.pyc`` filenames according to :pep:`488`."
msgstr "Modifie les noms de fichiers ``.pyc`` suivant la :pep:`488`."

#: ../Doc/using/cmdline.rst:264
msgid ""
"Do :option:`-O` and also discard docstrings.  Augment the filename for "
"compiled (:term:`bytecode`) files by adding ``.opt-2`` before the ``.pyc`` "
"extension (see :pep:`488`)."
msgstr ""
"Agit comme :option:`-O` et ignore aussi les *docstrings*. Ajoute ``.opt-2`` "
"au nom de fichier du code intermédiaire (:term:`bytecode`), avant "
"l'extension ``.pyc`` (voir la :pep:`488`)."

#: ../Doc/using/cmdline.rst:274
msgid ""
"Don't display the copyright and version messages even in interactive mode."
msgstr "N'affiche pas le copyright et la version, même en mode interactif."

#: ../Doc/using/cmdline.rst:281
msgid ""
"Kept for compatibility.  On Python 3.3 and greater, hash randomization is "
"turned on by default."
msgstr ""
"Conservé pour compatibilité ascendante. Sur Python 3.3 ou supérieur, la "
"randomisation des empreintes (*hash* en anglais) est activée par défaut."

#: ../Doc/using/cmdline.rst:284
msgid ""
"On previous versions of Python, this option turns on hash randomization, so "
"that the :meth:`__hash__` values of str, bytes and datetime are \"salted\" "
"with an unpredictable random value.  Although they remain constant within an "
"individual Python process, they are not predictable between repeated "
"invocations of Python."
msgstr ""
"Sur les versions précédentes de Python, cette option activait la "
"randomisation des empreintes de manière à ce que les :meth:`__hash__` de "
"chaînes, bytes et ``datetime`` soient \"salés\" avec une valeur aléatoire "
"non prévisible. Bien que ce sel soit constant durant le déroulement d'un "
"processus Python, il n'est pas prévisible pour des invocations répétées de "
"code Python."

#: ../Doc/using/cmdline.rst:290
msgid ""
"Hash randomization is intended to provide protection against a denial-of-"
"service caused by carefully-chosen inputs that exploit the worst case "
"performance of a dict construction, O(n^2) complexity.  See http://www.ocert."
"org/advisories/ocert-2011-003.html for details."
msgstr ""
"L'imprévisibilité des empreintes a pour objectif de se protéger contre les "
"dénis de service qui utiliseraient des valeurs d'entrée judicieusement "
"choisies afin de forcer la construction des dictionnaires dans le pire cas, "
"c'est-à-dire avec une complexité en O(n\\ :sup:`2`). Voir http://www.ocert."
"org/advisories/ocert-2011-003.html pour obtenir les détails."

#: ../Doc/using/cmdline.rst:295
msgid ""
":envvar:`PYTHONHASHSEED` allows you to set a fixed value for the hash seed "
"secret."
msgstr ""
":envvar:`PYTHONHASHSEED` vous permet de définir vous-même la valeur du sel "
"pour l'algorithme de calcul des empreintes."

#: ../Doc/using/cmdline.rst:303
msgid ""
"Don't add the :data:`user site-packages directory <site.USER_SITE>` to :data:"
"`sys.path`."
msgstr ""
"N'ajoute pas le répertoire utilisateur :data:`site-packages <site."
"USER_SITE>` à :data:`sys.path`."

#: ../Doc/using/cmdline.rst:308 ../Doc/using/cmdline.rst:599
#: ../Doc/using/cmdline.rst:611
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- Répertoire site-packages propre à l'utilisateur"

#: ../Doc/using/cmdline.rst:313
msgid ""
"Disable the import of the module :mod:`site` and the site-dependent "
"manipulations of :data:`sys.path` that it entails.  Also disable these "
"manipulations if :mod:`site` is explicitly imported later (call :func:`site."
"main` if you want them to be triggered)."
msgstr ""
"Désactive l’importation du module :mod:`site` et les modifications locales "
"de :data:`sys.path` qu’il implique. Désactive aussi ces manipulations si :"
"mod:`site` est importé explicitement plus tard (appelez :func:`site.main` si "
"vous voulez les déclencher)."

#: ../Doc/using/cmdline.rst:321
msgid ""
"Force the binary layer of the stdout and stderr streams (which is available "
"as their ``buffer`` attribute) to be unbuffered. The text I/O layer will "
"still be line-buffered if writing to the console, or block-buffered if "
"redirected to a non-interactive file."
msgstr ""
"Désactive les mémoires tampons de la couche binaire des flux de la sortie "
"standard (*stdout*) et de la sortie d'erreurs (*stderr*) (ils restent "
"accessibles *via* leur attribut ``buffer``). La couche d’entrée-sortie est "
"mise en tampon ligne par ligne lors de l'écriture sur la console, ou par "
"blocs si elle est redirigée sur un fichier non-interactif."

#: ../Doc/using/cmdline.rst:326
msgid "See also :envvar:`PYTHONUNBUFFERED`."
msgstr "Voir aussi :envvar:`PYTHONUNBUFFERED`."

#: ../Doc/using/cmdline.rst:331
msgid ""
"Print a message each time a module is initialized, showing the place "
"(filename or built-in module) from which it is loaded.  When given twice (:"
"option:`!-vv`), print a message for each file that is checked for when "
"searching for a module.  Also provides information on module cleanup at "
"exit. See also :envvar:`PYTHONVERBOSE`."
msgstr ""
"Affiche un message chaque fois qu'un module est initialisé, montrant "
"l'emplacement (nom du fichier ou module natif) à partir duquel il est "
"chargé. Lorsque l'option est doublée (:option:`!-vv`), affiche un message "
"pour chaque fichier vérifié lors de la recherche du module. Fournit aussi "
"des informations sur le nettoyage des modules à la fin. Voir aussi :envvar:"
"`PYTHONVERBOSE`."

#: ../Doc/using/cmdline.rst:341
msgid ""
"Warning control.  Python's warning machinery by default prints warning "
"messages to :data:`sys.stderr`.  A typical warning message has the following "
"form:"
msgstr ""
"Contrôle des avertissements. Le mécanisme d'avertissement de Python, par "
"défaut, affiche les messages d'avertissement sur :data:`sys.stderr`.  Un "
"message d'avertissement type est de la forme suivante :"

#: ../Doc/using/cmdline.rst:349
msgid ""
"By default, each warning is printed once for each source line where it "
"occurs.  This option controls how often warnings are printed."
msgstr ""
"Par défaut, chaque avertissement est affiché une seule fois pour chaque "
"ligne de source où il se trouve. Cette option définit à quelle fréquence "
"afficher ces avertissements."

#: ../Doc/using/cmdline.rst:352
msgid ""
"Multiple :option:`-W` options may be given; when a warning matches more than "
"one option, the action for the last matching option is performed.  Invalid :"
"option:`-W` options are ignored (though, a warning message is printed about "
"invalid options when the first warning is issued)."
msgstr ""
"L'option :option:`-W` peut être répétée ; lorsqu'un avertissement correspond "
"à plus d'une option, l'action associée à la dernière correspondance est "
"effectuée. Les options :option:`-W` invalides sont ignorées (cependant, un "
"message d'avertissement est affiché sur les options invalides au moment où "
"le premier avertissement est généré)."

#: ../Doc/using/cmdline.rst:357
msgid ""
"Warnings can also be controlled from within a Python program using the :mod:"
"`warnings` module."
msgstr ""
"Les avertissements peuvent aussi être contrôlés dans le programme Python en "
"utilisant le module :mod:`warnings`."

#: ../Doc/using/cmdline.rst:360
msgid ""
"The simplest form of argument is one of the following action strings (or a "
"unique abbreviation):"
msgstr ""
"La forme la plus simple de l'argument est l'une des chaînes d'actions "
"suivantes (ou une abréviation unique) :"

#: ../Doc/using/cmdline.rst:363
msgid "``ignore``"
msgstr ""

#: ../Doc/using/cmdline.rst:364
msgid "Ignore all warnings."
msgstr "Ignore tous les avertissements."

#: ../Doc/using/cmdline.rst:366
msgid "``default``"
msgstr ""

#: ../Doc/using/cmdline.rst:366
msgid ""
"Explicitly request the default behavior (printing each warning once per "
"source line)."
msgstr ""
"Demande explicitement le comportement par défaut (affiche chaque "
"avertissement une fois par ligne de code source)."

#: ../Doc/using/cmdline.rst:370
msgid "``all``"
msgstr "``all``"

#: ../Doc/using/cmdline.rst:369
msgid ""
"Print a warning each time it occurs (this may generate many messages if a "
"warning is triggered repeatedly for the same source line, such as inside a "
"loop)."
msgstr ""
"Affiche un avertissement à chaque fois qu'il se produit (ce qui peut générer "
"beaucoup de messages si l'avertissement est déclenché à plusieurs reprises, "
"comme à l'intérieur d'une boucle)."

#: ../Doc/using/cmdline.rst:372
msgid "``module``"
msgstr "``module``"

#: ../Doc/using/cmdline.rst:373
msgid "Print each warning only the first time it occurs in each module."
msgstr ""
"Affiche chaque avertissement uniquement la première fois qu'il apparaît dans "
"chaque module."

#: ../Doc/using/cmdline.rst:374
msgid "``once``"
msgstr ""

#: ../Doc/using/cmdline.rst:375
msgid "Print each warning only the first time it occurs in the program."
msgstr ""
"Affiche chaque avertissement uniquement la première fois qu'il apparaît dans "
"le programme."

#: ../Doc/using/cmdline.rst:377
msgid "``error``"
msgstr ""

#: ../Doc/using/cmdline.rst:377
msgid "Raise an exception instead of printing a warning message."
msgstr "Déclenche une exception au lieu d'afficher un message d'avertissement."

#: ../Doc/using/cmdline.rst:379
msgid "The full form of argument is::"
msgstr "La forme complète de l'argument est : ::"

#: ../Doc/using/cmdline.rst:383
msgid ""
"Here, *action* is as explained above but only applies to messages that match "
"the remaining fields.  Empty fields match all values; trailing empty fields "
"may be omitted.  The *message* field matches the start of the warning "
"message printed; this match is case-insensitive.  The *category* field "
"matches the warning category.  This must be a class name; the match tests "
"whether the actual warning category of the message is a subclass of the "
"specified warning category.  The full class name must be given.  The "
"*module* field matches the (fully-qualified) module name; this match is case-"
"sensitive.  The *line* field matches the line number, where zero matches all "
"line numbers and is thus equivalent to an omitted line number."
msgstr ""
"Ici, *action* est tel qu'expliqué ci-dessus, mais s'applique uniquement aux "
"messages qui correspondent aux champs restants. Les champs vides "
"correspondent à toutes les valeurs ; les champs vides de fin peuvent être "
"omis. Le champ *message* correspond au début du message d'avertissement "
"affiché, cette expression est insensible à la casse. Le champ *category* "
"correspond à la catégorie d'avertissement. Ce nom doit être un nom complet "
"de classe ; La règle s'applique à tous les messages d'alertes construits "
"avec une classe qui hérite de celle spécifiée. Le nom de la classe complète "
"doit être donnée. Le champ *module* correspond au nom (pleinement qualifié) "
"du module, cette correspondance est sensible à la casse. Le champ *line* "
"correspond au numéro de ligne, où zéro correspond à n'importe quel numéro de "
"ligne et correspond donc à l'option par défaut."

#: ../Doc/using/cmdline.rst:395
msgid ":mod:`warnings` -- the warnings module"
msgstr ":mod:`warnings` -- le module qui gère les avertissements."

#: ../Doc/using/cmdline.rst:397
msgid ":pep:`230` -- Warning framework"
msgstr ":pep:`230` -- Gestion des alertes"

#: ../Doc/using/cmdline.rst:399
msgid ":envvar:`PYTHONWARNINGS`"
msgstr ""

#: ../Doc/using/cmdline.rst:404
msgid ""
"Skip the first line of the source, allowing use of non-Unix forms of ``#!"
"cmd``.  This is intended for a DOS specific hack only."
msgstr ""
"Saute la première ligne du code source, autorisant ainsi les directives de "
"type ``#!cmd`` non conformes au standard Unix. L'objectif est de proposer "
"une astuce spécifique pour le DOS."

#: ../Doc/using/cmdline.rst:410
msgid ""
"Reserved for various implementation-specific options.  CPython currently "
"defines the following possible values:"
msgstr ""
"Réservée pour les options spécifiques aux différentes implémentations. "
"CPython reconnaît actuellement les valeurs suivantes :"

#: ../Doc/using/cmdline.rst:413
msgid "``-X faulthandler`` to enable :mod:`faulthandler`;"
msgstr "``-X faulthandler`` pour activer :mod:`faulthandler` ;"

#: ../Doc/using/cmdline.rst:414
msgid ""
"``-X showrefcount`` to output the total reference count and number of used "
"memory blocks when the program finishes or after each statement in the "
"interactive interpreter. This only works on debug builds."
msgstr ""
"``-X showrefcount`` pour afficher le compteur des références et le nombre de "
"blocs mémoire utilisés lorsque le programme se termine ou après chaque "
"entrée de l'interpréteur interactif. Ceci ne fonctionne que sur les versions "
"compilées en mode débogage."

#: ../Doc/using/cmdline.rst:417
msgid ""
"``-X tracemalloc`` to start tracing Python memory allocations using the :mod:"
"`tracemalloc` module. By default, only the most recent frame is stored in a "
"traceback of a trace. Use ``-X tracemalloc=NFRAME`` to start tracing with a "
"traceback limit of *NFRAME* frames. See the :func:`tracemalloc.start` for "
"more information."
msgstr ""
"``-X tracemalloc`` pour lancer le suivi des allocations mémoire par Python "
"en utilisant le module :mod:`tracemalloc`. Par défaut, seul l'appel (la "
"*frame* en anglais) le plus récent est stocké dans la trace de la pile "
"d'appels. Utilisez ``-X tracemalloc=NFRAME`` pour lancer le suivi avec une "
"limite des traces à *NFRAME* appels. Voir :func:`tracemalloc.start`  pour "
"plus d'informations."

#: ../Doc/using/cmdline.rst:422
msgid ""
"``-X showalloccount`` to output the total count of allocated objects for "
"each type when the program finishes. This only works when Python was built "
"with ``COUNT_ALLOCS`` defined."
msgstr ""
"``-X showalloccount`` pour afficher à la fin de l'exécution du programme le "
"total des objets alloués pour chaque type. Ceci ne fonctionne que si Python "
"a été compilé avec l'option ``COUNT_ALLOCS``."

#: ../Doc/using/cmdline.rst:426
msgid ""
"It also allows passing arbitrary values and retrieving them through the :"
"data:`sys._xoptions` dictionary."
msgstr ""
"Il est aussi possible de passer des valeurs arbitraires et de les récupérer "
"par le dictionnaire :data:`sys._xoptions`."

#: ../Doc/using/cmdline.rst:429
msgid "The :option:`-X` option was added."
msgstr "L'option :option:`-X` a été ajoutée."

#: ../Doc/using/cmdline.rst:432
msgid "The ``-X faulthandler`` option."
msgstr "L'option ``-X faulthandler``."

#: ../Doc/using/cmdline.rst:435
msgid "The ``-X showrefcount`` and ``-X tracemalloc`` options."
msgstr "Les options ``-X showrefcount`` et ``-X tracemalloc`` ."

#: ../Doc/using/cmdline.rst:438
msgid "The ``-X showalloccount`` option."
msgstr "L'option ``-X showalloccount``."

#: ../Doc/using/cmdline.rst:443
msgid "Options you shouldn't use"
msgstr "Options à ne pas utiliser"

#: ../Doc/using/cmdline.rst:447
msgid "Reserved for use by Jython_."
msgstr "Utilisation réservée à Jython_."

#: ../Doc/using/cmdline.rst:455
msgid "Environment variables"
msgstr "Variables d'environnement"

#: ../Doc/using/cmdline.rst:457
msgid ""
"These environment variables influence Python's behavior, they are processed "
"before the command-line switches other than -E or -I.  It is customary that "
"command-line switches override environmental variables where there is a "
"conflict."
msgstr ""
"Les variables d'environnement suivantes modifient le comportement de Python. "
"Elles sont analysées avant les options de la ligne de commande, autres que *-"
"E* ou *-I*. Il est d'usage que les options de la ligne de commande prennent "
"le pas sur les variables d'environnement en cas de conflit."

#: ../Doc/using/cmdline.rst:464
msgid ""
"Change the location of the standard Python libraries.  By default, the "
"libraries are searched in :file:`{prefix}/lib/python{version}` and :file:"
"`{exec_prefix}/lib/python{version}`, where :file:`{prefix}` and :file:"
"`{exec_prefix}` are installation-dependent directories, both defaulting to :"
"file:`/usr/local`."
msgstr ""
"Modifie l'emplacement des bibliothèques standards de Python. Par défaut, les "
"bibliothèques sont recherchées dans :file:`{préfixe}/lib/python{version}` "
"et :file:`{préfixe_exec}/lib/python{version}` où :file:`{préfixe}` et :file:"
"`{préfixe_exec}` sont des répertoires qui dépendent de l'installation (leur "
"valeur par défaut étant :file:`/usr/local`)."

#: ../Doc/using/cmdline.rst:470
msgid ""
"When :envvar:`PYTHONHOME` is set to a single directory, its value replaces "
"both :file:`{prefix}` and :file:`{exec_prefix}`.  To specify different "
"values for these, set :envvar:`PYTHONHOME` to :file:`{prefix}:{exec_prefix}`."
msgstr ""
"Quand :envvar:`PYTHONHOME` est défini à un simple répertoire, sa valeur "
"remplace à la fois :file:`{préfixe}` et :file:`{préfixe_exec}`. Pour "
"spécifier des valeurs différentes à ces variables, définissez :envvar:"
"`PYTHONHOME` à :file:`{préfixe}:{préfixe_exec}`."

#: ../Doc/using/cmdline.rst:477
msgid ""
"Augment the default search path for module files.  The format is the same as "
"the shell's :envvar:`PATH`: one or more directory pathnames separated by :"
"data:`os.pathsep` (e.g. colons on Unix or semicolons on Windows). Non-"
"existent directories are silently ignored."
msgstr ""
"Augmente le chemin de recherche par défaut des fichiers de modules. Le "
"format est le même que pour :envvar:`PATH` du shell : un ou plusieurs "
"chemins de répertoires séparés par :data:`os.pathsep`  (par exemple, le "
"caractère deux-points sous Unix et point-virgule sous Windows). Les "
"répertoires qui n'existent pas sont ignorés silencieusement."

#: ../Doc/using/cmdline.rst:482
msgid ""
"In addition to normal directories, individual :envvar:`PYTHONPATH` entries "
"may refer to zipfiles containing pure Python modules (in either source or "
"compiled form). Extension modules cannot be imported from zipfiles."
msgstr ""
"En plus des répertoires normaux, des entrées individuelles de :envvar:"
"`PYTHONPATH` peuvent faire référence à des fichiers zip contenant des "
"modules en pur Python (soit sous forme de code source, soit sous forme "
"compilée). Les modules d'extensions ne peuvent pas être importés à partir de "
"fichiers zip."

#: ../Doc/using/cmdline.rst:486
msgid ""
"The default search path is installation dependent, but generally begins "
"with :file:`{prefix}/lib/python{version}` (see :envvar:`PYTHONHOME` above).  "
"It is *always* appended to :envvar:`PYTHONPATH`."
msgstr ""
"Le chemin de recherche par défaut dépend de l'installation mais commence "
"généralement par :file:`{préfixe}/lib/python{version}` (voir :envvar:"
"`PYTHONHOME` ci-dessus). Il est *toujours* ajouté à  :envvar:`PYTHONPATH`."

#: ../Doc/using/cmdline.rst:490
msgid ""
"An additional directory will be inserted in the search path in front of :"
"envvar:`PYTHONPATH` as described above under :ref:`using-on-interface-"
"options`. The search path can be manipulated from within a Python program as "
"the variable :data:`sys.path`."
msgstr ""
"Comme indiqué ci-dessus dans :ref:`using-on-interface-options`, un "
"répertoire supplémentaire est inséré dans le chemin de recherche devant :"
"envvar:`PYTHONPATH`. Le chemin de recherche peut être manipulé depuis un "
"programme Python avec la variable :data:`sys.path`."

#: ../Doc/using/cmdline.rst:498
msgid ""
"If this is the name of a readable file, the Python commands in that file are "
"executed before the first prompt is displayed in interactive mode.  The file "
"is executed in the same namespace where interactive commands are executed so "
"that objects defined or imported in it can be used without qualification in "
"the interactive session.  You can also change the prompts :data:`sys.ps1` "
"and :data:`sys.ps2` and the hook :data:`sys.__interactivehook__` in this "
"file."
msgstr ""
"S'il s'agit d'un nom de fichier accessible en lecture, les commandes Python "
"de ce fichier sont exécutées avant que la première invite ne soit affichée "
"en mode interactif. Le fichier est exécuté dans le même espace de nommage "
"que les commandes interactives, de manière à ce que les objets définis ou "
"importés puissent être utilisés sans qualificatif dans la session "
"interactive. Vous pouvez aussi changer les invites :data:`sys.ps1` et :data:"
"`sys.ps2` ainsi que le point d'entrée (*hook* en anglais) :data:`sys."
"__interactivehook__` dans ce fichier."

#: ../Doc/using/cmdline.rst:508
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-O` option.  If set to an integer, it is equivalent to specifying :"
"option:`-O` multiple times."
msgstr ""
"Si elle est définie à une chaîne non vide, c'est équivalent à spécifier "
"l'option :option:`-O`. Si elle est définie à un entier, c'est équivalent à "
"spécifier l'option :option:`-O` plusieurs fois."

#: ../Doc/using/cmdline.rst:515
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-d` option.  If set to an integer, it is equivalent to specifying :"
"option:`-d` multiple times."
msgstr ""
"Si elle est définie à une chaîne non vide, c'est équivalent à spécifier "
"l'option :option:`-d`. Si elle est définie à un entier, c'est équivalent à "
"spécifier l'option :option:`-d` plusieurs fois."

#: ../Doc/using/cmdline.rst:522
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-i` option."
msgstr ""
"Si elle est définie à une chaîne non vide, c'est équivalent à spécifier "
"l'option :option:`-i`."

#: ../Doc/using/cmdline.rst:525
msgid ""
"This variable can also be modified by Python code using :data:`os.environ` "
"to force inspect mode on program termination."
msgstr ""
"Cette variable peut aussi être modifiée par du code Python en utilisant :"
"data:`os.environ` pour forcer le mode introspectif à la fin du programme."

#: ../Doc/using/cmdline.rst:531
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-u` option."
msgstr ""
"Si elle est définie à une chaîne non vide, c'est équivalent à spécifier "
"l'option :option:`-u`."

#: ../Doc/using/cmdline.rst:537
msgid ""
"If this is set to a non-empty string it is equivalent to specifying the :"
"option:`-v` option.  If set to an integer, it is equivalent to specifying :"
"option:`-v` multiple times."
msgstr ""
"Si elle est définie à une chaîne non vide, c'est équivalent à spécifier "
"l'option :option:`-v`. Si elle est définie à un entier, c'est équivalent à "
"spécifier l'option :option:`-v` plusieurs fois."

#: ../Doc/using/cmdline.rst:544
msgid ""
"If this is set, Python ignores case in :keyword:`import` statements.  This "
"only works on Windows and OS X."
msgstr ""
"Si elle est définie, Python ignore la casse dans les instructions :keyword:"
"`import`. Ceci ne fonctionne que sous Windows et OS X."

#: ../Doc/using/cmdline.rst:550
msgid ""
"If this is set to a non-empty string, Python won't try to write ``.pyc`` "
"files on the import of source modules.  This is equivalent to specifying "
"the :option:`-B` option."
msgstr ""
"Si elle est définie et n'est pas une chaîne vide, Python n'écrit pas de "
"fichier ``.pyc`` à l'importation des modules sources. C'est équivalent à "
"spécifier l'option :option:`-B`."

#: ../Doc/using/cmdline.rst:557
msgid ""
"If this variable is not set or set to ``random``, a random value is used to "
"seed the hashes of str, bytes and datetime objects."
msgstr ""
"Si cette variable n'est pas définie ou définie à ``random``, une valeur "
"aléatoire est utilisée pour saler les empreintes des objets chaines, bytes "
"et ``datetime``."

#: ../Doc/using/cmdline.rst:560
msgid ""
"If :envvar:`PYTHONHASHSEED` is set to an integer value, it is used as a "
"fixed seed for generating the hash() of the types covered by the hash "
"randomization."
msgstr ""
"Si :envvar:`PYTHONHASHSEED` est définie à une valeur entière, elle est "
"utilisée comme valeur de salage pour générer les empreintes des types "
"utilisant l'imprévisibilité du hachage."

#: ../Doc/using/cmdline.rst:564
msgid ""
"Its purpose is to allow repeatable hashing, such as for selftests for the "
"interpreter itself, or to allow a cluster of python processes to share hash "
"values."
msgstr ""
"L'objectif est d'avoir des empreintes reproductibles, pour des tests de "
"l'interpréteur lui-même ou pour qu'un groupe de processus Python puisse "
"partager des empreintes."

#: ../Doc/using/cmdline.rst:568
msgid ""
"The integer must be a decimal number in the range [0,4294967295].  "
"Specifying the value 0 will disable hash randomization."
msgstr ""
"Le nombre entier doit être écrit en base 10 et être compris entre 0 et "
"4 294 967 295. Spécifier la valeur 0 désactive l'imprévisibilité des "
"empreintes."

#: ../Doc/using/cmdline.rst:576
msgid ""
"If this is set before running the interpreter, it overrides the encoding "
"used for stdin/stdout/stderr, in the syntax ``encodingname:errorhandler``.  "
"Both the ``encodingname`` and the ``:errorhandler`` parts are optional and "
"have the same meaning as in :func:`str.encode`."
msgstr ""
"Si la variable est définie sous la forme ``nom_encodage:"
"gestionnaire_erreur`` avant le lancement de l'interpréteur, cela prend le "
"pas sur l'encodage utilisé pour l'entrée standard, la sortie standard ou la "
"sortie d'erreur.  ``nom_encodage`` et ``:gestionnaire_erreur`` sont "
"facultatifs tous les deux et possèdent la même signification que dans :func:"
"`str.encode`."

#: ../Doc/using/cmdline.rst:581
msgid ""
"For stderr, the ``:errorhandler`` part is ignored; the handler will always "
"be ``'backslashreplace'``."
msgstr ""
"Pour la sortie d'erreur, la partie ``:gestionnaire_erreur`` est ignorée : le "
"gestionnaire est toujours ``'backslashreplace'``."

#: ../Doc/using/cmdline.rst:584
msgid "The ``encodingname`` part is now optional."
msgstr "La partie ``nom_encodage`` est maintenant optionnelle."

#: ../Doc/using/cmdline.rst:587
msgid ""
"On Windows, the encoding specified by this variable is ignored for "
"interactive console buffers unless :envvar:`PYTHONLEGACYWINDOWSSTDIO` is "
"also specified. Files and pipes redirected through the standard streams are "
"not affected."
msgstr ""
"Sous Windows, l'encodage spécifié par cette variable est ignoré pour le "
"tampon des consoles interactives à moins que :envvar:"
"`PYTHONLEGACYWINDOWSSTDIO` ne soit aussi spécifié. Les fichiers et tubes "
"(*pipes* en anglais) redirigés vers les flux standards ne sont pas concernés."

#: ../Doc/using/cmdline.rst:594
msgid ""
"If this is set, Python won't add the :data:`user site-packages directory "
"<site.USER_SITE>` to :data:`sys.path`."
msgstr ""
"Si elle est définie, Python n'ajoute pas le répertoire :data:`site-packages "
"propre à l'utilisateur <site.USER_SITE>` à :data:`sys.path`."

#: ../Doc/using/cmdline.rst:604
msgid ""
"Defines the :data:`user base directory <site.USER_BASE>`, which is used to "
"compute the path of the :data:`user site-packages directory <site."
"USER_SITE>` and :ref:`Distutils installation paths <inst-alt-install-user>` "
"for ``python setup.py install --user``."
msgstr ""
"Définit le répertoire :data:`base utilisateur <site.USER_BASE>`. Celui-ci "
"est utilisé pour déterminer le chemin du :data:`répertoire site-packages "
"propre à l'utilisateur <site.USER_SITE>` et des :ref:`schémas d'installation "
"de Distutils <inst-alt-install-user>` pour ``python setup.py install --"
"user``."

#: ../Doc/using/cmdline.rst:616
msgid ""
"If this environment variable is set, ``sys.argv[0]`` will be set to its "
"value instead of the value got through the C runtime.  Only works on Mac OS "
"X."
msgstr ""
"Si cette variable d'environnement est définie, ``sys.argv[0]`` est définie à "
"cette valeur au lieu de la valeur fournie par l'exécutable. Ne fonctionne "
"que sur Mac OS X."

#: ../Doc/using/cmdline.rst:622
msgid ""
"This is equivalent to the :option:`-W` option. If set to a comma separated "
"string, it is equivalent to specifying :option:`-W` multiple times."
msgstr ""
"C'est équivalent à spécifier l'option :option:`-W`. Si la valeur est une "
"chaîne séparée par des virgules, c'est équivalent à spécifier l'option :"
"option:`-W` plusieurs fois."

#: ../Doc/using/cmdline.rst:628
msgid ""
"If this environment variable is set to a non-empty string, :func:"
"`faulthandler.enable` is called at startup: install a handler for :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:"
"`SIGILL` signals to dump the Python traceback.  This is equivalent to :"
"option:`-X` ``faulthandler`` option."
msgstr ""
"Si elle est définie à une chaîne non vide, :func:`faulthandler.enable` est "
"appelée au démarrage : ceci installe un gestionnaire pour les signaux :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` et :const:"
"`SIGILL` afin de générer une trace de la pile d'appels. C'est équivalent à "
"spécifier l'option :option:`-X` ``faulthandler``."

#: ../Doc/using/cmdline.rst:639
msgid ""
"If this environment variable is set to a non-empty string, start tracing "
"Python memory allocations using the :mod:`tracemalloc` module. The value of "
"the variable is the maximum number of frames stored in a traceback of a "
"trace. For example, ``PYTHONTRACEMALLOC=1`` stores only the most recent "
"frame. See the :func:`tracemalloc.start` for more information."
msgstr ""
"Si elle est définie à une chaîne non vide, lance le suivi des allocations "
"mémoire par Python en utilisant le module :mod:`tracemalloc`. La valeur de "
"la variable définit le nombre maximum d'appels (les *frames* en anglais) "
"stockés dans la trace de pile d'appels. Par exemple, ``PYTHONTRACEMALLOC=1`` "
"ne stocke que l'appel le plus récent. Voir :func:`tracemalloc.start` pour "
"davantage d'informations."

#: ../Doc/using/cmdline.rst:650
msgid ""
"If this environment variable is set to a non-empty string, enable the :ref:"
"`debug mode <asyncio-debug-mode>` of the :mod:`asyncio` module."
msgstr ""
"Si elle est définie à une chaîne non vide, active le :ref:`mode debogage "
"<asyncio-debug-mode>` du module :mod:`asyncio`."

#: ../Doc/using/cmdline.rst:658
msgid "Set the Python memory allocators and/or install debug hooks."
msgstr ""
"Définit l'allocateur mémoire de Python ou installe des points d'entrée "
"(*hooks* en anglais) de débogage."

#: ../Doc/using/cmdline.rst:660
msgid "Set the family of memory allocators used by Python:"
msgstr "Définit la famille d'allocateurs mémoire utilisés par Python :"

#: ../Doc/using/cmdline.rst:662
msgid ""
"``malloc``: use the :c:func:`malloc` function of the C library for all "
"domains (:c:data:`PYMEM_DOMAIN_RAW`, :c:data:`PYMEM_DOMAIN_MEM`, :c:data:"
"`PYMEM_DOMAIN_OBJ`)."
msgstr ""
"``malloc`` : utilise la fonction :c:func:`malloc` de la bibliothèque C "
"standard pour tous les domaines (:c:data:`PYMEM_DOMAIN_RAW`, :c:data:"
"`PYMEM_DOMAIN_MEM`, :c:data:`PYMEM_DOMAIN_OBJ`)."

#: ../Doc/using/cmdline.rst:665
msgid ""
"``pymalloc``: use the :ref:`pymalloc allocator <pymalloc>` for :c:data:"
"`PYMEM_DOMAIN_MEM` and :c:data:`PYMEM_DOMAIN_OBJ` domains and use the :c:"
"func:`malloc` function for the :c:data:`PYMEM_DOMAIN_RAW` domain."
msgstr ""
"``pymalloc`` : utilise l’:ref:`allocateur pymalloc <pymalloc>` pour les "
"domaines :c:data:`PYMEM_DOMAIN_MEM` ainsi que :c:data:`PYMEM_DOMAIN_OBJ` et "
"utilise la fonction :c:func:`malloc` pour le domaine :c:data:"
"`PYMEM_DOMAIN_RAW`."

#: ../Doc/using/cmdline.rst:669
msgid "Install debug hooks:"
msgstr "Installe des points d'entrée de débogage :"

#: ../Doc/using/cmdline.rst:671
msgid "``debug``: install debug hooks on top of the default memory allocator"
msgstr ""
"``debug`` : installe des fonctions automatiques de débogage au-dessus de "
"l'allocateur mémoire par défaut."

#: ../Doc/using/cmdline.rst:672
msgid "``malloc_debug``: same as ``malloc`` but also install debug hooks"
msgstr ""
"``malloc_debug``: identique à ``malloc`` mais installe aussi des fonctions "
"automatiques de débogage."

#: ../Doc/using/cmdline.rst:673
msgid "``pymalloc_debug``: same as ``pymalloc`` but also install debug hooks"
msgstr ""
"``pymalloc_debug``: identique à ``pymalloc`` mais installe aussi des "
"fonctions automatiques de débogage."

#: ../Doc/using/cmdline.rst:675
msgid ""
"When Python is compiled in release mode, the default is ``pymalloc``. When "
"compiled in debug mode, the default is ``pymalloc_debug`` and the debug "
"hooks are used automatically."
msgstr ""
"Quand Python est compilé en mode *release*, la valeur par défaut est "
"``pymalloc``. Quand il est compilé en mode débogage, la valeur par défaut "
"est ``pymalloc_debug`` et les fonctions automatiques de débogage sont "
"utilisées automatiquement."

#: ../Doc/using/cmdline.rst:679
msgid ""
"If Python is configured without ``pymalloc`` support, ``pymalloc`` and "
"``pymalloc_debug`` are not available, the default is ``malloc`` in release "
"mode and ``malloc_debug`` in debug mode."
msgstr ""
"Si Python est configuré sans le support de ``pymalloc``, ``pymalloc`` et "
"``pymalloc_debug`` ne sont pas disponibles. Les valeurs par défaut sont "
"``malloc`` en mode *release* et ``malloc_debug`` en mode débogage."

#: ../Doc/using/cmdline.rst:683
msgid ""
"See the :c:func:`PyMem_SetupDebugHooks` function for debug hooks on Python "
"memory allocators."
msgstr ""
"Reportez-vous à la fonction :c:func:`PyMem_SetupDebugHooks` pour ce qui "
"concerne les fonctions automatiques de débogage de l'allocateur mémoire de "
"Python."

#: ../Doc/using/cmdline.rst:691
msgid ""
"If set to a non-empty string, Python will print statistics of the :ref:"
"`pymalloc memory allocator <pymalloc>` every time a new pymalloc object "
"arena is created, and on shutdown."
msgstr ""
"Si elle est définie à une chaîne non vide, Python affiche des statistiques "
"relatives à l’:ref:`allocateur mémoire pymalloc <pymalloc>` chaque fois "
"qu'un objet est créé par ce gestionnaire, ainsi qu'à la fin de l'exécution "
"du programme."

#: ../Doc/using/cmdline.rst:695
msgid ""
"This variable is ignored if the :envvar:`PYTHONMALLOC` environment variable "
"is used to force the :c:func:`malloc` allocator of the C library, or if "
"Python is configured without ``pymalloc`` support."
msgstr ""
"Cette variable est ignorée si la variable d'environnement :envvar:"
"`PYTHONMALLOC` est utilisée pour forcer l'allocateur :c:func:`malloc` de la "
"bibliothèque C standard ou si Python est configuré sans le support de "
"``pymalloc``."

#: ../Doc/using/cmdline.rst:699
msgid ""
"This variable can now also be used on Python compiled in release mode. It "
"now has no effect if set to an empty string."
msgstr ""
"Cette variable peut maintenant être utilisée avec Python compilé en mode "
"*release*. Elle n'a pas d'effet si elle est définie à une chaine vide."

#: ../Doc/using/cmdline.rst:706
msgid ""
"If set to a non-empty string, the default filesystem encoding and errors "
"mode will revert to their pre-3.6 values of 'mbcs' and 'replace', "
"respectively. Otherwise, the new defaults 'utf-8' and 'surrogatepass' are "
"used."
msgstr ""
"Si elle est définie et n’est pas une chaîne vide, l'encodage par défaut "
"respectivement du système de fichiers et des erreurs reviennent à leur "
"valeur pré-3.6, respectivement ``'mbcs'`` et ``'replace'``. Sinon, les "
"nouvelles valeurs par défaut ``\"UTF-8\"`` et ``\"surrogatepass\"`` sont "
"utilisées."

#: ../Doc/using/cmdline.rst:710
msgid ""
"This may also be enabled at runtime with :func:`sys."
"_enablelegacywindowsfsencoding()`."
msgstr ""
"Vous pouvez aussi activer ceci à l'exécution avec :func:`sys."
"_enablelegacywindowsfsencoding()`."

#: ../Doc/using/cmdline.rst:713 ../Doc/using/cmdline.rst:727
msgid "Availability: Windows"
msgstr "Disponibilité : Windows"

#: ../Doc/using/cmdline.rst:715
msgid "See :pep:`529` for more details."
msgstr "Voir la :pep:`529` pour plus d'informations."

#: ../Doc/using/cmdline.rst:720
msgid ""
"If set to a non-empty string, does not use the new console reader and "
"writer. This means that Unicode characters will be encoded according to the "
"active console code page, rather than using utf-8."
msgstr ""
"Si elle est définie et n’est pas une chaîne vide, n'utilise pas les lecteur "
"et écrivain de la nouvelle console. Cela signifie que les caractères Unicode "
"sont encodés avec l'encodage de la console active plutôt qu'en UTF-8."

#: ../Doc/using/cmdline.rst:724
msgid ""
"This variable is ignored if the standard streams are redirected (to files or "
"pipes) rather than referring to console buffers."
msgstr ""
"Cette variable est ignorée si les flux standards sont redirigés (vers des "
"fichiers ou des tubes) plutôt que pointant vers des mémoires tampons de "
"console."

#: ../Doc/using/cmdline.rst:732
msgid "Debug-mode variables"
msgstr "Variables en mode débogage"

#: ../Doc/using/cmdline.rst:734
msgid ""
"Setting these variables only has an effect in a debug build of Python, that "
"is, if Python was configured with the ``--with-pydebug`` build option."
msgstr ""
"Définir ces variables n'a d'effet que si Python a été compilé en mode "
"débogage, c'est-à-dire que l'option de compilation ``--with-pydebug`` a été "
"spécifiée."

#: ../Doc/using/cmdline.rst:739
msgid "If set, Python will print threading debug info."
msgstr ""
"Si elle est définie, Python affiche des informations de débogage relatives "
"aux différents fils d'exécution."

#: ../Doc/using/cmdline.rst:744
msgid ""
"If set, Python will dump objects and reference counts still alive after "
"shutting down the interpreter."
msgstr ""
"Si elle est définie, Python affiche (de manière brute) les objets et les "
"compteurs de références toujours existant après la fermeture de "
"l'interpréteur."

#~ msgid "Turn on basic optimizations.  See also :envvar:`PYTHONOPTIMIZE`."
#~ msgstr ""
#~ "Active les optimisations basiques. Voir aussi :envvar:`PYTHONOPTIMIZE`."

#~ msgid "Discard docstrings in addition to the :option:`-O` optimizations."
#~ msgstr ""
#~ "Supprime les *docstrings* en plus des optimisations réalisées par :option:"
#~ "`-O`."

#~ msgid "The line numbers in error messages will be off by one."
#~ msgstr ""
#~ "Les numéros de ligne dans les messages d'erreur seront décalés de un."

#, fuzzy
#~ msgid "all"
#~ msgstr "``all``"
