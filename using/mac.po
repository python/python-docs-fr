# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: 2023-03-28 00:23+0200\n"
"Last-Translator: Mathieu Dupuy\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: using/mac.rst:6
#, fuzzy
msgid "Using Python on macOS"
msgstr "Utilisation de Python sur un Mac"

#: using/mac.rst:11
msgid ""
"This document aims to give an overview of macOS-specific behavior you should "
"know about to get started with Python on Mac computers. Python on a Mac "
"running macOS is very similar to Python on other Unix-derived platforms, but "
"there are some differences in installation and some features."
msgstr ""

#: using/mac.rst:16
msgid ""
"There are various ways to obtain and install Python for macOS. Pre-built "
"versions of the most recent versions of Python are available from a number "
"of distributors. Much of this document describes use of the Pythons provided "
"by the CPython release team for download from the `python.org website "
"<https://www.python.org/downloads/>`_. See :ref:`alternative_bundles` for "
"some other options."
msgstr ""

#: using/mac.rst:34
msgid "Using Python for macOS from ``python.org``"
msgstr ""

#: using/mac.rst:37
msgid "Installation steps"
msgstr "Étapes d'installation"

#: using/mac.rst:39
msgid ""
"For `current Python versions <https://www.python.org/downloads/>`_ (other "
"than those in ``security`` status), the release team produces a **Python for "
"macOS** installer package for each new release. A list of available "
"installers is available `here <https://www.python.org/downloads/macos/>`_. "
"We recommend using the most recent supported Python version where possible. "
"Current installers provide a `universal2 binary <https://en.wikipedia.org/"
"wiki/Universal_binary>`_ build of Python which runs natively on all Macs "
"(Apple Silicon and Intel) that are supported by a wide range of macOS "
"versions, currently typically from at least **macOS 10.13 High Sierra** on."
msgstr ""

#: using/mac.rst:51
msgid ""
"The downloaded file is a standard macOS installer package file (``.pkg``). "
"File integrity information (checksum, size, sigstore signature, etc) for "
"each file is included on the release download page. Installer packages and "
"their contents are signed and notarized with ``Python Software Foundation`` "
"Apple Developer ID certificates to meet `macOS Gatekeeper requirements "
"<https://support.apple.com/en-us/102445>`_."
msgstr ""

#: using/mac.rst:57
msgid ""
"For a default installation, double-click on the downloaded installer package "
"file. This should launch the standard macOS Installer app and display the "
"first of several installer windows steps."
msgstr ""

#: using/mac.rst:63
msgid ""
"Clicking on the **Continue** button brings up the **Read Me** for this "
"installer. Besides other important information, the **Read Me** documents "
"which Python version is going to be installed and on what versions of macOS "
"it is supported. You may need to scroll through to read the whole file. By "
"default, this **Read Me** will also be installed in |"
"usemac_applications_folder_version| and available to read anytime."
msgstr ""

#: using/mac.rst:71
msgid ""
"Clicking on **Continue** proceeds to display the license for Python and for "
"other included software. You will then need to **Agree** to the license "
"terms before proceeding to the next step. This license file will also be "
"installed and available to be read later."
msgstr ""

#: using/mac.rst:78
msgid ""
"After the license terms are accepted, the next step is the **Installation "
"Type** display. For most uses, the standard set of installation operations "
"is appropriate."
msgstr ""

#: using/mac.rst:83
msgid ""
"By pressing the **Customize** button, you can choose to omit or select "
"certain package components of the installer. Click on each package name to "
"see a description of what it installs. To also install support for the "
"optional experimental free-threaded feature, see :ref:`install-freethreaded-"
"macos`."
msgstr ""

#: using/mac.rst:91
msgid ""
"In either case, clicking **Install** will begin the install process by "
"asking permission to install new software. A macOS user name with "
"``Administrator`` privilege is needed as the installed Python will be "
"available to all users of the Mac."
msgstr ""

#: using/mac.rst:95
msgid "When the installation is complete, the **Summary** window will appear."
msgstr ""

#: using/mac.rst:99
msgid ""
"Double-click on the :command:`Install Certificates.command` icon or file in "
"the |usemac_applications_folder_version| window to complete the installation."
msgstr ""

#: using/mac.rst:105
msgid ""
"This will open a temporary :program:`Terminal` shell window that will use "
"the new Python to download and install SSL root certificates for its use."
msgstr ""

#: using/mac.rst:111
msgid ""
"If ``Successfully installed certifi`` and ``update complete`` appears in the "
"terminal window, the installation is complete. Close this terminal window "
"and the installer window."
msgstr ""

#: using/mac.rst:115
msgid "A default install will include:"
msgstr ""

#: using/mac.rst:117
#, fuzzy
msgid ""
"A |usemac_applications_folder_name| folder in your :file:`Applications` "
"folder. In here you find :program:`IDLE`, the development environment that "
"is a standard part of official Python distributions; and :program:`Python "
"Launcher`, which handles double-clicking Python scripts from the macOS "
"`Finder <https://support.apple.com/en-us/HT201732>`_."
msgstr ""
"Un dossier :file:`Python 3.12` dans votre dossier :file:`Applications`. "
"Dedans vous trouverez **IDLE**, l'environnement de développement qui fait "
"partie des distributions Python officielles ; **PythonLauncher**, qui gère "
"le lancement de scripts Python depuis le ``Finder``."

#: using/mac.rst:122
#, fuzzy
msgid ""
"A framework :file:`/Library/Frameworks/Python.framework`, which includes the "
"Python executable and libraries. The installer adds this location to your "
"shell path. To uninstall Python, you can remove these three things. Symlinks "
"to the Python executable are placed in :file:`/usr/local/bin/`."
msgstr ""
"Un **framework** :file:`/Library/Frameworks/Python.framework`, qui inclut "
"l’exécutable Python et ses bibliothèques. L’installateur ajoute ce chemin à "
"votre **PATH**. Pour désinstaller MacPython, vous pouvez simplement "
"supprimer ces trois choses. Un lien symbolique vers l'exécutable Python est "
"placé dans ``/usr/local/bin/``."

#: using/mac.rst:129
#, fuzzy
msgid ""
"Recent versions of macOS include a :command:`python3` command in :file:`/usr/"
"bin/python3` that links to a usually older and incomplete version of Python "
"provided by and for use by the Apple development tools, :program:`Xcode` or "
"the :program:`Command Line Tools for Xcode`. You should never modify or "
"attempt to delete this installation, as it is Apple-controlled and is used "
"by Apple-provided or third-party software.  If you choose to install a newer "
"Python version from ``python.org``, you will have two different but "
"functional Python installations on your computer that can co-exist. The "
"default installer options should ensure that its :command:`python3` will be "
"used instead of the system :command:`python3`."
msgstr ""
"Le **build** Python fourni par Apple est installé dans :file:`/System/"
"Library/Frameworks/Python.framework` et :file:`/usr/bin/python`. Vous ne "
"devriez jamais les modifier ou supprimer, car ils sont contrôlés et utilisés "
"par Apple (ou d'autres logiciels). Rappelez vous que si vous choisissez "
"d'installer un Python plus récent depuis python.org, vous aurez deux "
"installations de Python différentes et fonctionnelles sur votre ordinateur, "
"il est donc important que vos chemins et utilisations soit cohérentes avec "
"ce que vous voulez faire."

#: using/mac.rst:140
msgid "How to run a Python script"
msgstr "Comment exécuter un script Python"

#: using/mac.rst:142
msgid ""
"There are two ways to invoke the Python interpreter. If you are familiar "
"with using a Unix shell in a terminal window, you can invoke |"
"usemac_python_x_dot_y_literal| or ``python3`` optionally followed by one or "
"more command line options (described in :ref:`using-on-general`). The Python "
"tutorial also has a useful section on :ref:`using Python interactively from "
"a shell <tut-interac>`."
msgstr ""

#: using/mac.rst:149
msgid ""
"You can also invoke the interpreter through an integrated development "
"environment. :ref:`idle` is a basic editor and interpreter environment which "
"is included with the standard distribution of Python. :program:`IDLE` "
"includes a Help menu that allows you to access Python documentation. If you "
"are completely new to Python, you can read the tutorial introduction in that "
"document."
msgstr ""

#: using/mac.rst:157
msgid ""
"There are many other editors and IDEs available, see :ref:`editors` for more "
"information."
msgstr ""

#: using/mac.rst:160
msgid ""
"To run a Python script file from the terminal window, you can invoke the "
"interpreter with the name of the script file:"
msgstr ""

#: using/mac.rst:163
msgid "|usemac_python_x_dot_y_literal| ``myscript.py``"
msgstr ""

#: using/mac.rst:165
#, fuzzy
msgid "To run your script from the Finder, you can either:"
msgstr "Pour exécuter votre script depuis le Finder vous avez deux options :"

#: using/mac.rst:167
#, fuzzy
msgid "Drag it to :program:`Python Launcher`."
msgstr "Glissez-le vers :program:`PythonLauncher`"

#: using/mac.rst:169
#, fuzzy
msgid ""
"Select :program:`Python Launcher` as the default application to open your "
"script (or any ``.py`` script) through the Finder Info window and double-"
"click it. :program:`Python Launcher` has various preferences to control how "
"your script is launched. Option-dragging allows you to change these for one "
"invocation, or use its ``Preferences`` menu to change things globally."
msgstr ""
"Sélectionnez :program:`PythonLauncher` en tant qu'application par défaut "
"pour ouvrir votre script (ou n'importe quel script ``.py``) depuis la "
"fenêtre **info** de votre Finder puis double-cliquez votre script. :program:"
"`PythonLauncher` a des préférences variées pour contrôler comment votre "
"script est exécuté. Glisser des options permets de les changer pour une "
"invocation, ou utilisez le menu Préférences pour changer les choses "
"globalement."

#: using/mac.rst:175
msgid ""
"Be aware that running the script directly from the macOS Finder might "
"produce different results than when running from a terminal window as the "
"script will not be run in the usual shell environment including any setting "
"of environment variables in shell profiles. And, as with any other script or "
"program, be certain of what you are about to run."
msgstr ""

#: using/mac.rst:185
msgid "Alternative Distributions"
msgstr ""

#: using/mac.rst:187
msgid ""
"Besides the standard ``python.org`` for macOS installer, there are third-"
"party distributions for macOS that may include additional functionality. "
"Some popular distributions and their key features:"
msgstr ""

#: using/mac.rst:191
msgid "`ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""

#: using/mac.rst:192
msgid "Installer with multi-platform compatibility, documentation"
msgstr ""

#: using/mac.rst:194
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: using/mac.rst:195
msgid ""
"Popular scientific modules (such as numpy, scipy, and pandas) and the "
"``conda`` package manager."
msgstr ""

#: using/mac.rst:198
msgid "`Homebrew <https://brew.sh>`_"
msgstr ""

#: using/mac.rst:199
msgid ""
"Package manager for macOS including multiple versions of Python and many "
"third-party Python-based packages (including numpy, scipy, and pandas)."
msgstr ""

#: using/mac.rst:202
msgid "`MacPorts <https://www.macports.org>`_"
msgstr ""

#: using/mac.rst:203
msgid ""
"Another package manager for macOS including multiple versions of Python and "
"many third-party Python-based packages. May include pre-built versions of "
"Python and many packages for older versions of macOS."
msgstr ""

#: using/mac.rst:207
msgid ""
"Note that distributions might not include the latest versions of Python or "
"other libraries, and are not maintained or supported by the core Python team."
msgstr ""

#: using/mac.rst:213
msgid "Installing Additional Python Packages"
msgstr "Installation de paquets Python additionnels"

#: using/mac.rst:215
msgid "Refer to the `Python Packaging User Guide`_ for more information."
msgstr ""

#: using/mac.rst:225
#, fuzzy
msgid "GUI Programming"
msgstr "Programmation d'interface graphique sur le Mac"

#: using/mac.rst:227
msgid ""
"There are several options for building GUI applications on the Mac with "
"Python."
msgstr ""
"Il y a plusieurs options pour construire des applications avec interface "
"graphique sur le Mac avec Python."

#: using/mac.rst:229
#, fuzzy
msgid ""
"The standard Python GUI toolkit is :mod:`tkinter`, based on the cross-"
"platform Tk toolkit (https://www.tcl.tk). A macOS-native version of Tk is "
"included with the installer."
msgstr ""
"La boîte à outils standard de Python pour des interfaces graphique est :mod:"
"`tkinter`, basé sur la boite à outils multiplateformes **Tk** (https://www."
"tcl.tk). Une version native **Aqua** de **Tk** est empaquetée avec OS X par "
"Apple, et la dernière version peut être téléchargée et installée depuis "
"https://www.activestate.com ; elle peut aussi être construite depuis les "
"sources."

#: using/mac.rst:233
#, fuzzy
msgid ""
"*PyObjC* is a Python binding to Apple's Objective-C/Cocoa framework. "
"Information on PyObjC is available from :pypi:`pyobjc`."
msgstr ""
"*PyObjC* est un **binding** Python vers le **framework** Objective-C/Cocoa "
"d'Apple, qui est la base de la plupart des développements modernes sur Mac. "
"Des informations sur PyObjC sont disponible à https://pypi.org/project/"
"pyobjc/."

#: using/mac.rst:236
msgid "A number of alternative macOS GUI toolkits are available including:"
msgstr ""

#: using/mac.rst:238
msgid ""
"`PySide <https://www.qt.io/qt-for-python>`_: Official Python bindings to the "
"`Qt GUI toolkit <https://wiki.qt.io/Qt_for_Python>`_."
msgstr ""

#: using/mac.rst:241
msgid ""
"`PyQt <https://riverbankcomputing.com/software/pyqt/>`_: Alternative Python "
"bindings to Qt."
msgstr ""

#: using/mac.rst:244
msgid ""
"`Kivy <https://kivy.org>`_: A cross-platform GUI toolkit that supports "
"desktop and mobile platforms."
msgstr ""

#: using/mac.rst:247
msgid ""
"`Toga <https://toga.readthedocs.io>`_: Part of the `BeeWare Project <https://"
"beeware.org>`_; supports desktop, mobile, web and console apps."
msgstr ""

#: using/mac.rst:250
msgid ""
"`wxPython <https://wxpython.org>`_: A cross-platform toolkit that supports "
"desktop operating systems."
msgstr ""

#: using/mac.rst:255
msgid "Advanced Topics"
msgstr "Sujets avancés"

#: using/mac.rst:260
msgid "Installing Free-threaded Binaries"
msgstr ""

#: using/mac.rst:262
msgid "(Experimental)"
msgstr ""

#: using/mac.rst:266
msgid ""
"Everything described in this section is considered experimental, and should "
"be expected to change in future releases."
msgstr ""

#: using/mac.rst:269
msgid ""
"The ``python.org`` :ref:`Python for macOS <getting-and-installing-"
"macpython>` installer package can optionally install an additional build of "
"Python |usemac_x_dot_y| that supports :pep:`703`, the experimental free-"
"threading feature (running with the :term:`global interpreter lock` "
"disabled). Check the release page on ``python.org`` for possible updated "
"information."
msgstr ""

#: using/mac.rst:275
msgid ""
"Because this feature is still considered experimental, the support for it is "
"not installed by default. It is packaged as a separate install option, "
"available by clicking the **Customize** button on the **Installation Type** "
"step of the installer as described above."
msgstr ""

#: using/mac.rst:282
msgid ""
"If the box next to the **Free-threaded Python** package name is checked, a "
"separate :file:`PythonT.framework` will also be installed alongside the "
"normal :file:`Python.framework` in :file:`/Library/Frameworks`. This "
"configuration allows a free-threaded Python |usemac_x_dot_y| build to co-"
"exist on your system with a traditional (GIL only) Python |usemac_x_dot_y| "
"build with minimal risk while installing or testing. This installation "
"layout is itself experimental and is subject to change in future releases."
msgstr ""

#: using/mac.rst:290
msgid "Known cautions and limitations:"
msgstr ""

#: using/mac.rst:292
msgid ""
"The **UNIX command-line tools** package, which is selected by default, will "
"install links in :file:`/usr/local/bin` for |"
"usemac_python_x_dot_y_t_literal|, the free-threaded interpreter, and |"
"usemac_python_x_dot_y_t_literal_config|, a configuration utility which may "
"be useful for package builders. Since :file:`/usr/local/bin` is typically "
"included in your shell ``PATH``, in most cases no changes to your ``PATH`` "
"environment variables should be needed to use |"
"usemac_python_x_dot_y_t_literal|."
msgstr ""

#: using/mac.rst:300
msgid ""
"For this release, the **Shell profile updater** package and the :file:"
"`Update Shell Profile.command` in |usemac_applications_folder_version| do "
"not support the free-threaded package."
msgstr ""

#: using/mac.rst:304
msgid ""
"The free-threaded build and the traditional build have separate search paths "
"and separate :file:`site-packages` directories so, by default, if you need a "
"package available in both builds, it may need to be installed in both. The "
"free-threaded package will install a separate instance of :program:`pip` for "
"use with |usemac_python_x_dot_y_t_literal|."
msgstr ""

#: using/mac.rst:310
msgid "To install a package using :command:`pip` without a :command:`venv`:"
msgstr ""

#: using/mac.rst:312
msgid "|usemac_python_x_dot_y_t_literal| ``-m pip install <package_name>``"
msgstr ""

#: using/mac.rst:314
msgid ""
"When working with multiple Python environments, it is usually safest and "
"easiest to :ref:`create and use virtual environments <tut-venv>`. This can "
"avoid possible command name conflicts and confusion about which Python is in "
"use:"
msgstr ""

#: using/mac.rst:318
msgid "|usemac_python_x_dot_y_t_literal| ``-m venv <venv_name>``"
msgstr ""

#: using/mac.rst:320
msgid "then :command:`activate`."
msgstr ""

#: using/mac.rst:322
msgid "To run a free-threaded version of IDLE:"
msgstr ""

#: using/mac.rst:324
msgid "|usemac_python_x_dot_y_t_literal| ``-m idlelib``"
msgstr ""

#: using/mac.rst:326
msgid ""
"The interpreters in both builds respond to the same :ref:`PYTHON environment "
"variables <using-on-envvars>` which may have unexpected results, for "
"example, if you have ``PYTHONPATH`` set in a shell profile. If necessary, "
"there are :ref:`command line options <using-on-interface-options>` like ``-"
"E`` to ignore these environment variables."
msgstr ""

#: using/mac.rst:333
msgid ""
"The free-threaded build links to the third-party shared libraries, such as "
"``OpenSSL`` and ``Tk``, installed in the traditional framework. This means "
"that both builds also share one set of trust certificates as installed by "
"the :command:`Install Certificates.command` script, thus it only needs to be "
"run once."
msgstr ""

#: using/mac.rst:339
msgid ""
"If you cannot depend on the link in ``/usr/local/bin`` pointing to the "
"``python.org`` free-threaded |usemac_python_x_dot_y_t_literal| (for example, "
"if you want to install your own version there or some other distribution "
"does), you can explicitly set your shell ``PATH`` environment variable to "
"include the ``PythonT`` framework ``bin`` directory:"
msgstr ""

#: using/mac.rst:345
msgid ""
"export PATH=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin\":"
"\"$PATH\""
msgstr ""

#: using/mac.rst:349
msgid ""
"The traditional framework installation by default does something similar, "
"except for :file:`Python.framework`. Be aware that having both framework "
"``bin`` directories in ``PATH`` can lead to confusion if there are duplicate "
"names like ``python3.13`` in both; which one is actually used depends on the "
"order they appear in ``PATH``. The ``which python3.x`` or ``which python3."
"xt`` commands can show which path is being used. Using virtual environments "
"can help avoid such ambiguities. Another option might be to create a shell :"
"command:`alias` to the desired interpreter, like:"
msgstr ""

#: using/mac.rst:358
msgid ""
"alias py3.13=\"/Library/Frameworks/Python.framework/Versions/3.13/bin/"
"python3.13\"\n"
"alias py3.13t=\"/Library/Frameworks/PythonT.framework/Versions/3.13/bin/"
"python3.13t\""
msgstr ""

#: using/mac.rst:364
msgid "Installing using the command line"
msgstr ""

#: using/mac.rst:366
msgid ""
"If you want to use automation to install the ``python.org`` installer "
"package (rather than by using the familiar macOS :program:`Installer` GUI "
"app), the macOS command line :command:`installer` utility lets you select "
"non-default options, too. If you are not familiar with :command:`installer`, "
"it can be somewhat cryptic (see :command:`man installer` for more "
"information). As an example, the following shell snippet shows one way to do "
"it, using the ``3.13.0b2`` release and selecting the free-threaded "
"interpreter option:"
msgstr ""

#: using/mac.rst:375
msgid ""
"RELEASE=\"python-3.13.0b2-macos11.pkg\"\n"
"\n"
"# download installer pkg\n"
"curl -O https://www.python.org/ftp/python/3.13.0/${RELEASE}\n"
"\n"
"# create installer choicechanges to customize the install:\n"
"#    enable the PythonTFramework-3.13 package\n"
"#    while accepting the other defaults (install all other packages)\n"
"cat > ./choicechanges.plist <<EOF\n"
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple."
"com/DTDs/PropertyList-1.0.dtd\">\n"
"<plist version=\"1.0\">\n"
"<array>\n"
"        <dict>\n"
"                <key>attributeSetting</key>\n"
"                <integer>1</integer>\n"
"                <key>choiceAttribute</key>\n"
"                <string>selected</string>\n"
"                <key>choiceIdentifier</key>\n"
"                <string>org.python.Python.PythonTFramework-3.13</string>\n"
"        </dict>\n"
"</array>\n"
"</plist>\n"
"EOF\n"
"\n"
"sudo installer -pkg ./${RELEASE} -applyChoiceChangesXML ./choicechanges."
"plist -target /"
msgstr ""

#: using/mac.rst:405
msgid ""
"You can then test that both installer builds are now available with "
"something like:"
msgstr ""

#: using/mac.rst:407
msgid ""
"$ # test that the free-threaded interpreter was installed if the Unix "
"Command Tools package was enabled\n"
"$ /usr/local/bin/python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ #    and the traditional interpreter\n"
"$ /usr/local/bin/python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang 15.0.0 "
"(clang-1500.3.9.4)]\n"
"$ # test that they are also available without the prefix if /usr/local/bin "
"is on $PATH\n"
"$ python3.13t -VV\n"
"Python 3.13.0b2 experimental free-threading build (v3.13.0b2:3a83b172af, "
"Jun  5 2024, 12:57:31) [Clang 15.0.0 (clang-1500.3.9.4)]\n"
"$ python3.13 -VV\n"
"Python 3.13.0b2 (v3.13.0b2:3a83b172af, Jun  5 2024, 12:50:24) [Clang 15.0.0 "
"(clang-1500.3.9.4)]"
msgstr ""

#: using/mac.rst:423
msgid ""
"Current ``python.org`` installers only install to fixed locations like :file:"
"`/Library/Frameworks/`, :file:`/Applications`, and :file:`/usr/local/bin`. "
"You cannot use the :command:`installer` ``-domain`` option to install to "
"other locations."
msgstr ""

#: using/mac.rst:431
#, fuzzy
msgid "Distributing Python Applications"
msgstr "Distribuer des Applications Python sur le Mac"

#: using/mac.rst:433
msgid ""
"A range of tools exist for converting your Python code into a standalone "
"distributable application:"
msgstr ""

#: using/mac.rst:436
msgid ""
":pypi:`py2app`: Supports creating macOS ``.app`` bundles from a Python "
"project."
msgstr ""

#: using/mac.rst:439
msgid ""
"`Briefcase <https://briefcase.readthedocs.io>`_: Part of the `BeeWare "
"Project <https://beeware.org>`_; a cross-platform packaging tool that "
"supports creation of ``.app`` bundles on macOS, as well as managing signing "
"and notarization."
msgstr ""

#: using/mac.rst:444
msgid ""
"`PyInstaller <https://pyinstaller.org/>`_: A cross-platform packaging tool "
"that creates a single file or folder as a distributable artifact."
msgstr ""

#: using/mac.rst:448
msgid "App Store Compliance"
msgstr ""

#: using/mac.rst:450
msgid ""
"Apps submitted for distribution through the macOS App Store must pass "
"Apple's app review process. This process includes a set of automated "
"validation rules that inspect the submitted application bundle for "
"problematic code."
msgstr ""

#: using/mac.rst:454
msgid ""
"The Python standard library contains some code that is known to violate "
"these automated rules. While these violations appear to be false positives, "
"Apple's review rules cannot be challenged. Therefore, it is necessary to "
"modify the Python standard library for an app to pass App Store review."
msgstr ""

#: using/mac.rst:459
msgid ""
"The Python source tree contains :source:`a patch file <Mac/Resources/app-"
"store-compliance.patch>` that will remove all code that is known to cause "
"issues with the App Store review process. This patch is applied "
"automatically when CPython is configured with the :option:`--with-app-store-"
"compliance` option."
msgstr ""

#: using/mac.rst:465
msgid ""
"This patch is not normally required to use CPython on a Mac; nor is it "
"required if you are distributing an app *outside* the macOS App Store. It is "
"*only* required if you are using the macOS App Store as a distribution "
"channel."
msgstr ""

#: using/mac.rst:470
msgid "Other Resources"
msgstr "Autres ressources"

#: using/mac.rst:472
msgid ""
"The `python.org Help page <https://www.python.org/about/help/>`_ has links "
"to many useful resources. The `Pythonmac-SIG mailing list <https://www."
"python.org/community/sigs/current/pythonmac-sig/>`_ is another support "
"resource specifically for Python users and developers on the Mac."
msgstr ""

#~ msgid "Author"
#~ msgstr "Auteur"

#~ msgid "Bob Savage <bobsavage@mac.com>"
#~ msgstr "Bob Savage <bobsavage@mac.com>"

#, fuzzy
#~ msgid ""
#~ "Python on a Mac running macOS is in principle very similar to Python on "
#~ "any other Unix platform, but there are a number of additional features "
#~ "such as the integrated development environment (IDE) and the Package "
#~ "Manager that are worth pointing out."
#~ msgstr ""
#~ "Python sur un Macintosh exécutant macOS est en principe très similaire à "
#~ "Python sur n'importe quelle autre plateforme Unix, mais il y a un certain "
#~ "nombre de fonctionnalités additionnelle telle que l'IDE et le "
#~ "gestionnaire de paquets qui méritent d'être soulignées."

#, fuzzy
#~ msgid "Getting and Installing Python"
#~ msgstr "Obtenir et installer MacPython"

#, fuzzy
#~ msgid ""
#~ "macOS used to come with Python 2.7 pre-installed between versions 10.8 "
#~ "and `12.3 <https://developer.apple.com/documentation/macos-release-notes/"
#~ "macos-12_3-release-notes#Python>`_. You are invited to install the most "
#~ "recent version of Python 3 from the `Python website <https://www.python."
#~ "org/downloads/macos/>`__. A current \"universal2 binary\" build of "
#~ "Python, which runs natively on the Mac's new Apple Silicon and legacy "
#~ "Intel processors, is available there."
#~ msgstr ""
#~ "macOS était livré avec Python 2.7 préinstallé entre les versions 10.8 et "
#~ "`12.3 <https://developer.apple.com/documentation/macos-release-notes/"
#~ "macos-12_3-release-notes#Python>`_. Vous êtes invité à installer la "
#~ "version la plus récente de Python 3 à partir du site web de Python "
#~ "(https://www.python.org).  Une version « binaire universelle » de Python, "
#~ "qui fonctionne nativement sur les nouveaux processeurs Intel et les "
#~ "anciens processeurs PPC du Mac, y est disponible."

#~ msgid "What you get after installing is a number of things:"
#~ msgstr "Vous obtiendrez un certain nombre de choses après installation :"

#, fuzzy
#~ msgid ""
#~ "IDLE includes a Help menu that allows you to access Python documentation. "
#~ "If you are completely new to Python you should start reading the tutorial "
#~ "introduction in that document."
#~ msgstr ""
#~ "**IDLE** inclut un menu d'aide qui vous permet d’accéder à la "
#~ "documentation Python. Si vous êtes entièrement novice, vous devriez "
#~ "commencer par lire le tutoriel d'introduction dans ce document."

#~ msgid ""
#~ "If you are familiar with Python on other Unix platforms you should read "
#~ "the section on running Python scripts from the Unix shell."
#~ msgstr ""
#~ "Si vous êtes familier avec Python sur d'autres plateformes Unix, vous "
#~ "devriez lire la section sur comment exécuter des scripts Python depuis un "
#~ "shell Unix."

#, fuzzy
#~ msgid ""
#~ "Your best way to get started with Python on macOS is through the IDLE "
#~ "integrated development environment; see section :ref:`ide` and use the "
#~ "Help menu when the IDE is running."
#~ msgstr ""
#~ "Le meilleur moyen de démarrer avec Python sur macOS est d'utiliser "
#~ "l'environnement de développement intégré **IDLE**, voir la section :ref:"
#~ "`ide` et utilisez le menu d'aide (**Help**) quand l'``IDE`` est lancé."

#, fuzzy
#~ msgid ""
#~ "If you want to run Python scripts from the Terminal window command line "
#~ "or from the Finder you first need an editor to create your script. macOS "
#~ "comes with a number of standard Unix command line editors, :program:"
#~ "`vim` :program:`nano` among them. If you want a more Mac-like editor, :"
#~ "program:`BBEdit` from Bare Bones Software (see https://www.barebones.com/"
#~ "products/bbedit/index.html) are good choices, as is :program:`TextMate` "
#~ "(see https://macromates.com). Other editors include :program:`MacVim` "
#~ "(https://macvim.org) and :program:`Aquamacs` (https://aquamacs.org)."
#~ msgstr ""
#~ "Si vous souhaitez exécuter des scripts Python depuis l'invite de commande "
#~ "dans la fenêtre Terminal, ou depuis le **Finder**, vous avez d'abord "
#~ "besoin d'un éditeur pour créer votre script. macOS propose un certain "
#~ "nombre d’éditeurs shell Unix standards, dont :program:`vim` et :program:"
#~ "`emacs`. Si vous voulez une interface plus Mac, :program:`BBEdit` ou :"
#~ "program:`TextWrangler` de Bare Bones Software (voir http://www.barebones."
#~ "com/products/bbedit/index.html) sont de bons choix, tout comme :program:"
#~ "`TextMate` (voir https://macromates.com/). D'autres éditeurs existent "
#~ "comme :program:`Gvim` (https://macvim-dev.github.io/macvim/) et :program:"
#~ "`Aquamacs` (http://aquamacs.org/)."

#~ msgid ""
#~ "To run your script from the Terminal window you must make sure that :file:"
#~ "`/usr/local/bin` is in your shell search path."
#~ msgstr ""
#~ "Pour exécuter votre script depuis la fenêtre Terminal, vous devez vous "
#~ "assurer que :file:`/usr/local/bin` est dans le chemin de recherche de "
#~ "votre shell (**PATH**)."

#~ msgid "Running scripts with a GUI"
#~ msgstr "Lancer des scripts avec une interface graphique"

#~ msgid ""
#~ "With older versions of Python, there is one macOS quirk that you need to "
#~ "be aware of: programs that talk to the Aqua window manager (in other "
#~ "words, anything that has a GUI) need to be run in a special way. Use :"
#~ "program:`pythonw` instead of :program:`python` to start such scripts."
#~ msgstr ""
#~ "Avec les anciennes versions de Python, il y a une bizarrerie propre à "
#~ "macOS dont vous devez être au courant : les programmes qui communiquent "
#~ "avec le gestionnaires de fenêtres **Aqua** (en d'autres termes, tout ce "
#~ "qui a une interface graphique) doivent être exécutés de façon spécifique. "
#~ "Utilisez :program:`pythonw` au lieu de :program:`python` pour exécuter ce "
#~ "genre de scripts."

#~ msgid ""
#~ "With Python 3.9, you can use either :program:`python` or :program:"
#~ "`pythonw`."
#~ msgstr ""
#~ "Avec Python 3.9, vous pouvez utiliser :program:`python` ou :program:"
#~ "`pythonw`."

#~ msgid "Configuration"
#~ msgstr "Configuration"

#, fuzzy
#~ msgid ""
#~ "Python on macOS honors all standard Unix environment variables such as :"
#~ "envvar:`PYTHONPATH`, but setting these variables for programs started "
#~ "from the Finder is non-standard as the Finder does not read your :file:`."
#~ "profile` or :file:`.cshrc` at startup. You need to create a file :file:"
#~ "`~/.MacOSX/environment.plist`. See Apple's `Technical Q&A QA1067 <https://"
#~ "developer.apple.com/library/archive/qa/qa1067/_index.html>`__ for details."
#~ msgstr ""
#~ "Python sur macOS respecte tous les standards Unix pour les variables "
#~ "d'environnement comme :envvar:`PYTHONPATH`, mais la façon de définir ces "
#~ "variables pour des programmes exécutés depuis le Finder n'est pas "
#~ "standard car le Finder ne lit pas votre :file:`.profile` ou :file:`."
#~ "cshrc` au démarrage. Vous devez créer un fichier :file:`~/.MacOSX/"
#~ "environment.plist`. Voir le document technique d'Apple QA1067 pour plus "
#~ "de détails."

#, fuzzy
#~ msgid ""
#~ "For more information on installation Python packages, see section :ref:"
#~ "`mac-package-manager`."
#~ msgstr ""
#~ "Pour plus d'informations sur l'installation de paquets Python dans "
#~ "**MacPython**, voir la section :ref:`mac-package-manager`."

#~ msgid "The IDE"
#~ msgstr "L'*IDE*"

#, fuzzy
#~ msgid ""
#~ "Python ships with the standard IDLE development environment. A good "
#~ "introduction to using IDLE can be found at https://www.hashcollision.org/"
#~ "hkn/python/idle_intro/index.html."
#~ msgstr ""
#~ "**MacPython** est livré avec l'environnement de développement standard "
#~ "**IDLE**. Une bonne introduction sur l’utilisation d'**IDLE** peut être "
#~ "trouvée à http://www.hashcollision.org/hkn/python/idle_intro/index.html."

#, fuzzy
#~ msgid ""
#~ "The Pythonmac-SIG mailing list is an excellent support resource for "
#~ "Python users and developers on the Mac:"
#~ msgstr ""
#~ "La liste de diffusion courriel **MacPython** est une excellente ressource "
#~ "support pour les utilisateurs et développeurs Python sur Mac :"

#~ msgid "https://www.python.org/community/sigs/current/pythonmac-sig/"
#~ msgstr "https://www.python.org/community/sigs/current/pythonmac-sig/"

#~ msgid "Another useful resource is the MacPython wiki:"
#~ msgstr "Une autre ressource utile est le wiki **MacPython** :"

#~ msgid "https://wiki.python.org/moin/MacPython"
#~ msgstr "https://wiki.python.org/moin/MacPython"

#~ msgid "There are several methods to install additional Python packages:"
#~ msgstr ""
#~ "Il y a plusieurs méthodes pour installer des paquets Python "
#~ "supplémentaires :"

#~ msgid ""
#~ "Packages can be installed via the standard Python distutils mode "
#~ "(``python setup.py install``)."
#~ msgstr ""
#~ "Les paquets peuvent être installés en utilisant **distutils** (``python "
#~ "setup.py install``)."

#~ msgid ""
#~ "Many packages can also be installed via the :program:`setuptools` "
#~ "extension or :program:`pip` wrapper, see https://pip.pypa.io/."
#~ msgstr ""
#~ "Beaucoup de paquets peuvent aussi être installés via l'extension :program:"
#~ "`setuptools` ou :program:`pip`, voir https://pip.pypa.io/."

#~ msgid ""
#~ "*wxPython* is another popular cross-platform GUI toolkit that runs "
#~ "natively on macOS. Packages and documentation are available from https://"
#~ "www.wxpython.org."
#~ msgstr ""
#~ "*wxPython* est une boîte à outils populaire multiplateformes pour "
#~ "interfaces graphiques qui tourne nativement sur macOS. Les paquets et la "
#~ "documentation sont disponibles sur https://www.wxpython.org."

#~ msgid ""
#~ "*PyQt* is another popular cross-platform GUI toolkit that runs natively "
#~ "on macOS. More information can be found at https://riverbankcomputing.com/"
#~ "software/pyqt/intro."
#~ msgstr ""
#~ "*PyQt* est une boîte à outils multiplateformes pour interfaces graphique "
#~ "populaire qui tourne nativement sur macOS. Plus d'informations sont "
#~ "disponibles sur https://riverbankcomputing.com/software/pyqt/intro."

#~ msgid ""
#~ "The standard tool for deploying standalone Python applications on the Mac "
#~ "is :program:`py2app`. More information on installing and using py2app can "
#~ "be found at https://pypi.org/project/py2app/."
#~ msgstr ""
#~ "L'outil standard pour déployer des applications Python sur le Mac est :"
#~ "program:`py2app`. Plus d'information sur l'installation et l'utilisation "
#~ "de **py2app** sur https://pypi.org/project/py2app/."
