# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 21:40+0100\n"
"PO-Revision-Date: 2024-03-15 22:51+0100\n"
"Last-Translator: Christophe Nanteuil <christophe.nanteuil@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: library/email.header.rst:2
#, fuzzy
msgid ":mod:`!email.header`: Internationalized headers"
msgstr ":mod:`email.header` : en-têtes internationalisés"

#: library/email.header.rst:7
msgid "**Source code:** :source:`Lib/email/header.py`"
msgstr "**Code source :** :source:`Lib/email/headers.py`"

#: library/email.header.rst:11
msgid ""
"This module is part of the legacy (``Compat32``) email API.  In the current "
"API encoding and decoding of headers is handled transparently by the "
"dictionary-like API of the :class:`~email.message.EmailMessage` class.  In "
"addition to uses in legacy code, this module can be useful in applications "
"that need to completely control the character sets used when encoding "
"headers."
msgstr ""
"Ce module fait partie de l'ancienne API de messagerie (``Compat32``). Dans "
"l'API actuelle, l'encodage et le décodage des en-têtes sont gérés de manière "
"transparente par l'API de type dictionnaire de la classe :class:`~email."
"message.EmailMessage`. En plus des utilisations dans de l'ancien code, ce "
"module peut être utile dans les applications qui doivent contrôler "
"complètement les jeux de caractères utilisés lors de l'encodage des en-têtes."

#: library/email.header.rst:17
msgid ""
"The remaining text in this section is the original documentation of the "
"module."
msgstr ""
"Le texte restant de cette section est la documentation originale de ce "
"module."

#: library/email.header.rst:19
msgid ""
":rfc:`2822` is the base standard that describes the format of email "
"messages. It derives from the older :rfc:`822` standard which came into "
"widespread use at a time when most email was composed of ASCII characters "
"only.  :rfc:`2822` is a specification written assuming email contains only 7-"
"bit ASCII characters."
msgstr ""
"La :rfc:`2822` est la norme de base qui décrit le format des messages "
"électroniques. Elle dérive de l'ancienne norme :rfc:`822` qui s'est "
"généralisée à une époque où la plupart des e-mails étaient composés "
"uniquement de caractères ASCII. La :rfc:`2822` est une spécification écrite "
"en supposant que le courrier électronique ne contient que des caractères "
"ASCII 7 bits."

#: library/email.header.rst:24
msgid ""
"Of course, as email has been deployed worldwide, it has become "
"internationalized, such that language specific character sets can now be "
"used in email messages.  The base standard still requires email messages to "
"be transferred using only 7-bit ASCII characters, so a slew of RFCs have "
"been written describing how to encode email containing non-ASCII characters "
"into :rfc:`2822`\\ -compliant format. These RFCs include :rfc:`2045`, :rfc:"
"`2046`, :rfc:`2047`, and :rfc:`2231`. The :mod:`email` package supports "
"these standards in its :mod:`email.header` and :mod:`email.charset` modules."
msgstr ""
"Bien sûr, à mesure que le courrier électronique a été déployé dans le monde, "
"il s'est internationalisé, de sorte que des jeux de caractères spécifiques à "
"une langue peuvent désormais être utilisés dans les messages électroniques. "
"La norme de base exige toujours que les messages électroniques soient "
"transférés en utilisant uniquement des caractères ASCII 7 bits, de sorte "
"qu'un grand nombre de RFC décrivent comment encoder les e-mails contenant "
"des caractères non ASCII dans le format conforme à la :rfc:`2822`. Ces RFC "
"incluent la :rfc:`2045`, la :rfc:`2046`, la :rfc:`2047` et la :rfc:`2231`. "
"Le paquet :mod:`email` gère ces normes dans ses modules :mod:`email.header` "
"et :mod:`email.charset`."

#: library/email.header.rst:33
msgid ""
"If you want to include non-ASCII characters in your email headers, say in "
"the :mailheader:`Subject` or :mailheader:`To` fields, you should use the :"
"class:`Header` class and assign the field in the :class:`~email.message."
"Message` object to an instance of :class:`Header` instead of using a string "
"for the header value.  Import the :class:`Header` class from the :mod:`email."
"header` module. For example::"
msgstr ""
"Si vous souhaitez inclure des caractères non-ASCII dans les en-têtes de vos "
"e-mails, par exemple dans les champs :mailheader:`Subject` ou :mailheader:"
"`To`, vous devez utiliser la classe :class:`Header` et affecter le champ "
"dans le :class:`~email.message.Message` à une instance de :class:`Header` au "
"lieu d'utiliser une chaîne pour la valeur de l'en-tête. Importez la classe :"
"class:`Header` du module :mod:`email.header`. Par exemple ::"

#: library/email.header.rst:40
msgid ""
">>> from email.message import Message\n"
">>> from email.header import Header\n"
">>> msg = Message()\n"
">>> h = Header('p\\xf6stal', 'iso-8859-1')\n"
">>> msg['Subject'] = h\n"
">>> msg.as_string()\n"
"'Subject: =?iso-8859-1?q?p=F6stal?=\\n\\n'"
msgstr ""

#: library/email.header.rst:50
msgid ""
"Notice here how we wanted the :mailheader:`Subject` field to contain a non-"
"ASCII character?  We did this by creating a :class:`Header` instance and "
"passing in the character set that the byte string was encoded in.  When the "
"subsequent :class:`~email.message.Message` instance was flattened, the :"
"mailheader:`Subject` field was properly :rfc:`2047` encoded.  MIME-aware "
"mail readers would show this header using the embedded ISO-8859-1 character."
msgstr ""
"Remarquez ici comment nous voulions que le champ :mailheader:`Subject` "
"contienne un caractère non-ASCII : nous avons créé une instance :class:"
"`Header` et transmis le jeu de caractères dans lequel la chaîne d'octets "
"était encodée. Lorsque l'instance suivante :class:`~email.message.Message` a "
"été aplatie, le champ :mailheader:`Subject` était correctement encodé selon "
"la :rfc:`2047`. Les lecteurs de courrier compatibles MIME afficheraient cet "
"en-tête en utilisant le caractère ISO-8859-1 intégré."

#: library/email.header.rst:57
msgid "Here is the :class:`Header` class description:"
msgstr "Voici la description de la classe :class:`Header` :"

#: library/email.header.rst:62
msgid ""
"Create a MIME-compliant header that can contain strings in different "
"character sets."
msgstr ""
"Crée un en-tête compatible MIME pouvant contenir des chaînes dans différents "
"jeux de caractères."

#: library/email.header.rst:65
msgid ""
"Optional *s* is the initial header value.  If ``None`` (the default), the "
"initial header value is not set.  You can later append to the header with :"
"meth:`append` method calls.  *s* may be an instance of :class:`bytes` or :"
"class:`str`, but see the :meth:`append` documentation for semantics."
msgstr ""
"*s* (facultatif) est la valeur d'en-tête initiale. S'il vaut ``None`` "
"(valeur par défaut), la valeur d'en-tête initiale n'est pas définie. Vous "
"pouvez ensuite ajouter des choses à l'en-tête avec des appels de méthode :"
"meth:`append`. *s* peut être une instance de :class:`bytes` ou :class:`str`, "
"mais consultez la documentation :meth:`append` pour la sémantique."

#: library/email.header.rst:70
msgid ""
"Optional *charset* serves two purposes: it has the same meaning as the "
"*charset* argument to the :meth:`append` method.  It also sets the default "
"character set for all subsequent :meth:`append` calls that omit the "
"*charset* argument.  If *charset* is not provided in the constructor (the "
"default), the ``us-ascii`` character set is used both as *s*'s initial "
"charset and as the default for subsequent :meth:`append` calls."
msgstr ""
"L'option *charset* sert à deux fins : elle a la même signification que "
"l'argument *charset* de la méthode :meth:`append`. Elle définit également le "
"jeu de caractères par défaut pour tous les appels suivants :meth:`append` "
"qui omettent l'argument *charset*. Si *charset* n'est pas fourni dans le "
"constructeur (par défaut), le jeu de caractères ``us-ascii`` est utilisé à "
"la fois comme jeu de caractères initial de *s* et comme jeu par défaut pour "
"les appels suivants à :meth:`append`."

#: library/email.header.rst:77
#, fuzzy
msgid ""
"The maximum line length can be specified explicitly via *maxlinelen*.  For "
"splitting the first line to a shorter value (to account for the field header "
"which isn't included in *s*, e.g. :mailheader:`Subject`) pass in the name of "
"the field in *header_name*.  The default *maxlinelen* is 78, and the default "
"value for *header_name* is ``None``, meaning it is not taken into account "
"for the first line of a long, split header."
msgstr ""
"La longueur de ligne maximale peut être spécifiée explicitement via "
"*maxlinelen*. Pour diviser la première ligne en une valeur plus courte (pour "
"tenir compte de l'en-tête de champ qui n'est pas inclus dans *s*, par "
"exemple :mailheader:`Subject`) passez le nom du champ dans *header_name*. La "
"valeur par défaut *maxlinelen* est 76 et la valeur par défaut pour "
"*header_name* est ``None``, ce qui signifie qu'elle n'est pas prise en "
"compte pour la première ligne d'un long en-tête divisé."

#: library/email.header.rst:84
msgid ""
"Optional *continuation_ws* must be :rfc:`2822`\\ -compliant folding "
"whitespace, and is usually either a space or a hard tab character.  This "
"character will be prepended to continuation lines.  *continuation_ws* "
"defaults to a single space character."
msgstr ""
"*continuation_ws* (facultatif) doit être conforme aux caractères de "
"reformatage :rfc:`2822` ; c'est généralement soit une espace, soit un "
"caractère de tabulation fixe. Ce caractère est ajouté aux lignes de "
"continuation. *continuation_ws* utilise par défaut une seule espace."

#: library/email.header.rst:89
msgid ""
"Optional *errors* is passed straight through to the :meth:`append` method."
msgstr ""
"*errors* (facultatif) est transmis directement à la méthode :meth:`append`."

#: library/email.header.rst:94
msgid "Append the string *s* to the MIME header."
msgstr "Ajoute la chaîne *s* à l'en-tête MIME."

#: library/email.header.rst:96
msgid ""
"Optional *charset*, if given, should be a :class:`~email.charset.Charset` "
"instance (see :mod:`email.charset`) or the name of a character set, which "
"will be converted to a :class:`~email.charset.Charset` instance.  A value of "
"``None`` (the default) means that the *charset* given in the constructor is "
"used."
msgstr ""
"Le *charset* facultatif, s'il est fourni, doit être une instance de :class:"
"`~email.charset.Charset` (voir :mod:`email.charset`) ou le nom d'un jeu de "
"caractères, qui est converti en une instance :class:`~email.charset."
"Charset`. Une valeur ``None`` (la valeur par défaut) signifie que le "
"*charset* donné dans le constructeur est utilisé."

#: library/email.header.rst:102
msgid ""
"*s* may be an instance of :class:`bytes` or :class:`str`.  If it is an "
"instance of :class:`bytes`, then *charset* is the encoding of that byte "
"string, and a :exc:`UnicodeError` will be raised if the string cannot be "
"decoded with that character set."
msgstr ""
"*s* peut être une instance de :class:`bytes` ou :class:`str`. S'il s'agit "
"d'une instance de :class:`bytes`, alors *charset* est l'encodage de cette "
"chaîne d'octets et une :exc:`UnicodeError` est levée si la chaîne ne peut "
"pas être décodée avec ce jeu de caractères."

#: library/email.header.rst:107
msgid ""
"If *s* is an instance of :class:`str`, then *charset* is a hint specifying "
"the character set of the characters in the string."
msgstr ""
"Si *s* est une instance de :class:`str`, alors *charset* est une indication "
"spécifiant le jeu de caractères des caractères de la chaîne."

#: library/email.header.rst:110
msgid ""
"In either case, when producing an :rfc:`2822`\\ -compliant header using :rfc:"
"`2047` rules, the string will be encoded using the output codec of the "
"charset.  If the string cannot be encoded using the output codec, a "
"UnicodeError will be raised."
msgstr ""
"Dans les deux cas, lors de la production d'un en-tête conforme à la :rfc:"
"`2822` à l'aide des règles :rfc:`2047`, la chaîne est encodée à l'aide du "
"codec de sortie du jeu de caractères. Si la chaîne ne peut pas être encodée "
"à l'aide du codec de sortie, une erreur *UnicodeError* est levée."

#: library/email.header.rst:115
msgid ""
"Optional *errors* is passed as the errors argument to the decode call if *s* "
"is a byte string."
msgstr ""
"L'option *errors* est transmise comme argument d'erreurs à l'appel de "
"décodage si *s* est une chaîne d'octets."

#: library/email.header.rst:121
msgid ""
"Encode a message header into an RFC-compliant format, possibly wrapping long "
"lines and encapsulating non-ASCII parts in base64 or quoted-printable "
"encodings."
msgstr ""
"Encode un en-tête de message dans un format conforme à la RFC, en "
"reformatant éventuellement de longues lignes et en encapsulant des parties "
"non ASCII dans des encodages base64 ou dits *quoted-printable* (c.-à-d. que, "
"par exemple, les caractères non ASCII sont représentés par un signe égal, "
"suivi de son numéro, exprimé en hexadécimal)."

#: library/email.header.rst:125
msgid ""
"Optional *splitchars* is a string containing characters which should be "
"given extra weight by the splitting algorithm during normal header "
"wrapping.  This is in very rough support of :RFC:`2822`\\'s 'higher level "
"syntactic breaks':  split points preceded by a splitchar are preferred "
"during line splitting, with the characters preferred in the order in which "
"they appear in the string.  Space and tab may be included in the string to "
"indicate whether preference should be given to one over the other as a split "
"point when other split chars do not appear in the line being split.  "
"Splitchars does not affect :RFC:`2047` encoded lines."
msgstr ""
"*splitchars* (facultatif) est une chaîne contenant des caractères auxquels "
"l'algorithme de fractionnement doit donner un poids supplémentaire lors du "
"reformatage normal de l'en-tête. Il s'agit d'une prise en charge très "
"approximative des « ruptures syntaxiques de niveau supérieur » de la :RFC:"
"`2822` : les points de séparation précédés d'un caractère de séparation sont "
"préférés lors de la séparation des lignes, les caractères étant préférés "
"dans l'ordre dans lequel ils apparaissent dans la chaîne. Une espace et une "
"tabulation peuvent être incluses dans la chaîne pour indiquer si la "
"préférence doit être donnée à l'une plutôt qu'à l'autre comme point de "
"partage lorsque d'autres caractères fractionnés n'apparaissent pas dans la "
"ligne fractionnée. *splitchars* n'affecte pas les lignes encodées selon la :"
"RFC:`2047`."

#: library/email.header.rst:135
msgid ""
"*maxlinelen*, if given, overrides the instance's value for the maximum line "
"length."
msgstr ""
"*maxlinelen*, s'il est fourni, remplace la valeur de l'instance pour la "
"longueur de ligne maximale."

#: library/email.header.rst:138
msgid ""
"*linesep* specifies the characters used to separate the lines of the folded "
"header.  It defaults to the most useful value for Python application code "
"(``\\n``), but ``\\r\\n`` can be specified in order to produce headers with "
"RFC-compliant line separators."
msgstr ""
"*linesep* spécifie les caractères utilisés pour séparer les lignes de l'en-"
"tête plié. Il prend par défaut la valeur la plus utile pour le code "
"d'application Python (``\\n``), mais ``\\r\\n`` peut être spécifié afin de "
"produire des en-têtes avec des séparateurs de ligne conformes à la RFC."

# suit un :
#: library/email.header.rst:143
msgid "Added the *linesep* argument."
msgstr "ajout de l'argument *linesep*."

#: library/email.header.rst:147
msgid ""
"The :class:`Header` class also provides a number of methods to support "
"standard operators and built-in functions."
msgstr ""
"La classe :class:`Header` fournit également un certain nombre de méthodes "
"pour prendre en charge les opérateurs standard et les fonctions intégrées."

#: library/email.header.rst:152
msgid ""
"Returns an approximation of the :class:`Header` as a string, using an "
"unlimited line length.  All pieces are converted to unicode using the "
"specified encoding and joined together appropriately.  Any pieces with a "
"charset of ``'unknown-8bit'`` are decoded as ASCII using the ``'replace'`` "
"error handler."
msgstr ""
"Renvoie une approximation de :class:`Header` sous forme de chaîne, en "
"utilisant une longueur de ligne illimitée. Toutes les parties sont "
"converties en Unicode en utilisant l'encodage spécifié et réunies de manière "
"appropriée. Tous les morceaux avec un *charset* à ``'unknown-8bit'`` sont "
"décodés en ASCII en utilisant le gestionnaire d'erreurs ``'replace'``."

# suit un :
#: library/email.header.rst:158
msgid "Added handling for the ``'unknown-8bit'`` charset."
msgstr "ajout de la gestion du jeu de caractères ``'unknown-8bit'``."

#: library/email.header.rst:164
msgid ""
"This method allows you to compare two :class:`Header` instances for equality."
msgstr ""
"Cette méthode vous permet de tester l'égalité de deux instances de :class:"
"`Header`."

#: library/email.header.rst:170
msgid ""
"This method allows you to compare two :class:`Header` instances for "
"inequality."
msgstr ""
"Cette méthode vous permet de tester l'inégalité de deux instances de :class:"
"`Header`."

#: library/email.header.rst:173
msgid ""
"The :mod:`email.header` module also provides the following convenient "
"functions."
msgstr ""
"Le module :mod:`email.header` fournit également les fonctions pratiques "
"suivantes."

#: library/email.header.rst:178
msgid ""
"Decode a message header value without converting the character set. The "
"header value is in *header*."
msgstr ""
"Décode une valeur d'en-tête de message sans convertir le jeu de caractères. "
"La valeur de l'en-tête est dans *header*."

#: library/email.header.rst:181
msgid ""
"This function returns a list of ``(decoded_string, charset)`` pairs "
"containing each of the decoded parts of the header.  *charset* is ``None`` "
"for non-encoded parts of the header, otherwise a lower case string "
"containing the name of the character set specified in the encoded string."
msgstr ""
"Cette fonction renvoie une liste de paires ``(decoded_string, charset)`` "
"contenant chacune des parties décodées de l'en-tête. *charset* est ``None`` "
"pour les parties non encodées de l'en-tête, sinon une chaîne en minuscules "
"contenant le nom du jeu de caractères spécifié dans la chaîne encodée."

#: library/email.header.rst:186
msgid "Here's an example::"
msgstr "Voici un exemple ::"

#: library/email.header.rst:188
msgid ""
">>> from email.header import decode_header\n"
">>> decode_header('=?iso-8859-1?q?p=F6stal?=')\n"
"[(b'p\\xf6stal', 'iso-8859-1')]"
msgstr ""

#: library/email.header.rst:195
msgid ""
"Create a :class:`Header` instance from a sequence of pairs as returned by :"
"func:`decode_header`."
msgstr ""
"Crée une instance :class:`Header` à partir d'une séquence de paires "
"renvoyées par :func:`decode_header`."

#: library/email.header.rst:198
msgid ""
":func:`decode_header` takes a header value string and returns a sequence of "
"pairs of the format ``(decoded_string, charset)`` where *charset* is the "
"name of the character set."
msgstr ""
":func:`decode_header` prend une chaîne de valeur d'en-tête et renvoie une "
"séquence de paires au format ``(decoded_string, charset)`` où *charset* est "
"le nom du jeu de caractères."

#: library/email.header.rst:202
msgid ""
"This function takes one of those sequence of pairs and returns a :class:"
"`Header` instance.  Optional *maxlinelen*, *header_name*, and "
"*continuation_ws* are as in the :class:`Header` constructor."
msgstr ""
"Cette fonction prend l'une de ces séquences de paires et renvoie une "
"instance :class:`Header`. *maxlinelen*, *header_name* et *continuation_ws* "
"(facultatifs) s'utilisent comme dans le constructeur :class:`Header`."
