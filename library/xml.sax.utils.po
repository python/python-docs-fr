# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2018-11-30 14:07+0100\n"
"Last-Translator: Jules Lasne <jules.lasne@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2\n"

#: library/xml.sax.utils.rst:2
msgid ":mod:`xml.sax.saxutils` --- SAX Utilities"
msgstr ":mod:`xml.sax.saxutils` — Utilitaires SAX"

#: library/xml.sax.utils.rst:10
msgid "**Source code:** :source:`Lib/xml/sax/saxutils.py`"
msgstr "**Code source :** :source:`Lib/xml/sax/saxutils.py`"

#: library/xml.sax.utils.rst:14
msgid ""
"The module :mod:`xml.sax.saxutils` contains a number of classes and "
"functions that are commonly useful when creating SAX applications, either in "
"direct use, or as base classes."
msgstr ""
"Le module  :mod:`xml.sax.saxutils` contient des classes et fonctions qui "
"sont fréquemment utiles en créant des applications SAX, soit en utilisation "
"directe, soit en classes de base."

#: library/xml.sax.utils.rst:21
msgid "Escape ``'&'``, ``'<'``, and ``'>'`` in a string of data."
msgstr ""
"Échappe ``'&'``, ``'<'``, et ``'>'`` dans une chaine de caractères de "
"données."

#: library/xml.sax.utils.rst:23
msgid ""
"You can escape other strings of data by passing a dictionary as the optional "
"*entities* parameter.  The keys and values must all be strings; each key "
"will be replaced with its corresponding value.  The characters ``'&'``, "
"``'<'`` and ``'>'`` are always escaped, even if *entities* is provided."
msgstr ""
"Vous pouvez échapper d'autres chaines de caractères de données en passant un "
"dictionnaire au paramètre optionnel *entities*. Les clés et valeurs doivent "
"toutes être des chaines de caractères ; chaque clé sera remplacée par sa "
"valeur correspondante. Les caractères ``'&'``, ``'<'`` et ``'>'`` sont "
"toujours échappés même si *entities* est donné en paramètre."

#: library/xml.sax.utils.rst:31
msgid "Unescape ``'&amp;'``, ``'&lt;'``, and ``'&gt;'`` in a string of data."
msgstr ""
"*Parse* ``'&amp;'``, ``'&lt;'``, et ``'&gt;'`` dans une chaine de caractères "
"de données."

#: library/xml.sax.utils.rst:33
msgid ""
"You can unescape other strings of data by passing a dictionary as the "
"optional *entities* parameter.  The keys and values must all be strings; "
"each key will be replaced with its corresponding value.  ``'&amp'``, "
"``'&lt;'``, and ``'&gt;'`` are always unescaped, even if *entities* is "
"provided."
msgstr ""
"Vous pouvez dé-échapper d'autres chaines de caractères de données en passant "
"un dictionnaire au paramètre optionnel *entities*. Les clés et valeurs "
"doivent toutes être des chaines de caractères ; chaque clé sera remplacée "
"par sa valeur correspondante. Les caractères ``'&'``, ``'<'`` et ``'>'`` "
"sont toujours dé-échappés même si *entities* est donné en paramètre."

#: library/xml.sax.utils.rst:41
msgid ""
"Similar to :func:`escape`, but also prepares *data* to be used as an "
"attribute value.  The return value is a quoted version of *data* with any "
"additional required replacements. :func:`quoteattr` will select a quote "
"character based on the content of *data*, attempting to avoid encoding any "
"quote characters in the string.  If both single- and double-quote characters "
"are already in *data*, the double-quote characters will be encoded and "
"*data* will be wrapped in double-quotes.  The resulting string can be used "
"directly as an attribute value::"
msgstr ""
"Similaire à :func:`escape`, mais prépare aussi *data* pour être utilisé "
"comme une valeur d'attribut. La valeur renvoyée est une version entre "
"guillemets de *data* avec tous les remplacements supplémentaires "
"nécessaires. :func:`quoteattr` va sélectionner un caractère guillemet basé "
"sur le contenu de *data*, en essayant d’éviter d'encoder tous les caractères "
"guillemets dans la chaine de caractères. Si les caractères guillemet simple "
"et guillemets sont déjà dans *data*, les caractères guillemets simples "
"seront encodés et *data* sera entouré de guillemets. La chaine de caractères "
"résultante pourra être utilisée en tant que valeur d'attribut ::"

#: library/xml.sax.utils.rst:53
msgid ""
"This function is useful when generating attribute values for HTML or any "
"SGML using the reference concrete syntax."
msgstr ""
"Cette fonction est utile quand vous générez des valeurs d'attributs pour du "
"HTML ou n'importe quel SGML en utilisant la syntaxe concrète de référence."

#: library/xml.sax.utils.rst:59
msgid ""
"This class implements the :class:`~xml.sax.handler.ContentHandler` interface "
"by writing SAX events back into an XML document. In other words, using an :"
"class:`XMLGenerator` as the content handler will reproduce the original "
"document being parsed. *out* should be a file-like object which will default "
"to *sys.stdout*. *encoding* is the encoding of the output stream which "
"defaults to ``'iso-8859-1'``. *short_empty_elements* controls the formatting "
"of elements that contain no content:  if ``False`` (the default) they are "
"emitted as a pair of start/end tags, if set to ``True`` they are emitted as "
"a single self-closed tag."
msgstr ""
"Cette classe implémente l'interface :class:`~xml.sax.handler.ContentHandler` "
"en écrivant les événements SAX dans un document XML. En d'autres termes, "
"utiliser un :class:`XMLGenerator` en tant que gestionnaire de contenu "
"reproduira le document original qui était analysé. *out* devrait être un "
"objet de type fichier qui est par défaut *sys.stdout*. *encoding* est "
"l'encodage du flux de sortie qui est par défaut ``'iso-8859-1'``. "
"*short_empty_elements* contrôle le formatage des éléments qui ne contiennent "
"rien :  si ``False`` (par défaut), ils sont émis comme une paire de balises "
"(début, fin). Si la valeur est ``True``, ils sont émis comme une balise "
"seule auto-fermante."

#: library/xml.sax.utils.rst:69
msgid "The *short_empty_elements* parameter."
msgstr "Le paramètre *short_empty_elements*."

#: library/xml.sax.utils.rst:75
msgid ""
"This class is designed to sit between an :class:`~xml.sax.xmlreader."
"XMLReader` and the client application's event handlers.  By default, it does "
"nothing but pass requests up to the reader and events on to the handlers "
"unmodified, but subclasses can override specific methods to modify the event "
"stream or the configuration requests as they pass through."
msgstr ""
"Cette classe est faite pour être entre :class:`~xml.sax.xmlreader.XMLReader` "
"et le gestionnaire des événements de l'application client. Par défaut, elle "
"ne fait rien mais passe les requêtes au lecteur et les événements au "
"gestionnaire sans les modifier, mais des sous-classes peuvent surcharger des "
"méthodes spécifiques pour modifier le flux d’événements ou la configuration "
"des requêtes à leur passage."

#: library/xml.sax.utils.rst:85
msgid ""
"This function takes an input source and an optional base URL and returns a "
"fully resolved :class:`~xml.sax.xmlreader.InputSource` object ready for "
"reading.  The input source can be given as a string, a file-like object, or "
"an :class:`~xml.sax.xmlreader.InputSource` object; parsers will use this "
"function to implement the polymorphic *source* argument to their :meth:"
"`parse` method."
msgstr ""
"Cette fonction prend en entrée une source et une URL de base optionnelle et "
"retourne un objet complétement résolue :class:`~xml.sax.xmlreader."
"InputSource` prêt pour être lu. La source d'entrée peut être donnée comme "
"une chaine de caractère, un objet type fichier, ou un objet :class:`~xml.sax."
"xmlreader.InputSource` ; Les analyseurs utiliseront cette fonction pour "
"gérer le polymorphisme de l'argument *source* à leur méthode :meth:`parse`."
