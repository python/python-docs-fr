# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2018-09-27 15:10+0200\n"
"Last-Translator: Julien Palard <julien@palard.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: library/linecache.rst:2
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ":mod:`linecache` — Accès direct aux lignes d'un texte"

#: library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**Code source :** :source:`Lib/linecache.py`"

#: library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from a Python source "
"file, while attempting to optimize internally, using a cache, the common "
"case where many lines are read from a single file.  This is used by the :mod:"
"`traceback` module to retrieve source lines for inclusion in  the formatted "
"traceback."
msgstr ""
"Le module :mod:`linecache` permet d'obtenir n'importe quelle ligne d'un "
"fichier source Python. Le cas classique où de nombreuses lignes sont "
"accédées est optimisé en utilisant un cache interne. C'est utilisé par le "
"module :mod:`traceback` pour récupérer les lignes à afficher dans les piles "
"d'appels."

#: library/linecache.rst:18
msgid ""
"The :func:`tokenize.open` function is used to open files. This function "
"uses :func:`tokenize.detect_encoding` to get the encoding of the file; in "
"the absence of an encoding token, the file encoding defaults to UTF-8."
msgstr ""
"Les fichiers sont ouverts par la fonction :func:`tokenize.open`. Cette "
"fonction utilise :func:`tokenize.detect_encoding` pour obtenir l'encodage du "
"fichier. En l'absence d'un BOM et d'un cookie d'encodage, c'est l'encodage "
"UTF-8 qui sera utilisé."

#: library/linecache.rst:22
msgid "The :mod:`linecache` module defines the following functions:"
msgstr "Le module :mod:`linecache` définit les fonctions suivantes :"

#: library/linecache.rst:27
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"Récupère la ligne *lineno* du fichier *filename*.  Cette fonction ne lèvera "
"jamais d'exception, elle préfèrera renvoyer ``''`` en cas d'erreur (le "
"caractère de retour à la ligne sera inclus pour les lignes existantes)."

#: library/linecache.rst:33
msgid ""
"If a file named *filename* is not found, the function first checks for a :"
"pep:`302` ``__loader__`` in *module_globals*. If there is such a loader and "
"it defines a ``get_source`` method, then that determines the source lines "
"(if ``get_source()`` returns ``None``, then ``''`` is returned). Finally, if "
"*filename* is a relative filename, it is looked up relative to the entries "
"in the module search path, ``sys.path``."
msgstr ""

#: library/linecache.rst:44
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"Nettoie le cache. Utilisez cette fonction si vous n'avez plus besoin des "
"lignes des fichiers précédemment lus via :func:`getline`."

#: library/linecache.rst:50
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"Vérifie la validité du cache. Utilisez cette fonction si les fichiers du "
"cache pourraient avoir changé sur le disque, et que vous en voudriez une "
"version à jour. Sans *filename*, toutes les entrées du cache seront "
"vérifiées."

#: library/linecache.rst:56
msgid ""
"Capture enough detail about a non-file-based module to permit getting its "
"lines later via :func:`getline` even if *module_globals* is ``None`` in the "
"later call. This avoids doing I/O until a line is actually needed, without "
"having to carry the module globals around indefinitely."
msgstr ""
"Récupère suffisamment d'informations sur un module situé hors du système de "
"fichiers pour récupérer ses lignes plus tard via :func:`getline`, même si "
"*module_globals* devient ``None``. Cela évite de lire le fichier avant "
"d'avoir besoin d'une ligne, tout en évitant de conserver les globales du "
"module indéfiniment."

#: library/linecache.rst:63
msgid "Example::"
msgstr "Exemple ::"
