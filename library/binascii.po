# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2020-05-10 13:40+0200\n"
"Last-Translator: ZepmanBC <zepman@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.6\n"

#: library/binascii.rst:2
msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ":mod:`binascii` --- Conversion entre binaire et ASCII"

#: library/binascii.rst:15
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu`, :"
"mod:`base64`, or :mod:`binhex` instead. The :mod:`binascii` module contains "
"low-level functions written in C for greater speed that are used by the "
"higher-level modules."
msgstr ""
"Le module :mod:`binascii` contient des méthodes pour convertir entre binaire "
"et diverses représentations binaires encodées en ASCII. Normalement, vous "
"n’allez pas utiliser ces fonctions directement mais vous utiliserez des "
"modules d’encapsulage comme :mod:`uu`, :mod:`base64`, or :mod:`binhex` à la "
"place. Le module :mod:`binascii` contient des fonctions bas-niveau écrites "
"en C plus rapides qui sont utilisées par des modules haut-niveau."

#: library/binascii.rst:24
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"La fonction ``a2b_*`` accepte des chaînes de caractères contenant seulement "
"des caractères ASCII. D’autres fonctions acceptent seulement des objets :"
"term:`bytes et similaire <bytes-like object>` (tel que :class:`bytes`, :"
"class:`bytearray` et autres objets qui supportent le protocole tampon)."

#: library/binascii.rst:29
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"Les chaines de caractères *unicode* seulement composées de caractères ASCII "
"sont désormais acceptées par les fonctions ``a2b_*``."

#: library/binascii.rst:33
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "Le module :mod:`binascii` définit les fonctions suivantes :"

#: library/binascii.rst:38
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Convertit une seule ligne de donnée *uuencoded* en binaire et renvoie la "
"donnée binaire. Les lignes contiennent normalement 45 octets (binaire), sauf "
"pour la dernière ligne. Il se peut que la ligne de donnée soit suivie d’un "
"espace blanc."

#: library/binascii.rst:45
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Convertit les données binaires en une ligne de caractères ASCII, la valeur "
"renvoyée est la ligne convertie incluant un caractère de nouvelle ligne. La "
"longueur de *data* doit être au maximum de 45. Si *backtick* est vraie, les "
"zéros sont représentés par ``'`'`` plutôt que par des espaces."

#: library/binascii.rst:49
msgid "Added the *backtick* parameter."
msgstr "Ajout du paramètre *backtick*."

#: library/binascii.rst:55
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Convertit un bloc de donnée en *base64* en binaire et renvoie la donnée "
"binaire. Plus d’une ligne peut être passé à la fois."

#: library/binascii.rst:61
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Convertit les données binaires en une ligne de caractères ASCII en codage "
"base 64. La valeur de renvoyée et la ligne convertie, incluant un caractère "
"de nouvelle ligne si *newline* est vraie. La sortie de cette fonction se "
"conforme à :rfc:`3548`."

#: library/binascii.rst:65
msgid "Added the *newline* parameter."
msgstr "Ajout du paramètre *newline*."

#: library/binascii.rst:71
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""
"Convertit un bloc de données *quoted-printable* en binaire et renvoie les "
"données binaires. Plus d’une ligne peut être passée à la fois. Si l’argument "
"optionnel *header* est présent et vrai, les traits soulignés seront décodés "
"en espaces."

#: library/binascii.rst:78
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Convertit les données binaires en ligne(s) de caractères ASCII en codage "
"imprimable entre guillemets. La valeur de retour est la\\les lignes(s) "
"convertie(s). Si l’argument optionnel *quotetabs* est présent et vrai, "
"toutes les tabulations et espaces seront encodés. Si l’argument optionnel "
"*istext* est présent et faux, les nouvelles lignes ne sont pas encodées mais "
"les espaces de fin de ligne le seront. Si l’argument optionnel *header* est "
"présent et vrai, les espaces vont être encodés comme de traits soulignés "
"selon :rfc:`1522`. Si l’argument optionnel *header* est présent et faux, les "
"caractères de nouvelle ligne seront également encodés ; sinon la conversion "
"de saut de ligne pourrait corrompre le flux de données binaire."

#: library/binascii.rst:91
msgid ""
"Convert binhex4 formatted ASCII data to binary, without doing RLE-"
"decompression. The string should contain a complete number of binary bytes, "
"or (in case of the last portion of the binhex4 data) have the remaining bits "
"zero."
msgstr ""
"Convertit un bloc de donnée ASCII au format *binhex4* en binaire, sans faire "
"de décompression RLE. La chaîne de caractères doit contenir un nombre "
"complet d’octet binaires ou (au cas où la dernière portion de donnée est au "
"format *binhex4*) avoir les bits restants à 0."

#: library/binascii.rst:100
msgid ""
"Perform RLE-decompression on the data, as per the binhex4 standard. The "
"algorithm uses ``0x90`` after a byte as a repeat indicator, followed by a "
"count. A count of ``0`` specifies a byte value of ``0x90``. The routine "
"returns the decompressed data, unless data input data ends in an orphaned "
"repeat indicator, in which case the :exc:`Incomplete` exception is raised."
msgstr ""
"Réalise une décompression RLE sur la donnée, d’après la norme *binhex4*. "
"L’algorithme utilise ``0x90`` après un octet comme un indicateur de "
"répétition, suivi d’un décompte. Un décompte de ``0`` définit une valeur "
"d’octet de ``0x90``. La routine renvoie la donnée décompressée, sauf si la "
"donnée entrante se finit sur un indicateur de répétition orphelin. Dans ce "
"cas l’exception :exc:`Incomplete` est levée."

#: library/binascii.rst:106
msgid "Accept only bytestring or bytearray objects as input."
msgstr "Accepte seulement des objets *bytestring* ou *bytearray* en entrée."

#: library/binascii.rst:114
msgid "Perform binhex4 style RLE-compression on *data* and return the result."
msgstr ""
"Réalise une compression RLE de type *binhex4* sur *data* et renvoie le "
"résultat."

#: library/binascii.rst:121
msgid ""
"Perform hexbin4 binary-to-ASCII translation and return the resulting string. "
"The argument should already be RLE-coded, and have a length divisible by 3 "
"(except possibly the last fragment)."
msgstr ""
"Réalise une traduction *hexbin4* de binaire à ASCII et renvoie la chaîne de "
"caractères résultante. L’argument doit être *RLE-coded*, et avoir une "
"longueur divisible par 3 (sauf, éventuellement, le dernier fragment)."

#: library/binascii.rst:130
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"Calcule une valeur en CRC 16-bit de *data*, commençant par *value* comme CRC "
"initial et renvoie le résultat. Ceci utilise le CRC-CCITT polynomial *x*:sup:"
"`16` + *x*:sup:`12` + *x*:sup:`5` + 1, souvent représenté comme *0x1021*. Ce "
"CRC est utilisé dans le format *binhex4*."

#: library/binascii.rst:138
msgid ""
"Compute CRC-32, the 32-bit checksum of *data*, starting with an initial CRC "
"of *value*.  The default initial CRC is zero.  The algorithm is consistent "
"with the ZIP file checksum.  Since the algorithm is designed for use as a "
"checksum algorithm, it is not suitable for use as a general hash algorithm.  "
"Use as follows::"
msgstr ""
"Calcule CRC-32, la somme de contrôle 32-bit de *data*, commençant par un CRC "
"initial de *value*. Le CRC initial par défaut est zéro. L’algorithme est "
"cohérent avec la somme de contrôle du fichier ZIP. Comme l’algorithme est "
"conçu pour être utilisé comme un algorithme de somme de contrôle, il ne "
"convient pas comme algorithme de hachage général. Utiliser comme suit ::"

#: library/binascii.rst:150
msgid ""
"The result is always unsigned. To generate the same numeric value across all "
"Python versions and platforms, use ``crc32(data) & 0xffffffff``."
msgstr ""
"Le résultat est toujours non signé. Pour générer la même valeur numérique "
"sur toutes les versions de Python et plateformes, utilisez ``crc32(data) & "
"0xffffffff``."

#: library/binascii.rst:159
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Renvoie la représentation hexadécimale du binaire *data*. Chaque octet de "
"*data* est converti en la représentation 2 chiffres correspondante. L’objet "
"octets renvoyé est donc deux fois plus long que la longueur de *data*."

#: library/binascii.rst:163
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"Fonctionnalité similaire est également commodément accessible en utilisant "
"la méthode :meth:`bytes.hex`."

#: library/binascii.rst:166
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"Si *sep* est spécifié, il doit s'agir d'une chaîne de caractères ou d'un "
"objet *byte*. Il sera inséré dans la sortie tous les *bytes_per_sep* octets. "
"Par défaut, l'emplacement du séparateur est compté à partir de l'extrémité "
"droite de la sortie. Si vous souhaitez compter à partir de la gauche, "
"indiquez une valeur *bytes_per_sep* négative."

#: library/binascii.rst:181
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "ajout des paramètres *sep* et *bytes_per_sep*."

#: library/binascii.rst:187
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Renvoie la donnée binaire représentée par la chaîne de caractères "
"hexadécimale *hexstr*. Cette fonction est l’inverse de :func:`b2a_hex`. "
"*hexstr* doit contenir un nombre pair de chiffres hexadécimaux (qui peuvent "
"être en majuscule ou minuscule), sinon une exception :exc:`Error` est levée."

#: library/binascii.rst:192
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr ""
"Une fonctionnalité similaire (n’acceptant que les arguments de chaîne de "
"texte, mais plus libérale vis-à-vis des espaces blancs) est également "
"accessible en utilisant la méthode de classe :meth:`bytes.fromhex`."

#: library/binascii.rst:198
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""
"Exception levée en cas d'erreurs. Ce sont typiquement des erreurs de "
"programmation."

#: library/binascii.rst:203
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Exception levée par des données incomplète. Il ne s’agit généralement pas "
"d’erreurs de programmation, mais elles peuvent être traitées en lisant un "
"peu plus de données et en réessayant."

#: library/binascii.rst:211
msgid "Module :mod:`base64`"
msgstr "Module :mod:`base64`"

#: library/binascii.rst:210
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Support de l’encodage *base64-style* conforme RFC en base 16, 32, 64 et 85."

#: library/binascii.rst:214
msgid "Module :mod:`binhex`"
msgstr "Module :mod:`binhex`"

#: library/binascii.rst:214
msgid "Support for the binhex format used on the Macintosh."
msgstr "Support pour le format *binhex* utilisé sur Macintosh."

#: library/binascii.rst:217
msgid "Module :mod:`uu`"
msgstr "Module :mod:`uu`"

#: library/binascii.rst:217
msgid "Support for UU encoding used on Unix."
msgstr "Gestion de l'encodage UU utilisé sur Unix."

#: library/binascii.rst:219
msgid "Module :mod:`quopri`"
msgstr "Module :mod:`quopri`"

#: library/binascii.rst:220
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Support de l’encodage *quote-printable* utilisé par les messages *email* "
"MIME."
