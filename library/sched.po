# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: library/sched.rst:2
msgid ":mod:`sched` --- Event scheduler"
msgstr ""

#: library/sched.rst:9
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**Code source :** :source:`Lib/sched.py`"

#: library/sched.rst:15
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""

#: library/sched.rst:20
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""

#: library/sched.rst:29
msgid "*timefunc* and *delayfunc* parameters are optional."
msgstr ""

#: library/sched.rst:32
msgid ""
":class:`scheduler` class can be safely used in multi-threaded environments."
msgstr ""

#: library/sched.rst:36
msgid "Example::"
msgstr "ExempleÂ ::"

#: library/sched.rst:61
msgid "Scheduler Objects"
msgstr ""

#: library/sched.rst:63
msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr ""

#: library/sched.rst:68
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""

#: library/sched.rst:73
msgid ""
"Executing the event means executing ``action(*argument, **kwargs)``. "
"*argument* is a sequence holding the positional arguments for *action*. "
"*kwargs* is a dictionary holding the keyword arguments for *action*."
msgstr ""

#: library/sched.rst:77
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""

#: library/sched.rst:80 library/sched.rst:93
msgid "*argument* parameter is optional."
msgstr ""

#: library/sched.rst:83 library/sched.rst:96
msgid "*kwargs* parameter was added."
msgstr ""

#: library/sched.rst:89
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""

#: library/sched.rst:101
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""

#: library/sched.rst:107
msgid "Return ``True`` if the event queue is empty."
msgstr ""

#: library/sched.rst:112
msgid ""
"Run all scheduled events. This method will wait  (using the :func:"
"`delayfunc` function passed to the constructor) for the next event, then "
"execute it and so on until there are no more scheduled events."
msgstr ""

#: library/sched.rst:116
msgid ""
"If *blocking* is false executes the scheduled events due to expire soonest "
"(if any) and then return the deadline of the next scheduled call in the "
"scheduler (if any)."
msgstr ""

#: library/sched.rst:120
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""

#: library/sched.rst:125
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""

#: library/sched.rst:130
msgid "*blocking* parameter was added."
msgstr ""

#: library/sched.rst:135
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument, kwargs."
msgstr ""
