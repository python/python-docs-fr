# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: 2019-11-01 13:16+0100\n"
"Last-Translator: Stéphane Lambelin\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../Doc/library/warnings.rst:2
msgid ":mod:`warnings` --- Warning control"
msgstr ":mod:`warnings` --- Contrôle des alertes"

#: ../Doc/library/warnings.rst:7
msgid "**Source code:** :source:`Lib/warnings.py`"
msgstr "**Code source:** :source:`Lib/warnings.py`"

#: ../Doc/library/warnings.rst:13
msgid ""
"Warning messages are typically issued in situations where it is useful to "
"alert the user of some condition in a program, where that condition "
"(normally) doesn't warrant raising an exception and terminating the "
"program.  For example, one might want to issue a warning when a program uses "
"an obsolete module."
msgstr ""
"Les messages d'avertissement sont généralement émis dans les situations où "
"il est utile d'alerter l'utilisateur d'un problème dans un programme, mais "
"qu'il n'est pas justifié de lever une exception et de le terminer. Par "
"exemple, on peut vouloir émettre un avertissement lorsqu'un programme "
"utilise un module obsolète."

#: ../Doc/library/warnings.rst:18
msgid ""
"Python programmers issue warnings by calling the :func:`warn` function "
"defined in this module.  (C programmers use :c:func:`PyErr_WarnEx`; see :ref:"
"`exceptionhandling` for details)."
msgstr ""
"Les développeurs Python émettent des avertissements en appelant la fonction :"
"func:`warn` définie dans ce module. (Les développeurs C utilisent :c:func:"
"`PyErr_WarnEx` ; voir :ref:`exceptionhandling` pour plus d'informations)."

#: ../Doc/library/warnings.rst:22
msgid ""
"Warning messages are normally written to :data:`sys.stderr`, but their "
"disposition can be changed flexibly, from ignoring all warnings to turning "
"them into exceptions.  The disposition of warnings can vary based on the :"
"ref:`warning category <warning-categories>`, the text of the warning "
"message, and the source location where it is issued.  Repetitions of a "
"particular warning for the same source location are typically suppressed."
msgstr ""
"Les messages d'avertissement sont normalement écrits sur :data:`sys.stderr`, "
"mais leurs effets peuvent être modifiés, il est possible d'ignorer tous les "
"avertissements ou au contraire les transformer en exceptions. L'effet des "
"avertissements peut varier selon la  :ref:`catégorie d'avertissement "
"<warning-categories>`, de son texte et d'où il est émis. Les répétitions du "
"même avertissement depuis une même source sont généralement ignorées."

#: ../Doc/library/warnings.rst:29
msgid ""
"There are two stages in warning control: first, each time a warning is "
"issued, a determination is made whether a message should be issued or not; "
"next, if a message is to be issued, it is formatted and printed using a user-"
"settable hook."
msgstr ""
"La gestion des avertissements se fait en deux étapes : premièrement, chaque "
"fois qu'un avertissement est émis, le module détermine si un message doit "
"être émis ou non ; ensuite, si un message doit être émis, il est formaté et "
"affiché en utilisant une fonction qui peut être définie  par l'utilisateur."

#: ../Doc/library/warnings.rst:33
msgid ""
"The determination whether to issue a warning message is controlled by the :"
"ref:`warning filter <warning-filter>`, which is a sequence of matching rules "
"and actions. Rules can be added to the filter by calling :func:"
"`filterwarnings` and reset to its default state by calling :func:"
"`resetwarnings`."
msgstr ""
"Un  :ref:`filtre <warning-filter>` (une séquence de règles) est utilisé pour "
"décider si un message d'avertissement doit être émis ou non. Des règles "
"peuvent être ajoutées au filtre en appelant :func:`filterwarnings` et "
"remises à leur état par défaut en appelant :func:`resetwarnings`."

#: ../Doc/library/warnings.rst:38
msgid ""
"The printing of warning messages is done by calling :func:`showwarning`, "
"which may be overridden; the default implementation of this function formats "
"the message by calling :func:`formatwarning`, which is also available for "
"use by custom implementations."
msgstr ""
"L'affichage des messages d'avertissement se fait en appelant la fonction :"
"func:`showwarning`, qui peut être redéfinie ; l'implémentation par défaut "
"formate le message en appelant :func:`formatwarning`, qui peut également "
"être réutilisée par une implémentation personnalisée."

#: ../Doc/library/warnings.rst:44
msgid ""
":func:`logging.captureWarnings` allows you to handle all warnings with the "
"standard logging infrastructure."
msgstr ""
":func:`logging.captureWarnings` vous permet de gérer tous les avertissements "
"avec l'infrastructure de journalisation standard."

#: ../Doc/library/warnings.rst:51
msgid "Warning Categories"
msgstr "Catégories d'avertissement"

#: ../Doc/library/warnings.rst:53
msgid ""
"There are a number of built-in exceptions that represent warning categories. "
"This categorization is useful to be able to filter out groups of warnings."
msgstr ""
"Il existe un certain nombre d'exceptions natives qui représentent des "
"catégories d'avertissement. Cette catégorisation est utile pour filtrer les "
"groupes d'avertissements."

#: ../Doc/library/warnings.rst:56
msgid ""
"While these are technically :ref:`built-in exceptions <warning-categories-as-"
"exceptions>`, they are documented here, because conceptually they belong to "
"the warnings mechanism."
msgstr ""
"Bien qu'il s'agisse techniquement d'exceptions, les :ref:`exceptions natives "
"<warning-categories-as-exceptions>` sont documentées ici, parce qu'elles "
"appartiennent conceptuellement au mécanisme des avertissements."

#: ../Doc/library/warnings.rst:60
msgid ""
"User code can define additional warning categories by subclassing one of the "
"standard warning categories.  A warning category must always be a subclass "
"of the :exc:`Warning` class."
msgstr ""
"Le code utilisateur peut définir des catégories d'avertissement "
"supplémentaires en héritant l'une des catégories d'avertissement standard. "
"Une catégorie d'avertissement doit toujours hériter de la classe :exc:"
"`Warning`."

#: ../Doc/library/warnings.rst:64
msgid "The following warnings category classes are currently defined:"
msgstr ""
"Les classes de catégories d'avertissement suivantes sont actuellement "
"définies :"

#: ../Doc/library/warnings.rst:69
msgid "Class"
msgstr "Classe"

#: ../Doc/library/warnings.rst:69
msgid "Description"
msgstr "Description"

#: ../Doc/library/warnings.rst:71
msgid ":exc:`Warning`"
msgstr ":exc:`Warning`"

#: ../Doc/library/warnings.rst:71
msgid ""
"This is the base class of all warning category classes.  It is a subclass "
"of :exc:`Exception`."
msgstr ""
"Il s'agit de la classe de base de toutes les classes de catégories "
"d'avertissement. C'est une sous-classe de :exc:`Exception`."

#: ../Doc/library/warnings.rst:75
msgid ":exc:`UserWarning`"
msgstr ":exc:`UserWarning`"

#: ../Doc/library/warnings.rst:75
msgid "The default category for :func:`warn`."
msgstr "Catégorie par défaut pour :func:`warn`."

#: ../Doc/library/warnings.rst:77
msgid ":exc:`DeprecationWarning`"
msgstr ":exc:`DeprecationWarning`"

#: ../Doc/library/warnings.rst:77
msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for other Python developers (ignored by default, unless triggered "
"by code in ``__main__``)."
msgstr ""
"Catégorie de base pour les avertissements sur les fonctionnalités obsolètes "
"lorsque ces avertissements sont destinés à d'autres développeurs Python "
"(ignorées par défaut, sauf si elles proviennent de ``__main__``)."

#: ../Doc/library/warnings.rst:82
msgid ":exc:`SyntaxWarning`"
msgstr ":exc:`SyntaxWarning`"

#: ../Doc/library/warnings.rst:82
msgid "Base category for warnings about dubious syntactic features."
msgstr ""
"Catégorie de base pour les avertissements concernant les syntaxes douteuses."

#: ../Doc/library/warnings.rst:85
msgid ":exc:`RuntimeWarning`"
msgstr ":exc:`RuntimeWarning`"

#: ../Doc/library/warnings.rst:85
msgid "Base category for warnings about dubious runtime features."
msgstr ""
"Catégorie de base pour les avertissements concernant les fonctionnalités "
"douteuses à l'exécution."

#: ../Doc/library/warnings.rst:88
msgid ":exc:`FutureWarning`"
msgstr ":exc:`FutureWarning`"

#: ../Doc/library/warnings.rst:88
msgid ""
"Base category for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Catégorie de base pour les avertissements concernant les fonctionnalités "
"obsolètes lorsque ces avertissements sont destinés aux utilisateurs finaux "
"des programmes écrits en Python."

#: ../Doc/library/warnings.rst:93
msgid ":exc:`PendingDeprecationWarning`"
msgstr ":exc:`PendingDeprecationWarning`"

#: ../Doc/library/warnings.rst:93
msgid ""
"Base category for warnings about features that will be deprecated in the "
"future (ignored by default)."
msgstr ""
"Catégorie de base pour les avertissements concernant les fonctionnalités qui "
"seront obsolètes dans le futur (ignorée par défaut)."

#: ../Doc/library/warnings.rst:97
msgid ":exc:`ImportWarning`"
msgstr ":exc:`ImportWarning`"

#: ../Doc/library/warnings.rst:97
msgid ""
"Base category for warnings triggered during the process of importing a "
"module (ignored by default)."
msgstr ""
"Catégorie de base pour les avertissements déclenchés lors de l'importation "
"d'un module (ignoré par défaut)."

#: ../Doc/library/warnings.rst:101
msgid ":exc:`UnicodeWarning`"
msgstr ":exc:`UnicodeWarning`"

#: ../Doc/library/warnings.rst:101
msgid "Base category for warnings related to Unicode."
msgstr "Catégorie de base pour les avertissements relatifs à Unicode."

#: ../Doc/library/warnings.rst:104
msgid ":exc:`BytesWarning`"
msgstr ":exc:`BytesWarning`"

#: ../Doc/library/warnings.rst:104
msgid ""
"Base category for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Catégorie de base pour les avertissements relatifs à :class:`bytes` et :"
"class:`bytearray`."

#: ../Doc/library/warnings.rst:107
msgid ":exc:`ResourceWarning`"
msgstr ":exc:`ResourceWarning`"

#: ../Doc/library/warnings.rst:107
msgid "Base category for warnings related to resource usage."
msgstr ""
"Catégorie de base pour les avertissements relatifs à l'utilisation des "
"ressources."

#: ../Doc/library/warnings.rst:111
msgid ""
"Previously :exc:`DeprecationWarning` and :exc:`FutureWarning` were "
"distinguished based on whether a feature was being removed entirely or "
"changing its behaviour. They are now distinguished based on their intended "
"audience and the way they're handled by the default warnings filters."
msgstr ""
"Avant, la différence entre :exc:`DeprecationWarning` et :exc:`FutureWarning` "
"était que l'un était dédié aux fonctionnalités retirées, et l'autre aux "
"fonctionnalités modifiées. La différence aujourd'hui est plutôt leur "
"audience et la façon dont ils sont traités par les filtres d'avertissement "
"par défaut."

#: ../Doc/library/warnings.rst:122
msgid "The Warnings Filter"
msgstr "Le filtre des avertissements"

#: ../Doc/library/warnings.rst:124
msgid ""
"The warnings filter controls whether warnings are ignored, displayed, or "
"turned into errors (raising an exception)."
msgstr ""
"Le filtre des avertissements contrôle si les avertissements sont ignorés, "
"affichés ou transformés en erreurs (ce qui lève une exception)."

#: ../Doc/library/warnings.rst:127
msgid ""
"Conceptually, the warnings filter maintains an ordered list of filter "
"specifications; any specific warning is matched against each filter "
"specification in the list in turn until a match is found; the filter "
"determines the disposition of the match.  Each entry is a tuple of the form "
"(*action*, *message*, *category*, *module*, *lineno*), where:"
msgstr ""
"Conceptuellement, le filtre d'avertissements maintient une liste ordonnée "
"d'entrées ; chaque avertissement est comparé à chaque entrée de la liste "
"jusqu'à ce qu'une correspondance soit trouvée ; l'entrée détermine l'action "
"à effectuer.  Chaque entrée est un quintuplet de la forme (*action*, "
"*message*, *catégorie*, *module*, *lineno*), où :"

#: ../Doc/library/warnings.rst:133
msgid "*action* is one of the following strings:"
msgstr "*action* est l'une des chaînes de caractères suivantes :"

#: ../Doc/library/warnings.rst:136
msgid "Value"
msgstr "Valeur"

#: ../Doc/library/warnings.rst:136
msgid "Disposition"
msgstr "Action"

#: ../Doc/library/warnings.rst:138
msgid "``\"default\"``"
msgstr "``\"default\"``"

#: ../Doc/library/warnings.rst:138
msgid ""
"print the first occurrence of matching warnings for each location (module + "
"line number) where the warning is issued"
msgstr ""
"affiche la première occurrence des avertissements correspondants pour chaque "
"emplacement (module + numéro de ligne) où l'avertissement est émis"

#: ../Doc/library/warnings.rst:142
msgid "``\"error\"``"
msgstr "``\"error\"``"

#: ../Doc/library/warnings.rst:142
msgid "turn matching warnings into exceptions"
msgstr "transforme les avertissements correspondants en exceptions"

#: ../Doc/library/warnings.rst:144
msgid "``\"ignore\"``"
msgstr "``\"ignore\"``"

#: ../Doc/library/warnings.rst:144
msgid "never print matching warnings"
msgstr "ignore les avertissements correspondants"

#: ../Doc/library/warnings.rst:146
msgid "``\"always\"``"
msgstr "``\"always\"``"

#: ../Doc/library/warnings.rst:146
msgid "always print matching warnings"
msgstr "affiche toujours les avertissements correspondants"

#: ../Doc/library/warnings.rst:148
msgid "``\"module\"``"
msgstr "``\"module\"``"

#: ../Doc/library/warnings.rst:148
msgid ""
"print the first occurrence of matching warnings for each module where the "
"warning is issued (regardless of line number)"
msgstr ""
"affiche la première occurrence des avertissements correspondants pour chaque "
"module où l'avertissement est émis (quel que soit le numéro de ligne)"

#: ../Doc/library/warnings.rst:152
msgid "``\"once\"``"
msgstr "``\"once\"``"

#: ../Doc/library/warnings.rst:152
msgid ""
"print only the first occurrence of matching warnings, regardless of location"
msgstr ""
"n'affiche que la première occurrence des avertissements correspondants, quel "
"que soit l'endroit où ils se trouvent"

#: ../Doc/library/warnings.rst:156
msgid ""
"*message* is a string containing a regular expression that the start of the "
"warning message must match.  The expression is compiled to always be case-"
"insensitive."
msgstr ""
"*message* est une chaîne de caractères contenant une expression régulière "
"avec laquelle le début du message d'avertissement doit correspondre. "
"L'expression est compilée pour être toujours insensible à la casse."

#: ../Doc/library/warnings.rst:160
msgid ""
"*category* is a class (a subclass of :exc:`Warning`) of which the warning "
"category must be a subclass in order to match."
msgstr ""
"*category* est une classe (une sous-classe de :exc:`Warning`) dont la "
"catégorie d'avertissement doit être une sous-classe afin de correspondre."

#: ../Doc/library/warnings.rst:163
msgid ""
"*module* is a string containing a regular expression that the module name "
"must match.  The expression is compiled to be case-sensitive."
msgstr ""
"*module* est une chaîne de caractères contenant une expression régulière "
"avec laquelle le nom du module doit correspondre. L'expression est compilée "
"pour être sensible à la casse."

#: ../Doc/library/warnings.rst:166
msgid ""
"*lineno* is an integer that the line number where the warning occurred must "
"match, or ``0`` to match all line numbers."
msgstr ""
"*lineno* est le numéro de ligne d'où l'avertissement doit provenir, ou ``0`` "
"pour correspondre à tous les numéros de ligne."

#: ../Doc/library/warnings.rst:169
msgid ""
"Since the :exc:`Warning` class is derived from the built-in :exc:`Exception` "
"class, to turn a warning into an error we simply raise ``category(message)``."
msgstr ""
"Puisque que la classe :exc:`Warning` hérite de la classe :exc:`Exception`, "
"pour transformer un avertissement en erreur, il suffit de lever "
"``category(message)``."

#: ../Doc/library/warnings.rst:172
msgid ""
"If a warning is reported and doesn't match any registered filter then the "
"\"default\" action is applied (hence its name)."
msgstr ""
"Si un avertissement est signalé et ne correspond à aucun filtre enregistré, "
"l'action ``default`` est appliquée (d'où son nom)."

#: ../Doc/library/warnings.rst:179
msgid "Describing Warning Filters"
msgstr "Rédaction de filtres d'avertissement"

#: ../Doc/library/warnings.rst:181
msgid ""
"The warnings filter is initialized by :option:`-W` options passed to the "
"Python interpreter command line and the :envvar:`PYTHONWARNINGS` environment "
"variable. The interpreter saves the arguments for all supplied entries "
"without interpretation in :data:`sys.warnoptions`; the :mod:`warnings` "
"module parses these when it is first imported (invalid options are ignored, "
"after printing a message to :data:`sys.stderr`)."
msgstr ""
"Le filtre des avertissements est initialisé par les options :option:`-W` "
"passées à la ligne de commande de l'interpréteur Python et la variable "
"d'environnement :envvar:`PYTHONWARNINGS`. L'interpréteur enregistre les "
"arguments de toutes les entrées fournies sans interprétation dans :data:`sys."
"warnoptions` ; le module :mod:`warnings` les analyse lors de la première "
"importation (les options invalides sont ignorées, et un message d'erreur est "
"envoyé à :data:`sys.stderr`)."

#: ../Doc/library/warnings.rst:188
msgid ""
"Individual warnings filters are specified as a sequence of fields separated "
"by colons::"
msgstr ""
"Les filtres d'avertissement individuels sont décrits sous la forme d'une "
"séquence de champs séparés par des deux-points ::"

#: ../Doc/library/warnings.rst:193
msgid ""
"The meaning of each of these fields is as described in :ref:`warning-"
"filter`. When listing multiple filters on a single line (as for :envvar:"
"`PYTHONWARNINGS`), the individual filters are separated by commas and the "
"filters listed later take precedence over those listed before them (as "
"they're applied left-to-right, and the most recently applied filters take "
"precedence over earlier ones)."
msgstr ""
"La signification de chacun de ces champs est décrite dans :ref:`warning-"
"filter`. Plusieurs filtres peuvent être écrits en une seule ligne (comme "
"pour :envvar:`PYTHONWARNINGS`), ils sont dans ce cas séparés par des "
"virgules, et les filtres listés plus en dernier ont priorité sur ceux qui "
"les précèdent (car ils sont appliqués de gauche à droite, et les filtres les "
"plus récemment appliqués ont priorité sur les précédents)."

#: ../Doc/library/warnings.rst:200
msgid ""
"Commonly used warning filters apply to either all warnings, warnings in a "
"particular category, or warnings raised by particular modules or packages. "
"Some examples::"
msgstr ""
"Les filtres d'avertissement couramment utilisés s'appliquent à tous les "
"avertissements, aux avertissements d'une catégorie particulière ou aux "
"avertissements émis par certains modules ou paquets. Quelques exemples ::"

#: ../Doc/library/warnings.rst:217
msgid "Default Warning Filter"
msgstr "Filtre d'avertissement par défaut"

#: ../Doc/library/warnings.rst:219
msgid ""
"By default, Python installs several warning filters, which can be overridden "
"by the :option:`-W` command-line option, the :envvar:`PYTHONWARNINGS` "
"environment variable and calls to :func:`filterwarnings`."
msgstr ""
"Par défaut, Python installe plusieurs filtres d'avertissement, qui peuvent "
"être outrepassés par l'option :option:`-W` en ligne de commande, la variable "
"d'environnement :envvar:`PYTHONWARNINGS` et les appels à :func:"
"`filterwarnings`."

#: ../Doc/library/warnings.rst:223
msgid ""
"In regular release builds, the default warning filter has the following "
"entries (in order of precedence)::"
msgstr ""
"Dans les versions standard publiées de Python, le filtre d'avertissement par "
"défaut a les entrées suivantes (par ordre de priorité) ::"

#: ../Doc/library/warnings.rst:232
msgid "In debug builds, the list of default warning filters is empty."
msgstr ""
"Dans les versions de débogage, la liste des filtres d'avertissement par "
"défaut est vide."

#: ../Doc/library/warnings.rst:234
msgid ""
":exc:`DeprecationWarning` is now ignored by default in addition to :exc:"
"`PendingDeprecationWarning`."
msgstr ""
":exc:`DeprecationWarning` est maintenant ignoré par défaut en plus de :exc:"
"`PendingDeprecationWarning`."

#: ../Doc/library/warnings.rst:238
msgid ""
":exc:`DeprecationWarning` is once again shown by default when triggered "
"directly by code in ``__main__``."
msgstr ""
":exc:`DeprecationWarning` est à nouveau affiché par défaut lorsqu'il "
"provient directement de ``__main__``."

#: ../Doc/library/warnings.rst:242
msgid ""
":exc:`BytesWarning` no longer appears in the default filter list and is "
"instead configured via :data:`sys.warnoptions` when :option:`-b` is "
"specified twice."
msgstr ""
":exc:`BytesWarning` n'apparaît plus dans la liste de filtres par défaut et "
"est configuré via :data:`sys.warnoptions` lorsque l'option :option:`-b` est "
"donnée deux fois."

#: ../Doc/library/warnings.rst:251
msgid "Overriding the default filter"
msgstr "Outrepasser le filtre par défaut"

#: ../Doc/library/warnings.rst:253
msgid ""
"Developers of applications written in Python may wish to hide *all* Python "
"level warnings from their users by default, and only display them when "
"running tests or otherwise working on the application. The :data:`sys."
"warnoptions` attribute used to pass filter configurations to the interpreter "
"can be used as a marker to indicate whether or not warnings should be "
"disabled::"
msgstr ""
"Les développeurs d'applications écrites en Python peuvent souhaiter cacher "
"*tous* les avertissements Python à leurs utilisateurs, et ne les afficher "
"que lorsqu'ils exécutent des tests ou travaillent sur l'application. "
"L'attribut :data:`sys.warnoptions` utilisé pour passer les configurations de "
"filtre à l'interpréteur peut être utilisé comme marqueur pour indiquer si "
"les avertissements doivent être ou non désactivés ::"

#: ../Doc/library/warnings.rst:265
msgid ""
"Developers of test runners for Python code are advised to instead ensure "
"that *all* warnings are displayed by default for the code under test, using "
"code like::"
msgstr ""
"Les développeurs d'exécuteurs de test pour le code Python sont invités à "
"s'assurer que *tous* les avertissements sont affichés par défaut pour le "
"code en cours de test, en utilisant par exemple ::"

#: ../Doc/library/warnings.rst:276
msgid ""
"Finally, developers of interactive shells that run user code in a namespace "
"other than ``__main__`` are advised to ensure that :exc:`DeprecationWarning` "
"messages are made visible by default, using code like the following (where "
"``user_ns`` is the module used to execute code entered interactively)::"
msgstr ""
"Enfin, les développeurs d'interpréteurs de commandes interactifs qui "
"exécutent du code utilisateur dans un espace de nommage autre que "
"``__main__`` sont invités à s'assurer que les messages :exc:"
"`DeprecationWarning` sont rendus visibles par défaut, en utilisant le code "
"suivant (où ``user_ns`` est le module utilisé pour exécuter le code entré "
"interactivement) ::"

#: ../Doc/library/warnings.rst:289
msgid "Temporarily Suppressing Warnings"
msgstr "Suppression temporaire des avertissements"

#: ../Doc/library/warnings.rst:291
msgid ""
"If you are using code that you know will raise a warning, such as a "
"deprecated function, but do not want to see the warning (even when warnings "
"have been explicitly configured via the command line), then it is possible "
"to suppress the warning using the :class:`catch_warnings` context manager::"
msgstr ""
"Si vous utilisez un code dont vous savez qu'il va déclencher un "
"avertissement, comme une fonction obsolète, mais que vous ne voulez pas voir "
"l'avertissement (même si les avertissements ont été explicitement configurés "
"via la ligne de commande), alors il est possible de supprimer "
"l'avertissement en utilisant le gestionnaire de contexte :class:"
"`catch_warnings` ::"

#: ../Doc/library/warnings.rst:305
msgid ""
"While within the context manager all warnings will simply be ignored. This "
"allows you to use known-deprecated code without having to see the warning "
"while not suppressing the warning for other code that might not be aware of "
"its use of deprecated code.  Note: this can only be guaranteed in a single-"
"threaded application. If two or more threads use the :class:`catch_warnings` "
"context manager at the same time, the behavior is undefined."
msgstr ""
"Dans le gestionnaire de contexte, tous les avertissements sont simplement "
"ignorés. Ceci vous permet d'utiliser du code déclaré obsolète sans voir "
"l'avertissement tout en ne supprimant pas l'avertissement pour un autre code "
"qui pourrait ne pas être conscient de son utilisation de code déprécié.  "
"Remarque : ceci ne peut être garanti que dans une application utilisant un "
"seul fil d'exécution. Si deux ou plusieurs *threads* utilisent le "
"gestionnaire de contexte :class:`catch_warnings` en même temps, le "
"comportement est indéfini."

#: ../Doc/library/warnings.rst:317
msgid "Testing Warnings"
msgstr "Tester les avertissements"

#: ../Doc/library/warnings.rst:319
msgid ""
"To test warnings raised by code, use the :class:`catch_warnings` context "
"manager. With it you can temporarily mutate the warnings filter to "
"facilitate your testing. For instance, do the following to capture all "
"raised warnings to check::"
msgstr ""
"Pour tester les avertissements générés par le code, utilisez le gestionnaire "
"de contexte :class:`catch_warnings`. Avec lui, vous pouvez temporairement "
"modifier le filtre d'avertissements pour faciliter votre test. Par exemple, "
"procédez comme suit pour capturer tous les avertissements levés à vérifier ::"

#: ../Doc/library/warnings.rst:339
msgid ""
"One can also cause all warnings to be exceptions by using ``error`` instead "
"of ``always``. One thing to be aware of is that if a warning has already "
"been raised because of a ``once``/``default`` rule, then no matter what "
"filters are set the warning will not be seen again unless the warnings "
"registry related to the warning has been cleared."
msgstr ""
"Vous pouvez aussi faire en sorte que tous les avertissements soient des "
"exceptions en utilisant ``error`` au lieu de ``always``. Il faut savoir que "
"si un avertissement a déjà été émis à cause d'une règle ``once`` ou "
"``default``, quel que soit le filtre activé, l'avertissement ne sera pas "
"revu à moins que le registre des avertissements lié à l'avertissement ait "
"été vidé."

#: ../Doc/library/warnings.rst:345
msgid ""
"Once the context manager exits, the warnings filter is restored to its state "
"when the context was entered. This prevents tests from changing the warnings "
"filter in unexpected ways between tests and leading to indeterminate test "
"results. The :func:`showwarning` function in the module is also restored to "
"its original value.  Note: this can only be guaranteed in a single-threaded "
"application. If two or more threads use the :class:`catch_warnings` context "
"manager at the same time, the behavior is undefined."
msgstr ""
"A sa sortie, le gestionnaire de contexte restaure le filtre des "
"avertissements dans l'état où il était au démarrage du contexte. Cela "
"empêche les tests de changer le filtre d'avertissements de manière "
"inattendue entre les tests et d'aboutir à des résultats de test "
"indéterminés. La fonction :func:`showwarning` du module est également "
"restaurée à sa valeur originale.  Remarque : ceci ne peut être garanti que "
"dans une application *mono-threadées*. Si deux ou plusieurs fils d'exécution "
"utilisent le gestionnaire de contexte :class:`catch_warnings` en même temps, "
"le comportement est indéfini."

#: ../Doc/library/warnings.rst:353
msgid ""
"When testing multiple operations that raise the same kind of warning, it is "
"important to test them in a manner that confirms each operation is raising a "
"new warning (e.g. set warnings to be raised as exceptions and check the "
"operations raise exceptions, check that the length of the warning list "
"continues to increase after each operation, or else delete the previous "
"entries from the warnings list before each new operation)."
msgstr ""
"Lorsque vous testez plusieurs opérations qui provoquent le même type "
"d'avertissement, il est important de les tester d'une manière qui confirme "
"que chaque opération provoque un nouvel avertissement (par exemple, "
"définissez les avertissements comme exceptions et vérifiez que les "
"opérations provoquent des exceptions, vérifiez que la longueur de la liste "
"des avertissements continue à augmenter après chaque opération, ou bien "
"supprimez les entrées précédentes de la liste des avertissements avant "
"chaque nouvelle opération)."

#: ../Doc/library/warnings.rst:364
msgid "Updating Code For New Versions of Dependencies"
msgstr "Mise à jour du code pour les nouvelles versions des dépendances"

#: ../Doc/library/warnings.rst:366
msgid ""
"Warning categories that are primarily of interest to Python developers "
"(rather than end users of applications written in Python) are ignored by "
"default."
msgstr ""
"Les catégories d'avertissement qui intéressent principalement les "
"développeurs Python (plutôt que les utilisateurs finaux d'applications "
"écrites en Python) sont ignorées par défaut."

#: ../Doc/library/warnings.rst:369
msgid ""
"Notably, this \"ignored by default\" list includes :exc:`DeprecationWarning` "
"(for every module except ``__main__``), which means developers should make "
"sure to test their code with typically ignored warnings made visible in "
"order to receive timely notifications of future breaking API changes "
"(whether in the standard library or third party packages)."
msgstr ""
"Notamment, cette liste \"ignorés par défaut\" inclut :exc:"
"`DeprecationWarning` (pour chaque module sauf ``__main__``), ce qui signifie "
"que les développeurs doivent s'assurer de tester leur code avec des "
"avertissements généralement ignorés rendus visibles afin de recevoir des "
"notifications rapides des changements d'API (que ce soit dans la "
"bibliothèque standard ou les paquets tiers)."

#: ../Doc/library/warnings.rst:375
msgid ""
"In the ideal case, the code will have a suitable test suite, and the test "
"runner will take care of implicitly enabling all warnings when running tests "
"(the test runner provided by the :mod:`unittest` module does this)."
msgstr ""
"Dans le cas idéal, le code dispose d'une suite de tests appropriée, et le "
"testeur se charge d'activer implicitement tous les avertissements lors de "
"l'exécution des tests (le testeur fourni par le module :mod:`unittest` le "
"fait)."

#: ../Doc/library/warnings.rst:379
msgid ""
"In less ideal cases, applications can be checked for use of deprecated "
"interfaces by passing :option:`-Wd <-W>` to the Python interpreter (this is "
"shorthand for :option:`!-W default`) or setting ``PYTHONWARNINGS=default`` "
"in the environment. This enables default handling for all warnings, "
"including those that are ignored by default. To change what action is taken "
"for encountered warnings you can change what argument is passed to :option:`-"
"W` (e.g. :option:`!-W error`). See the :option:`-W` flag for more details on "
"what is possible."
msgstr ""
"Dans des cas moins idéaux, l'utilisation de d'interfaces obsolète peut être "
"testé en passant :option:`-Wd <-W>` à l'interpréteur Python (c'est une "
"abréviation pour :option:`!-W default`) ou en définissant "
"``PYTHONWARNINGS=default`` dans l'environnement. Ceci permet la gestion par "
"défaut de tous les avertissements, y compris ceux qui sont ignorés par "
"défaut. Pour changer l'action prise pour les avertissements rencontrés, vous "
"pouvez changer quel argument est passé à :option:`-W` (par exemple :option:"
"`!-W error`). Voir l'option :option:`-W` pour plus de détails sur ce qui est "
"possible."

#: ../Doc/library/warnings.rst:392
msgid "Available Functions"
msgstr "Fonctions disponibles"

#: ../Doc/library/warnings.rst:397
msgid ""
"Issue a warning, or maybe ignore it or raise an exception.  The *category* "
"argument, if given, must be a :ref:`warning category class <warning-"
"categories>`; it defaults to :exc:`UserWarning`.  Alternatively, *message* "
"can be a :exc:`Warning` instance, in which case *category* will be ignored "
"and ``message.__class__`` will be used. In this case, the message text will "
"be ``str(message)``. This function raises an exception if the particular "
"warning issued is changed into an error by the :ref:`warnings filter "
"<warning-filter>`.  The *stacklevel* argument can be used by wrapper "
"functions written in Python, like this::"
msgstr ""
"Émet, ignore, ou transforme en exception un avertissement. L'argument "
"*category*, s'il est donné, doit être une classe de :ref:`warning category "
"class <warning-categories>` ; et vaut par défaut :exc:`UserWarning`.  Aussi "
"*message* peut être une instance de :exc:`Warning`, auquel cas *category* "
"sera ignoré et ``message.__class__`` sera utilisé. Dans ce cas, le texte du "
"message sera ``str(message)``. Cette fonction lève une exception si cet "
"avertissement particulier émis est transformé en erreur par le :ref:`filtre "
"des avertissements <warning-filter>`.  L'argument *stacklevel* peut être "
"utilisé par les fonctions *wrapper* écrites en Python, comme ceci ::"

#: ../Doc/library/warnings.rst:409
msgid ""
"This makes the warning refer to :func:`deprecation`'s caller, rather than to "
"the source of :func:`deprecation` itself (since the latter would defeat the "
"purpose of the warning message)."
msgstr ""
"Fait en sorte que l'avertissement se réfère à l'appelant de :func:"
"`deprecation` plutôt qu'à la source de :func:`deprecation` elle-même "
"(puisque celle-ci irait à l'encontre du but du message d'avertissement)."

#: ../Doc/library/warnings.rst:413 ../Doc/library/warnings.rst:436
msgid ""
"*source*, if supplied, is the destroyed object which emitted a :exc:"
"`ResourceWarning`."
msgstr ""
"*source*, s'il est fourni, est l'objet détruit qui a émis un :exc:"
"`ResourceWarning`."

#: ../Doc/library/warnings.rst:416
msgid "Added *source* parameter."
msgstr "Ajout du paramètre *source*."

#: ../Doc/library/warnings.rst:422
msgid ""
"This is a low-level interface to the functionality of :func:`warn`, passing "
"in explicitly the message, category, filename and line number, and "
"optionally the module name and the registry (which should be the "
"``__warningregistry__`` dictionary of the module).  The module name defaults "
"to the filename with ``.py`` stripped; if no registry is passed, the warning "
"is never suppressed. *message* must be a string and *category* a subclass "
"of :exc:`Warning` or *message* may be a :exc:`Warning` instance, in which "
"case *category* will be ignored."
msgstr ""
"Il s'agit d'une interface de bas niveau pour la fonctionnalité de :func:"
"`warn`, en passant explicitement le message, la catégorie, le nom de fichier "
"et le numéro de ligne, et éventuellement le nom du module et le registre "
"(qui devrait être le dictionnaire ``__warningregistry__`` du module).  Le "
"nom de module par défaut est le nom de fichier sans ``.py`` ; si aucun "
"registre n'est passé, l'avertissement n'est jamais supprimé. *message* doit "
"être une chaîne de caractères et *category* une sous-classe de :exc:"
"`Warning` ou *message* peut être une instance de :exc:`Warning`, auquel cas "
"*category* sera ignoré."

#: ../Doc/library/warnings.rst:431
msgid ""
"*module_globals*, if supplied, should be the global namespace in use by the "
"code for which the warning is issued.  (This argument is used to support "
"displaying source for modules found in zipfiles or other non-filesystem "
"import sources)."
msgstr ""
"*module_globals*, s'il est fourni, doit être l'espace de nommage global "
"utilisé par le code pour lequel l'avertissement est émis.  (Cet argument est "
"utilisé pour afficher les sources des modules trouvés dans les fichiers zip "
"ou d'autres sources d'importation hors du système de fichiers)."

#: ../Doc/library/warnings.rst:439
msgid "Add the *source* parameter."
msgstr "Ajout du paramètre *source*."

#: ../Doc/library/warnings.rst:445
msgid ""
"Write a warning to a file.  The default implementation calls "
"``formatwarning(message, category, filename, lineno, line)`` and writes the "
"resulting string to *file*, which defaults to :data:`sys.stderr`.  You may "
"replace this function with any callable by assigning to ``warnings."
"showwarning``. *line* is a line of source code to be included in the warning "
"message; if *line* is not supplied, :func:`showwarning` will try to read the "
"line specified by *filename* and *lineno*."
msgstr ""
"Écrit un avertissement dans un fichier.  L'implémentation par défaut appelle "
"``formatwarning(message, category, filename, lineno, line)`` et écrit la "
"chaîne résultante dans *file*, qui par défaut est :data:`sys.stderr`.  Vous "
"pouvez remplacer cette fonction par n'importe quel appelable en l'affectant "
"à ``warnings.showwarning``. *line* est une ligne de code source à inclure "
"dans le message d'avertissement ; si *line* n'est pas fourni, :func:"
"`showwarning` essaiera de lire la ligne spécifiée par *filename* et *lineno*."

#: ../Doc/library/warnings.rst:456
msgid ""
"Format a warning the standard way.  This returns a string which may contain "
"embedded newlines and ends in a newline.  *line* is a line of source code to "
"be included in the warning message; if *line* is not supplied, :func:"
"`formatwarning` will try to read the line specified by *filename* and "
"*lineno*."
msgstr ""
"Formate un avertissement de la manière standard.  Ceci renvoie une chaîne "
"pouvant contenir des retours à la ligne se termine par un retour à la "
"ligne.  *line* est une ligne de code source à inclure dans le message "
"d'avertissement ; si *line* n'est pas fourni, :func:`formatwarning` essaiera "
"de lire la ligne spécifiée par *filename* et *lineno*."

#: ../Doc/library/warnings.rst:465
msgid ""
"Insert an entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The entry is inserted at the front by default; if "
"*append* is true, it is inserted at the end.  This checks the types of the "
"arguments, compiles the *message* and *module* regular expressions, and "
"inserts them as a tuple in the list of warnings filters.  Entries closer to "
"the front of the list override entries later in the list, if both match a "
"particular warning.  Omitted arguments default to a value that matches "
"everything."
msgstr ""
"Insère une entrée dans la liste de :ref:`warning filter specifications "
"<warning-filter>`.  L'entrée est insérée à l'avant par défaut ; si *append* "
"est vrai, elle est insérée à la fin.  Il vérifie le type des arguments, "
"compile les expressions régulières *message* et *module*, et les insère sous "
"forme de tuple dans la liste des filtres d'avertissements.  Les entrées plus "
"proches du début de la liste ont priorité sur les entrées plus loin dans la "
"liste.  Les arguments omis ont par défaut une valeur qui correspond à tout."

#: ../Doc/library/warnings.rst:477
msgid ""
"Insert a simple entry into the list of :ref:`warnings filter specifications "
"<warning-filter>`.  The meaning of the function parameters is as for :func:"
"`filterwarnings`, but regular expressions are not needed as the filter "
"inserted always matches any message in any module as long as the category "
"and line number match."
msgstr ""
"Insère une entrée simple dans la liste de :ref:`spécifications du filtre "
"d'avertissements <warning-filter>`.  La signification des paramètres de "
"fonction est la même que pour :func:`filterwarnings`, mais les expressions "
"régulières ne sont pas nécessaires car le filtre inséré correspond toujours "
"à n'importe quel message dans n'importe quel module tant que la catégorie et "
"le numéro de ligne correspondent."

#: ../Doc/library/warnings.rst:486
msgid ""
"Reset the warnings filter.  This discards the effect of all previous calls "
"to :func:`filterwarnings`, including that of the :option:`-W` command line "
"options and calls to :func:`simplefilter`."
msgstr ""
"Réinitialise le filtre des avertissements.  Ceci supprime l'effet de tous "
"les appels précédents à :func:`filterwarnings`, y compris celui de l'option :"
"option:`-W` des options de ligne de commande et des appels à :func:"
"`simplefilter`."

#: ../Doc/library/warnings.rst:492
msgid "Available Context Managers"
msgstr "Gestionnaires de contexte disponibles"

#: ../Doc/library/warnings.rst:496
msgid ""
"A context manager that copies and, upon exit, restores the warnings filter "
"and the :func:`showwarning` function. If the *record* argument is :const:"
"`False` (the default) the context manager returns :class:`None` on entry. If "
"*record* is :const:`True`, a list is returned that is progressively "
"populated with objects as seen by a custom :func:`showwarning` function "
"(which also suppresses output to ``sys.stdout``). Each object in the list "
"has attributes with the same names as the arguments to :func:`showwarning`."
msgstr ""
"Un gestionnaire de contexte qui copie et, à la sortie, restaure le filtre "
"des avertissements et la fonction :func:`showwarning`. Si l'argument "
"*record* est :const:`False` (par défaut), le gestionnaire de contexte "
"retourne :class:`None` en entrant. Si *record* est :const:`True`, une liste "
"est renvoyée qui est progressivement remplie d'objets comme vus par une "
"fonction custom :func:`showwarning' (qui supprime également la sortie vers "
"``sys.stdout``). Chaque objet de la liste a des attributs avec les mêmes "
"noms que les arguments de :func:`showwarning`."

#: ../Doc/library/warnings.rst:505
msgid ""
"The *module* argument takes a module that will be used instead of the module "
"returned when you import :mod:`warnings` whose filter will be protected. "
"This argument exists primarily for testing the :mod:`warnings` module itself."
msgstr ""
"L'argument *module* prend un module qui sera utilisé à la place du module "
"renvoyé lors de l'importation :mod:`warnings` dont le filtre sera protégé. "
"Cet argument existe principalement pour tester le module :mod:`warnings` lui-"
"même."

#: ../Doc/library/warnings.rst:512
msgid ""
"The :class:`catch_warnings` manager works by replacing and then later "
"restoring the module's :func:`showwarning` function and internal list of "
"filter specifications.  This means the context manager is modifying global "
"state and therefore is not thread-safe."
msgstr ""
"Le gestionnaire :class:`catch_warnings` fonctionne en remplaçant puis en "
"restaurant plus tard la fonction :func:`showwarning` du module et la liste "
"interne des spécifications du filtre. Cela signifie que le gestionnaire de "
"contexte modifie l'état global et n'est donc pas prévisible avec plusieurs "
"fils d'exécution."
