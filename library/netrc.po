# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/netrc.rst:3
msgid ":mod:`netrc` --- netrc file processing"
msgstr ":mod:`netrc` — traitement de fichier *netrc*"

#: ../Doc/library/netrc.rst:11
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**Code source :** :source:`Lib/netrc.py`"

#: ../Doc/library/netrc.rst:15
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
"La classe :class:`netrc` analyse et encapsule le format de fichier *netrc* "
"utilisé par le programme Unix :program:`ftp` et d'autres clients FTP."

#: ../Doc/library/netrc.rst:21
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data "
"from  a netrc file.  The initialization argument, if present, specifies the "
"file to parse.  If no argument is given, the file :file:`.netrc` in the "
"user's home directory will be read.  Parse errors will raise :exc:"
"`NetrcParseError` with diagnostic information including the file name, line "
"number, and terminating token. If no argument is specified on a POSIX "
"system, the presence of passwords in the :file:`.netrc` file will raise a :"
"exc:`NetrcParseError` if the file ownership or permissions are insecure "
"(owned by a user other than the user running the process, or accessible for "
"read or write by any other user). This implements security behavior "
"equivalent to that of ftp and other programs that use :file:`.netrc`."
msgstr ""

#: ../Doc/library/netrc.rst:33
msgid "Added the POSIX permission check."
msgstr "Ajout de la vérification d'autorisations POSIX."

#: ../Doc/library/netrc.rst:38
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:  :attr:`msg` is a textual explanation of the error, :"
"attr:`filename` is the name of the source file, and :attr:`lineno` gives the "
"line number on which the error was found."
msgstr ""
"Exception levée par la classe :class:`~netrc.netrc` lorsque des erreurs "
"syntaxiques sont rencontrées dans le texte source. Les instances de cette "
"exception fournissent trois attributs intéressants : :attr:`msg` est une "
"explication textuelle de l'erreur, :attr:`filename` est le nom du fichier "
"source et :attr:`lineno` donne le numéro de la ligne sur laquelle l'erreur a "
"été trouvée."

#: ../Doc/library/netrc.rst:48
msgid "netrc Objects"
msgstr "Objets *netrc*"

#: ../Doc/library/netrc.rst:50
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr "Une instance :class:`~netrc.netrc` a les méthodes suivantes :"

#: ../Doc/library/netrc.rst:55
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""
"Renvoie un triplet ``(login, account, password)`` pour s'authentifier auprès "
"de l'hôte *host*. Si le fichier *netrc* ne contient pas d'entrée pour l'hôte "
"donné, renvoie le tuple associé à l'entrée par défaut. Si aucun hôte "
"correspondant ni aucune entrée par défaut n'est disponible, renvoie ``None``."

#: ../Doc/library/netrc.rst:63
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr ""
"Déverse les données de la classe sous forme de chaîne dans le format d'un "
"fichier *netrc*. (Ceci ignore les commentaires et peut réorganiser les "
"entrées)."

#: ../Doc/library/netrc.rst:66
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ""
"Les instances de :class:`~netrc.netrc` ont des variables d'instance "
"publiques :"

#: ../Doc/library/netrc.rst:71
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The "
"'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""
"Dictionnaire faisant correspondre les noms d'hôtes dans des tuples ``(login, "
"account, password)``. L'entrée par défaut, le cas échéant, est représentée "
"en tant que pseudo-hôte par ce nom."

#: ../Doc/library/netrc.rst:77
msgid "Dictionary mapping macro names to string lists."
msgstr ""
"Dictionnaire faisant correspondre les noms de macro en listes de chaînes."

#: ../Doc/library/netrc.rst:81
msgid ""
"Passwords are limited to a subset of the ASCII character set.  All ASCII "
"punctuation is allowed in passwords, however, note that whitespace and non-"
"printable characters are not allowed in passwords.  This is a limitation of "
"the way the .netrc file is parsed and may be removed in the future."
msgstr ""
"Les mots de passe sont limités à un sous-ensemble du jeu de caractères "
"ASCII. Toute ponctuation ASCII est autorisée dans les mots de passe, "
"cependant notez que les espaces et les caractères non imprimables ne sont "
"pas autorisés dans les mots de passe. C'est une limitation de la façon dont "
"le fichier *.netrc* est analysé et pourra être supprimée à l'avenir."
