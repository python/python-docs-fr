# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-21 16:37+0200\n"
"PO-Revision-Date: 2022-03-23 16:31+0100\n"
"Last-Translator: Thierry Pellé <abonnements+afpytrad@thierry-pelle.eu>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.1\n"

#: library/http.client.rst:2
msgid ":mod:`http.client` --- HTTP protocol client"
msgstr ":mod:`http.client` — Client pour le protocole HTTP"

#: library/http.client.rst:7
msgid "**Source code:** :source:`Lib/http/client.py`"
msgstr "**Code source :** :source:`Lib/http/client.py`"

#: library/http.client.rst:17
msgid ""
"This module defines classes which implement the client side of the HTTP and "
"HTTPS protocols.  It is normally not used directly --- the module :mod:"
"`urllib.request` uses it to handle URLs that use HTTP and HTTPS."
msgstr ""
"Ce module définit les classes implémentant la partie cliente des protocoles "
"HTTP et HTTPS.  Il n'est habituellement pas utilisé directement — le module :"
"mod:`urllib.request` l'utilise pour prendre en charge les URL qui utilisent "
"HTTP et HTTPS."

#: library/http.client.rst:23
msgid ""
"The `Requests package <https://requests.readthedocs.io/en/master/>`_ is "
"recommended for a higher-level HTTP client interface."
msgstr ""
"Le paquet `Requests <https://requests.readthedocs.io/en/master/>`_ est "
"recommandé pour une interface client HTTP de plus haut niveau."

#: library/http.client.rst:28
msgid ""
"HTTPS support is only available if Python was compiled with SSL support "
"(through the :mod:`ssl` module)."
msgstr ""
"L'implémentation d'HTTPS n'est disponible que si Python a été compilé avec "
"la prise en charge de SSL (au moyen du module :mod:`ssl`)."

#: library/http.client.rst:31
msgid "The module provides the following classes:"
msgstr "Le module fournit les classes suivantes :"

# Le style est un peu lourd et pourrait être amélioré.
#: library/http.client.rst:37
msgid ""
"An :class:`HTTPConnection` instance represents one transaction with an HTTP "
"server.  It should be instantiated passing it a host and optional port "
"number.  If no port number is passed, the port is extracted from the host "
"string if it has the form ``host:port``, else the default HTTP port (80) is "
"used.  If the optional *timeout* parameter is given, blocking operations "
"(like connection attempts) will timeout after that many seconds (if it is "
"not given, the global default timeout setting is used). The optional "
"*source_address* parameter may be a tuple of a (host, port) to use as the "
"source address the HTTP connection is made from. The optional *blocksize* "
"parameter sets the buffer size in bytes for sending a file-like message body."
msgstr ""
"Une instance :class:`HTTPConnection` représente une transaction avec un "
"serveur HTTP.  Elle doit être instanciée en lui spécifiant un hôte et un "
"optionnellement un numéro de port. Si aucun numéro de port n'est spécifié, "
"le port est extrait de la chaîne *host* si celle-ci est de la forme ``host:"
"port``, sinon le port HTTP par défaut (80) est utilisé.  Si le paramètre "
"optionnel *timeout* est spécifié, les opérations bloquantes (comme les "
"tentatives de connexion) se terminent après ce nombre de secondes (s'il "
"n'est pas spécifié, le délai d'expiration par défaut est utilisé). Le "
"paramètre optionnel *source_address* est un *n*-uplet (hôte, port) utilisé "
"comme origine de la connexion HTTP. Le paramètre optionnel *blocksize* "
"définit la taille en octets du tampon utilisé pour envoyer un corps de "
"message de type fichier."

#: library/http.client.rst:49
msgid ""
"For example, the following calls all create instances that connect to the "
"server at the same host and port::"
msgstr ""
"Par exemple, tous les appels suivants créent des instances qui se connectent "
"à un serveur sur le même hôte et le même port ::"

#: library/http.client.rst:57
msgid "*source_address* was added."
msgstr "Le paramètre *source_address* a été ajouté."

#: library/http.client.rst:60
msgid ""
"The  *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"not longer supported."
msgstr ""
"Le paramètre *strict* a été supprimé. Les « réponses simples » de HTTP 0.9 "
"ne sont plus prises en charge."

#: library/http.client.rst:64
msgid "*blocksize* parameter was added."
msgstr "Le paramètre *blocksize* a été ajouté."

#: library/http.client.rst:73
msgid ""
"A subclass of :class:`HTTPConnection` that uses SSL for communication with "
"secure servers.  Default port is ``443``.  If *context* is specified, it "
"must be a :class:`ssl.SSLContext` instance describing the various SSL "
"options."
msgstr ""
"Cette sous-classe de :class:`HTTPConnection` utilise SSL pour communiquer "
"avec des serveurs sécurisés. Le port par défaut est ``443``. Si le paramètre "
"*context* est fourni, ce doit être une instance de :class:`ssl.SSLContext` "
"décrivant les diverses options SSL."

#: library/http.client.rst:78
msgid "Please read :ref:`ssl-security` for more information on best practices."
msgstr ""
"Il est conseillé de lire :ref:`ssl-security` pour plus d'informations sur "
"les bonnes pratiques."

#: library/http.client.rst:80
msgid "*source_address*, *context* and *check_hostname* were added."
msgstr ""
"Les paramètres *source_address*, *context* et *check_hostname* ont été "
"ajoutés."

#: library/http.client.rst:83
msgid ""
"This class now supports HTTPS virtual hosts if possible (that is, if :data:"
"`ssl.HAS_SNI` is true)."
msgstr ""
"Cette classe implémente désormais les hôtes virtuels HTTPS dans la mesure du "
"possible (c'est-à-dire si :data:`ssl.HAS_SNI` est vrai)."

#: library/http.client.rst:87
msgid ""
"The *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"no longer supported."
msgstr ""
"Le paramètre *strict* a été supprimé. Les « réponses simples » de HTTP 0.9 "
"ne sont plus prises en charge."

#: library/http.client.rst:91
msgid ""
"This class now performs all the necessary certificate and hostname checks by "
"default. To revert to the previous, unverified, behavior :func:`ssl."
"_create_unverified_context` can be passed to the *context* parameter."
msgstr ""
"Cette classe réalise maintenant par défaut toutes les vérifications de "
"certificat et de nom d'hôte. Pour revenir au comportement antérieur, sans  "
"vérification,  :func:`ssl._create_unverified_context` peut être passé au "
"paramètre  *context*."

#: library/http.client.rst:97
msgid ""
"This class now enables TLS 1.3 :attr:`ssl.SSLContext.post_handshake_auth` "
"for the default *context* or when *cert_file* is passed with a custom "
"*context*."
msgstr ""
"Cette classe sélectionne désormais TLS 1.3 pour :attr:`ssl.SSLContext."
"post_handshake_auth` dans le *context* par défaut ou quand *cert_file* est "
"fourni avec une valeur de *context* personnalisée."

#: library/http.client.rst:102
msgid ""
"This class now sends an ALPN extension with protocol indicator ``http/1.1`` "
"when no *context* is given. Custom *context* should set ALPN protocols with :"
"meth:`~ssl.SSLContext.set_alpn_protocol`."
msgstr ""
"Cette classe envoie désormais une extension ALPN avec un indicateur de "
"protocole ``http/1.1`` quand *context* n'est pas fourni. Un  *context* "
"personnalisé doit définir les protocoles ALPN avec :meth:`~ssl.SSLContext."
"set_alpn_protocol`."

#: library/http.client.rst:109
msgid ""
"*key_file* and *cert_file* are deprecated in favor of *context*. Please use :"
"meth:`ssl.SSLContext.load_cert_chain` instead, or let :func:`ssl."
"create_default_context` select the system's trusted CA certificates for you."
msgstr ""
"Les paramètres *key_file* et *cert_file* sont rendus obsolètes par "
"*context*. Veuillez plutôt utiliser :meth:`ssl.SSLContext.load_cert_chain`, "
"ou laissez  :func:`ssl.create_default_context` sélectionner les certificats "
"racines de confiance du système pour vous."

#: library/http.client.rst:114
msgid ""
"The *check_hostname* parameter is also deprecated; the :attr:`ssl.SSLContext."
"check_hostname` attribute of *context* should be used instead."
msgstr ""
"Le paramètre *check_hostname* est de même obsolète : utilisez l'attribut :"
"attr:`ssl.SSLContext.check_hostname` de *context* à la place."

#: library/http.client.rst:121
msgid ""
"Class whose instances are returned upon successful connection.  Not "
"instantiated directly by user."
msgstr ""
"Classe dont les instances sont renvoyées dès qu'une connexion est établie.  "
"Cette classe n'est jamais instanciée directement par l'utilisateur."

#: library/http.client.rst:124
msgid ""
"The *strict* parameter was removed. HTTP 0.9 style \"Simple Responses\" are "
"no longer supported."
msgstr ""
"Le paramètre *strict* a été supprimé. Les « réponses simples » de HTTP 0.9 "
"ne sont plus prises en charge."

#: library/http.client.rst:128
msgid "This module provides the following function:"
msgstr "Ce module fournit les fonctions suivantes :"

#: library/http.client.rst:132
msgid ""
"Parse the headers from a file pointer *fp* representing a HTTP request/"
"response. The file has to be a :class:`BufferedIOBase` reader (i.e. not "
"text) and must provide a valid :rfc:`2822` style header."
msgstr ""
"Analyse les en-têtes à partir d'un pointeur de fichier *fp* représentant une "
"requête/réponse HTTP. Le fichier doit être un lecteur de classe :class:"
"`BufferedIOBase` (c'est-à-dire non textuel) et doit impérativement renvoyer "
"un en-tête valide selon la :rfc:`2822`."

#: library/http.client.rst:136
msgid ""
"This function returns an instance of :class:`http.client.HTTPMessage` that "
"holds the header fields, but no payload (the same as :attr:`HTTPResponse."
"msg` and :attr:`http.server.BaseHTTPRequestHandler.headers`). After "
"returning, the file pointer *fp* is ready to read the HTTP body."
msgstr ""
"Cette fonction renvoie une instance de :class:`http.client.HTTPMessage` qui "
"contient les champs d'en-tête, mais pas la charge utile (de même que :attr:"
"`HTTPResponse.msg` et :attr:`http.server.BaseHTTPRequestHandler.headers`). "
"Après le retour, le pointeur de fichier *fp* est prêt à lire le corps HTTP."

#: library/http.client.rst:143
msgid ""
":meth:`parse_headers` does not parse the start-line of a HTTP message; it "
"only parses the ``Name: value`` lines. The file has to be ready to read "
"these field lines, so the first line should already be consumed before "
"calling the function."
msgstr ""
"La méthode :meth:`parse_headers` n'analyse pas la ligne initiale d'un "
"message HTTP ; elle n'analyse que les lignes ``Name: value``. Le fichier "
"doit être prêt à lire ces lignes de champs, aussi la première ligne doit "
"déjà avoir été consommée avant l'appel de la fonction."

#: library/http.client.rst:148
msgid "The following exceptions are raised as appropriate:"
msgstr "Les exceptions suivantes sont levées selon les cas :"

#: library/http.client.rst:153
msgid ""
"The base class of the other exceptions in this module.  It is a subclass of :"
"exc:`Exception`."
msgstr ""
"La classe de base des autres exceptions de ce module.  C'est une sous-classe "
"de  :exc:`Exception`."

#: library/http.client.rst:170 library/http.client.rst:180
#: library/http.client.rst:190
msgid "A subclass of :exc:`HTTPException`."
msgstr "Sous-classe de :exc:`HTTPException`."

#: library/http.client.rst:164
msgid ""
"A subclass of :exc:`HTTPException`, raised if a port is given and is either "
"non-numeric or empty."
msgstr ""
"Sous-classe de :exc:`HTTPException`, levée si le port donné n'est pas "
"numérique ou est vide."

#: library/http.client.rst:200 library/http.client.rst:205
msgid "A subclass of :exc:`ImproperConnectionState`."
msgstr "Sous-classe de :exc:`ImproperConnectionState`."

#: library/http.client.rst:210
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if a server responds with a HTTP "
"status code that we don't understand."
msgstr ""
"Sous-classe de :exc:`HTTPException`.  Levée si un serveur répond avec un "
"code d'état HTTP qui n'est pas compris."

#: library/http.client.rst:216
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if an excessively long line is "
"received in the HTTP protocol from the server."
msgstr ""
"Sous-classe de :exc:`HTTPException`.  Levée si une ligne du protocole HTTP "
"est excessivement longue dans ce qui provient du serveur."

#: library/http.client.rst:222
msgid ""
"A subclass of :exc:`ConnectionResetError` and :exc:`BadStatusLine`.  Raised "
"by :meth:`HTTPConnection.getresponse` when the attempt to read the response "
"results in no data read from the connection, indicating that the remote end "
"has closed the connection."
msgstr ""
"Sous-classe de :exc:`ConnectionResetError` et :exc:`BadStatusLine`.  Levée "
"par la méthode :meth:`HTTPConnection.getresponse` quand la tentative de lire "
"la réponse n'aboutit à aucune donnée provenant de la connexion, indiquant "
"ainsi que la partie distante a fermé celle-ci."

#: library/http.client.rst:227
msgid "Previously, :exc:`BadStatusLine`\\ ``('')`` was raised."
msgstr "Antérieurement, :exc:`BadStatusLine`\\ ``('')`` était levée."

#: library/http.client.rst:231
msgid "The constants defined in this module are:"
msgstr "Les constantes définies dans ce module sont :"

#: library/http.client.rst:235
msgid "The default port for the HTTP protocol (always ``80``)."
msgstr "Le port par défaut du protocole HTTP (toujours ``80``)."

#: library/http.client.rst:239
msgid "The default port for the HTTPS protocol (always ``443``)."
msgstr "Le port par défaut du protocole HTTPS (toujours ``443``)."

#: library/http.client.rst:243
msgid "This dictionary maps the HTTP 1.1 status codes to the W3C names."
msgstr ""
"Ce dictionnaire associe les codes d'états HTTP 1.1 à leurs noms tels que "
"définis par le W3C."

#: library/http.client.rst:245
msgid ""
"Example: ``http.client.responses[http.client.NOT_FOUND]`` is ``'Not Found'``."
msgstr ""
"Par exemple : ``http.client.responses[http.client.NOT_FOUND]`` est ``'Not "
"Found'``."

#: library/http.client.rst:247
msgid ""
"See :ref:`http-status-codes` for a list of HTTP status codes that are "
"available in this module as constants."
msgstr ""
"Voir :ref:`http-status-codes` pour une liste des codes d'état HTTP qui sont "
"disponibles comme constantes dans ce module."

#: library/http.client.rst:254
msgid "HTTPConnection Objects"
msgstr "Les objets HTTPConnection"

#: library/http.client.rst:256
msgid ":class:`HTTPConnection` instances have the following methods:"
msgstr ""
"Les instances de la classe :class:`HTTPConnection` possèdent les méthodes "
"suivantes :"

#: library/http.client.rst:262
msgid ""
"This will send a request to the server using the HTTP request method "
"*method* and the selector *url*."
msgstr ""
"Envoie une requête à un serveur en utilisant la méthode *method* de requête "
"HTTP et le sélecteur *url*."

#: library/http.client.rst:265
msgid ""
"If *body* is specified, the specified data is sent after the headers are "
"finished.  It may be a :class:`str`, a :term:`bytes-like object`, an open :"
"term:`file object`, or an iterable of :class:`bytes`.  If *body* is a "
"string, it is encoded as ISO-8859-1, the default for HTTP.  If it is a bytes-"
"like object, the bytes are sent as is.  If it is a :term:`file object`, the "
"contents of the file is sent; this file object should support at least the "
"``read()`` method.  If the file object is an instance of :class:`io."
"TextIOBase`, the data returned by the ``read()`` method will be encoded as "
"ISO-8859-1, otherwise the data returned by ``read()`` is sent as is.  If "
"*body* is an iterable, the elements of the iterable are sent as is until the "
"iterable is exhausted."
msgstr ""
"Si *body* est passé en paramètre, les données transmises sont envoyées à la "
"suite des en-têtes. Ce paramètre peut-être une :class:`str`, un :term:`objet "
"octet-comptatible <bytes-like object>`, un :term:`objet fichier <file "
"object>` préalablement ouvert, ou un itérable de classe :class:`bytes`. Si "
"*body* est une chaîne, elle est encodée en ISO-8859-1, valeur par défaut "
"pour HTTP. Si c'est un objet octet-compatible, les octets sont envoyés tels "
"quels. Si c'est un :term:`objet fichier <file object>`, le contenu du "
"fichier est envoyé ; cet objet fichier doit implémenter au moins la méthode  "
"``read()``. Si l'objet fichier est une instance de :class:`io.TextIOBase`, "
"les données renvoyées par la méthode ``read()`` sont encodées en ISO-8859-1, "
"sinon les données renvoyées par ``read()`` sont envoyées telles quelles. Si "
"*body* est un itérable, les éléments de cet itérable sont envoyés jusqu'à ce "
"que l'itérable soit vide."

#: library/http.client.rst:277
msgid ""
"The *headers* argument should be a mapping of extra HTTP headers to send "
"with the request."
msgstr ""
"L'argument *headers* doit contenir les en-têtes HTTP supplémentaires sous "
"forme de dictionnaire. Ces en-têtes sont transmis dans la requête."

#: library/http.client.rst:280
msgid ""
"If *headers* contains neither Content-Length nor Transfer-Encoding, but "
"there is a request body, one of those header fields will be added "
"automatically.  If *body* is ``None``, the Content-Length header is set to "
"``0`` for methods that expect a body (``PUT``, ``POST``, and ``PATCH``).  If "
"*body* is a string or a bytes-like object that is not also a :term:`file "
"<file object>`, the Content-Length header is set to its length.  Any other "
"type of *body* (files and iterables in general) will be chunk-encoded, and "
"the Transfer-Encoding header will automatically be set instead of Content-"
"Length."
msgstr ""
"Si *headers* ne contient ni ``Content-Length:`` ni ``Transfer-Encoding:``, "
"mais qu'un corps de requête est fourni, un de ces en-têtes est ajouté "
"automatiquement. Si *body* est ``None``, l'en-tête ``Content-Length:`` est "
"paramétré à ``0`` pour les méthodes qui attendent un corps (``PUT``, "
"``POST``, et ``PATCH``). Si *body* est une chaîne ou un objet de type octets "
"qui n'est pas un (:term:`objet fichier <file object>`), l'en-tête ``Content-"
"Length`` est paramétré à sa longueur. Un *body* de tout autre type (fichiers "
"ou itérables en général) est encodé par morceaux et l'en-tête ``Transfer-"
"Encoding`` est automatiquement paramétré à la place de ``Content-Length``."

#: library/http.client.rst:292
msgid ""
"The *encode_chunked* argument is only relevant if Transfer-Encoding is "
"specified in *headers*.  If *encode_chunked* is ``False``, the "
"HTTPConnection object assumes that all encoding is handled by the calling "
"code.  If it is ``True``, the body will be chunk-encoded."
msgstr ""
"L'argument *encode_chunked* n'est pertinent que si l'en-tête ``Transfer-"
"Encoding:`` est présent. Si *encode_chunked* est ``False``, l'objet  "
"HTTPConnection suppose que l'encodage est géré par le code d'appel. S'il "
"vaut ``True``, le corps est encodé par morceaux."

#: library/http.client.rst:298
msgid ""
"Chunked transfer encoding has been added to the HTTP protocol version 1.1.  "
"Unless the HTTP server is known to handle HTTP 1.1, the caller must either "
"specify the Content-Length, or must pass a :class:`str` or bytes-like object "
"that is not also a file as the body representation."
msgstr ""
"L'encodage pour les transferts par morceaux a été ajouté à la version 1.1 du "
"protocole HTTP. À moins que le serveur HTTP sache gérer HTTP 1.1, l'appelant "
"doit soit spécifier l'en-tête ``Content-Length:``, soit passer la "
"représentation du corps de message dans un objet de classe :class:`str` ou "
"un objet octet-compatible qui ne soit pas un fichier."

#: library/http.client.rst:304
msgid "*body* can now be an iterable."
msgstr "*body* peut désormais être un itérable."

#: library/http.client.rst:307
msgid ""
"If neither Content-Length nor Transfer-Encoding are set in *headers*, file "
"and iterable *body* objects are now chunk-encoded. The *encode_chunked* "
"argument was added. No attempt is made to determine the Content-Length for "
"file objects."
msgstr ""
"Si parmi les en-têtes ne figure ni ``Content-Length:``, ni ``Transfer-"
"Encoding:``, les objets fichiers et itérables *body* sont désormais encodés "
"par morceaux. L'argument *encode_chunked* a été ajouté. Aucune tentative "
"n'est faite pour essayer de déterminer la valeur de l'en-tête ``Content-"
"Length`` pour un objet fichier."

#: library/http.client.rst:316
msgid ""
"Should be called after a request is sent to get the response from the "
"server. Returns an :class:`HTTPResponse` instance."
msgstr ""
"Doit être appelé après qu'une requête a été envoyée pour récupérer la "
"réponse du serveur. Renvoie une instance de :class:`HTTPResponse`."

#: library/http.client.rst:321
msgid ""
"Note that you must have read the whole response before you can send a new "
"request to the server."
msgstr ""
"Notez que la totalité de la réponse doit être lue avant de pouvoir envoyer "
"une nouvelle requête au serveur."

#: library/http.client.rst:324
msgid ""
"If a :exc:`ConnectionError` or subclass is raised, the :class:"
"`HTTPConnection` object will be ready to reconnect when a new request is "
"sent."
msgstr ""
"Si une exception :exc:`ConnectionError` ou une de ses sous-classes est "
"levée, l'objet de classe :class:`HTTPConnection` sera prêt à se reconnecter "
"quand une nouvelle requête sera envoyée."

#: library/http.client.rst:332
msgid ""
"Set the debugging level.  The default debug level is ``0``, meaning no "
"debugging output is printed.  Any value greater than ``0`` will cause all "
"currently defined debug output to be printed to stdout.  The ``debuglevel`` "
"is passed to any new :class:`HTTPResponse` objects that are created."
msgstr ""
"Règle le niveau de débogage. Le niveau de débogage par défaut est ``0`` "
"(aucune sortie de débogage n'est affichée). Toute valeur plus grande que "
"``0`` provoque l'affichage sur `sys.stdout` de toutes les sorties de "
"débogage actuellement définies. Le paramètre ``debuglevel`` est passé à tout "
"nouvel objet de classe :class:`HTTPResponse` qui est créé."

#: library/http.client.rst:342
msgid ""
"Set the host and the port for HTTP Connect Tunnelling. This allows running "
"the connection through a proxy server."
msgstr ""
"Paramètre l'hôte et le port pour le tunnel de connexion HTTP. Il permet de "
"réaliser la connexion au travers d'un serveur mandataire."

#: library/http.client.rst:345
msgid ""
"The host and port arguments specify the endpoint of the tunneled connection "
"(i.e. the address included in the CONNECT request, *not* the address of the "
"proxy server)."
msgstr ""
"Les arguments d'hôte et de port indiquent le point de terminaison de la "
"connexion par tunnel (c'est-à-dire l'adresse incluse dans la requête "
"CONNECT, et non l'adresse du serveur mandataire)."

#: library/http.client.rst:349
msgid ""
"The headers argument should be a mapping of extra HTTP headers to send with "
"the CONNECT request."
msgstr ""
"L'argument *headers* doit contenir les en-têtes HTTP supplémentaires sous "
"forme d'un dictionnaire. Ceux-ci seront envoyés avec la requête CONNECT."

#: library/http.client.rst:352
msgid ""
"For example, to tunnel through a HTTPS proxy server running locally on port "
"8080, we would pass the address of the proxy to the :class:`HTTPSConnection` "
"constructor, and the address of the host that we eventually want to reach to "
"the :meth:`~HTTPConnection.set_tunnel` method::"
msgstr ""
"Par exemple, pour un tunnel traversant un serveur mandataire HTTPS "
"accessible localement sur le port 8080, nous devons passer l'adresse du "
"serveur mandataire au constructeur de la classe :class:`HTTPSConnection`, en "
"plus de l'éventuelle adresse de l'hôte que nous voulons atteindre, qui elle "
"doit être passée à la méthode :meth:`~HTTPConnection.set_tunnel` ::"

#: library/http.client.rst:367
msgid ""
"Connect to the server specified when the object was created.  By default, "
"this is called automatically when making a request if the client does not "
"already have a connection."
msgstr ""
"Se connecte au serveur spécifié quand l'objet est créé. Par défaut, est "
"appelée automatiquement lorsqu'une requête est faite alors que le client ne "
"s'est pas connecté au préalable."

#: library/http.client.rst:371
msgid ""
"Raises an :ref:`auditing event <auditing>` ``http.client.connect`` with "
"arguments ``self``, ``host``, ``port``."
msgstr ""
"Lève un :ref:`évènement d'audit <auditing>` ``http.client.connect`` "
"contenant les arguments ``self``, ``host``, ``port``."

#: library/http.client.rst:376
msgid "Close the connection to the server."
msgstr "Ferme la connexion au serveur."

#: library/http.client.rst:381
msgid "Buffer size in bytes for sending a file-like message body."
msgstr ""
"Taille en octets du tampon utilisé pour transmettre un corps de message de "
"type fichier."

#: library/http.client.rst:386
msgid ""
"As an alternative to using the :meth:`request` method described above, you "
"can also send your request step by step, by using the four functions below."
msgstr ""
"Plutôt que d'utiliser la méthode :meth:`request` décrite plus haut, il est "
"également possible d'envoyer une requête étape par étape en utilisant les "
"quatre fonctions ci-dessous."

#: library/http.client.rst:393
msgid ""
"This should be the first call after the connection to the server has been "
"made. It sends a line to the server consisting of the *method* string, the "
"*url* string, and the HTTP version (``HTTP/1.1``).  To disable automatic "
"sending of ``Host:`` or ``Accept-Encoding:`` headers (for example to accept "
"additional content encodings), specify *skip_host* or *skip_accept_encoding* "
"with non-False values."
msgstr ""
"Ce doit être le premier appel une fois que la connexion au serveur a été "
"réalisée. Est envoyée au serveur une ligne consistant en la chaîne *method*, "
"la chaîne d'*url*, et la version du protocole HTTP (``HTTP/1.1``). Pour "
"désactiver l'envoi automatique des en-têtes ``Host:`` ou ``Accept-Encoding:"
"`` (par exemple pour accepter des encodages supplémentaires de contenus), il "
"est nécessaire de passer les paramètres *skip_host* ou "
"*skip_accept_encoding* avec des valeurs différentes de ``False``."

#: library/http.client.rst:403
msgid ""
"Send an :rfc:`822`\\ -style header to the server.  It sends a line to the "
"server consisting of the header, a colon and a space, and the first "
"argument.  If more arguments are given, continuation lines are sent, each "
"consisting of a tab and an argument."
msgstr ""
"Envoie un en-tête de style :rfc:`822` au serveur. Elle envoie au serveur une "
"ligne regroupant un en-tête, une espace, un `:`, une espace et le premier "
"argument. Si plusieurs arguments sont donnés, des lignes de continuation "
"sont envoyées, chacune d'elle étant constituée d'une espace suivie d'un "
"argument."

#: library/http.client.rst:411
msgid ""
"Send a blank line to the server, signalling the end of the headers. The "
"optional *message_body* argument can be used to pass a message body "
"associated with the request."
msgstr ""
"Envoie une ligne blanche au serveur, signalant la fin des en-têtes. "
"L'argument optionnel *message_body* peut-être utilisé pour passer le corps "
"du message associé à la requête."

#: library/http.client.rst:415
msgid ""
"If *encode_chunked* is ``True``, the result of each iteration of "
"*message_body* will be chunk-encoded as specified in :rfc:`7230`, Section "
"3.3.1.  How the data is encoded is dependent on the type of *message_body*.  "
"If *message_body* implements the :ref:`buffer interface <bufferobjects>` the "
"encoding will result in a single chunk. If *message_body* is a :class:"
"`collections.abc.Iterable`, each iteration of *message_body* will result in "
"a chunk.  If *message_body* is a :term:`file object`, each call to ``."
"read()`` will result in a chunk. The method automatically signals the end of "
"the chunk-encoded data immediately after *message_body*."
msgstr ""
"Si *encode_chunked* est ``True``, le résultat de chaque itération sur "
"*message_body* est un morceau encodé selon la :rfc:`7230`, section 3.3.1. La "
"façon dont les données sont encodées dépend du type de *message_body*. Si "
"*message_body* implémente l':ref:`interface tampon <bufferobjects>` "
"l'encodage donne un unique morceau. Si *message_body* est un itérable de "
"classe :class:`collections.abc.Iterable`, chaque itération sur "
"*message_body* donne un morceau. Si *message_body* est un :term:`fichier "
"objet <file object>`, chaque appel à ``.read()`` renvoie un morceau. La "
"méthode signale automatiquement la fin des données encodées par morceaux "
"immédiatement après *message_body*."

#: library/http.client.rst:426
msgid ""
"Due to the chunked encoding specification, empty chunks yielded by an "
"iterator body will be ignored by the chunk-encoder. This is to avoid "
"premature termination of the read of the request by the target server due to "
"malformed encoding."
msgstr ""
"Selon la spécification de l'encodage des morceaux, les morceaux vides "
"renvoyés par un itérateur associé au corps du message sont ignorés par "
"l'encodeur de morceaux. Ce comportement est choisi pour éviter que la "
"lecture de la requête par le serveur cible ne se termine prématurément pour "
"cause d'encodage mal formé."

#: library/http.client.rst:431
msgid "Chunked encoding support.  The *encode_chunked* parameter was added."
msgstr ""
"Implémentation de l'encodage (pour les transferts) par morceaux. Le "
"paramètre *encode_chunked* a été ajouté."

#: library/http.client.rst:438
msgid ""
"Send data to the server.  This should be used directly only after the :meth:"
"`endheaders` method has been called and before :meth:`getresponse` is called."
msgstr ""
"Envoie les données au serveur. Elle ne peut être utilisée directement qu'une "
"fois la méthode :meth:`endheaders` a été appelée et avant que la méthode :"
"meth:`getresponse` ait été appelée."

#: library/http.client.rst:442
msgid ""
"Raises an :ref:`auditing event <auditing>` ``http.client.send`` with "
"arguments ``self``, ``data``."
msgstr ""
"Lève un :ref:`évènement d'audit <auditing>` ``http.client.send`` avec comme "
"arguments ``self``, ``data``."

#: library/http.client.rst:448
msgid "HTTPResponse Objects"
msgstr "Les objets HTTPResponse"

#: library/http.client.rst:450
msgid ""
"An :class:`HTTPResponse` instance wraps the HTTP response from the server.  "
"It provides access to the request headers and the entity body.  The response "
"is an iterable object and can be used in a with statement."
msgstr ""
"Une instance de :class:`HTTPResponse` encapsule la réponse HTTP du serveur. "
"Elle fournit un accès aux en-têtes et au corps de la réponse. La réponse est "
"un objet itérable pouvant être utilisé avec l'instruction `with`."

#: library/http.client.rst:455
msgid ""
"The :class:`io.BufferedIOBase` interface is now implemented and all of its "
"reader operations are supported."
msgstr ""
"L'interface de la classe :class:`io.BufferedIOBase` est désormais "
"implémentée et toutes ses opérations de lecture sont gérées."

#: library/http.client.rst:462
msgid "Reads and returns the response body, or up to the next *amt* bytes."
msgstr ""
"Lit et renvoie soit tout le corps de la réponse soit une partie de celui-ci "
"se limitant aux *amt* octets suivants."

#: library/http.client.rst:466
msgid ""
"Reads up to the next len(b) bytes of the response body into the buffer *b*. "
"Returns the number of bytes read."
msgstr ""
"Lit les prochains ``len(b)`` octets du corps de la réponse et les place dans "
"le tampon *b*. Renvoie le nombre d'octets lus."

#: library/http.client.rst:473
msgid ""
"Return the value of the header *name*, or *default* if there is no header "
"matching *name*.  If there is more than one  header with the name *name*, "
"return all of the values joined by ', '.  If 'default' is any iterable other "
"than a single string, its elements are similarly returned joined by commas."
msgstr ""
"Renvoie la valeur de l'en-tête *name*, ou *default* si aucun en-tête "
"correspondant à *name* n'est présent. Si plusieurs en-têtes nommés *name* "
"sont présents, renvoie toutes les valeurs séparées par des « , ». Si "
"*default* est un itérable autre qu'une chaîne, ses éléments sont de façon "
"identique regroupés et séparés par des virgules."

#: library/http.client.rst:480
msgid "Return a list of (header, value) tuples."
msgstr "Renvoie une liste d'*n*-uplets `(en-tête, valeur)`."

#: library/http.client.rst:484
msgid "Return the ``fileno`` of the underlying socket."
msgstr "Renvoie le ``fileno`` du connecteur réseau sous-jacent."

#: library/http.client.rst:488
msgid ""
"A :class:`http.client.HTTPMessage` instance containing the response "
"headers.  :class:`http.client.HTTPMessage` is a subclass of :class:`email."
"message.Message`."
msgstr ""
"Une instance de :class:`http.client.HTTPMessage` contenant les en-têtes de "
"la réponse. La classe :class:`http.client.HTTPMessage` est une sous-classe "
"de la classe :class:`email.message.Message`."

#: library/http.client.rst:494
msgid ""
"HTTP protocol version used by server.  10 for HTTP/1.0, 11 for HTTP/1.1."
msgstr ""
"La version du protocole HTTP utilisée par le serveur : 10 pour HTTP/1.0, 11 "
"pour HTTP/1.1."

#: library/http.client.rst:498
msgid ""
"URL of the resource retrieved, commonly used to determine if a redirect was "
"followed."
msgstr ""
"L'URL de la ressource récupérée, utilisée habituellement pour déterminer si "
"une redirection a été suivie."

#: library/http.client.rst:502
msgid ""
"Headers of the response in the form of an :class:`email.message."
"EmailMessage` instance."
msgstr ""
"Les en-têtes de la réponse sous la forme d'une instance de :class:`email."
"message.EmailMessage`."

#: library/http.client.rst:506
msgid "Status code returned by server."
msgstr "Code d'état renvoyé par le serveur."

#: library/http.client.rst:510
msgid "Reason phrase returned by server."
msgstr "Phrase renvoyée par le serveur et indiquant la cause."

#: library/http.client.rst:514
msgid ""
"A debugging hook.  If :attr:`debuglevel` is greater than zero, messages will "
"be printed to stdout as the response is read and parsed."
msgstr ""
"Un point d'entrée pour débogage. Si :attr:`debuglevel` est plus grand que "
"zéro, les messages sont envoyés à `sys.stdout` pendant la lecture et "
"l'analyse de la réponse."

#: library/http.client.rst:519
msgid "Is ``True`` if the stream is closed."
msgstr "Vaut ``True`` si le flux est terminé."

#: library/http.client.rst:523
msgid "Deprecated in favor of :attr:`~HTTPResponse.url`."
msgstr "Rendu obsolète par :attr:`~HTTPResponse.url`."

#: library/http.client.rst:528
msgid "Deprecated in favor of :attr:`~HTTPResponse.headers`."
msgstr "Rendu obsolète par :attr:`~HTTPResponse.headers`."

#: library/http.client.rst:533
msgid "Deprecated in favor of :attr:`~HTTPResponse.status`."
msgstr "Rendu obsolète par :attr:`~HTTPResponse.status`."

#: library/http.client.rst:537
msgid "Examples"
msgstr "Exemples"

#: library/http.client.rst:539
msgid "Here is an example session that uses the ``GET`` method::"
msgstr "Voici un exemple de session utilisant la méthode ``GET`` ::"

#: library/http.client.rst:564
msgid ""
"Here is an example session that uses the ``HEAD`` method.  Note that the "
"``HEAD`` method never returns any data. ::"
msgstr ""
"Voici un exemple de session utilisant la méthode  ``HEAD``.  Notez que la "
"méthode ``HEAD`` ne renvoie jamais de données. ::"

#: library/http.client.rst:579
msgid "Here is an example session that shows how to ``POST`` requests::"
msgstr ""
"Voici un exemple de session montrant l'utilisation de la méthode ``POST`` ::"

#: library/http.client.rst:595
msgid ""
"Client side ``HTTP PUT`` requests are very similar to ``POST`` requests. The "
"difference lies only the server side where HTTP server will allow resources "
"to be created via ``PUT`` request. It should be noted that custom HTTP "
"methods are also handled in :class:`urllib.request.Request` by setting the "
"appropriate method attribute. Here is an example session that shows how to "
"send a ``PUT`` request using http.client::"
msgstr ""
"Les requêtes ``HTTP PUT`` côté client ressemblent aux requêtes ``POST``. La "
"différence est uniquement du côté serveur, le serveur HTTP créant des "
"ressources dans le cas d'une requête ``PUT``. Notons que les méthodes HTTP "
"personnalisées sont également gérées dans la classe :class:`urllib.request."
"Request` en paramétrant l'attribut de méthode comme il se doit. Voici par "
"exemple une session qui montre comment envoyer une requête ``PUT`` en "
"utilisant http.client ::"

#: library/http.client.rst:617
msgid "HTTPMessage Objects"
msgstr "Les objets HTTPMessage"

#: library/http.client.rst:619
msgid ""
"An :class:`http.client.HTTPMessage` instance holds the headers from an HTTP "
"response.  It is implemented using the :class:`email.message.Message` class."
msgstr ""
"Une instance de classe :class:`http.client.HTTPMessage` contient les en-"
"têtes d'une réponse HTTP. Elle est implémentée en utilisant la classe :class:"
"`email.message.Message`."
