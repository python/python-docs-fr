# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 21:40+0100\n"
"PO-Revision-Date: 2020-05-07 19:56+0200\n"
"Last-Translator: Nicolas Audebert <nicolas+python@audebert.at>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.3\n"

#: library/uuid.rst:2
#, fuzzy
msgid ":mod:`!uuid` --- UUID objects according to :rfc:`4122`"
msgstr ":mod:`uuid` — Objets UUID d'après la :rfc:`4122`"

#: library/uuid.rst:9
msgid "**Source code:** :source:`Lib/uuid.py`"
msgstr "**Code source :** :source:`Lib/uuid.py`"

#: library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, :func:"
"`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in :rfc:"
"`4122`."
msgstr ""
"Ce module exporte des objets :class:`UUID` immuables (de la classe :class:"
"`UUID`) et les fonctions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, :func:"
"`uuid5` permettant de générer des UUID de version 1, 3, 4 et 5 tels que "
"définis dans la :rfc:`4122`."

#: library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or :"
"func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""
"Utilisez :func:`uuid1` ou :func:`uuid4` si votre but est de produire un "
"identifiant unique. Notez que :func:`uuid1` peut dévoiler des informations "
"personnelles car l'UUID produit contient l'adresse réseau de l'ordinateur. "
"En revanche, :func:`uuid4` génère un UUID aléatoire."

#: library/uuid.rst:22
#, fuzzy
msgid ""
"Depending on support from the underlying platform, :func:`uuid1` may or may "
"not return a \"safe\" UUID.  A safe UUID is one which is generated using "
"synchronization methods that ensure no two processes can obtain the same "
"UUID.  All instances of :class:`UUID` have an :attr:`~UUID.is_safe` "
"attribute which relays any information about the UUID's safety, using this "
"enumeration:"
msgstr ""
"En fonction du système d'exploitation, les UUID :func:`uuid1` peuvent ne pas "
"être « sûrs ». Un UUID est considéré sûr s'il est généré avec des techniques "
"de synchronisation qui garantissent que deux processus ne peuvent obtenir le "
"même UUID. Toutes les instances de :class:`UUID` possèdent un attribut :attr:"
"`is_safe` qui indique le niveau de sûreté de l'UUID selon l'énumération "
"suivante :"

#: library/uuid.rst:34
msgid "The UUID was generated by the platform in a multiprocessing-safe way."
msgstr ""
"L'UUID a été généré par la plateforme en utilisant une méthode sûre dans un "
"contexte de parallélisme par processus."

#: library/uuid.rst:38
msgid "The UUID was not generated in a multiprocessing-safe way."
msgstr ""
"L'UUID n'a pas été généré par une méthode sûre dans un contexte de "
"parallélisme par processus."

#: library/uuid.rst:42
msgid ""
"The platform does not provide information on whether the UUID was generated "
"safely or not."
msgstr ""
"La plateforme ne précise pas si l'UUID a été généré de façon sûre ou non."

#: library/uuid.rst:47
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of 16 "
"bytes in big-endian order as the *bytes* argument, a string of 16 bytes in "
"little-endian order as the *bytes_le* argument, a tuple of six integers (32-"
"bit *time_low*, 16-bit *time_mid*, 16-bit *time_hi_version*, 8-bit "
"*clock_seq_hi_variant*, 8-bit *clock_seq_low*, 48-bit *node*) as the "
"*fields* argument, or a single 128-bit integer as the *int* argument. When a "
"string of hex digits is given, curly braces, hyphens, and a URN prefix are "
"all optional.  For example, these expressions all yield the same UUID::"
msgstr ""
"Produit un UUID à partir soit d'une chaîne de 32 chiffres hexadécimaux, soit "
"une chaîne de 16 octets gros-boutiste (argument *bytes*), soit une chaîne de "
"16 octets petit-boutiste (argument *bytes_le*), soit un sextuplet d'entiers "
"(32-bit *time_low*, 16-bit *time_mid*, 16-bit *time_hi_version*, 8-bit "
"*clock_seq_hi_variant*, 8-bit *clock_seq_low*, 48-bit *node*) (argument "
"*fields*), soit un unique entier sur 128 bits (argument *int*). Lorsque la "
"fonction reçoit une chaîne de chiffres hexadécimaux, les accolades, les "
"tirets et le préfixe URN sont facultatifs. Par exemple, toutes les "
"expressions ci-dessous génèrent le même UUID ::"

#: library/uuid.rst:57
msgid ""
"UUID('{12345678-1234-5678-1234-567812345678}')\n"
"UUID('12345678123456781234567812345678')\n"
"UUID('urn:uuid:12345678-1234-5678-1234-567812345678')\n"
"UUID(bytes=b'\\x12\\x34\\x56\\x78'*4)\n"
"UUID(bytes_le=b'\\x78\\x56\\x34\\x12\\x34\\x12\\x78\\x56' +\n"
"              b'\\x12\\x34\\x56\\x78\\x12\\x34\\x56\\x78')\n"
"UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))\n"
"UUID(int=0x12345678123456781234567812345678)"
msgstr ""

#: library/uuid.rst:66
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be given. "
"The *version* argument is optional; if given, the resulting UUID will have "
"its variant and version number set according to :rfc:`4122`, overriding bits "
"in the given *hex*, *bytes*, *bytes_le*, *fields*, or *int*."
msgstr ""
"Un seul des arguments *hex*, *bytes*, *bytes_le*, *fields* ou *int* doit "
"être spécifié. L'argument *version* est optionnel : s'il est spécifié, "
"l'UUID généré aura pour numéro de version et de variante la valeur indiquée "
"dans la :rfc:`4122`, remplaçant les bits idoines de *hex*, *bytes*, "
"*bytes_le*, *fields* ou *int*."

#: library/uuid.rst:71
msgid ""
"Comparison of UUID objects are made by way of comparing their :attr:`UUID."
"int` attributes.  Comparison with a non-UUID object raises a :exc:"
"`TypeError`."
msgstr ""
"La comparaison de deux objets UUID se fait en comparant leurs attributs :"
"attr:`UUID.int`. La comparaison avec un objet autre qu'un UUID lève une "
"exception :exc:`TypeError`."

#: library/uuid.rst:75
msgid ""
"``str(uuid)`` returns a string in the form "
"``12345678-1234-5678-1234-567812345678`` where the 32 hexadecimal digits "
"represent the UUID."
msgstr ""
"``str(uuid)`` renvoie une chaîne de caractères de la forme "
"``12345678-1234-5678-1234-567812345678`` représentant l'UUID par une chaîne "
"de 32 chiffres hexadécimaux."

#: library/uuid.rst:79
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ""
"Les instances de :class:`UUID` possèdent les attributs suivants en lecture "
"seule :"

#: library/uuid.rst:83
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr ""
"L'UUID représenté comme une chaîne de 16 octets (contenant les six champs "
"entiers dans l'ordre gros-boutiste)."

#: library/uuid.rst:89
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr ""
"L'UUID représenté comme une chaîne de 16 octets (avec *time_low*, *time_mid* "
"et *time_hi_version* dans l'ordre petit-boutiste)."

#: library/uuid.rst:95
msgid ""
"A tuple of the six integer fields of the UUID, which are also available as "
"six individual attributes and two derived attributes:"
msgstr ""
"Un sextuplet contenant les champs entiers de l'UUID, également accessibles "
"en tant que six attributs individuels et deux attributs dérivés :"

#: library/uuid.rst:100
msgid "Field"
msgstr "Champ"

#: library/uuid.rst:101
msgid "Meaning"
msgstr "Signification"

#: library/uuid.rst:104
#, fuzzy
msgid "The first 32 bits of the UUID."
msgstr "les 32 premiers bits de l'UUID"

#: library/uuid.rst:110
#, fuzzy
msgid "The next 16 bits of the UUID."
msgstr "les 16 bits suivants de l'UUID"

#: library/uuid.rst:116
#, fuzzy
msgid "The next 8 bits of the UUID."
msgstr "les 8 bits suivants de l'UUID"

#: library/uuid.rst:119
#, fuzzy
msgid "The last 48 bits of the UUID."
msgstr "les derniers 48 bits de l'UUID"

#: library/uuid.rst:122
#, fuzzy
msgid "The 60-bit timestamp."
msgstr "l'horodatage sur 60 bits"

#: library/uuid.rst:125
#, fuzzy
msgid "The 14-bit sequence number."
msgstr "le numéro de séquence sur 14 bits"

#: library/uuid.rst:130
#, fuzzy
msgid "The UUID as a 32-character lowercase hexadecimal string."
msgstr ""
"Représentation de l'UUID sous forme d'une chaîne de 32 chiffres hexadécimaux."

#: library/uuid.rst:135
msgid "The UUID as a 128-bit integer."
msgstr "Représentation de l'UUId sous forme d'un entier de 128 bits."

#: library/uuid.rst:140
msgid "The UUID as a URN as specified in :rfc:`4122`."
msgstr ""
"Représentation de l'UUID sous forme d'URN tel que spécifié dans la :rfc:"
"`4122`."

#: library/uuid.rst:145
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the constants :const:`RESERVED_NCS`, :const:`RFC_4122`, :"
"const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""
"Variante de l'UUID. Celle-ci détermine l'agencement interne de l'UUID. Les "
"valeurs possibles sont les constantes suivantes : :const:`RESERVED_NCS`, :"
"const:`RFC_4122`, :const:`RESERVED_MICROSOFT` ou :const:`RESERVED_FUTURE`."

#: library/uuid.rst:152
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is :"
"const:`RFC_4122`)."
msgstr ""
"Numéro de version de l'UUID (de 1 à 5). Cette valeur n'a de sens que dans le "
"cas de la variante :const:`RFC_4122`."

#: library/uuid.rst:157
msgid ""
"An enumeration of :class:`SafeUUID` which indicates whether the platform "
"generated the UUID in a multiprocessing-safe way."
msgstr ""
"Valeur de l'énumération :class:`SafeUUID` indiquant si la plateforme a "
"généré l'UUID d'une façon sûre dans un contexte de parallélisme par "
"processus."

#: library/uuid.rst:162
msgid "The :mod:`uuid` module defines the following functions:"
msgstr "Le module :mod:`uu` définit les fonctions suivantes :"

#: library/uuid.rst:167
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time this "
"runs, it may launch a separate program, which could be quite slow.  If all "
"attempts to obtain the hardware address fail, we choose a random 48-bit "
"number with the multicast bit (least significant bit of the first octet) set "
"to 1 as recommended in :rfc:`4122`.  \"Hardware address\" means the MAC "
"address of a network interface.  On a machine with multiple network "
"interfaces, universally administered MAC addresses (i.e. where the second "
"least significant bit of the first octet is *unset*) will be preferred over "
"locally administered MAC addresses, but with no other ordering guarantees."
msgstr ""
"Renvoie l'adresse réseau matérielle sous forme d'un entier positif sur 48 "
"bits. Cette fonction peut faire appel à un programme externe relativement "
"lent lors de sa première exécution. Si toutes les tentatives d'obtenir "
"l'adresse matérielle échouent, un nombre aléatoire sur 48 bit avec le bit de "
"*multicast* (bit de poids faible du premier octet) à 1 est généré, comme "
"recommandé par la :rfc:`4122`. Ici, « adresse matérielle » correspond à "
"l'adresse MAC d'une interface réseau. Sur une machine avec plusieurs "
"interfaces réseau, les adresses MAC  de type UUA (*universally administered "
"address*, pour lesquelles le second bit de poids faible est à zéro) sont "
"prioritaires par rapport aux autres adresses MAC. Aucune autre garantie "
"n'est donnée sur l'ordre dans lequel les interfaces sont choisies."

#: library/uuid.rst:177
msgid ""
"Universally administered MAC addresses are preferred over locally "
"administered MAC addresses, since the former are guaranteed to be globally "
"unique, while the latter are not."
msgstr ""
"Les adresses MAC de type UUA sont préférées par rapport aux adresses locales "
"car ces dernières ne sont pas nécessairement uniques."

#: library/uuid.rst:187
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If "
"*node* is not given, :func:`getnode` is used to obtain the hardware address. "
"If *clock_seq* is given, it is used as the sequence number; otherwise a "
"random 14-bit sequence number is chosen."
msgstr ""
"Génère un UUID à partir d'un identifiant hôte, d'un numéro de séquence et de "
"l'heure actuelle. Si *node* n'est pas spécifié, la fonction :func:`getnode` "
"est appelée pour obtenir l'adresse matérielle. *clock_seq* est utilisé comme "
"numéro de séquence s'il est spécifié, sinon un numéro aléatoire sur 14 bits "
"est utilisé à la place."

#: library/uuid.rst:197
#, fuzzy
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is a "
"UUID) and a name (which is a :class:`bytes` object or a string that will be "
"encoded using UTF-8)."
msgstr ""
"Génère un UUID à partir de l'empreinte MD5 de l'identifiant d'un espace de "
"nom (un UUID) et d'un nom (une chaîne de caractères)."

#: library/uuid.rst:206
msgid "Generate a random UUID."
msgstr "Génère un UUID aléatoire."

#: library/uuid.rst:213
#, fuzzy
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which is "
"a UUID) and a name (which is a :class:`bytes` object or a string that will "
"be encoded using UTF-8)."
msgstr ""
"Génère un UUID à partir de l'empreinte SHA-1 de l'identifiant d'un espace de "
"nom (un UUID) et d'un nom (une chaîne de caractères)."

#: library/uuid.rst:219
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for use "
"with :func:`uuid3` or :func:`uuid5`."
msgstr ""
"Le module :mod:`uuid` définit les identifiants d'espaces de noms suivants "
"(pour :func:`uuid3` et :func:`uuid5`)."

#: library/uuid.rst:225
#, fuzzy
msgid ""
"When this namespace is specified, the *name* string is a fully qualified "
"domain name."
msgstr ""
"Lorsque cet espace de nom est spécifié, la chaîne *name* doit être un nom de "
"domaine pleinement qualifié (souvent indiqué en anglais par *FQDN*)."

#: library/uuid.rst:231
msgid "When this namespace is specified, the *name* string is a URL."
msgstr ""
"Lorsque cet espace de nom est spécifié, la chaîne *name* doit être une URL."

#: library/uuid.rst:236
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr ""
"Lorsque cet espace de nom est spécifié, la chaîne *name* doit être un "
"OID ISO."

#: library/uuid.rst:241
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER or "
"a text output format."
msgstr ""
"Lorsque cet espace de nom est spécifié, la chaîne *name* doit être un "
"DN X.500 au format texte ou DER."

#: library/uuid.rst:244
#, fuzzy
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`~UUID.variant` attribute:"
msgstr ""
"Le module :mod:`uuid` définit les constantes suivantes correspondant aux "
"valeurs autorisées pour l'attribut :attr:`variant` :"

#: library/uuid.rst:250
msgid "Reserved for NCS compatibility."
msgstr "Réservé pour la compatibilité NCS."

#: library/uuid.rst:255
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr "Utilise l'agencement des UUID de la :rfc:`4122`."

#: library/uuid.rst:260
msgid "Reserved for Microsoft compatibility."
msgstr "Réservé pour la compatibilité Microsoft."

#: library/uuid.rst:265
msgid "Reserved for future definition."
msgstr "Réservé pour un usage futur."

#: library/uuid.rst:270
msgid ":rfc:`4122` - A Universally Unique IDentifier (UUID) URN Namespace"
msgstr ":rfc:`4122` – *A Universally Unique IDentifier (UUID) URN Namespace*"

#: library/uuid.rst:271
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, the "
"internal format of UUIDs, and methods of generating UUIDs."
msgstr ""
"Cette spécification (en anglais) définit un espace de noms *Uniform Resource "
"Name* pour les UUID, leur format interne et les méthodes permettant de les "
"générer."

#: library/uuid.rst:278
msgid "Command-Line Usage"
msgstr "Utilisation en ligne de commande."

#: library/uuid.rst:282
msgid ""
"The :mod:`uuid` module can be executed as a script from the command line."
msgstr ""

#: library/uuid.rst:284
msgid ""
"python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N NAME]"
msgstr ""

#: library/uuid.rst:288
msgid "The following options are accepted:"
msgstr "Les options suivantes sont acceptées :"

#: library/uuid.rst:294
msgid "Show the help message and exit."
msgstr "Affiche un message d'aide et quitte."

#: library/uuid.rst:299
msgid ""
"Specify the function name to use to generate the uuid. By default :func:"
"`uuid4` is used."
msgstr ""

#: library/uuid.rst:305
msgid ""
"The namespace is a ``UUID``, or ``@ns`` where ``ns`` is a well-known "
"predefined UUID addressed by namespace name. Such as ``@dns``, ``@url``, "
"``@oid``, and ``@x500``. Only required for :func:`uuid3` / :func:`uuid5` "
"functions."
msgstr ""

#: library/uuid.rst:312
msgid ""
"The name used as part of generating the uuid. Only required for :func:"
"`uuid3` / :func:`uuid5` functions."
msgstr ""

#: library/uuid.rst:319
msgid "Example"
msgstr "Exemple"

#: library/uuid.rst:321
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr ""
"Voici quelques exemples classiques d'utilisation du module :mod:`uuid` ::"

#: library/uuid.rst:323
msgid ""
">>> import uuid\n"
"\n"
">>> # make a UUID based on the host ID and current time\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # make a UUID using an MD5 hash of a namespace UUID and a name\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # make a random UUID\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # make a UUID using a SHA-1 hash of a namespace UUID and a name\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')\n"
"\n"
">>> # make a UUID from a string of hex digits (braces and hyphens ignored)\n"
">>> x = uuid.UUID('{00010203-0405-0607-0809-0a0b0c0d0e0f}')\n"
"\n"
">>> # convert a UUID to a string of hex digits in standard form\n"
">>> str(x)\n"
"'00010203-0405-0607-0809-0a0b0c0d0e0f'\n"
"\n"
">>> # get the raw 16 bytes of the UUID\n"
">>> x.bytes\n"
"b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'\n"
"\n"
">>> # make a UUID from a 16-byte string\n"
">>> uuid.UUID(bytes=x.bytes)\n"
"UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')"
msgstr ""

#: library/uuid.rst:360
msgid "Command-Line Example"
msgstr ""

#: library/uuid.rst:362
#, fuzzy
msgid ""
"Here are some examples of typical usage of the :mod:`uuid` command line "
"interface:"
msgstr ""
"Voici quelques exemples classiques d'utilisation du module :mod:`uuid` ::"

#: library/uuid.rst:364
msgid ""
"# generate a random uuid - by default uuid4() is used\n"
"$ python -m uuid\n"
"\n"
"# generate a uuid using uuid1()\n"
"$ python -m uuid -u uuid1\n"
"\n"
"# generate a uuid using uuid5\n"
"$ python -m uuid -u uuid5 -n @url -N example.com"
msgstr ""

#: library/uuid.rst:182
msgid "getnode"
msgstr ""

#: library/uuid.rst:192
msgid "uuid1"
msgstr ""

#: library/uuid.rst:201
msgid "uuid3"
msgstr ""

#: library/uuid.rst:208
msgid "uuid4"
msgstr ""

#: library/uuid.rst:217
msgid "uuid5"
msgstr ""

#~ msgid ":attr:`time_low`"
#~ msgstr ":attr:`time_low`"

#~ msgid ":attr:`time_mid`"
#~ msgstr ":attr:`time_mid`"

#~ msgid ":attr:`time_hi_version`"
#~ msgstr ":attr:`time_hi_version`"

#~ msgid ":attr:`clock_seq_hi_variant`"
#~ msgstr ":attr:`clock_seq_hi_variant`"

#~ msgid ":attr:`clock_seq_low`"
#~ msgstr ":attr:`clock_seq_low`"

#~ msgid ":attr:`node`"
#~ msgstr ":attr:`node`"

#~ msgid ":attr:`time`"
#~ msgstr ":attr:`time`"

#~ msgid ":attr:`clock_seq`"
#~ msgstr ":attr:`clock_seq`"
