# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-28 15:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/uuid.rst:2
msgid ":mod:`uuid` --- UUID objects according to :rfc:`4122`"
msgstr ""

#: ../Doc/library/uuid.rst:9
#, fuzzy
msgid "**Source code:** :source:`Lib/uuid.py`"
msgstr "**Code source :** :source:`Lib/uu.py`"

#: ../Doc/library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, :func:"
"`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in :rfc:"
"`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or :"
"func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:22
msgid ""
"Depending on support from the underlying platform, :func:`uuid1` may or may "
"not return a \"safe\" UUID.  A safe UUID is one which is generated using "
"synchronization methods that ensure no two processes can obtain the same "
"UUID.  All instances of :class:`UUID` have an :attr:`is_safe` attribute "
"which relays any information about the UUID's safety, using this enumeration:"
msgstr ""

#: ../Doc/library/uuid.rst:34
msgid "The UUID was generated by the platform in a multiprocessing-safe way."
msgstr ""

#: ../Doc/library/uuid.rst:38
msgid "The UUID was not generated in a multiprocessing-safe way."
msgstr ""

#: ../Doc/library/uuid.rst:42
msgid ""
"The platform does not provide information on whether the UUID was generated "
"safely or not."
msgstr ""

#: ../Doc/library/uuid.rst:47
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of 16 "
"bytes in big-endian order as the *bytes* argument, a string of 16 bytes in "
"little-endian order as the *bytes_le* argument, a tuple of six integers (32-"
"bit *time_low*, 16-bit *time_mid*, 16-bit *time_hi_version*, 8-bit "
"*clock_seq_hi_variant*, 8-bit *clock_seq_low*, 48-bit *node*) as the "
"*fields* argument, or a single 128-bit integer as the *int* argument. When a "
"string of hex digits is given, curly braces, hyphens, and a URN prefix are "
"all optional.  For example, these expressions all yield the same UUID::"
msgstr ""

#: ../Doc/library/uuid.rst:66
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be given. "
"The *version* argument is optional; if given, the resulting UUID will have "
"its variant and version number set according to :rfc:`4122`, overriding bits "
"in the given *hex*, *bytes*, *bytes_le*, *fields*, or *int*."
msgstr ""

#: ../Doc/library/uuid.rst:71
msgid ""
"Comparison of UUID objects are made by way of comparing their :attr:`UUID."
"int` attributes.  Comparison with a non-UUID object raises a :exc:"
"`TypeError`."
msgstr ""

#: ../Doc/library/uuid.rst:75
msgid ""
"``str(uuid)`` returns a string in the form "
"``12345678-1234-5678-1234-567812345678`` where the 32 hexadecimal digits "
"represent the UUID."
msgstr ""

#: ../Doc/library/uuid.rst:79
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:83
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:89
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr ""

#: ../Doc/library/uuid.rst:95
msgid ""
"A tuple of the six integer fields of the UUID, which are also available as "
"six individual attributes and two derived attributes:"
msgstr ""

#: ../Doc/library/uuid.rst:99
msgid "Field"
msgstr ""

#: ../Doc/library/uuid.rst:99
msgid "Meaning"
msgstr "Signification"

#: ../Doc/library/uuid.rst:101
msgid ":attr:`time_low`"
msgstr ":attr:`time_low`"

#: ../Doc/library/uuid.rst:101
msgid "the first 32 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:103
msgid ":attr:`time_mid`"
msgstr ":attr:`time_mid`"

#: ../Doc/library/uuid.rst:103 ../Doc/library/uuid.rst:105
msgid "the next 16 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:105
msgid ":attr:`time_hi_version`"
msgstr ":attr:`time_hi_version`"

#: ../Doc/library/uuid.rst:107
msgid ":attr:`clock_seq_hi_variant`"
msgstr ":attr:`clock_seq_hi_variant`"

#: ../Doc/library/uuid.rst:107 ../Doc/library/uuid.rst:109
msgid "the next 8 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:109
msgid ":attr:`clock_seq_low`"
msgstr ":attr:`clock_seq_low`"

#: ../Doc/library/uuid.rst:111
msgid ":attr:`node`"
msgstr ":attr:`node`"

#: ../Doc/library/uuid.rst:111
msgid "the last 48 bits of the UUID"
msgstr ""

#: ../Doc/library/uuid.rst:113
msgid ":attr:`time`"
msgstr ":attr:`time`"

#: ../Doc/library/uuid.rst:113
msgid "the 60-bit timestamp"
msgstr ""

#: ../Doc/library/uuid.rst:115
msgid ":attr:`clock_seq`"
msgstr ":attr:`clock_seq`"

#: ../Doc/library/uuid.rst:115
msgid "the 14-bit sequence number"
msgstr ""

#: ../Doc/library/uuid.rst:121
msgid "The UUID as a 32-character hexadecimal string."
msgstr ""

#: ../Doc/library/uuid.rst:126
msgid "The UUID as a 128-bit integer."
msgstr ""

#: ../Doc/library/uuid.rst:131
msgid "The UUID as a URN as specified in :rfc:`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:136
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the constants :const:`RESERVED_NCS`, :const:`RFC_4122`, :"
"const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""

#: ../Doc/library/uuid.rst:143
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is :"
"const:`RFC_4122`)."
msgstr ""

#: ../Doc/library/uuid.rst:148
msgid ""
"An enumeration of :class:`SafeUUID` which indicates whether the platform "
"generated the UUID in a multiprocessing-safe way."
msgstr ""

#: ../Doc/library/uuid.rst:153
#, fuzzy
msgid "The :mod:`uuid` module defines the following functions:"
msgstr "Le module :mod:`uu` définit les fonctions suivantes :"

#: ../Doc/library/uuid.rst:158
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time this "
"runs, it may launch a separate program, which could be quite slow.  If all "
"attempts to obtain the hardware address fail, we choose a random 48-bit "
"number with the multicast bit (least significant bit of the first octet) set "
"to 1 as recommended in :rfc:`4122`.  \"Hardware address\" means the MAC "
"address of a network interface.  On a machine with multiple network "
"interfaces, universally administered MAC addresses (i.e. where the second "
"least significant bit of the first octet is *unset*) will be preferred over "
"locally administered MAC addresses, but with no other ordering guarantees."
msgstr ""

#: ../Doc/library/uuid.rst:168
msgid ""
"Universally administered MAC addresses are preferred over locally "
"administered MAC addresses, since the former are guaranteed to be globally "
"unique, while the latter are not."
msgstr ""

#: ../Doc/library/uuid.rst:178
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If "
"*node* is not given, :func:`getnode` is used to obtain the hardware address. "
"If *clock_seq* is given, it is used as the sequence number; otherwise a "
"random 14-bit sequence number is chosen."
msgstr ""

#: ../Doc/library/uuid.rst:188
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is a "
"UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:196
msgid "Generate a random UUID."
msgstr ""

#: ../Doc/library/uuid.rst:203
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which is "
"a UUID) and a name (which is a string)."
msgstr ""

#: ../Doc/library/uuid.rst:208
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for use "
"with :func:`uuid3` or :func:`uuid5`."
msgstr ""

#: ../Doc/library/uuid.rst:214
msgid ""
"When this namespace is specified, the *name* string is a fully-qualified "
"domain name."
msgstr ""

#: ../Doc/library/uuid.rst:220
msgid "When this namespace is specified, the *name* string is a URL."
msgstr ""

#: ../Doc/library/uuid.rst:225
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr ""

#: ../Doc/library/uuid.rst:230
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER or "
"a text output format."
msgstr ""

#: ../Doc/library/uuid.rst:233
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`variant` attribute:"
msgstr ""

#: ../Doc/library/uuid.rst:239
msgid "Reserved for NCS compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:244
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr ""

#: ../Doc/library/uuid.rst:249
msgid "Reserved for Microsoft compatibility."
msgstr ""

#: ../Doc/library/uuid.rst:254
msgid "Reserved for future definition."
msgstr ""

#: ../Doc/library/uuid.rst:260
msgid ":rfc:`4122` - A Universally Unique IDentifier (UUID) URN Namespace"
msgstr ""

#: ../Doc/library/uuid.rst:260
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, the "
"internal format of UUIDs, and methods of generating UUIDs."
msgstr ""

#: ../Doc/library/uuid.rst:267
msgid "Example"
msgstr "Exemple"

#: ../Doc/library/uuid.rst:269
#, fuzzy
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr ""
"Voici quelques exemples classiques d'utilisation du module :mod:`tempfile` ::"
