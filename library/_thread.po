# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: 2019-12-13 12:43+0100\n"
"Last-Translator: Inebhis <inebhis@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../Doc/library/_thread.rst:2
msgid ":mod:`_thread` --- Low-level threading API"
msgstr ":mod:`_thread` — API bas niveau de gestion de fils d'exécution"

#: ../Doc/library/_thread.rst:15
msgid ""
"This module provides low-level primitives for working with multiple threads "
"(also called :dfn:`light-weight processes` or :dfn:`tasks`) --- multiple "
"threads of control sharing their global data space.  For synchronization, "
"simple locks (also called :dfn:`mutexes` or :dfn:`binary semaphores`) are "
"provided. The :mod:`threading` module provides an easier to use and higher-"
"level threading API built on top of this module."
msgstr ""
"Ce module fournit les primitives de bas niveau pour travailler avec de "
"multiples fils d'exécution (aussi appelés :dfn:`light-weight processes` ou :"
"dfn:`tasks`) — plusieurs fils d'exécution de contrôle partagent leur espace "
"de données global. Pour la synchronisation, de simples verrous (aussi "
"appelés des :dfn:`mutexes` ou des :dfn:`binary semaphores`) sont fournis. Le "
"module :mod:`threading` fournit une API de fils d'exécution de haut niveau, "
"plus facile à utiliser et construite à partir de ce module."

#: ../Doc/library/_thread.rst:26
msgid "This module used to be optional, it is now always available."
msgstr "Ce module était optionnel, il est maintenant toujours disponible."

#: ../Doc/library/_thread.rst:29
msgid "This module defines the following constants and functions:"
msgstr "Ce module définit les constantes et les fonctions suivantes :"

#: ../Doc/library/_thread.rst:33
msgid "Raised on thread-specific errors."
msgstr "Levée lors d'erreurs spécifiques aux fils d'exécution."

#: ../Doc/library/_thread.rst:35
msgid "This is now a synonym of the built-in :exc:`RuntimeError`."
msgstr ""
"Ceci est à présent un synonyme de l'exception native :exc:`RuntimeError`."

#: ../Doc/library/_thread.rst:41
msgid "This is the type of lock objects."
msgstr "C'est le type d'objets verrous."

#: ../Doc/library/_thread.rst:46
msgid ""
"Start a new thread and return its identifier.  The thread executes the "
"function *function* with the argument list *args* (which must be a tuple). "
"The optional *kwargs* argument specifies a dictionary of keyword arguments."
msgstr ""
"Démarre un nouveau fils d'exécution et renvoie son identifiant. Ce fil "
"d'exécution exécute la fonction *function* avec la liste d'arguments *args* "
"(qui doit être un *tuple*). L'argument optionnel *kwargs* spécifie un "
"dictionnaire d'arguments de mots clés."

#: ../Doc/library/_thread.rst:50
msgid "When the function returns, the thread silently exits."
msgstr "Au renvoi de la fonction, le fil d'exécution quitte silencieusement."

#: ../Doc/library/_thread.rst:52
msgid ""
"When the function terminates with an unhandled exception, :func:`sys."
"unraisablehook` is called to handle the exception. The *object* attribute of "
"the hook argument is *function*. By default, a stack trace is printed and "
"then the thread exits (but other threads continue to run)."
msgstr ""
"Lorsque la fonction se termine avec une exception non gérée, :func:`sys."
"unraisablehook` est appelée pour gérer cette dernière. L'attribut *object* "
"de l'argument *hook* est *function*. Par défaut, la trace d'appels est "
"affichée puis le fil d'exécution se termine (mais les autres fils "
"d'exécution continuent de s'exécuter)."

#: ../Doc/library/_thread.rst:57
msgid ""
"When the function raises a :exc:`SystemExit` exception, it is silently "
"ignored."
msgstr ""
"Lorsque la fonction lève l'exception :exc:`SystemExit`, elle est ignorée "
"silencieusement."

#: ../Doc/library/_thread.rst:60
msgid ":func:`sys.unraisablehook` is now used to handle unhandled exceptions."
msgstr ""
":func:`sys.unraisablehook` est maintenant utilisée pour s'occuper des "
"exceptions non gérées."

#: ../Doc/library/_thread.rst:66
msgid ""
"Simulate the effect of a :data:`signal.SIGINT` signal arriving in the main "
"thread. A thread can use this function to interrupt the main thread."
msgstr ""
"Simule l'effet d'un signal :data:`signal.SIGINT` arrivant au fil d'exécution "
"principal. Un fil d'exécution peut utiliser cette fonction pour interrompre "
"le fil d'exécution principal."

#: ../Doc/library/_thread.rst:69
msgid ""
"If :data:`signal.SIGINT` isn't handled by Python (it was set to :data:"
"`signal.SIG_DFL` or :data:`signal.SIG_IGN`), this function does nothing."
msgstr ""
"Si le signal :data:`signal.SIGINT` n'est pas géré par Python (s'il a été "
"paramétré à :data:`signal.SIG_DFL` ou :data:`signal.SIG_IGN`), cette "
"fonction ne fait rien."

#: ../Doc/library/_thread.rst:76
msgid ""
"Raise the :exc:`SystemExit` exception.  When not caught, this will cause the "
"thread to exit silently."
msgstr ""
"Lève une exception :exc:`SystemExit`. Quand elle n'est pas interceptée, le "
"fil d'exécution se terminera silencieusement."

#: ../Doc/library/_thread.rst:90
msgid ""
"Return a new lock object.  Methods of locks are described below.  The lock "
"is initially unlocked."
msgstr ""
"Renvoie un nouveau verrou. Les méthodes des verrous sont décrites ci-"
"dessous. Le verrou est initialement déverrouillé."

#: ../Doc/library/_thread.rst:96
msgid ""
"Return the 'thread identifier' of the current thread.  This is a nonzero "
"integer.  Its value has no direct meaning; it is intended as a magic cookie "
"to be used e.g. to index a dictionary of thread-specific data.  Thread "
"identifiers may be recycled when a thread exits and another thread is "
"created."
msgstr ""
"Renvoie l'« identifiant de fil »  du fil d'exécution courant. C'est un "
"entier non nul. Sa valeur n'a pas de signification directe ; il est destiné "
"à être utilisé comme *cookie* magique, par exemple pour indexer un "
"dictionnaire de données pour chaque fil. Les identifiants de fils peuvent "
"être recyclés lorsqu'un fil d'exécution se termine et qu'un autre fil est "
"créé."

#: ../Doc/library/_thread.rst:104
msgid ""
"Return the native integral Thread ID of the current thread assigned by the "
"kernel. This is a non-negative integer. Its value may be used to uniquely "
"identify this particular thread system-wide (until the thread terminates, "
"after which the value may be recycled by the OS)."
msgstr ""
"Renvoie l'identifiant natif complet assigné par le noyau du fil d'exécution "
"actuel. C'est un entier non négatif. Sa valeur peut uniquement être utilisée "
"pour identifier ce fil d'exécution à l'échelle du système (jusqu'à ce que le "
"fil d'exécution se termine, après quoi la valeur peut être recyclée par le "
"système d'exploitation)."

#: ../Doc/library/_thread.rst:110
msgid ""
":ref:`Availability <availability>`: Windows, FreeBSD, Linux, macOS, OpenBSD, "
"NetBSD, AIX."
msgstr ""
":ref:`Disponibilité <availability>` : Windows, FreeBSD, Linux, macOS, "
"OpenBSD, NetBSD, AIX."

#: ../Doc/library/_thread.rst:116
msgid ""
"Return the thread stack size used when creating new threads.  The optional "
"*size* argument specifies the stack size to be used for subsequently created "
"threads, and must be 0 (use platform or configured default) or a positive "
"integer value of at least 32,768 (32 KiB). If *size* is not specified, 0 is "
"used.  If changing the thread stack size is unsupported, a :exc:"
"`RuntimeError` is raised.  If the specified stack size is invalid, a :exc:"
"`ValueError` is raised and the stack size is unmodified.  32 KiB is "
"currently the minimum supported stack size value to guarantee sufficient "
"stack space for the interpreter itself.  Note that some platforms may have "
"particular restrictions on values for the stack size, such as requiring a "
"minimum stack size > 32 KiB or requiring allocation in multiples of the "
"system memory page size - platform documentation should be referred to for "
"more information (4 KiB pages are common; using multiples of 4096 for the "
"stack size is the suggested approach in the absence of more specific "
"information)."
msgstr ""
"Renvoie la taille de la pile d'exécution utilisée lors de la création de "
"nouveaux fils d'exécution. L'argument optionnel *size* spécifie la taille de "
"pile à utiliser pour les fils créés ultérieurement, et doit être à 0 (pour "
"utiliser la taille de la plate-forme ou la valeur configurée par défaut) ou "
"un entier positif supérieur ou égal à 32 768 (32 Kio). Si *size* n'est pas "
"spécifié, 0 est utilisé. Si la modification de la taille de la pile de fils "
"n'est pas prise en charge, une exception :exc:`RuntimeError` est levée. Si "
"la taille de la pile spécifiée n'est pas valide, une exception :exc:"
"`ValueError` est levée et la taille de la pile n'est pas modifiée. 32 Kio "
"est actuellement la valeur minimale de taille de la pile prise en charge "
"pour garantir un espace de pile suffisant pour l'interpréteur lui-même. "
"Notez que certaines plates-formes peuvent avoir des restrictions "
"particulières sur les valeurs de taille de la pile, telles que l'exigence "
"d'une taille de pile minimale > 32 Kio ou d'une allocation en multiples de "
"la taille de page de la mémoire du système – la documentation de la plate-"
"forme devrait être consultée pour plus d'informations (4 Kio sont courants ; "
"en l'absence de renseignements plus spécifiques, l'approche suggérée est "
"l'utilisation de multiples de 4 096 octets pour la taille de la pile)."

#: ../Doc/library/_thread.rst:131
msgid ""
":ref:`Availability <availability>`: Windows, systems with POSIX threads."
msgstr ""
":ref:`Disponibilité <availability>` : Windows et systèmes gérant les fils "
"d'exécution POSIX."

#: ../Doc/library/_thread.rst:136
msgid ""
"The maximum value allowed for the *timeout* parameter of :meth:`Lock."
"acquire`. Specifying a timeout greater than this value will raise an :exc:"
"`OverflowError`."
msgstr ""
"La valeur maximale autorisée pour le  paramètre *timeout* de la méthode :"
"meth:`Lock.acquire`. Préciser un délai d'attente supérieur à cette valeur "
"lève une exception :exc:`OverflowError`."

#: ../Doc/library/_thread.rst:143
msgid "Lock objects have the following methods:"
msgstr "Les verrous ont les méthodes suivantes :"

#: ../Doc/library/_thread.rst:148
msgid ""
"Without any optional argument, this method acquires the lock "
"unconditionally, if necessary waiting until it is released by another thread "
"(only one thread at a time can acquire a lock --- that's their reason for "
"existence)."
msgstr ""
"Sans aucun argument optionnel, cette méthode acquiert le verrou "
"inconditionnellement, et si nécessaire attend jusqu'à ce qu'il soit relâché "
"par un autre fil d'exécution (un seul fil d'exécution à la fois peut "
"acquérir le verrou — c'est leur raison d'être)."

#: ../Doc/library/_thread.rst:152
msgid ""
"If the integer *waitflag* argument is present, the action depends on its "
"value: if it is zero, the lock is only acquired if it can be acquired "
"immediately without waiting, while if it is nonzero, the lock is acquired "
"unconditionally as above."
msgstr ""
"Si l'argument *waitflag*, un entier, est présent, l'action dépend de sa "
"valeur : si elle est de zéro, le verrou est seulement acquis s'il peut être "
"acquis immédiatement, sans attendre, sinon le verrou est acquis "
"inconditionnellement comme ci-dessus."

#: ../Doc/library/_thread.rst:157
msgid ""
"If the floating-point *timeout* argument is present and positive, it "
"specifies the maximum wait time in seconds before returning.  A negative "
"*timeout* argument specifies an unbounded wait.  You cannot specify a "
"*timeout* if *waitflag* is zero."
msgstr ""
"Si l'argument *timeout*, en virgule flottante, est présent et positif, il "
"spécifie le temps d'attente maximum en secondes avant de renvoyer. Un "
"argument *timeout* négatif spécifie une attente illimitée. Vous ne pouvez "
"pas spécifier un *timeout* si *waitflag* est à zéro."

#: ../Doc/library/_thread.rst:162
msgid ""
"The return value is ``True`` if the lock is acquired successfully, ``False`` "
"if not."
msgstr ""
"La valeur renvoyée est ``True`` si le verrou est acquis avec succès, sinon "
"``False``."

#: ../Doc/library/_thread.rst:165
msgid "The *timeout* parameter is new."
msgstr "Le paramètre *timeout* est nouveau."

#: ../Doc/library/_thread.rst:168
msgid "Lock acquires can now be interrupted by signals on POSIX."
msgstr ""
"Le verrou acquis peut maintenant être interrompu par des signaux sur POSIX."

#: ../Doc/library/_thread.rst:174
msgid ""
"Releases the lock.  The lock must have been acquired earlier, but not "
"necessarily by the same thread."
msgstr ""
"Relâche le verrou. Le verrou doit avoir été acquis plus tôt, mais pas "
"nécessairement par le même fil d'exécution."

#: ../Doc/library/_thread.rst:180
msgid ""
"Return the status of the lock: ``True`` if it has been acquired by some "
"thread, ``False`` if not."
msgstr ""
"Renvoie le statut du verrou : ``True`` s'il a été acquis par certains fils "
"d'exécution, sinon ``False``."

#: ../Doc/library/_thread.rst:183
msgid ""
"In addition to these methods, lock objects can also be used via the :keyword:"
"`with` statement, e.g.::"
msgstr ""
"En plus de ces méthodes, les objets verrous peuvent aussi être utilisés via "
"l'instruction :keyword:`with`, e.g. ::"

#: ../Doc/library/_thread.rst:193
msgid "**Caveats:**"
msgstr "**Avertissements :**"

#: ../Doc/library/_thread.rst:197
msgid ""
"Threads interact strangely with interrupts: the :exc:`KeyboardInterrupt` "
"exception will be received by an arbitrary thread.  (When the :mod:`signal` "
"module is available, interrupts always go to the main thread.)"
msgstr ""
"Les fils d'exécution interagissent étrangement avec les interruptions : "
"l'exception :exc:`KeyboardInterrupt` sera reçue par un fil d'exécution "
"arbitraire. (Quand le module :mod:`signal` est disponible, les interruptions "
"vont toujours au fil d'exécution principal)."

#: ../Doc/library/_thread.rst:201
msgid ""
"Calling :func:`sys.exit` or raising the :exc:`SystemExit` exception is "
"equivalent to calling :func:`_thread.exit`."
msgstr ""
"Appeler la fonction :func:`sys.exit` ou lever l'exception :exc:`SystemExit` "
"est équivalent à appeler la fonction :func:`_thread.exit`."

#: ../Doc/library/_thread.rst:204
msgid ""
"It is not possible to interrupt the :meth:`acquire` method on a lock --- "
"the :exc:`KeyboardInterrupt` exception will happen after the lock has been "
"acquired."
msgstr ""
"Il n'est pas possible d'interrompre la méthode :meth:`acquire` sur un verrou "
"— l'exception :exc:`KeyboardInterrupt` surviendra après que le verrou a été "
"acquis."

#: ../Doc/library/_thread.rst:207
msgid ""
"When the main thread exits, it is system defined whether the other threads "
"survive.  On most systems, they are killed without executing :keyword:"
"`try` ... :keyword:`finally` clauses or executing object destructors."
msgstr ""
"Quand le fil d'exécution principal s'arrête, il est défini par le système si "
"les autres fils d'exécution survivent. Sur beaucoup de systèmes, ils sont "
"tués sans l'exécution des clauses :keyword:`try`… :keyword:`finally` ou "
"l'exécution des destructeurs d'objets."

#: ../Doc/library/_thread.rst:212
msgid ""
"When the main thread exits, it does not do any of its usual cleanup (except "
"that :keyword:`try` ... :keyword:`finally` clauses are honored), and the "
"standard I/O files are not flushed."
msgstr ""
"Quand le fil d'exécution principal s'arrête, il ne fait pas son nettoyage "
"habituel (excepté que les clauses :keyword:`try`… :keyword:`finally` sont "
"honorées) et les fichiers d'entrée/sortie standards ne sont pas nettoyés."
