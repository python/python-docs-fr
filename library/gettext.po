# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: 2020-01-13 17:57+0100\n"
"Last-Translator: Jules Lasne <jules.lasne@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../Doc/library/gettext.rst:2
msgid ":mod:`gettext` --- Multilingual internationalization services"
msgstr ":mod:`gettext` — Services d'internationalisation multilingue"

#: ../Doc/library/gettext.rst:10
msgid "**Source code:** :source:`Lib/gettext.py`"
msgstr "**Code source :** :source:`Lib/gettext.py`"

#: ../Doc/library/gettext.rst:14
msgid ""
"The :mod:`gettext` module provides internationalization (I18N) and "
"localization (L10N) services for your Python modules and applications. It "
"supports both the GNU :program:`gettext` message catalog API and a higher "
"level, class-based API that may be more appropriate for Python files.  The "
"interface described below allows you to write your module and application "
"messages in one natural language, and provide a catalog of translated "
"messages for running under different natural languages."
msgstr ""
"Le module :mod:`gettext` fournit un service d'internationalisation (*I18N*) "
"et de localisation linguistique (*L10N*) pour vos modules et applications "
"Python. Il est compatible avec l'API du catalogue de messages GNU :program:"
"`gettext` et à un plus haut niveau, avec l'API basée sur les classes qui "
"serait peut-être plus adaptée aux fichiers Python. L'interface décrite ci-"
"dessous vous permet d'écrire les textes de vos modules et applications dans "
"une langue naturelle, puis de fournir un catalogue de traductions pour les "
"lancer ensuite dans d'autres langues naturelles."

#: ../Doc/library/gettext.rst:22
msgid ""
"Some hints on localizing your Python modules and applications are also given."
msgstr ""
"Quelques astuces sur la localisation de vos modules et applications Python "
"sont également données."

#: ../Doc/library/gettext.rst:26
msgid "GNU :program:`gettext` API"
msgstr "API GNU :program:`gettext`"

#: ../Doc/library/gettext.rst:28
msgid ""
"The :mod:`gettext` module defines the following API, which is very similar "
"to the GNU :program:`gettext` API.  If you use this API you will affect the "
"translation of your entire application globally.  Often this is what you "
"want if your application is monolingual, with the choice of language "
"dependent on the locale of your user.  If you are localizing a Python "
"module, or if your application needs to switch languages on the fly, you "
"probably want to use the class-based API instead."
msgstr ""
"Le module :mod:`gettext` définit l'API suivante, qui est très proche de "
"l'API de GNU :program:`gettext`.  Si vous utilisez cette API, cela affectera "
"la traduction de toute votre application.  C'est souvent le comportement "
"attendu si votre application est monolingue, avec le choix de la langue qui "
"dépend des paramètres linguistiques de l'utilisateur.  Si vous localisez un "
"module Python ou si votre application a besoin de changer de langue à la "
"volée, il est plus judicieux d'utiliser l'API basée sur des classes."

#: ../Doc/library/gettext.rst:39
msgid ""
"Bind the *domain* to the locale directory *localedir*.  More concretely, :"
"mod:`gettext` will look for binary :file:`.mo` files for the given domain "
"using the path (on Unix): :file:`{localedir}/{language}/LC_MESSAGES/{domain}."
"mo`, where *language* is searched for in the environment variables :envvar:"
"`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES`, and :envvar:`LANG` "
"respectively."
msgstr ""
"Lie *domain* au répertoire *localedir* des localisations. Plus "
"spécifiquement, :mod:`gettext` va chercher les fichiers binaires :file:`.mo` "
"pour un domaine donné, en utilisant le chemin suivant (sous Unix) : :file:"
"`{localedir}/{language}/LC_MESSAGES/{domain}.mo`, où *language* est "
"recherché dans l'une des variables d'environnement suivantes : :envvar:"
"`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES` et :envvar:`LANG`."

#: ../Doc/library/gettext.rst:45
msgid ""
"If *localedir* is omitted or ``None``, then the current binding for *domain* "
"is returned. [#]_"
msgstr ""
"Si *localedir* n'est pas renseigné ou vaut ``None``, alors le lien actuel de "
"*domain* est renvoyé. [#]_"

#: ../Doc/library/gettext.rst:51
msgid ""
"Bind the *domain* to *codeset*, changing the encoding of byte strings "
"returned by the :func:`lgettext`, :func:`ldgettext`, :func:`lngettext` and :"
"func:`ldngettext` functions. If *codeset* is omitted, then the current "
"binding is returned."
msgstr ""
"Lie *domain* à *codeset*, en changeant l'encodage des chaînes d'octets "
"retournées par les fonctions :func:`lgettext`, :func:`ldgettext`, :func:"
"`lngettext` et :func:`ldngettext`.  Si *codeset* n'est pas renseigné, alors "
"le lien actuel est renvoyé."

#: ../Doc/library/gettext.rst:61
msgid ""
"Change or query the current global domain.  If *domain* is ``None``, then "
"the current global domain is returned, otherwise the global domain is set to "
"*domain*, which is returned."
msgstr ""
"Change ou interroge le domaine global actuel.  Si *domain* vaut ``None``, "
"alors le domaine global actuel est renvoyé.  Sinon, le domaine global est "
"positionné à *domain*, puis renvoyé."

#: ../Doc/library/gettext.rst:69
msgid ""
"Return the localized translation of *message*, based on the current global "
"domain, language, and locale directory.  This function is usually aliased "
"as :func:`_` in the local namespace (see examples below)."
msgstr ""
"Renvoie la traduction localisée de *message*, en se basant sur le domaine "
"global actuel, la langue et le répertoire des localisations. Cette fonction "
"est typiquement renommée :func:`_` dans le namespace courant (voir les "
"exemples ci-dessous)."

#: ../Doc/library/gettext.rst:76
msgid ""
"Like :func:`.gettext`, but look the message up in the specified *domain*."
msgstr ""
"Comme :func:`gettext`, mais cherche le message dans le domaine spécifié."

#: ../Doc/library/gettext.rst:81
msgid ""
"Like :func:`.gettext`, but consider plural forms. If a translation is found, "
"apply the plural formula to *n*, and return the resulting message (some "
"languages have more than two plural forms). If no translation is found, "
"return *singular* if *n* is 1; return *plural* otherwise."
msgstr ""
"Comme :func:`gettext`, mais prend en compte les formes au pluriel.  Si une "
"traduction a été trouvée, utilise la formule pour trouver le pluriel à *n* "
"et renvoie le message généré (quelques langues ont plus de deux formes au "
"pluriel).  Si aucune traduction n'a été trouvée, renvoie *singular* si *n* "
"vaut 1, *plural* sinon."

#: ../Doc/library/gettext.rst:86
msgid ""
"The Plural formula is taken from the catalog header. It is a C or Python "
"expression that has a free variable *n*; the expression evaluates to the "
"index of the plural in the catalog. See `the GNU gettext documentation "
"<https://www.gnu.org/software/gettext/manual/gettext.html>`__ for the "
"precise syntax to be used in :file:`.po` files and the formulas for a "
"variety of languages."
msgstr ""
"La formule pour trouver le pluriel est récupérée dans l'entête du "
"catalogue.  C'est une expression en C ou en Python qui a une variable libre "
"*n* et qui évalue l'index du pluriel dans le catalogue.  Voir `la "
"documentation de GNU gettext <https://www.gnu.org/software/gettext/manual/"
"gettext.html>`__ pour la syntaxe précise à utiliser dans les fichiers :file:"
"`.po` et pour les formules dans différents langues."

#: ../Doc/library/gettext.rst:96
msgid ""
"Like :func:`ngettext`, but look the message up in the specified *domain*."
msgstr ""
"Comme :func:`ngettext`, mais cherche le message dans le domaine spécifié."

#: ../Doc/library/gettext.rst:104
msgid ""
"Similar to the corresponding functions without the ``p`` in the prefix (that "
"is, :func:`gettext`, :func:`dgettext`, :func:`ngettext`, :func:`dngettext`), "
"but the translation is restricted to the given message *context*."
msgstr ""
"Semblable aux fonctions correspondantes sans le ``p`` dans le préfixe (c'est-"
"à-dire :func:`gettext`, :func:`dgettext`, :func:`ngettext` et :func:"
"`dngettext`), mais la traduction est limitée au *context* du message donné."

#: ../Doc/library/gettext.rst:116
msgid ""
"Equivalent to the corresponding functions without the ``l`` prefix (:func:`."
"gettext`, :func:`dgettext`, :func:`ngettext` and :func:`dngettext`), but the "
"translation is returned as a byte string encoded in the preferred system "
"encoding if no other encoding was explicitly set with :func:"
"`bind_textdomain_codeset`."
msgstr ""
"Équivalent aux fonctions correspondantes non préfixées par ``l`` (:func:`."
"gettext`, :func:`dgettext`, :func:`ngettext` et :func:`dngettext`), mais la "
"traduction est retournée en tant que chaîne d'octets, encodée avec "
"l'encodage du système si aucun autre n'a été explicitement défini avec :func:"
"`bind_textdomain_codeset`."

#: ../Doc/library/gettext.rst:124
msgid ""
"These functions should be avoided in Python 3, because they return encoded "
"bytes.  It's much better to use alternatives which return Unicode strings "
"instead, since most Python applications will want to manipulate human "
"readable text as strings instead of bytes.  Further, it's possible that you "
"may get unexpected Unicode-related exceptions if there are encoding problems "
"with the translated strings."
msgstr ""
"Ces fonctions sont à éviter en Python 3 car elles renvoient des octets "
"encodés. Il est préférable d'utiliser des alternatives qui renvoient de "
"l'Unicode, puisque beaucoup d'applications Python voudront manipuler du "
"texte lisible par des humains plutôt que des octets. En outre, il est "
"possible que vous obteniez des exceptions non prévues liées à Unicode s'il y "
"a des soucis d'encodage avec les chaînes de caractères traduites."

#: ../Doc/library/gettext.rst:134
msgid ""
"Note that GNU :program:`gettext` also defines a :func:`dcgettext` method, "
"but this was deemed not useful and so it is currently unimplemented."
msgstr ""
"Notez que GNU :program:`gettext` a aussi une méthode :func:`dcgettext`, mais "
"elle a été considérée comme inutile et donc actuellement marquée comme non "
"implémentée."

#: ../Doc/library/gettext.rst:137
msgid "Here's an example of typical usage for this API::"
msgstr "Voici un exemple classique d'utilisation de cette API ::"

#: ../Doc/library/gettext.rst:148
msgid "Class-based API"
msgstr "API basée sur les classes"

#: ../Doc/library/gettext.rst:150
msgid ""
"The class-based API of the :mod:`gettext` module gives you more flexibility "
"and greater convenience than the GNU :program:`gettext` API.  It is the "
"recommended way of localizing your Python applications and modules.  :mod:`!"
"gettext` defines a :class:`GNUTranslations` class which implements the "
"parsing of GNU :file:`.mo` format files, and has methods for returning "
"strings. Instances of this class can also install themselves in the built-in "
"namespace as the function :func:`_`."
msgstr ""
"L'API du module :mod:`gettext` basée sur les classes vous donne plus de "
"flexibilité et est plus pratique que l'API de GNU :program:`gettext`. Son "
"utilisation est recommandée pour localiser vos applications et modules "
"Python. :mod:`!gettext` définit une classe :class:`GNUTranslations` qui "
"analyse syntaxiquement les fichiers au format GNU :file:`.mo`, et qui "
"possède des méthodes pour renvoyer des chaînes de caractères. Les instances "
"de cette classe \"translations\" peuvent également s'installer dans l'espace "
"de nommage natif en tant que fonction :func:`_`."

#: ../Doc/library/gettext.rst:160
msgid ""
"This function implements the standard :file:`.mo` file search algorithm.  It "
"takes a *domain*, identical to what :func:`textdomain` takes.  Optional "
"*localedir* is as in :func:`bindtextdomain`. Optional *languages* is a list "
"of strings, where each string is a language code."
msgstr ""
"Cette fonction implémente l'algorithme standard de recherche de fichier :"
"file:`mo`. Il prend en entrée un *domain*, tout comme la fonction :func:"
"`textdomain`. Le paramètre optionnel *localedir* est le même que celui de :"
"func:`bindtextdomain`. Le paramètre optionnel *langages* est une liste de "
"chaînes de caractères correspondants au code d'une langue."

#: ../Doc/library/gettext.rst:165
msgid ""
"If *localedir* is not given, then the default system locale directory is "
"used. [#]_  If *languages* is not given, then the following environment "
"variables are searched: :envvar:`LANGUAGE`, :envvar:`LC_ALL`, :envvar:"
"`LC_MESSAGES`, and :envvar:`LANG`.  The first one returning a non-empty "
"value is used for the *languages* variable. The environment variables should "
"contain a colon separated list of languages, which will be split on the "
"colon to produce the expected list of language code strings."
msgstr ""
"Si *localedir* n'est pas renseigné, alors le répertoire de la locale par "
"défaut du système est utilisé. [#]_  Si *languages* n'est pas renseigné, "
"alors les variables d'environnement suivantes sont utilisées : :envvar:"
"`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES` et :envvar:`LANG`.  La "
"première à renvoyer une valeur non vide est alors utilisée pour "
"*languages*.  Ces variables d'environnement doivent contenir une liste de "
"langues, séparées par des deux-points, qui sera utilisée pour générer la "
"liste des codes de langues attendue."

#: ../Doc/library/gettext.rst:173
msgid ""
":func:`find` then expands and normalizes the languages, and then iterates "
"through them, searching for an existing file built of these components:"
msgstr ""
"Recherche avec :func:`find`, découvre et normalise les langues, puis itère "
"sur la liste obtenue afin de trouver un fichier de traduction existant et "
"correspondant :"

#: ../Doc/library/gettext.rst:176
msgid ":file:`{localedir}/{language}/LC_MESSAGES/{domain}.mo`"
msgstr ":file:`{localedir}/{language}/LC_MESSAGES/{domain}.mo`"

#: ../Doc/library/gettext.rst:178
msgid ""
"The first such file name that exists is returned by :func:`find`. If no such "
"file is found, then ``None`` is returned. If *all* is given, it returns a "
"list of all file names, in the order in which they appear in the languages "
"list or the environment variables."
msgstr ""
"Le premier nom de fichier trouvé est renvoyé par :func:`find`.  Si aucun "
"fichier n'a été trouvé, alors `None` est renvoyé.  Si *all* est vrai, est "
"renvoyée la liste de tous les noms de fichiers, dans l'ordre dans lequel ils "
"apparaissent dans *languages* ou dans les variables d'environnement."

#: ../Doc/library/gettext.rst:186
msgid ""
"Return a :class:`*Translations` instance based on the *domain*, *localedir*, "
"and *languages*, which are first passed to :func:`find` to get a list of the "
"associated :file:`.mo` file paths.  Instances with identical :file:`.mo` "
"file names are cached.  The actual class instantiated is *class_* if "
"provided, otherwise :class:`GNUTranslations`.  The class's constructor must "
"take a single :term:`file object` argument.  If provided, *codeset* will "
"change the charset used to encode translated strings in the :meth:"
"`~NullTranslations.lgettext` and :meth:`~NullTranslations.lngettext` methods."
msgstr ""
"Renvoie une instance de la classe :class:`*Translations` en se basant sur "
"*domain*, *localedir* et *languages*, qui sont d'abord passés en argument "
"de :func:`find` afin d'obtenir une liste de chemin des fichiers :file:`.mo` "
"associés. Les instances avec des noms de fichiers :file:`.mo` identiques "
"sont mises en cache. La classe réellement instanciée est soit *class_* si "
"renseigné, soit une classe :class:`GNUTranslations`. Le constructeur de "
"cette classe doit prendre en argument un seul :term:`file object`. Si "
"renseigné, *codeset* modifiera le jeu de caractères utilisé pour encoder les "
"chaînes de caractères traduites, dans les méthodes :meth:`~NullTranslations."
"lgettext` et :meth:`~NullTranslations.lngettext`."

#: ../Doc/library/gettext.rst:196
msgid ""
"If multiple files are found, later files are used as fallbacks for earlier "
"ones. To allow setting the fallback, :func:`copy.copy` is used to clone each "
"translation object from the cache; the actual instance data is still shared "
"with the cache."
msgstr ""
"Si plusieurs fichiers ont été trouvés, les derniers sont utilisés comme "
"substitut des premiers.  Pour rendre possible cette substitution, :func:"
"`copy.copy` est utilisé pour copier chaque objet traduit depuis le cache ; "
"les vraies données de l'instance étant toujours recopiées dans le cache."

#: ../Doc/library/gettext.rst:201
msgid ""
"If no :file:`.mo` file is found, this function raises :exc:`OSError` if "
"*fallback* is false (which is the default), and returns a :class:"
"`NullTranslations` instance if *fallback* is true."
msgstr ""
"Si aucun fichier :file:`.mo` n'a été trouvé, soit *fallback* vaut *False* "
"(valeur par défaut) et une exception :exc:`OSError` est levée, soit "
"*fallback* vaut *True* et une instance :class:`NullTranslations` est "
"renvoyée."

#: ../Doc/library/gettext.rst:205
msgid ":exc:`IOError` used to be raised instead of :exc:`OSError`."
msgstr ""
"Avant, c'était l'exception :exc:`IOError` qui était levée, au lieu de :exc:"
"`OSError`."

#: ../Doc/library/gettext.rst:209 ../Doc/library/gettext.rst:232
msgid "The *codeset* parameter."
msgstr "Le paramètre *codeset*."

#: ../Doc/library/gettext.rst:214
msgid ""
"This installs the function :func:`_` in Python's builtins namespace, based "
"on *domain*, *localedir*, and *codeset* which are passed to the function :"
"func:`translation`."
msgstr ""
"Positionne la fonction :func:`_` dans l'espace de nommage natif de Python, "
"en se basant sur *domain*, *localedir* et *codeset*, qui sont passés en "
"argument de la fonction :func:`translation`."

#: ../Doc/library/gettext.rst:218
msgid ""
"For the *names* parameter, please see the description of the translation "
"object's :meth:`~NullTranslations.install` method."
msgstr ""
"Concernant le paramètre *names*, se référer à la description de la méthode :"
"meth:`~NullTranslations.install`."

#: ../Doc/library/gettext.rst:221
msgid ""
"As seen below, you usually mark the strings in your application that are "
"candidates for translation, by wrapping them in a call to the :func:`_` "
"function, like this::"
msgstr ""
"Habituellement, la fonction :func:`_` est appliquée aux chaînes de "
"caractères qui doivent être traduites comme suit ::"

#: ../Doc/library/gettext.rst:227
msgid ""
"For convenience, you want the :func:`_` function to be installed in Python's "
"builtins namespace, so it is easily accessible in all modules of your "
"application."
msgstr ""
"Pour plus de confort, il vaut mieux positionner la fonction :func:`_` dans "
"l'espace de nommage natif de Python pour la rendre plus accessible dans tous "
"les modules de votre application."

#: ../Doc/library/gettext.rst:236
msgid "The :class:`NullTranslations` class"
msgstr "La classe :class:`NullTranslations`"

#: ../Doc/library/gettext.rst:238
msgid ""
"Translation classes are what actually implement the translation of original "
"source file message strings to translated message strings. The base class "
"used by all translation classes is :class:`NullTranslations`; this provides "
"the basic interface you can use to write your own specialized translation "
"classes.  Here are the methods of :class:`!NullTranslations`:"
msgstr ""
"Les classes de traduction implémentent le fait de passer d'une chaîne de "
"caractères du fichier original à traduire à la traduction de celle-ci.  La "
"classe de base utilisée est :class:`NullTranslations`.  C'est l'interface de "
"base à utiliser lorsque vous souhaitez écrire vos propres classes "
"spécifiques à la traduction.  Voici les méthodes de :class:`!"
"NullTranslations` :"

#: ../Doc/library/gettext.rst:247
msgid ""
"Takes an optional :term:`file object` *fp*, which is ignored by the base "
"class. Initializes \"protected\" instance variables *_info* and *_charset* "
"which are set by derived classes, as well as *_fallback*, which is set "
"through :meth:`add_fallback`.  It then calls ``self._parse(fp)`` if *fp* is "
"not ``None``."
msgstr ""
"Prend un paramètre optionnel un :term:`file object` *fp*, qui est ignoré par "
"la classe de base.  Initialise les variables d'instance \"protégées\" "
"*_info* et *_chardet*, définies par des classes dérivées, tout comme "
"*_fallback* qui est définie au travers de :meth:`add_fallback`.  Puis "
"appelle ``self._parse(fp)`` si *fp* ne vaut pas ``None``."

#: ../Doc/library/gettext.rst:255
msgid ""
"No-op in the base class, this method takes file object *fp*, and reads the "
"data from the file, initializing its message catalog.  If you have an "
"unsupported message catalog file format, you should override this method to "
"parse your format."
msgstr ""
"Cette méthode, non exécutée dans la classe de base, prend en paramètre un "
"objet fichier *fp* et lit les données de ce dernier.  Si vous avez un "
"catalogue de messages dont le format n'est pas pris en charge, vous devriez "
"surcharger cette méthode pour analyser votre format."

#: ../Doc/library/gettext.rst:263
msgid ""
"Add *fallback* as the fallback object for the current translation object. A "
"translation object should consult the fallback if it cannot provide a "
"translation for a given message."
msgstr ""
"Ajoute *fallback* comme objet de substitution pour l'objet de traduction "
"courant.  Un objet de traduction devrait interroger cet objet de "
"substitution s'il ne peut fournir une traduction pour un message donné."

#: ../Doc/library/gettext.rst:270
msgid ""
"If a fallback has been set, forward :meth:`!gettext` to the fallback. "
"Otherwise, return *message*.  Overridden in derived classes."
msgstr ""
"Si un objet de substitution a été défini, transmet :meth:`!gettext` à celui-"
"ci.  Sinon, renvoie *message*.  Surchargé dans les classes dérivées."

#: ../Doc/library/gettext.rst:276
msgid ""
"If a fallback has been set, forward :meth:`!ngettext` to the fallback. "
"Otherwise, return *singular* if *n* is 1; return *plural* otherwise. "
"Overridden in derived classes."
msgstr ""
"Si un objet de substitution a été défini, transmet :meth:`!ngettext` à celui-"
"ci.  Sinon, renvoie *singular* si *n* vaut 1, *plural* sinon.  Surchargé "
"dans les classes dérivées."

#: ../Doc/library/gettext.rst:283
msgid ""
"If a fallback has been set, forward :meth:`pgettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""
"Si un objet de substitution a été défini, transmet :meth:`pgettext` à celui-"
"ci. Sinon, renvoie le message traduit. Surchargé dans les classes dérivées."

#: ../Doc/library/gettext.rst:291
msgid ""
"If a fallback has been set, forward :meth:`npgettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""
"Si un objet de substitution a été défini, transmet :meth:`npgettext` à celui-"
"ci. Sinon, renvoie le message traduit. Surchargé dans les classes dérivées."

#: ../Doc/library/gettext.rst:300
msgid ""
"Equivalent to :meth:`.gettext` and :meth:`.ngettext`, but the translation is "
"returned as a byte string encoded in the preferred system encoding if no "
"encoding was explicitly set with :meth:`set_output_charset`. Overridden in "
"derived classes."
msgstr ""
"Équivalent de :meth:`.gettext` et :meth:`.ngettext`, mais la traduction est "
"renvoyée sous la forme d'une chaîne d'octets, encodée avec l'encodage du "
"système si aucun autre n'a été défini avec :meth:`set_output_charset`.  "
"Surchargé dans les classes dérivées."

#: ../Doc/library/gettext.rst:307 ../Doc/library/gettext.rst:463
msgid ""
"These methods should be avoided in Python 3.  See the warning for the :func:"
"`lgettext` function."
msgstr ""
"L'utilisation de ces méthodes doivent être évitée en Python 3.  Voir "
"l'avertissement de la fonction :func:`lgettext`."

#: ../Doc/library/gettext.rst:315
msgid ""
"Return the \"protected\" :attr:`_info` variable, a dictionary containing the "
"metadata found in the message catalog file."
msgstr ""
"Renvoie l'attribut \"protégé\" :attr:`_info`, dictionnaire contenant les "
"métadonnées trouvées dans le fichier de catalogue de messages."

#: ../Doc/library/gettext.rst:321
msgid "Return the encoding of the message catalog file."
msgstr "Renvoie l'encodage du fichier du catalogue de messages."

#: ../Doc/library/gettext.rst:326
msgid ""
"Return the encoding used to return translated messages in :meth:`.lgettext` "
"and :meth:`.lngettext`."
msgstr ""
"Renvoie l'encodage utilisé par :meth:`.lgettext` et :meth:`.lngettext` pour "
"la traduction des messages."

#: ../Doc/library/gettext.rst:334
msgid "Change the encoding used to return translated messages."
msgstr "Modifie l'encodage utilisé pour la traduction des messages."

#: ../Doc/library/gettext.rst:341
msgid ""
"This method installs :meth:`.gettext` into the built-in namespace, binding "
"it to ``_``."
msgstr ""
"Cette méthode positionne :meth:`.gettext` dans l'espace de nommage natif, en "
"le liant à ``_``."

#: ../Doc/library/gettext.rst:344
msgid ""
"If the *names* parameter is given, it must be a sequence containing the "
"names of functions you want to install in the builtins namespace in addition "
"to :func:`_`.  Supported names are ``'gettext'``, ``'ngettext'``, "
"``'pgettext'``, ``'npgettext'``, ``'lgettext'``, and ``'lngettext'``."
msgstr ""
"Si le paramètre *names* est renseigné, celui-ci doit être une séquence "
"contenant les noms des fonctions que vous souhaitez positionner dans "
"l'espace de nommage natif, en plus de :func:`_`. Les noms pris en charge "
"sont ``'gettext'``, ``'ngettext'``, ``'pgettext'``, ``'npgettext'``, "
"``'lgettext'`` et ``'lngettext'``."

#: ../Doc/library/gettext.rst:349
msgid ""
"Note that this is only one way, albeit the most convenient way, to make the :"
"func:`_` function available to your application.  Because it affects the "
"entire application globally, and specifically the built-in namespace, "
"localized modules should never install :func:`_`. Instead, they should use "
"this code to make :func:`_` available to their module::"
msgstr ""
"Notez que ce n'est là qu'un moyen parmi d'autres, quoique le plus pratique, "
"pour rendre la fonction :func:`_` accessible à votre application.  Puisque "
"cela affecte toute l'application, et plus particulièrement l'espace de "
"nommage natif, les modules localisés ne devraient jamais y positionner :func:"
"`_`.  Au lieu de cela, ces derniers doivent plutôt utiliser le code suivant "
"pour rendre :func:`_` accessible par leurs modules ::"

#: ../Doc/library/gettext.rst:359
msgid ""
"This puts :func:`_` only in the module's global namespace and so only "
"affects calls within this module."
msgstr ""
"Cela met :func:`_` dans l'espace de nommage global du module uniquement et "
"donc n'affectera ses appels que dans ce module."

#: ../Doc/library/gettext.rst:362
msgid "Added ``'pgettext'`` and ``'npgettext'``."
msgstr "Ajout de ``'pgettext'`` et ``'npgettext'``."

#: ../Doc/library/gettext.rst:367
msgid "The :class:`GNUTranslations` class"
msgstr "La classe :class:`GNUTranslations`"

#: ../Doc/library/gettext.rst:369
msgid ""
"The :mod:`gettext` module provides one additional class derived from :class:"
"`NullTranslations`: :class:`GNUTranslations`.  This class overrides :meth:"
"`_parse` to enable reading GNU :program:`gettext` format :file:`.mo` files "
"in both big-endian and little-endian format."
msgstr ""
"Le module :mod:`gettext` fournit une classe supplémentaire qui hérite de :"
"class:`NullTranslations` : :class:`GNUTranslations`.  Cette classe "
"surcharge :meth:`_parse` pour permettre de lire les fichiers GNU :program:"
"`gettext` :file:`.mo` au format petit et gros-boutiste."

#: ../Doc/library/gettext.rst:374
msgid ""
":class:`GNUTranslations` parses optional metadata out of the translation "
"catalog. It is convention with GNU :program:`gettext` to include metadata as "
"the translation for the empty string. This metadata is in :rfc:`822`\\ -"
"style ``key: value`` pairs, and should contain the ``Project-Id-Version`` "
"key.  If the key ``Content-Type`` is found, then the ``charset`` property is "
"used to initialize the \"protected\" :attr:`_charset` instance variable, "
"defaulting to ``None`` if not found.  If the charset encoding is specified, "
"then all message ids and message strings read from the catalog are converted "
"to Unicode using this encoding, else ASCII is assumed."
msgstr ""
":class:`GNUTranslations` analyse les métadonnées optionnelles du catalogue "
"de traduction. Il est d'usage avec GNU :program:`gettext` d'utiliser une "
"métadonnée pour traduire la chaîne vide. Cette métadonnée est un ensemble de "
"paires de la forme ``clef: valeur`` comme définie par la :rfc:`822`, et doit "
"contenir la clef ``Project-Id-Version``. Si la clef ``Content-Type`` est "
"trouvée dans une métadonnée, alors la propriété ``charset`` (jeu de "
"caractères) est utilisée pour initialiser la variable d'instance \"protégée"
"\" :attr:`_charset`, sinon cette dernière est positionnée à ``None``. Si "
"l'encodage du jeu de caractères est spécifié, tous les messages "
"(identifiants et chaînes de caractères) lus depuis le catalogue sont "
"convertis en chaînes Unicode via cet encodage, ou via l'encodage ASCII si "
"non renseigné."

#: ../Doc/library/gettext.rst:384
msgid ""
"Since message ids are read as Unicode strings too, all :meth:`*gettext` "
"methods will assume message ids as Unicode strings, not byte strings."
msgstr ""
"Et puisque les identifiants des messages sont également lus comme des "
"chaînes Unicode, toutes les méthodes :meth:`*gettext` les considéreront "
"ainsi, et pas comme des chaînes d'octets."

#: ../Doc/library/gettext.rst:387
msgid ""
"The entire set of key/value pairs are placed into a dictionary and set as "
"the \"protected\" :attr:`_info` instance variable."
msgstr ""
"La totalité des paires clef / valeur est insérée dans un dictionnaire et "
"représente la variable d'instance \"protégée\" :attr:`_info`."

#: ../Doc/library/gettext.rst:390
msgid ""
"If the :file:`.mo` file's magic number is invalid, the major version number "
"is unexpected, or if other problems occur while reading the file, "
"instantiating a :class:`GNUTranslations` class can raise :exc:`OSError`."
msgstr ""
"Si le nombre magique du fichier :file:`.mo` est invalide, le numéro de la "
"version majeure inattendu, ou si d'autres problèmes apparaissent durant la "
"lecture du fichier, instancier une classe :class:`GNUTranslations` peut "
"lever une exception :exc:`OSError`."

#: ../Doc/library/gettext.rst:396
msgid ""
"The following methods are overridden from the base class implementation:"
msgstr ""
"Les méthodes suivantes, provenant de l'implémentation de la classe de base, "
"ont été surchargée :"

#: ../Doc/library/gettext.rst:400
msgid ""
"Look up the *message* id in the catalog and return the corresponding message "
"string, as a Unicode string.  If there is no entry in the catalog for the "
"*message* id, and a fallback has been set, the look up is forwarded to the "
"fallback's :meth:`~NullTranslations.gettext` method.  Otherwise, the "
"*message* id is returned."
msgstr ""
"Recherche l'identifiant de *message* dans le catalogue et renvoie le message "
"de la chaîne de caractères correspondante comme une chaîne Unicode.  Si "
"aucun identifiant n'a été trouvé pour *message* et qu'un substitut a été "
"défini, la recherche est transmise à la méthode :meth:`~NullTranslations."
"gettext` du substitut.  Sinon, l'identifiant de *message* est renvoyé."

#: ../Doc/library/gettext.rst:409
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use.  The returned message string is a Unicode string."
msgstr ""
"Effectue une recherche sur les formes plurielles de l'identifiant d'un "
"message.  *singular* est utilisé pour la recherche de l'identifiant dans le "
"catalogue, alors que *n* permet de savoir quelle forme plurielle utiliser.  "
"La chaîne de caractère du message renvoyée est une chaîne Unicode."

#: ../Doc/library/gettext.rst:413
msgid ""
"If the message id is not found in the catalog, and a fallback is specified, "
"the request is forwarded to the fallback's :meth:`~NullTranslations."
"ngettext` method.  Otherwise, when *n* is 1 *singular* is returned, and "
"*plural* is returned in all other cases."
msgstr ""
"Si l'identifiant du message n'est pas trouvé dans le catalogue et qu'un "
"substitut a été spécifié, la requête est transmise à la méthode :meth:"
"`~NullTranslations.ngettext` du substitut.  Sinon, est renvoyé *singular* "
"lorsque *n* vaut 1, *plural* dans tous les autres cas."

#: ../Doc/library/gettext.rst:418
msgid "Here is an example::"
msgstr "Voici un exemple ::"

#: ../Doc/library/gettext.rst:430
msgid ""
"Look up the *context* and *message* id in the catalog and return the "
"corresponding message string, as a Unicode string.  If there is no entry in "
"the catalog for the *message* id and *context*, and a fallback has been set, "
"the look up is forwarded to the fallback's :meth:`pgettext` method.  "
"Otherwise, the *message* id is returned."
msgstr ""
"Recherche le *contexte* et l'identifiant de *message* dans le catalogue et "
"renvoie le message de la chaîne de caractères correspondante comme une "
"chaîne Unicode. Si aucun identifiant n'a été trouvé pour l'identifiant du "
"*message* et du *context* et qu'un substitut a été défini, la recherche est "
"transmise à la méthode :meth:`pgettext` du substitut. Sinon, l'identifiant "
"de *message* est renvoyé."

#: ../Doc/library/gettext.rst:441
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use."
msgstr ""
"Effectue une recherche sur les formes plurielles de l'identifiant d'un "
"message. *singular* est utilisé pour la recherche de l'identifiant dans le "
"catalogue, alors que *n* permet de savoir quelle forme plurielle utiliser."

#: ../Doc/library/gettext.rst:445
msgid ""
"If the message id for *context* is not found in the catalog, and a fallback "
"is specified, the request is forwarded to the fallback's :meth:`npgettext` "
"method.  Otherwise, when *n* is 1 *singular* is returned, and *plural* is "
"returned in all other cases."
msgstr ""
"Si l'identifiant du message pour le *context* n'est pas trouvé dans le "
"catalogue et qu'un substitut a été spécifié, la requête est transmise à la "
"méthode :meth:`npgettext` du substitut. Sinon, est renvoyé *singular* "
"lorsque *n* vaut 1, *plural* dans tous les autres cas."

#: ../Doc/library/gettext.rst:456
msgid ""
"Equivalent to :meth:`.gettext` and :meth:`.ngettext`, but the translation is "
"returned as a byte string encoded in the preferred system encoding if no "
"encoding  was explicitly set with :meth:`~NullTranslations."
"set_output_charset`."
msgstr ""
"Équivalent de :meth:`.gettext` et :meth:`.ngettext`, mais la traduction est "
"renvoyée sous la forme d'une chaîne d'octets, encodée avec l'encodage du "
"système si aucun autre n'a été défini avec :meth:`~NullTranslations."
"set_output_charset`."

#: ../Doc/library/gettext.rst:470
msgid "Solaris message catalog support"
msgstr "Support du catalogue de message de Solaris"

#: ../Doc/library/gettext.rst:472
msgid ""
"The Solaris operating system defines its own binary :file:`.mo` file format, "
"but since no documentation can be found on this format, it is not supported "
"at this time."
msgstr ""
"Le système d'exploitation Solaris possède son propre format de fichier "
"binaire :file:`.mo`, mais pour l'heure, puisqu'on ne peut trouver de "
"documentation sur ce format, il n'est pas géré."

#: ../Doc/library/gettext.rst:478
msgid "The Catalog constructor"
msgstr "Le constructeur *Catalog*"

#: ../Doc/library/gettext.rst:482
msgid ""
"GNOME uses a version of the :mod:`gettext` module by James Henstridge, but "
"this version has a slightly different API.  Its documented usage was::"
msgstr ""
"GNOME utilise une version du module :mod:`gettext` de James Henstridge, mais "
"qui a une API légèrement différente.  D'après la documentation, elle "
"s'utilise ainsi ::"

#: ../Doc/library/gettext.rst:490
msgid ""
"For compatibility with this older module, the function :func:`Catalog` is an "
"alias for the :func:`translation` function described above."
msgstr ""
"Pour des raisons de compatibilité avec cet ancien module, la fonction :func:"
"`Catalog` est un alias de la fonction :func:`translation` décrite ci-dessous."

#: ../Doc/library/gettext.rst:493
msgid ""
"One difference between this module and Henstridge's: his catalog objects "
"supported access through a mapping API, but this appears to be unused and so "
"is not currently supported."
msgstr ""
"Une différence entre ce module et celui de Henstridge : les objets de son "
"catalogue étaient accessibles depuis un schéma de l'API, mais cela semblait "
"ne pas être utilisé et donc n'est pas pris en charge."

#: ../Doc/library/gettext.rst:499
msgid "Internationalizing your programs and modules"
msgstr "Internationaliser vos programmes et modules"

#: ../Doc/library/gettext.rst:501
msgid ""
"Internationalization (I18N) refers to the operation by which a program is "
"made aware of multiple languages.  Localization (L10N) refers to the "
"adaptation of your program, once internationalized, to the local language "
"and cultural habits. In order to provide multilingual messages for your "
"Python programs, you need to take the following steps:"
msgstr ""
"L'internationalisation (*I18N*) consiste à permettre à un programme de "
"recevoir des traductions dans plusieurs langues.  La localisation (*L10N*) "
"consiste à adapter un programme à la langue et aux habitudes culturelles "
"locales, une fois celui-ci internationalisé.  Afin de fournir du texte "
"multilingue à votre programme Python, les étapes suivantes sont nécessaires :"

#: ../Doc/library/gettext.rst:507
msgid ""
"prepare your program or module by specially marking translatable strings"
msgstr ""
"préparer votre programme ou module en marquant spécifiquement les chaînes à "
"traduire"

#: ../Doc/library/gettext.rst:509
msgid ""
"run a suite of tools over your marked files to generate raw messages catalogs"
msgstr ""
"lancer une suite d'outils sur les fichiers contenant des chaînes à traduire "
"pour générer des catalogues de messages brut"

#: ../Doc/library/gettext.rst:511
msgid "create language-specific translations of the message catalogs"
msgstr ""
"créer les traductions spécifiques à une langue des catalogues de messages"

#: ../Doc/library/gettext.rst:513
msgid ""
"use the :mod:`gettext` module so that message strings are properly translated"
msgstr ""
"utiliser le module :mod:`gettext` pour que les chaînes de caractères soient "
"bien traduites"

#: ../Doc/library/gettext.rst:515
msgid ""
"In order to prepare your code for I18N, you need to look at all the strings "
"in your files.  Any string that needs to be translated should be marked by "
"wrapping it in ``_('...')`` --- that is, a call to the function :func:`_`.  "
"For example::"
msgstr ""
"Afin de préparer votre code à être traduit (*I18N*), vous devrez rechercher "
"toutes les chaînes de caractères de vos fichiers.  À chaque chaîne de "
"caractères à traduire doit être appliqué le marqueur ``_('...')`` --- c'est-"
"à-dire en appelant la fonction :func:`_`.  Par exemple ::"

#: ../Doc/library/gettext.rst:524
msgid ""
"In this example, the string ``'writing a log message'`` is marked as a "
"candidate for translation, while the strings ``'mylog.txt'`` and ``'w'`` are "
"not."
msgstr ""
"Dans cet exemple, la chaîne ``'writing a log message'`` est maquée comme "
"traduite, contrairement aux chaînes ``'mylog.txt'`` et ``'w'``."

#: ../Doc/library/gettext.rst:527
msgid ""
"There are a few tools to extract the strings meant for translation. The "
"original GNU :program:`gettext` only supported C or C++ source code but its "
"extended version :program:`xgettext` scans code written in a number of "
"languages, including Python, to find strings marked as translatable.  `Babel "
"<http://babel.pocoo.org/>`__ is a Python internationalization library that "
"includes a :file:`pybabel` script to extract and compile message catalogs.  "
"François Pinard's program called :program:`xpot` does a similar job and is "
"available as part of his `po-utils package <https://github.com/pinard/po-"
"utils>`__."
msgstr ""
"Il existe quelques outils pour extraire les chaînes de caractères destinées "
"à la traduction.  Le programme d'origine GNU :program:`gettext` ne prenait "
"en charge que les codes sources en C ou C++, mais sa version étendue :"
"program:`xgettext` peut lire du code écrit dans de nombreux langages, dont "
"le Python, afin de trouver les chaînes notées comme traduisibles.  `Babel "
"<http://babel.pocoo.org/>`__ est une bibliothèque en Python "
"d'internationalisation, qui inclut un script :file:`pybabel` permettant "
"d'extraire et de compiler des catalogues de messages.  Le programme de "
"François Pinard, nommé :program:`xpot`, fait de même et est disponible dans "
"son `paquet po-utils <https://github.com/pinard/po-utils>`__."

#: ../Doc/library/gettext.rst:537
msgid ""
"(Python also includes pure-Python versions of these programs, called :"
"program:`pygettext.py` and :program:`msgfmt.py`; some Python distributions "
"will install them for you.  :program:`pygettext.py` is similar to :program:"
"`xgettext`, but only understands Python source code and cannot handle other "
"programming languages such as C or C++. :program:`pygettext.py` supports a "
"command-line interface similar to :program:`xgettext`; for details on its "
"use, run ``pygettext.py --help``.  :program:`msgfmt.py` is binary compatible "
"with GNU :program:`msgfmt`.  With these two programs, you may not need the "
"GNU :program:`gettext` package to internationalize your Python applications.)"
msgstr ""
"(Python inclut également des versions en Python de ces programmes, :program:"
"`pygettext.py` et :program:`msgfmt.py`, que certaines distributions Python "
"installeront pour vous.  :program:`pygettext.py` est similaire à :program:"
"`xgettext`, mais ne comprend que le code source écrit en Python et ne peut "
"prendre en charge d'autres langages de programmation tels que le C ou C++.  :"
"program:`pygettext.py` possède une interface en ligne de commande similaire "
"à celle de :program:`xgettext` --- pour plus de détails sur son utilisation, "
"exécuter ``pygettext.py --help``.  :program:`msgfmt.py` est compatible avec "
"GNU :program:`msgfmt`.  Avec ces deux programmes, vous ne devriez pas avoir "
"besoin du paquet GNU :program:`gettext` pour internationaliser vos "
"applications en Python.)"

#: ../Doc/library/gettext.rst:549
msgid ""
":program:`xgettext`, :program:`pygettext`, and similar tools generate :file:"
"`.po` files that are message catalogs.  They are structured human-readable "
"files that contain every marked string in the source code, along with a "
"placeholder for the translated versions of these strings."
msgstr ""
":program:`xgettext`, :program:`pygettext` et d'autres outils similaires "
"génèrent des fichiers :file:`.po` représentant les catalogues de messages.  "
"Il s'agit de fichiers structurés et lisibles par un être humain, qui "
"contiennent toutes les chaînes du code source marquées comme traduisible, "
"ainsi que leur traduction à utiliser."

#: ../Doc/library/gettext.rst:555
msgid ""
"Copies of these :file:`.po` files are then handed over to the individual "
"human translators who write translations for every supported natural "
"language.  They send back the completed language-specific versions as a :"
"file:`<language-name>.po` file that's compiled into a machine-readable :file:"
"`.mo` binary catalog file using the :program:`msgfmt` program.  The :file:`."
"mo` files are used by the :mod:`gettext` module for the actual translation "
"processing at run-time."
msgstr ""
"Les copies de ces fichiers :file:`.po` sont ensuite remises à des êtres "
"humains qui traduisent le contenu pour chaque langue naturelle prise en "
"charge.  Pour chacune des langues, ces derniers renvoient la version "
"complétée sous la forme d'un fichier :file:`<code-langue>.po` qui a été "
"compilé dans un fichier binaire :file:`.mo` représentant le catalogue "
"lisible par une machine à l'aide du programme :program:`msgfmt`.  Les "
"fichiers :file:`.mo` sont utilisés par le module :mod:`gettext` pour la "
"traduction lors de l'exécution."

#: ../Doc/library/gettext.rst:564
msgid ""
"How you use the :mod:`gettext` module in your code depends on whether you "
"are internationalizing a single module or your entire application. The next "
"two sections will discuss each case."
msgstr ""
"La façon dont vous utilisez le module :mod:`gettext` dans votre code dépend "
"de si vous internationalisez un seul module ou l'ensemble de votre "
"application.  Les deux sections suivantes traitent chacune des cas."

#: ../Doc/library/gettext.rst:570
msgid "Localizing your module"
msgstr "Localiser votre module"

#: ../Doc/library/gettext.rst:572
msgid ""
"If you are localizing your module, you must take care not to make global "
"changes, e.g. to the built-in namespace. You should not use the GNU :program:"
"`gettext` API but instead the class-based API."
msgstr ""
"Si vous localisez votre module, veillez à ne pas faire de changements "
"globaux, e.g. dans l'espace de nommage natif. Vous ne devriez pas utiliser "
"l’API GNU :program:`gettext` mais plutôt celle basée sur les classes."

#: ../Doc/library/gettext.rst:576
msgid ""
"Let's say your module is called \"spam\" and the module's various natural "
"language translation :file:`.mo` files reside in :file:`/usr/share/locale` "
"in GNU :program:`gettext` format.  Here's what you would put at the top of "
"your module::"
msgstr ""
"Disons que votre module s'appelle \"spam\" et que les fichiers :file:`.mo` "
"de traduction dans les différentes langues naturelles soient dans :file:`/"
"usr/share/locale` au format GNU :program:`gettext`.  Voici ce que vous "
"pouvez alors mettre en haut de votre module ::"

#: ../Doc/library/gettext.rst:587
msgid "Localizing your application"
msgstr "Localiser votre application"

#: ../Doc/library/gettext.rst:589
msgid ""
"If you are localizing your application, you can install the :func:`_` "
"function globally into the built-in namespace, usually in the main driver "
"file of your application.  This will let all your application-specific files "
"just use ``_('...')`` without having to explicitly install it in each file."
msgstr ""
"Si vous localisez votre application, vous pouvez positionner la fonction :"
"func:`_` de manière globale dans l'espace de nommage natif, généralement "
"dans le fichier principal de votre application.  Cela permettra à tous les "
"fichiers de votre application de n'utiliser que ``_('...')`` sans devoir le "
"redéfinir explicitement dans chaque fichier."

#: ../Doc/library/gettext.rst:594
msgid ""
"In the simple case then, you need only add the following bit of code to the "
"main driver file of your application::"
msgstr ""
"Dans ce cas, vous n'aurez à ajouter que le bout de code suivant au fichier "
"principal de votre application ::"

#: ../Doc/library/gettext.rst:600
msgid ""
"If you need to set the locale directory, you can pass it into the :func:"
"`install` function::"
msgstr ""
"Si vous avez besoin de définir le dossier des localisations, vous pouvez le "
"mettre en argument de la fonction :func:`install` ::"

#: ../Doc/library/gettext.rst:608
msgid "Changing languages on the fly"
msgstr "Changer de langue à la volée"

#: ../Doc/library/gettext.rst:610
msgid ""
"If your program needs to support many languages at the same time, you may "
"want to create multiple translation instances and then switch between them "
"explicitly, like so::"
msgstr ""
"Si votre programme a besoin de prendre en charge plusieurs langues en même "
"temps, vous pouvez créer plusieurs instances de traduction, puis basculer "
"entre elles de façon explicite, comme ceci ::"

#: ../Doc/library/gettext.rst:631
msgid "Deferred translations"
msgstr "Traductions différées"

#: ../Doc/library/gettext.rst:633
msgid ""
"In most coding situations, strings are translated where they are coded. "
"Occasionally however, you need to mark strings for translation, but defer "
"actual translation until later.  A classic example is::"
msgstr ""
"Dans la plupart des cas, en programmation, les chaînes de caractères sont "
"traduites à l'endroit où on les écrit.  Cependant, il peut arriver que vous "
"ayez besoin de traduire une chaîne de caractères un peu plus loin.  Un "
"exemple classique est ::"

#: ../Doc/library/gettext.rst:646
msgid ""
"Here, you want to mark the strings in the ``animals`` list as being "
"translatable, but you don't actually want to translate them until they are "
"printed."
msgstr ""
"Ici, vous voulez marquer les chaînes de caractères de la liste ``animals`` "
"comme étant traduisibles, mais ne les traduire qu'au moment de les afficher."

#: ../Doc/library/gettext.rst:650
msgid "Here is one way you can handle this situation::"
msgstr "Voici un moyen de gérer ce cas ::"

#: ../Doc/library/gettext.rst:666
msgid ""
"This works because the dummy definition of :func:`_` simply returns the "
"string unchanged.  And this dummy definition will temporarily override any "
"definition of :func:`_` in the built-in namespace (until the :keyword:`del` "
"command). Take care, though if you have a previous definition of :func:`_` "
"in the local namespace."
msgstr ""
"Cela fonctionne car la définition factice de :func:`_` renvoie simplement la "
"chaîne de caractères passée en entrée.  Et cette définition factice va "
"temporairement outrepasser toute autre définition de :func:`_` dans l'espace "
"de nommage natif (jusqu'à l'utilisation de la commande :keyword:`del`).  "
"Attention toutefois si vous avez déjà une autre définition de :func:`_` dans "
"l'espace de nommage local."

#: ../Doc/library/gettext.rst:672
msgid ""
"Note that the second use of :func:`_` will not identify \"a\" as being "
"translatable to the :program:`gettext` program, because the parameter is not "
"a string literal."
msgstr ""
"À noter qu'à la deuxième utilisation de :func:`_`, \"a\" ne sera pas vue "
"comme traduisible par le programme :program:`gettext` car ce n'est pas un "
"chaîne au sens propre."

#: ../Doc/library/gettext.rst:676
msgid "Another way to handle this is with the following example::"
msgstr "Voici une autre solution ::"

#: ../Doc/library/gettext.rst:690
msgid ""
"In this case, you are marking translatable strings with the function :func:"
"`N_`, which won't conflict with any definition of :func:`_`. However, you "
"will need to teach your message extraction program to look for translatable "
"strings marked with :func:`N_`. :program:`xgettext`, :program:`pygettext`, "
"``pybabel extract``, and :program:`xpot` all support this through the use of "
"the :option:`!-k` command-line switch. The choice of :func:`N_` here is "
"totally arbitrary; it could have just as easily been :func:"
"`MarkThisStringForTranslation`."
msgstr ""
"Dans ce cas, les chaînes à traduire sont identifiées avec la fonction :func:"
"`N_`, qui n'entre pas en conflit avec  définition de :func:`_`.  Cependant, "
"il faudra apprendre à votre programme d'extraction de messages à rechercher "
"les chaînes de caractères à traduire parmi celles ayant le marqueur :func:"
"`N_`.  :program:`xgettext`, :program:`pygettext`, ``pybabel extract`` et :"
"program:`xpot` prennent tous en charge cela grâce à l'option en ligne de "
"commande :option:`!-k`.  Le choix du nom :func:`N_` ici est totalement "
"arbitraire et aurait très bien pu être :func:`MarqueurDeTraduction`."

#: ../Doc/library/gettext.rst:701
msgid "Acknowledgements"
msgstr "Remerciements"

#: ../Doc/library/gettext.rst:703
msgid ""
"The following people contributed code, feedback, design suggestions, "
"previous implementations, and valuable experience to the creation of this "
"module:"
msgstr ""
"Les personnes suivantes ont contribué au code, ont fait des retours, ont "
"participé aux suggestions de conception et aux implémentations précédentes, "
"et ont partagé leur expérience précieuse pour la création de ce module :"

#: ../Doc/library/gettext.rst:706
msgid "Peter Funk"
msgstr "Peter Funk"

#: ../Doc/library/gettext.rst:708
msgid "James Henstridge"
msgstr "James Henstridge"

#: ../Doc/library/gettext.rst:710
msgid "Juan David Ibáñez Palomar"
msgstr "Juan David Ibáñez Palomar"

#: ../Doc/library/gettext.rst:712
msgid "Marc-André Lemburg"
msgstr "Marc-André Lemburg"

#: ../Doc/library/gettext.rst:714
msgid "Martin von Löwis"
msgstr "Martin von Löwis"

#: ../Doc/library/gettext.rst:716
msgid "François Pinard"
msgstr "François Pinard"

#: ../Doc/library/gettext.rst:718
msgid "Barry Warsaw"
msgstr "Barry Warsaw"

#: ../Doc/library/gettext.rst:720
msgid "Gustavo Niemeyer"
msgstr "Gustavo Niemeyer"

#: ../Doc/library/gettext.rst:723
msgid "Footnotes"
msgstr "Notes"

#: ../Doc/library/gettext.rst:724
msgid ""
"The default locale directory is system dependent; for example, on RedHat "
"Linux it is :file:`/usr/share/locale`, but on Solaris it is :file:`/usr/lib/"
"locale`. The :mod:`gettext` module does not try to support these system "
"dependent defaults; instead its default is :file:`{sys.prefix}/share/locale` "
"(see :data:`sys.prefix`). For this reason, it is always best to call :func:"
"`bindtextdomain` with an explicit absolute path at the start of your "
"application."
msgstr ""
"Le dossier par défaut pour les localisations dépend du système : par "
"exemple, sur RedHat c'est :file:`/usr/share/locale`, mais sur Solaris c'est :"
"file:`/usr/lib/locale`. Le module :mod:`gettext` n'essaie pas de prendre en "
"charge ce paramètre système dépendant du système d'exploitation, mais "
"utilise le dossier :file:`{sys.prefix}/share/locale` (voir :data:`sys."
"prefix`). C'est pour cette raison qu'il est toujours préférable d'appeler :"
"func:`bindtextdomain` en donnant explicitement un chemin absolu au début de "
"votre application."

#: ../Doc/library/gettext.rst:732
msgid "See the footnote for :func:`bindtextdomain` above."
msgstr "Voir la note de :func:`bindtextdomain` ci-dessus."

#~ msgid "Return the \"protected\" :attr:`_info` variable."
#~ msgstr "Renvoie la variable \"protégée\" :attr:`_info`."
