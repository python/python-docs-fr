# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2020-11-25 20:44+0100\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: ZepmanBC <zepman@gmail.com>\n"
"X-Generator: Poedit 2.4.2\n"

#: library/marshal.rst:2
msgid ":mod:`marshal` --- Internal Python object serialization"
msgstr ":mod:`marshal` — Sérialisation interne des objets Python"

#: library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Sun, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Ce module contient des fonctions permettant de lire et écrire des valeurs "
"Python au format binaire.  Ce format est propre à Python, mais indépendant "
"de l'architecture de la machine (p. ex., vous pouvez écrire une valeur "
"Python dans un fichier sur un PC, envoyer le fichier vers une machine Sun et "
"la lire à nouveau).  Les détails du format sont volontairement non "
"documentés ; il peut changer d'une version Python à l'autre (bien que ce "
"soit rarement le cas). [#]_"

#: library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise.  If "
"you're serializing and de-serializing Python objects, use the :mod:`pickle` "
"module instead -- the performance is comparable, version independence is "
"guaranteed, and pickle supports a substantially wider range of objects than "
"marshal."
msgstr ""
"Ce module ne permet pas de « sérialiser » des objets de manière permanente. "
"Pour des questions de sérialisation en général ou de transfert d'objets "
"Python par des appels RPC, référez-vous aux modules :mod:`pickle` et :mod:"
"`shelve`.  Le module :mod:`marshal` existe principalement pour permettre la "
"lecture et l'écriture de code « pseudo-compilé » pour les modules Python des "
"fichiers :file:`.pyc`. Par conséquent, les mainteneurs Python se réservent "
"le droit de modifier le format *marshal* en cassant la rétrocompatibilité si "
"besoin.  Si vous sérialisez et dé-sérialisez des objets Python, utilisez "
"plutôt le module :mod:`pickle` — les performances sont comparables, "
"l'indépendance par rapport à la version est garantie, et *pickle* prend en "
"charge une gamme d'objets beaucoup plus large que *marshal*."

#: library/marshal.rst:33
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"N'utilisez pas le module :mod:`marshal` pour lire des données erronées ou "
"malveillantes.  Ne démantelez jamais des données reçues d'une source non "
"fiable ou non authentifiée."

#: library/marshal.rst:39
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, floating point numbers, complex numbers, strings, bytes, "
"bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects, "
"where it should be understood that tuples, lists, sets, frozensets and "
"dictionaries are only supported as long as the values contained therein are "
"themselves supported.  The singletons :const:`None`, :const:`Ellipsis` and :"
"exc:`StopIteration` can also be marshalled and unmarshalled. For format "
"*version* lower than 3, recursive lists, sets and dictionaries cannot be "
"written (see below)."
msgstr ""
"Tous les types d'objets Python ne sont pas pris en charge ; en général, "
"seuls les objets dont la valeur est indépendante d'une invocation "
"particulière de Python peuvent être écrits et lus par ce module.  Les types "
"suivants sont pris en charge : booléens, entiers, nombres à virgule "
"flottante, nombres complexes, chaînes de caractères, octets, *bytearrays*, "
"*n*-uplets, listes, ensembles, ensembles figés, dictionnaires et objets, "
"étant entendu que les *n*-uplets, listes, ensembles, ensembles figés et "
"dictionnaires sont pris en charge si les valeurs qu'ils contiennent sont "
"elles-mêmes prises en charge.  Les singletons :const:`None`, :const:"
"`Ellipsis` et :exc:`StopIteration` peuvent également être « pseudo-"
"compilés » et « dé-pseudo-compilés ». Pour le format des *versions* "
"inférieures à 3, les listes récursives, les ensembles et les dictionnaires "
"ne peuvent pas être écrits (voir ci-dessous)."

#: library/marshal.rst:51
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"Il existe des fonctions de lecture-écriture de fichiers ainsi que des "
"fonctions opérant sur des objets octet."

#: library/marshal.rst:54
msgid "The module defines these functions:"
msgstr "Le module définit ces fonctions :"

#: library/marshal.rst:59
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"Écrit la valeur sur le fichier ouvert.  La valeur doit être un type pris en "
"charge.  Le fichier doit être un :term:`fichier binaire` ouvert en écriture."

#: library/marshal.rst:62
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`."
msgstr ""
"Si la valeur est (ou contient un objet qui est) d'un type non implémenté, "
"une exception :exc:`ValueError` est levée — mais le contenu de la mémoire "
"sera également écrit dans le fichier.  L'objet ne sera pas correctement lu "
"par :func:`load`."

#: library/marshal.rst:66
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"L'argument *version* indique le format de données que le ``dump`` doit "
"utiliser (voir ci-dessous)."

#: library/marshal.rst:72
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The "
"file must be a readable :term:`binary file`."
msgstr ""
"Lit une valeur du fichier ouvert et la renvoie.  Si aucune valeur valide "
"n'est lue (p. ex. parce que les données ont un format décompilé incompatible "
"avec une autre version de Python), :exc:`EOFError`, :exc:`ValueError` ou :"
"exc:`TypeError` est levée.  Le fichier doit être un :term:`fichier binaire` "
"ouvert en lecture."

#: library/marshal.rst:79
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Si un objet contenant un type non pris en charge a été dé-compilé avec :func:"
"`dump`, :func:`load` remplacera le type non « dé-compilable » par ``None``."

#: library/marshal.rst:85
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported type."
msgstr ""
"Renvoie les octets qui seraient écrits dans un fichier par ``dump(value, "
"file)``.  La valeur doit être un type pris en charge.  Lève une exception :"
"exc:`ValueError` si la valeur a (ou contient un objet qui a) un type qui "
"n'est pas pris en charge."

#: library/marshal.rst:89
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"L'argument *version* indique le format de données que ``dumps`` doivent "
"utiliser (voir ci-dessous)."

#: library/marshal.rst:95
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra "
"bytes in the input are ignored."
msgstr ""
"Convertit le :term:`bytes-like object` en une valeur.  Si aucune valeur "
"valide n'est trouvée, :exc:`EOFError`, :exc:`ValueError` ou :exc:`TypeError` "
"est levée.  Les octets supplémentaires de l'entrée sont ignorés."

#: library/marshal.rst:100
msgid "In addition, the following constants are defined:"
msgstr "De plus, les constantes suivantes sont définies :"

#: library/marshal.rst:104
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 shares interned strings and version 2 uses a binary format "
"for floating point numbers. Version 3 adds support for object instancing and "
"recursion. The current version is 4."
msgstr ""
"Indique le format que le module utilise. La version 0 est le format "
"originel, la version 1 partage des chaînes de caractères internes et la "
"version 2 utilise un format binaire pour les nombres à virgule flottante. La "
"version 3 ajoute la prise en charge de l'instanciation et de la récursivité "
"des objets. La version actuelle est la 4."

#: library/marshal.rst:112
msgid "Footnotes"
msgstr "Notes"

#: library/marshal.rst:113
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"Le nom de ce module provient d'un peu de terminologie utilisée par les "
"concepteurs de Modula-3 (entre autres), qui utilisent le terme *marshalling* "
"pour l'envoi de données sous une forme autonome. À proprement parler, *to "
"marshal* signifie convertir certaines données d'une forme interne à une "
"forme externe (dans une mémoire tampon RPC par exemple) et *unmarshalling* "
"désigne le processus inverse."
