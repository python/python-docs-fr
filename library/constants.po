# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2019-02-21 17:13+0100\n"
"Last-Translator: Julien Palard <julien@palard.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.2\n"

#: library/constants.rst:4
msgid "Built-in Constants"
msgstr "Constantes natives"

#: library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""
"Un petit nombre de constantes existent dans le *namespace* natif. Elles "
"sont :"

#: library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"La valeur fausse du type :class:`bool`. Les assignations à ``False`` ne sont "
"pas autorisées et lèvent une :exc:`SyntaxError`."

#: library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""
"La valeur vraie du type :class:`bool`. Les assignations à ``True`` ne sont "
"pas autorisées et lèvent une :exc:`SyntaxError`."

#: library/constants.rst:22
msgid ""
"The sole value of the type ``NoneType``.  ``None`` is frequently used to "
"represent the absence of a value, as when default arguments are not passed "
"to a function. Assignments to ``None`` are illegal and raise a :exc:"
"`SyntaxError`."
msgstr ""
"``None`` est l'unique valeur du type ``NoneType``. Elle est utilisée "
"fréquemment pour représenter l'absence de valeur, comme lorsque des "
"arguments par défaut ne sont pas passés à une fonction. Les assignations à "
"``None`` ne sont pas autorisées et lèvent une :exc:`SyntaxError`."

#: library/constants.rst:29
#, fuzzy
msgid ""
"Special value which should be returned by the binary special methods (e.g. :"
"meth:`__eq__`, :meth:`__lt__`, :meth:`__add__`, :meth:`__rsub__`, etc.) to "
"indicate that the operation is not implemented with respect to the other "
"type; may be returned by the in-place binary special methods (e.g. :meth:"
"`__imul__`, :meth:`__iand__`, etc.) for the same purpose. It should not be "
"evaluated in a boolean context."
msgstr ""
"Valeur spéciale qui devrait être renvoyée par les méthodes magiques à deux "
"opérandes (e.g. :meth:`__eq__`, :meth:`__lt__`, :meth:`__add__`, :meth:"
"`__rsub__`, etc.) pour indiquer que l'opération n'est pas implémentée pour "
"l'autre type ; peut être renvoyé par les méthodes magiques augmentées à deux "
"opérandes (e.g. :meth:`__imul__`, :meth:`__iand__`, etc.) avec le même "
"objectif. Sa valeur booléenne est ``True``."

#: library/constants.rst:38
msgid ""
"When a binary (or in-place) method returns ``NotImplemented`` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
"``NotImplemented``, the interpreter will raise an appropriate exception. "
"Incorrectly returning ``NotImplemented`` will result in a misleading error "
"message or the ``NotImplemented`` value being returned to Python code."
msgstr ""
"Lorsqu'une méthode à deux opérandes renvoie ``NotImplemented``, "
"l'interpréteur essaye d'exécuter l'opération réfléchie sur l'autre type (il "
"existe d'autres mécanismes de *fallback*, en fonction de l'opérateur). Si "
"toutes les tentatives renvoient ``NotImplemented``, l'interpréteur lève une "
"exception appropriée. Renvoyer ``NotImplemented`` à tort donne lieu à un "
"message d'erreur peu clair ou au renvoi de la valeur ``NotImplemented`` pour "
"le code Python."

#: library/constants.rst:45
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "Voir :ref:`implementing-the-arithmetic-operations` pour des exemples."

#: library/constants.rst:49
msgid ""
"``NotImplementedError`` and ``NotImplemented`` are not interchangeable, even "
"though they have similar names and purposes. See :exc:`NotImplementedError` "
"for details on when to use it."
msgstr ""
"``NotImplementedError`` et ``NotImplemented`` ne sont pas interchangeables, "
"même s'ils ont un nom et un objectif similaire. Voir :exc:"
"`NotImplementedError` pour savoir quand l'utiliser."

#: library/constants.rst:53
msgid ""
"Evaluating ``NotImplemented`` in a boolean context is deprecated. While it "
"currently evaluates as true, it will emit a :exc:`DeprecationWarning`. It "
"will raise a :exc:`TypeError` in a future version of Python."
msgstr ""

#: library/constants.rst:62
msgid ""
"The same as the ellipsis literal \"``...``\".  Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types."
msgstr ""
"Identique au littéral *points de suspension* (\"``...``\"). Valeur spéciale "
"utilisée principalement de manière conjointe avec la syntaxe de découpage "
"(*slicing*) étendu pour les conteneurs personnalisés."

#: library/constants.rst:68
msgid ""
"This constant is true if Python was not started with an :option:`-O` option. "
"See also the :keyword:`assert` statement."
msgstr ""
"Cette constante est vraie si Python n'a pas été démarré avec une option :"
"option:`-O`. Voir aussi l'expression :keyword:`assert`."

#: library/constants.rst:74
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise :"
"exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"Les noms :data:`None`, :data:`False`, :data:`True` et :data:`__debug__` ne "
"peuvent pas être réassignés (des assignations à ces noms, ou aux noms de "
"leurs attributs, lèvent une :exc:`SyntaxError`), donc ils peuvent être "
"considérés comme des \"vraies\" constantes."

#: library/constants.rst:80
msgid "Constants added by the :mod:`site` module"
msgstr "Constantes ajoutées par le module :mod:`site`"

#: library/constants.rst:82
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
"Le module :mod:`site` (qui est importé automatiquement au démarrage, sauf si "
"l'option de ligne de commande :option:`-S` est donnée ajoute un certain "
"nombre de constantes au *namespace* natif. Elles sont utiles pour "
"l'interpréteur interactif et ne devraient pas être utilisées par des "
"programmes."

#: library/constants.rst:90
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e. "
"EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified "
"exit code."
msgstr ""
"Objets qui, lorsqu'ils sont représentés, affichent un message comme *\"Use "
"quit() or Ctrl-D (i.e. EOF) to exit\"*, et lorsqu'ils sont appelés, lèvent "
"un :exc:`SystemExit` avec le code de retour spécifié."

#: library/constants.rst:97
msgid ""
"Objects that when printed or called, print the text of copyright or credits, "
"respectively."
msgstr ""
"Objets qui, lorsqu'ils sont affichés ou appelés, affichent le copyright ou "
"les crédits, respectivement."

#: library/constants.rst:102
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"Objet qui, lorsqu'il est affiché, affiche un message comme *\"Type license() "
"to see the full license text\"*, et lorsqu'il est appelé, affiche le texte "
"complet de la licence dans un style paginé (un écran à la fois)."
