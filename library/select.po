# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/select.rst:2
msgid ":mod:`select` --- Waiting for I/O completion"
msgstr ""

#: ../Doc/library/select.rst:9
msgid ""
"This module provides access to the :c:func:`select` and :c:func:`poll` "
"functions available in most operating systems, :c:func:`devpoll` available "
"on Solaris and derivatives, :c:func:`epoll` available on Linux 2.5+ and :c:"
"func:`kqueue` available on most BSD. Note that on Windows, it only works for "
"sockets; on other operating systems, it also works for other file types (in "
"particular, on Unix, it works on pipes). It cannot be used on regular files "
"to determine whether a file has grown since it was last read."
msgstr ""

#: ../Doc/library/select.rst:20
msgid ""
"The :mod:`selectors` module allows high-level and efficient I/O "
"multiplexing, built upon the :mod:`select` module primitives. Users are "
"encouraged to use the :mod:`selectors` module instead, unless they want "
"precise control over the OS-level primitives used."
msgstr ""

#: ../Doc/library/select.rst:26
msgid "The module defines the following:"
msgstr "Le module définit :"

#: ../Doc/library/select.rst:31
msgid "A deprecated alias of :exc:`OSError`."
msgstr ""

#: ../Doc/library/select.rst:33
msgid "Following :pep:`3151`, this class was made an alias of :exc:`OSError`."
msgstr ""

#: ../Doc/library/select.rst:39
msgid ""
"(Only supported on Solaris and derivatives.)  Returns a ``/dev/poll`` "
"polling object; see section :ref:`devpoll-objects` below for the methods "
"supported by devpoll objects."
msgstr ""

#: ../Doc/library/select.rst:43
msgid ""
":c:func:`devpoll` objects are linked to the number of file descriptors "
"allowed at the time of instantiation. If your program reduces this value, :c:"
"func:`devpoll` will fail. If your program increases this value, :c:func:"
"`devpoll` may return an incomplete list of active file descriptors."
msgstr ""

#: ../Doc/library/select.rst:49 ../Doc/library/select.rst:78
#: ../Doc/library/select.rst:105
msgid "The new file descriptor is :ref:`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../Doc/library/select.rst:53 ../Doc/library/select.rst:107
msgid "The new file descriptor is now non-inheritable."
msgstr "Le nouveau descripteur de fichier est maintenant non-héritable."

#: ../Doc/library/select.rst:58
msgid ""
"(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, "
"which can be used as Edge or Level Triggered interface for I/O events."
msgstr ""

#: ../Doc/library/select.rst:62
msgid ""
"*sizehint* informs epoll about the expected number of events to be "
"registered.  It must be positive, or `-1` to use the default. It is only "
"used on older systems where :c:func:`epoll_create1` is not available; "
"otherwise it has no effect (though its value is still checked)."
msgstr ""

#: ../Doc/library/select.rst:67
msgid ""
"*flags* is deprecated and completely ignored.  However, when supplied, its "
"value must be ``0`` or ``select.EPOLL_CLOEXEC``, otherwise ``OSError`` is "
"raised."
msgstr ""

#: ../Doc/library/select.rst:71
msgid ""
"See the :ref:`epoll-objects` section below for the methods supported by "
"epolling objects."
msgstr ""

#: ../Doc/library/select.rst:74
msgid ""
"``epoll`` objects support the context management protocol: when used in a :"
"keyword:`with` statement, the new file descriptor is automatically closed at "
"the end of the block."
msgstr ""

#: ../Doc/library/select.rst:80
msgid "Added the *flags* parameter."
msgstr ""

#: ../Doc/library/select.rst:83
msgid ""
"Support for the :keyword:`with` statement was added. The new file descriptor "
"is now non-inheritable."
msgstr ""

#: ../Doc/library/select.rst:87
msgid ""
"The *flags* parameter.  ``select.EPOLL_CLOEXEC`` is used by default now. "
"Use :func:`os.set_inheritable` to make the file descriptor inheritable."
msgstr ""

#: ../Doc/library/select.rst:94
msgid ""
"(Not supported by all operating systems.)  Returns a polling object, which "
"supports registering and unregistering file descriptors, and then polling "
"them for I/O events; see section :ref:`poll-objects` below for the methods "
"supported by polling objects."
msgstr ""

#: ../Doc/library/select.rst:102
msgid ""
"(Only supported on BSD.)  Returns a kernel queue object; see section :ref:"
"`kqueue-objects` below for the methods supported by kqueue objects."
msgstr ""

#: ../Doc/library/select.rst:113
msgid ""
"(Only supported on BSD.)  Returns a kernel event object; see section :ref:"
"`kevent-objects` below for the methods supported by kevent objects."
msgstr ""

#: ../Doc/library/select.rst:119
msgid ""
"This is a straightforward interface to the Unix :c:func:`select` system "
"call. The first three arguments are sequences of 'waitable objects': either "
"integers representing file descriptors or objects with a parameterless "
"method named :meth:`~io.IOBase.fileno` returning such an integer:"
msgstr ""

#: ../Doc/library/select.rst:124
msgid "*rlist*: wait until ready for reading"
msgstr ""

#: ../Doc/library/select.rst:125
msgid "*wlist*: wait until ready for writing"
msgstr ""

#: ../Doc/library/select.rst:126
msgid ""
"*xlist*: wait for an \"exceptional condition\" (see the manual page for what "
"your system considers such a condition)"
msgstr ""

#: ../Doc/library/select.rst:129
msgid ""
"Empty sequences are allowed, but acceptance of three empty sequences is "
"platform-dependent. (It is known to work on Unix but not on Windows.)  The "
"optional *timeout* argument specifies a time-out as a floating point number "
"in seconds.  When the *timeout* argument is omitted the function blocks "
"until at least one file descriptor is ready.  A time-out value of zero "
"specifies a poll and never blocks."
msgstr ""

#: ../Doc/library/select.rst:136
msgid ""
"The return value is a triple of lists of objects that are ready: subsets of "
"the first three arguments.  When the time-out is reached without a file "
"descriptor becoming ready, three empty lists are returned."
msgstr ""

#: ../Doc/library/select.rst:144
msgid ""
"Among the acceptable object types in the sequences are Python :term:`file "
"objects <file object>` (e.g. ``sys.stdin``, or objects returned by :func:"
"`open` or :func:`os.popen`), socket objects returned by :func:`socket."
"socket`.  You may also define a :dfn:`wrapper` class yourself, as long as it "
"has an appropriate :meth:`~io.IOBase.fileno` method (that really returns a "
"file descriptor, not just a random integer)."
msgstr ""

#: ../Doc/library/select.rst:155
msgid ""
"File objects on Windows are not acceptable, but sockets are.  On Windows, "
"the underlying :c:func:`select` function is provided by the WinSock library, "
"and does not handle file descriptors that don't originate from WinSock."
msgstr ""

#: ../Doc/library/select.rst:160 ../Doc/library/select.rst:266
#: ../Doc/library/select.rst:363 ../Doc/library/select.rst:451
#: ../Doc/library/select.rst:492
msgid ""
"The function is now retried with a recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception (see :pep:`475` for "
"the rationale), instead of raising :exc:`InterruptedError`."
msgstr ""

#: ../Doc/library/select.rst:169
msgid ""
"The minimum number of bytes which can be written without blocking to a pipe "
"when the pipe has been reported as ready for writing by :func:`~select."
"select`, :func:`poll` or another interface in this module.  This doesn't "
"apply to other kind of file-like objects such as sockets."
msgstr ""

#: ../Doc/library/select.rst:174
msgid "This value is guaranteed by POSIX to be at least 512."
msgstr ""

#: ../Doc/library/select.rst:177
msgid ":ref:`Availability <availability>`: Unix"
msgstr ":ref:`Disponibilité <availability>` : Unix"

#: ../Doc/library/select.rst:184
msgid "``/dev/poll`` Polling Objects"
msgstr ""

#: ../Doc/library/select.rst:186
msgid ""
"Solaris and derivatives have ``/dev/poll``. While :c:func:`select` is "
"O(highest file descriptor) and :c:func:`poll` is O(number of file "
"descriptors), ``/dev/poll`` is O(active file descriptors)."
msgstr ""

#: ../Doc/library/select.rst:190
msgid ""
"``/dev/poll`` behaviour is very close to the standard :c:func:`poll` object."
msgstr ""

#: ../Doc/library/select.rst:196
msgid "Close the file descriptor of the polling object."
msgstr ""

#: ../Doc/library/select.rst:203
msgid "``True`` if the polling object is closed."
msgstr ""

#: ../Doc/library/select.rst:210
msgid "Return the file descriptor number of the polling object."
msgstr ""

#: ../Doc/library/select.rst:217 ../Doc/library/select.rst:386
msgid ""
"Register a file descriptor with the polling object.  Future calls to the :"
"meth:`poll` method will then check whether the file descriptor has any "
"pending I/O events.  *fd* can be either an integer, or an object with a :"
"meth:`~io.IOBase.fileno` method that returns an integer.  File objects "
"implement :meth:`!fileno`, so they can also be used as the argument."
msgstr ""

#: ../Doc/library/select.rst:223
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for. The constants are the same that with :c:func:`poll` object. The "
"default value is a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`."
msgstr ""

#: ../Doc/library/select.rst:230
msgid ""
"Registering a file descriptor that's already registered is not an error, but "
"the result is undefined. The appropriate action is to unregister or modify "
"it first. This is an important difference compared with :c:func:`poll`."
msgstr ""

#: ../Doc/library/select.rst:238
msgid ""
"This method does an :meth:`unregister` followed by a :meth:`register`. It is "
"(a bit) more efficient that doing the same explicitly."
msgstr ""

#: ../Doc/library/select.rst:245 ../Doc/library/select.rst:430
msgid ""
"Remove a file descriptor being tracked by a polling object.  Just like the :"
"meth:`register` method, *fd* can be an integer or an object with a :meth:"
"`~io.IOBase.fileno` method that returns an integer."
msgstr ""

#: ../Doc/library/select.rst:249
msgid ""
"Attempting to remove a file descriptor that was never registered is safely "
"ignored."
msgstr ""

#: ../Doc/library/select.rst:255
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, -1, or :const:`None`, "
"the call will block until there is an event for this poll object."
msgstr ""

#: ../Doc/library/select.rst:276
msgid "Edge and Level Trigger Polling (epoll) Objects"
msgstr ""

#: ../Doc/library/select.rst:278
msgid "https://linux.die.net/man/4/epoll"
msgstr ""

#: ../Doc/library/select.rst:280
msgid "*eventmask*"
msgstr ""

#: ../Doc/library/select.rst:283 ../Doc/library/select.rst:398
#: ../Doc/library/select.rst:518 ../Doc/library/select.rst:547
#: ../Doc/library/select.rst:578 ../Doc/library/select.rst:586
#: ../Doc/library/select.rst:606 ../Doc/library/select.rst:629
msgid "Constant"
msgstr "Constante"

#: ../Doc/library/select.rst:283 ../Doc/library/select.rst:398
#: ../Doc/library/select.rst:518 ../Doc/library/select.rst:547
#: ../Doc/library/select.rst:578 ../Doc/library/select.rst:586
#: ../Doc/library/select.rst:606 ../Doc/library/select.rst:629
msgid "Meaning"
msgstr "Signification"

#: ../Doc/library/select.rst:285
msgid ":const:`EPOLLIN`"
msgstr ":const:`EPOLLIN`"

#: ../Doc/library/select.rst:285
msgid "Available for read"
msgstr ""

#: ../Doc/library/select.rst:287
msgid ":const:`EPOLLOUT`"
msgstr ":const:`EPOLLOUT`"

#: ../Doc/library/select.rst:287
msgid "Available for write"
msgstr ""

#: ../Doc/library/select.rst:289
msgid ":const:`EPOLLPRI`"
msgstr ":const:`EPOLLPRI`"

#: ../Doc/library/select.rst:289
msgid "Urgent data for read"
msgstr ""

#: ../Doc/library/select.rst:291
msgid ":const:`EPOLLERR`"
msgstr ":const:`EPOLLERR`"

#: ../Doc/library/select.rst:291
msgid "Error condition happened on the assoc. fd"
msgstr ""

#: ../Doc/library/select.rst:293
msgid ":const:`EPOLLHUP`"
msgstr ":const:`EPOLLHUP`"

#: ../Doc/library/select.rst:293
msgid "Hang up happened on the assoc. fd"
msgstr ""

#: ../Doc/library/select.rst:295
msgid ":const:`EPOLLET`"
msgstr ":const:`EPOLLET`"

#: ../Doc/library/select.rst:295
msgid "Set Edge Trigger behavior, the default is Level Trigger behavior"
msgstr ""

#: ../Doc/library/select.rst:298
msgid ":const:`EPOLLONESHOT`"
msgstr ":const:`EPOLLONESHOT`"

#: ../Doc/library/select.rst:298
msgid ""
"Set one-shot behavior. After one event is pulled out, the fd is internally "
"disabled"
msgstr ""

#: ../Doc/library/select.rst:301
msgid ":const:`EPOLLEXCLUSIVE`"
msgstr ""

#: ../Doc/library/select.rst:301
msgid ""
"Wake only one epoll object when the associated fd has an event. The default "
"(if this flag is not set) is to wake all epoll objects polling on a fd."
msgstr ""

#: ../Doc/library/select.rst:306
#, fuzzy
msgid ":const:`EPOLLRDHUP`"
msgstr ":const:`EPOLLHUP`"

#: ../Doc/library/select.rst:306
msgid ""
"Stream socket peer closed connection or shut down writing half of connection."
msgstr ""

#: ../Doc/library/select.rst:309
msgid ":const:`EPOLLRDNORM`"
msgstr ":const:`EPOLLRDNORM`"

#: ../Doc/library/select.rst:309
msgid "Equivalent to :const:`EPOLLIN`"
msgstr ""

#: ../Doc/library/select.rst:311
msgid ":const:`EPOLLRDBAND`"
msgstr ":const:`EPOLLRDBAND`"

#: ../Doc/library/select.rst:311
msgid "Priority data band can be read."
msgstr ""

#: ../Doc/library/select.rst:313
msgid ":const:`EPOLLWRNORM`"
msgstr ":const:`EPOLLWRNORM`"

#: ../Doc/library/select.rst:313
msgid "Equivalent to :const:`EPOLLOUT`"
msgstr ""

#: ../Doc/library/select.rst:315
msgid ":const:`EPOLLWRBAND`"
msgstr ":const:`EPOLLWRBAND`"

#: ../Doc/library/select.rst:315
msgid "Priority data may be written."
msgstr ""

#: ../Doc/library/select.rst:317
msgid ":const:`EPOLLMSG`"
msgstr ":const:`EPOLLMSG`"

#: ../Doc/library/select.rst:317
#, fuzzy
msgid "Ignored."
msgstr "Ignoré"

#: ../Doc/library/select.rst:320
msgid ""
":const:`EPOLLEXCLUSIVE` was added.  It's only supported by Linux Kernel 4.5 "
"or later."
msgstr ""

#: ../Doc/library/select.rst:326
msgid "Close the control file descriptor of the epoll object."
msgstr ""

#: ../Doc/library/select.rst:331
msgid "``True`` if the epoll object is closed."
msgstr ""

#: ../Doc/library/select.rst:336 ../Doc/library/select.rst:475
msgid "Return the file descriptor number of the control fd."
msgstr ""

#: ../Doc/library/select.rst:341
msgid "Create an epoll object from a given file descriptor."
msgstr ""

#: ../Doc/library/select.rst:346
msgid "Register a fd descriptor with the epoll object."
msgstr ""

#: ../Doc/library/select.rst:351
msgid "Modify a registered file descriptor."
msgstr ""

#: ../Doc/library/select.rst:356
msgid "Remove a registered file descriptor from the epoll object."
msgstr ""

#: ../Doc/library/select.rst:361
msgid "Wait for events. timeout in seconds (float)"
msgstr ""

#: ../Doc/library/select.rst:373
msgid "Polling Objects"
msgstr ""

#: ../Doc/library/select.rst:375
msgid ""
"The :c:func:`poll` system call, supported on most Unix systems, provides "
"better scalability for network servers that service many, many clients at "
"the same time. :c:func:`poll` scales better because the system call only "
"requires listing the file descriptors of interest, while :c:func:`select` "
"builds a bitmap, turns on bits for the fds of interest, and then afterward "
"the whole bitmap has to be linearly scanned again. :c:func:`select` is "
"O(highest file descriptor), while :c:func:`poll` is O(number of file "
"descriptors)."
msgstr ""

#: ../Doc/library/select.rst:392
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to "
"check for, and can be a combination of the constants :const:`POLLIN`, :const:"
"`POLLPRI`, and :const:`POLLOUT`, described in the table below.  If not "
"specified, the default value used will check for all 3 types of events."
msgstr ""

#: ../Doc/library/select.rst:400
msgid ":const:`POLLIN`"
msgstr ":const:`POLLIN`"

#: ../Doc/library/select.rst:400
msgid "There is data to read"
msgstr ""

#: ../Doc/library/select.rst:402
msgid ":const:`POLLPRI`"
msgstr ":const:`POLLPRI`"

#: ../Doc/library/select.rst:402
msgid "There is urgent data to read"
msgstr ""

#: ../Doc/library/select.rst:404
msgid ":const:`POLLOUT`"
msgstr ":const:`POLLOUT`"

#: ../Doc/library/select.rst:404
msgid "Ready for output: writing will not block"
msgstr ""

#: ../Doc/library/select.rst:406
msgid ":const:`POLLERR`"
msgstr ":const:`POLLERR`"

#: ../Doc/library/select.rst:406
msgid "Error condition of some sort"
msgstr ""

#: ../Doc/library/select.rst:408
msgid ":const:`POLLHUP`"
msgstr ":const:`POLLHUP`"

#: ../Doc/library/select.rst:408
msgid "Hung up"
msgstr ""

#: ../Doc/library/select.rst:410
#, fuzzy
msgid ":const:`POLLRDHUP`"
msgstr ":const:`POLLHUP`"

#: ../Doc/library/select.rst:410
msgid ""
"Stream socket peer closed connection, or shut down writing half of connection"
msgstr ""

#: ../Doc/library/select.rst:413
msgid ":const:`POLLNVAL`"
msgstr ":const:`POLLNVAL`"

#: ../Doc/library/select.rst:413
msgid "Invalid request: descriptor not open"
msgstr ""

#: ../Doc/library/select.rst:416
msgid ""
"Registering a file descriptor that's already registered is not an error, and "
"has the same effect as registering the descriptor exactly once."
msgstr ""

#: ../Doc/library/select.rst:422
msgid ""
"Modifies an already registered fd. This has the same effect as "
"``register(fd, eventmask)``.  Attempting to modify a file descriptor that "
"was never registered causes an :exc:`OSError` exception with errno :const:"
"`ENOENT` to be raised."
msgstr ""

#: ../Doc/library/select.rst:434
msgid ""
"Attempting to remove a file descriptor that was never registered causes a :"
"exc:`KeyError` exception to be raised."
msgstr ""

#: ../Doc/library/select.rst:440
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- :const:"
"`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the descriptor "
"can be written to, and so forth. An empty list indicates that the call timed "
"out and no file descriptors had any events to report. If *timeout* is given, "
"it specifies the length of time in milliseconds which the system will wait "
"for events before returning. If *timeout* is omitted, negative, or :const:"
"`None`, the call will block until there is an event for this poll object."
msgstr ""

#: ../Doc/library/select.rst:461
msgid "Kqueue Objects"
msgstr ""

#: ../Doc/library/select.rst:465
msgid "Close the control file descriptor of the kqueue object."
msgstr ""

#: ../Doc/library/select.rst:470
msgid "``True`` if the kqueue object is closed."
msgstr ""

#: ../Doc/library/select.rst:480
msgid "Create a kqueue object from a given file descriptor."
msgstr ""

#: ../Doc/library/select.rst:485
msgid "Low level interface to kevent"
msgstr ""

#: ../Doc/library/select.rst:487
msgid "changelist must be an iterable of kevent objects or ``None``"
msgstr ""

#: ../Doc/library/select.rst:488
msgid "max_events must be 0 or a positive integer"
msgstr ""

#: ../Doc/library/select.rst:489
msgid ""
"timeout in seconds (floats possible); the default is ``None``, to wait "
"forever"
msgstr ""

#: ../Doc/library/select.rst:502
msgid "Kevent Objects"
msgstr ""

#: ../Doc/library/select.rst:504
msgid "https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"
msgstr ""

#: ../Doc/library/select.rst:508
msgid ""
"Value used to identify the event. The interpretation depends on the filter "
"but it's usually the file descriptor. In the constructor ident can either be "
"an int or an object with a :meth:`~io.IOBase.fileno` method. kevent stores "
"the integer internally."
msgstr ""

#: ../Doc/library/select.rst:515
msgid "Name of the kernel filter."
msgstr ""

#: ../Doc/library/select.rst:520
msgid ":const:`KQ_FILTER_READ`"
msgstr ":const:`KQ_FILTER_READ`"

#: ../Doc/library/select.rst:520
msgid "Takes a descriptor and returns whenever there is data available to read"
msgstr ""

#: ../Doc/library/select.rst:523
msgid ":const:`KQ_FILTER_WRITE`"
msgstr ":const:`KQ_FILTER_WRITE`"

#: ../Doc/library/select.rst:523
msgid ""
"Takes a descriptor and returns whenever there is data available to write"
msgstr ""

#: ../Doc/library/select.rst:526
msgid ":const:`KQ_FILTER_AIO`"
msgstr ":const:`KQ_FILTER_AIO`"

#: ../Doc/library/select.rst:526
msgid "AIO requests"
msgstr ""

#: ../Doc/library/select.rst:528
msgid ":const:`KQ_FILTER_VNODE`"
msgstr ":const:`KQ_FILTER_VNODE`"

#: ../Doc/library/select.rst:528
msgid ""
"Returns when one or more of the requested events watched in *fflag* occurs"
msgstr ""

#: ../Doc/library/select.rst:531
msgid ":const:`KQ_FILTER_PROC`"
msgstr ":const:`KQ_FILTER_PROC`"

#: ../Doc/library/select.rst:531
msgid "Watch for events on a process id"
msgstr ""

#: ../Doc/library/select.rst:533
msgid ":const:`KQ_FILTER_NETDEV`"
msgstr ":const:`KQ_FILTER_NETDEV`"

#: ../Doc/library/select.rst:533
msgid "Watch for events on a network device [not available on Mac OS X]"
msgstr ""

#: ../Doc/library/select.rst:536
msgid ":const:`KQ_FILTER_SIGNAL`"
msgstr ":const:`KQ_FILTER_SIGNAL`"

#: ../Doc/library/select.rst:536
msgid "Returns whenever the watched signal is delivered to the process"
msgstr ""

#: ../Doc/library/select.rst:539
msgid ":const:`KQ_FILTER_TIMER`"
msgstr ":const:`KQ_FILTER_TIMER`"

#: ../Doc/library/select.rst:539
msgid "Establishes an arbitrary timer"
msgstr ""

#: ../Doc/library/select.rst:544
msgid "Filter action."
msgstr ""

#: ../Doc/library/select.rst:549
msgid ":const:`KQ_EV_ADD`"
msgstr ":const:`KQ_EV_ADD`"

#: ../Doc/library/select.rst:549
msgid "Adds or modifies an event"
msgstr ""

#: ../Doc/library/select.rst:551
msgid ":const:`KQ_EV_DELETE`"
msgstr ":const:`KQ_EV_DELETE`"

#: ../Doc/library/select.rst:551
msgid "Removes an event from the queue"
msgstr ""

#: ../Doc/library/select.rst:553
msgid ":const:`KQ_EV_ENABLE`"
msgstr ":const:`KQ_EV_ENABLE`"

#: ../Doc/library/select.rst:553
msgid "Permitscontrol() to returns the event"
msgstr ""

#: ../Doc/library/select.rst:555
msgid ":const:`KQ_EV_DISABLE`"
msgstr ":const:`KQ_EV_DISABLE`"

#: ../Doc/library/select.rst:555
msgid "Disablesevent"
msgstr ""

#: ../Doc/library/select.rst:557
msgid ":const:`KQ_EV_ONESHOT`"
msgstr ":const:`KQ_EV_ONESHOT`"

#: ../Doc/library/select.rst:557
msgid "Removes event after first occurrence"
msgstr ""

#: ../Doc/library/select.rst:559
msgid ":const:`KQ_EV_CLEAR`"
msgstr ":const:`KQ_EV_CLEAR`"

#: ../Doc/library/select.rst:559
msgid "Reset the state after an event is retrieved"
msgstr ""

#: ../Doc/library/select.rst:561
msgid ":const:`KQ_EV_SYSFLAGS`"
msgstr ":const:`KQ_EV_SYSFLAGS`"

#: ../Doc/library/select.rst:561 ../Doc/library/select.rst:563
msgid "internal event"
msgstr ""

#: ../Doc/library/select.rst:563
msgid ":const:`KQ_EV_FLAG1`"
msgstr ":const:`KQ_EV_FLAG1`"

#: ../Doc/library/select.rst:565
msgid ":const:`KQ_EV_EOF`"
msgstr ":const:`KQ_EV_EOF`"

#: ../Doc/library/select.rst:565
msgid "Filter specific EOF condition"
msgstr ""

#: ../Doc/library/select.rst:567
msgid ":const:`KQ_EV_ERROR`"
msgstr ":const:`KQ_EV_ERROR`"

#: ../Doc/library/select.rst:567
msgid "See return values"
msgstr ""

#: ../Doc/library/select.rst:573
msgid "Filter specific flags."
msgstr ""

#: ../Doc/library/select.rst:575
msgid ":const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:580
msgid ":const:`KQ_NOTE_LOWAT`"
msgstr ":const:`KQ_NOTE_LOWAT`"

#: ../Doc/library/select.rst:580
msgid "low water mark of a socket buffer"
msgstr ""

#: ../Doc/library/select.rst:583
msgid ":const:`KQ_FILTER_VNODE` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:588
msgid ":const:`KQ_NOTE_DELETE`"
msgstr ":const:`KQ_NOTE_DELETE`"

#: ../Doc/library/select.rst:588
msgid "*unlink()* was called"
msgstr ""

#: ../Doc/library/select.rst:590
msgid ":const:`KQ_NOTE_WRITE`"
msgstr ":const:`KQ_NOTE_WRITE`"

#: ../Doc/library/select.rst:590
msgid "a write occurred"
msgstr ""

#: ../Doc/library/select.rst:592
msgid ":const:`KQ_NOTE_EXTEND`"
msgstr ":const:`KQ_NOTE_EXTEND`"

#: ../Doc/library/select.rst:592
msgid "the file was extended"
msgstr ""

#: ../Doc/library/select.rst:594
msgid ":const:`KQ_NOTE_ATTRIB`"
msgstr ":const:`KQ_NOTE_ATTRIB`"

#: ../Doc/library/select.rst:594
msgid "an attribute was changed"
msgstr ""

#: ../Doc/library/select.rst:596
msgid ":const:`KQ_NOTE_LINK`"
msgstr ":const:`KQ_NOTE_LINK`"

#: ../Doc/library/select.rst:596
msgid "the link count has changed"
msgstr ""

#: ../Doc/library/select.rst:598
msgid ":const:`KQ_NOTE_RENAME`"
msgstr ":const:`KQ_NOTE_RENAME`"

#: ../Doc/library/select.rst:598
msgid "the file was renamed"
msgstr ""

#: ../Doc/library/select.rst:600
msgid ":const:`KQ_NOTE_REVOKE`"
msgstr ":const:`KQ_NOTE_REVOKE`"

#: ../Doc/library/select.rst:600
msgid "access to the file was revoked"
msgstr ""

#: ../Doc/library/select.rst:603
msgid ":const:`KQ_FILTER_PROC` filter flags:"
msgstr ""

#: ../Doc/library/select.rst:608
msgid ":const:`KQ_NOTE_EXIT`"
msgstr ":const:`KQ_NOTE_EXIT`"

#: ../Doc/library/select.rst:608
msgid "the process has exited"
msgstr ""

#: ../Doc/library/select.rst:610
msgid ":const:`KQ_NOTE_FORK`"
msgstr ":const:`KQ_NOTE_FORK`"

#: ../Doc/library/select.rst:610
msgid "the process has called *fork()*"
msgstr ""

#: ../Doc/library/select.rst:612
msgid ":const:`KQ_NOTE_EXEC`"
msgstr ":const:`KQ_NOTE_EXEC`"

#: ../Doc/library/select.rst:612
msgid "the process has executed a new process"
msgstr ""

#: ../Doc/library/select.rst:614
msgid ":const:`KQ_NOTE_PCTRLMASK`"
msgstr ":const:`KQ_NOTE_PCTRLMASK`"

#: ../Doc/library/select.rst:614 ../Doc/library/select.rst:616
msgid "internal filter flag"
msgstr ""

#: ../Doc/library/select.rst:616
msgid ":const:`KQ_NOTE_PDATAMASK`"
msgstr ":const:`KQ_NOTE_PDATAMASK`"

#: ../Doc/library/select.rst:618
msgid ":const:`KQ_NOTE_TRACK`"
msgstr ":const:`KQ_NOTE_TRACK`"

#: ../Doc/library/select.rst:618
msgid "follow a process across *fork()*"
msgstr ""

#: ../Doc/library/select.rst:620
msgid ":const:`KQ_NOTE_CHILD`"
msgstr ":const:`KQ_NOTE_CHILD`"

#: ../Doc/library/select.rst:620
msgid "returned on the child process for *NOTE_TRACK*"
msgstr ""

#: ../Doc/library/select.rst:623
msgid ":const:`KQ_NOTE_TRACKERR`"
msgstr ":const:`KQ_NOTE_TRACKERR`"

#: ../Doc/library/select.rst:623
msgid "unable to attach to a child"
msgstr ""

#: ../Doc/library/select.rst:626
msgid ":const:`KQ_FILTER_NETDEV` filter flags (not available on Mac OS X):"
msgstr ""

#: ../Doc/library/select.rst:631
msgid ":const:`KQ_NOTE_LINKUP`"
msgstr ":const:`KQ_NOTE_LINKUP`"

#: ../Doc/library/select.rst:631
msgid "link is up"
msgstr ""

#: ../Doc/library/select.rst:633
msgid ":const:`KQ_NOTE_LINKDOWN`"
msgstr ":const:`KQ_NOTE_LINKDOWN`"

#: ../Doc/library/select.rst:633
msgid "link is down"
msgstr ""

#: ../Doc/library/select.rst:635
msgid ":const:`KQ_NOTE_LINKINV`"
msgstr ":const:`KQ_NOTE_LINKINV`"

#: ../Doc/library/select.rst:635
msgid "link state is invalid"
msgstr ""

#: ../Doc/library/select.rst:641
msgid "Filter specific data."
msgstr ""

#: ../Doc/library/select.rst:646
msgid "User defined value."
msgstr ""
