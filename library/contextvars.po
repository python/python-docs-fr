# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2021-05-26 21:26-0400\n"
"Last-Translator: Martin Chlumsky <martin.chlumsky@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.3\n"

#: library/contextvars.rst:2
msgid ":mod:`contextvars` --- Context Variables"
msgstr ":mod:`contextvars` — Variables de contexte"

#: library/contextvars.rst:11
msgid ""
"This module provides APIs to manage, store, and access context-local state.  "
"The :class:`~contextvars.ContextVar` class is used to declare and work with "
"*Context Variables*.  The :func:`~contextvars.copy_context` function and "
"the :class:`~contextvars.Context` class should be used to manage the current "
"context in asynchronous frameworks."
msgstr ""
"Ce module fournit des API pour gérer, stocker et accéder à l'état local de "
"contexte. La classe :class:`~contextvars.ContextVar` est utilisée pour "
"déclarer et travailler avec les *Variables de contexte*. La fonction :func:"
"`~contextvars.copy_context` et la classe :class:`~contextvars.Context` "
"doivent être utilisées pour la gestion du contexte actuel dans les "
"cadriciels asynchrones."

#: library/contextvars.rst:17
msgid ""
"Context managers that have state should use Context Variables instead of :"
"func:`threading.local()` to prevent their state from bleeding to other code "
"unexpectedly, when used in concurrent code."
msgstr ""
"Les gestionnaires de contexte, quand ils ont un état et quand ils sont "
"utilisés dans du code s'exécutant de manière concurrente, doivent utiliser "
"les variables de contexte au lieu de :func:`threading.local()` pour empêcher "
"que leur état ne perturbe un autre fil de manière inattendue."

#: library/contextvars.rst:21
msgid "See also :pep:`567` for additional details."
msgstr "Voir aussi :pep:`567` pour plus de détails."

#: library/contextvars.rst:27
msgid "Context Variables"
msgstr "Variables de contexte"

#: library/contextvars.rst:31
msgid "This class is used to declare a new Context Variable, e.g.::"
msgstr ""
"Cette classe est utilisée pour déclarer une nouvelle variable de contexte, "
"p. ex. ::"

#: library/contextvars.rst:35
msgid ""
"The required *name* parameter is used for introspection and debug purposes."
msgstr ""
"Le paramètre requis *name* est utilisé à des fins d'introspection et de "
"débogage."

#: library/contextvars.rst:38
msgid ""
"The optional keyword-only *default* parameter is returned by :meth:"
"`ContextVar.get` when no value for the variable is found in the current "
"context."
msgstr ""
"Le paramètre nommé *default* est renvoyé par :meth:`ContextVar.get` quand "
"aucune valeur n'est trouvée dans le contexte actuel pour la variable."

#: library/contextvars.rst:42
msgid ""
"**Important:** Context Variables should be created at the top module level "
"and never in closures.  :class:`Context` objects hold strong references to "
"context variables which prevents context variables from being properly "
"garbage collected."
msgstr ""
"**Important :** les variables de contexte doivent être créées au plus haut "
"niveau du module et jamais dans des fermetures (*closures*). Les objets :"
"class:`Context` maintiennent des références fortes aux variables de contexte "
"ce qui empêche que les variables de contexte soient correctement nettoyées "
"par le ramasse-miette."

#: library/contextvars.rst:49
msgid "The name of the variable.  This is a read-only property."
msgstr "Nom de la variable. Cette propriété est en lecture seule."

#: library/contextvars.rst:55
msgid "Return a value for the context variable for the current context."
msgstr "Renvoie la valeur de la variable de contexte pour le contexte actuel."

#: library/contextvars.rst:57
msgid ""
"If there is no value for the variable in the current context, the method "
"will:"
msgstr ""
"S'il n'y a pas de valeur pour la variable dans le contexte actuel, la "
"méthode :"

#: library/contextvars.rst:60
msgid ""
"return the value of the *default* argument of the method, if provided; or"
msgstr ""
"renvoie la valeur de l'argument *default* passé à la méthode, s'il a été "
"fourni ;"

#: library/contextvars.rst:63
msgid ""
"return the default value for the context variable, if it was created with "
"one; or"
msgstr ""
"ou renvoie la valeur par défaut de la variable de contexte, si elle a été "
"créée avec une valeur par défaut ;"

# padpo se plaint ici pour le verbe lever mais on peut l'ignorer pour
# préserver le présent de l'indicatif en accord avec les "renvoie" dans les
# autres items de la liste.
#: library/contextvars.rst:66
msgid "raise a :exc:`LookupError`."
msgstr "ou lève une erreur :exc:`LookupError`."

#: library/contextvars.rst:70
msgid ""
"Call to set a new value for the context variable in the current context."
msgstr ""
"Assigne une nouvelle valeur à la variable de contexte dans le contexte "
"actuel."

#: library/contextvars.rst:73
msgid ""
"The required *value* argument is the new value for the context variable."
msgstr ""
"L'argument requis *value* est la nouvelle valeur pour la variable de "
"contexte."

#: library/contextvars.rst:76
msgid ""
"Returns a :class:`~contextvars.Token` object that can be used to restore the "
"variable to its previous value via the :meth:`ContextVar.reset` method."
msgstr ""
"Renvoie un objet :class:`~contextvars.Token` qui peut être utilisé pour "
"rétablir la variable à sa valeur précédente par la méthode :meth:`ContextVar."
"reset`."

#: library/contextvars.rst:82
msgid ""
"Reset the context variable to the value it had before the :meth:`ContextVar."
"set` that created the *token* was used."
msgstr ""
"Réinitialise la variable de contexte à la valeur qu'elle avait avant l'appel "
"de :meth:`ContextVar.set` qui a créé le *token*."

#: library/contextvars.rst:85
msgid "For example::"
msgstr "Par exemple ::"

#: library/contextvars.rst:99
msgid ""
"*Token* objects are returned by the :meth:`ContextVar.set` method. They can "
"be passed to the :meth:`ContextVar.reset` method to revert the value of the "
"variable to what it was before the corresponding *set*."
msgstr ""
"Les objets *Token* sont renvoyés par la méthode :meth:`ContextVar.set`. Ils "
"peuvent être passés à la méthode :meth:`ContextVar.reset` pour réaffecter la "
"valeur de la variable à ce qu'elle était avant le *set* correspondant."

#: library/contextvars.rst:106
msgid ""
"A read-only property.  Points to the :class:`ContextVar` object that created "
"the token."
msgstr ""
"Propriété en lecture seule. Pointe vers l'objet :class:`ContextVar` qui a "
"créé le token."

#: library/contextvars.rst:111
msgid ""
"A read-only property.  Set to the value the variable had before the :meth:"
"`ContextVar.set` method call that created the token. It points to :attr:"
"`Token.MISSING` is the variable was not set before the call."
msgstr ""
"Propriété en lecture seule. Sa valeur est celle que la variable avait avant "
"l'appel à la méthode :meth:`ContextVar.set` qui a créé le jeton. Elle pointe "
"à :attr:`Token.MISSING` si la variable n'est pas définie avant l'appel."

#: library/contextvars.rst:118
msgid "A marker object used by :attr:`Token.old_value`."
msgstr "Objet marqueur utilisé par :attr:`Token.old_value`."

#: library/contextvars.rst:122
msgid "Manual Context Management"
msgstr "Gestion de contexte manuelle"

#: library/contextvars.rst:126
msgid "Returns a copy of the current :class:`~contextvars.Context` object."
msgstr "Renvoie une copie de l'objet :class:`~contextvars.Context` actuel."

#: library/contextvars.rst:128
msgid ""
"The following snippet gets a copy of the current context and prints all "
"variables and their values that are set in it::"
msgstr ""
"Le fragment de code qui suit obtient une copie du contexte actuel et affiche "
"toutes les variables avec leurs valeurs définies dans ce contexte."

#: library/contextvars.rst:134
msgid ""
"The function has an O(1) complexity, i.e. works equally fast for contexts "
"with a few context variables and for contexts that have a lot of them."
msgstr ""
"La fonction a une complexité O(1), c.-à-d. qu'elle fonctionne aussi "
"rapidement pour des contextes avec peu de variables de contexte que pour des "
"contextes qui en ont beaucoup."

#: library/contextvars.rst:141
msgid "A mapping of :class:`ContextVars <ContextVar>` to their values."
msgstr ""
"Tableau associatif entre :class:`ContextVars <ContextVar>` et leurs valeurs."

#: library/contextvars.rst:143
msgid ""
"``Context()`` creates an empty context with no values in it. To get a copy "
"of the current context use the :func:`~contextvars.copy_context` function."
msgstr ""
"``Context()`` crée un contexte vide ne contenant aucune valeur. Pour obtenir "
"une copie du contexte actuel, utilisez la fonction :func:`~contextvars."
"copy_context`."

#: library/contextvars.rst:147
msgid "Context implements the :class:`collections.abc.Mapping` interface."
msgstr "*Context* implémente l'interface :class:`collections.abc.Mapping`."

# padpo lance 3 warnings ici, mais en fait tout semble correct. Si on enlève
# les * de args/kwargs, il n'y a plus de warnings. Je suspecte un bug dans
# padpo.
# library/contextvars.po:238: warning: Incohérence : l’espace insécable à côté
# de l’espace sécable n’a pas d’effet. => ###ntexte sur lequel est appelée la
# méthode  »run*. Ren###
# library/contextvars.po:238: warning: Il manque un espace. => ###xte sur
# lequel est appelée la méthode  »run*. Renvoie###
# library/contextvars.po:238: warning: Mot inconnu : run => ###xte sur lequel
# est appelée la méthode  »run*. Renvoie###
#: library/contextvars.rst:151
msgid ""
"Execute ``callable(*args, **kwargs)`` code in the context object the *run* "
"method is called on.  Return the result of the execution or propagate an "
"exception if one occurred."
msgstr ""
"Exécute le code ``callable(*args, **kwargs)`` dans le contexte défini par "
"l'objet. Renvoie le résultat de l'exécution ou propage une exception s'il y "
"en a une qui s'est produite."

#: library/contextvars.rst:155
msgid ""
"Any changes to any context variables that *callable* makes will be contained "
"in the context object::"
msgstr ""
"Tout changement apporté aux variables de contexte effectué par *callable* "
"sera contenu dans l'objet de contexte ::"

#: library/contextvars.rst:184
msgid ""
"The method raises a :exc:`RuntimeError` when called on the same context "
"object from more than one OS thread, or when called recursively."
msgstr ""
"La méthode lève une :exc:`RuntimeError` quand elle est appelée sur le même "
"objet de contexte depuis plus qu'un fil d'exécution ou quand elle est "
"appelée récursivement."

#: library/contextvars.rst:190
msgid "Return a shallow copy of the context object."
msgstr "Renvoie une copie de surface de l'objet de contexte."

#: library/contextvars.rst:194
msgid ""
"Return ``True`` if the *context* has a value for *var* set; return ``False`` "
"otherwise."
msgstr ""
"Renvoie ``True`` si le *context* a une valeur pour *var* ; sinon renvoie "
"``False``."

#: library/contextvars.rst:199
msgid ""
"Return the value of the *var* :class:`ContextVar` variable. If the variable "
"is not set in the context object, a :exc:`KeyError` is raised."
msgstr ""
"Renvoie la valeur de la variable :class:`ContextVar` *var*. Si la variable "
"n'est pas définie dans l'objet de contexte, une :exc:`KeyError` est levée."

#: library/contextvars.rst:205
msgid ""
"Return the value for *var* if *var* has the value in the context object.  "
"Return *default* otherwise.  If *default* is not given, return ``None``."
msgstr ""
"Renvoie la valeur de *var* si *var* possède une valeur dans l'objet de "
"contexte. Renvoie *default* sinon (ou ``None`` si *default* n'est pas donné)."

#: library/contextvars.rst:211
msgid "Return an iterator over the variables stored in the context object."
msgstr ""
"Renvoie un itérateur sur les variables stockées dans l'objet de contexte."

#: library/contextvars.rst:216
msgid "Return the number of variables set in the context object."
msgstr "Renvoie le nombre de variables définies dans l'objet de contexte."

#: library/contextvars.rst:220
msgid "Return a list of all variables in the context object."
msgstr "Renvoie une liste de toutes les variables dans l'objet de contexte."

#: library/contextvars.rst:224
msgid "Return a list of all variables' values in the context object."
msgstr ""
"Renvoie une liste de toutes les valeurs des variables dans l'objet de "
"contexte."

#: library/contextvars.rst:229
msgid ""
"Return a list of 2-tuples containing all variables and their values in the "
"context object."
msgstr ""
"Renvoie une liste de paires contenant toutes les variables et leurs valeurs "
"dans l'objet de contexte."

#: library/contextvars.rst:234
msgid "asyncio support"
msgstr "Gestion avec *asyncio*"

#: library/contextvars.rst:236
msgid ""
"Context variables are natively supported in :mod:`asyncio` and are ready to "
"be used without any extra configuration.  For example, here is a simple echo "
"server, that uses a context variable to make the address of a remote client "
"available in the Task that handles that client::"
msgstr ""
":mod:`asyncio` gère nativement les variables de contexte et elles sont "
"prêtes à être utilisées sans configuration supplémentaire. Par exemple, "
"voici un serveur *echo* simple qui utilise une variable de contexte pour que "
"l’adresse d'un client distant soit disponible dans le *Task* qui gère ce "
"client ::"
