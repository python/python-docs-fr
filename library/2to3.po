# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 17:52+0200\n"
"PO-Revision-Date: 2019-09-16 10:54+0200\n"
"Last-Translator: Léa Klein <contact@leakle.in>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.1.1\n"

#: ../Doc/library/2to3.rst:4
msgid "2to3 - Automated Python 2 to 3 code translation"
msgstr "*2to3* — Traduction automatique de code en Python 2 vers Python 3"

#: ../Doc/library/2to3.rst:8
msgid ""
"2to3 is a Python program that reads Python 2.x source code and applies a "
"series of *fixers* to transform it into valid Python 3.x code.  The standard "
"library contains a rich set of fixers that will handle almost all code.  "
"2to3 supporting library :mod:`lib2to3` is, however, a flexible and generic "
"library, so it is possible to write your own fixers for 2to3.  :mod:"
"`lib2to3` could also be adapted to custom applications in which Python code "
"needs to be edited automatically."
msgstr ""
"*2to3* est un programme Python qui lit du code source en Python 2.x et "
"applique une suite de correcteurs pour le transformer en code Python 3.x "
"valide.  La bibliothèque standard contient un ensemble riche de correcteurs "
"qui gèreront quasiment tout le code.  La bibliothèque :mod:`lib2to3` "
"utilisée par *2to3* est cependant une bibliothèque flexible et générique, il "
"est donc possible d'écrire vos propres correcteurs pour *2to3*.  :mod:"
"`lib2to3` pourrait aussi être adaptée à des applications personnalisées dans "
"lesquelles le code Python doit être édité automatiquement."

#: ../Doc/library/2to3.rst:20
msgid "Using 2to3"
msgstr "Utilisation de *2to3*"

#: ../Doc/library/2to3.rst:22
msgid ""
"2to3 will usually be installed with the Python interpreter as a script.  It "
"is also located in the :file:`Tools/scripts` directory of the Python root."
msgstr ""
"*2to3* sera généralement installé avec l'interpréteur Python en tant que "
"script. Il est également situé dans le dossier :file:`Tools/scripts` à "
"racine de Python."

#: ../Doc/library/2to3.rst:25
msgid ""
"2to3's basic arguments are a list of files or directories to transform.  The "
"directories are recursively traversed for Python sources."
msgstr ""
"Les arguments de base de *2to3* sont une liste de fichiers et de répertoires "
"à transformer.  Les répertoires sont parcourus récursivement pour trouver "
"les sources Python."

#: ../Doc/library/2to3.rst:28
msgid "Here is a sample Python 2.x source file, :file:`example.py`::"
msgstr "Voici un exemple de fichier source Python 2.x, :file:`example.py` ::"

#: ../Doc/library/2to3.rst:36
msgid "It can be converted to Python 3.x code via 2to3 on the command line:"
msgstr ""
"Il peut être converti en code Python 3.x par *2to3* en ligne de commande :"

#: ../Doc/library/2to3.rst:42
msgid ""
"A diff against the original source file is printed.  2to3 can also write the "
"needed modifications right back to the source file.  (A backup of the "
"original file is made unless :option:`!-n` is also given.)  Writing the "
"changes back is enabled with the :option:`!-w` flag:"
msgstr ""
"Une comparaison avec le fichier source original est affichée.  *2to3* peut "
"aussi écrire les modifications nécessaires directement dans le fichier "
"source.  (Une sauvegarde du fichier d'origine est effectuée à moins que "
"l'option :option:`!-n` soit également donnée.)  L'écriture des modifications "
"est activée avec l'option :option:`!-w` :"

#: ../Doc/library/2to3.rst:51
msgid "After transformation, :file:`example.py` looks like this::"
msgstr "Après transformation, :file:`example.py` ressemble à ::"

#: ../Doc/library/2to3.rst:59
msgid ""
"Comments and exact indentation are preserved throughout the translation "
"process."
msgstr ""
"Les commentaires et les retraits sont préservés tout au long du processus de "
"traduction."

#: ../Doc/library/2to3.rst:61
msgid ""
"By default, 2to3 runs a set of :ref:`predefined fixers <2to3-fixers>`.  The :"
"option:`!-l` flag lists all available fixers.  An explicit set of fixers to "
"run can be given with :option:`!-f`.  Likewise the :option:`!-x` explicitly "
"disables a fixer.  The following example runs only the ``imports`` and "
"``has_key`` fixers:"
msgstr ""
"Par défaut, *2to3* exécute un ensemble de :ref:`correcteurs prédéfinis <2to3-"
"fixers>`.  L'option :option:`!-l` énumère tous les correcteurs disponibles.  "
"Un ensemble explicite de correcteurs à exécuter peut être donné avec :option:"
"`!-f`.  De même, :option:`!-x` désactive explicitement un correcteur.  "
"L'exemple suivant exécute uniquement les ``import`` et les correcteurs "
"``has_key`` :"

#: ../Doc/library/2to3.rst:70
msgid "This command runs every fixer except the ``apply`` fixer:"
msgstr ""
"Cette commande exécute tous les correcteurs, sauf le correcteurs ``apply`` :"

#: ../Doc/library/2to3.rst:76
msgid ""
"Some fixers are *explicit*, meaning they aren't run by default and must be "
"listed on the command line to be run.  Here, in addition to the default "
"fixers, the ``idioms`` fixer is run:"
msgstr ""
"Certains correcteurs sont *explicites*, ce qui signifie qu'ils ne sont pas "
"exécutés par défaut et doivent être énumérés sur la ligne de commande à "
"exécuter.  Ici, en plus des correcteurs par défaut, le correcteur ``idioms`` "
"est exécuté :"

#: ../Doc/library/2to3.rst:84
msgid "Notice how passing ``all`` enables all default fixers."
msgstr "Notez que passer ``all`` active tous les correcteurs par défaut."

#: ../Doc/library/2to3.rst:86
msgid ""
"Sometimes 2to3 will find a place in your source code that needs to be "
"changed, but 2to3 cannot fix automatically.  In this case, 2to3 will print a "
"warning beneath the diff for a file.  You should address the warning in "
"order to have compliant 3.x code."
msgstr ""
"Parfois, *2to3* trouvera un endroit dans votre code source qui doit être "
"changé, mais qu'il ne peut pas résoudre automatiquement.  Dans ce cas, "
"*2to3* affiche un avertissement sous la comparaison d'un fichier.  Vous "
"devez traiter l'avertissement afin d'avoir un code conforme à Python 3.x."

#: ../Doc/library/2to3.rst:91
msgid ""
"2to3 can also refactor doctests.  To enable this mode, use the :option:`!-d` "
"flag.  Note that *only* doctests will be refactored.  This also doesn't "
"require the module to be valid Python.  For example, doctest like examples "
"in a reST document could also be refactored with this option."
msgstr ""
"*2to3* peut également réusiner les *doctests*.  Pour activer ce mode, "
"utilisez :option:`!-d`.  Notez que *seul* les *doctests* seront réusinés.  "
"Cela ne nécessite pas que le module soit du Python valide.  Par exemple, des "
"*doctests* tels que des exemples dans un document *reST* peuvent également "
"être réusinés avec cette option."

#: ../Doc/library/2to3.rst:96
msgid ""
"The :option:`!-v` option enables output of more information on the "
"translation process."
msgstr ""
"L'option :option:`!-v` augmente la quantité de messages générés par le "
"processus de traduction."

#: ../Doc/library/2to3.rst:99
msgid ""
"Since some print statements can be parsed as function calls or statements, "
"2to3 cannot always read files containing the print function.  When 2to3 "
"detects the presence of the ``from __future__ import print_function`` "
"compiler directive, it modifies its internal grammar to interpret :func:"
"`print` as a function.  This change can also be enabled manually with the :"
"option:`!-p` flag.  Use :option:`!-p` to run fixers on code that already has "
"had its print statements converted."
msgstr ""
"Puisque certaines instructions d'affichage peuvent être analysées comme des "
"appels ou des instructions de fonction, *2to3* ne peut pas toujours lire les "
"fichiers contenant la fonction d’affichage.  Lorsque *2to3* détecte la "
"présence de la directive compilateur ``from __future__ import "
"print_function``, il modifie sa grammaire interne pour interpréter :func:"
"`print` comme une fonction.  Cette modification peut également être activée "
"manuellement avec l'option :option:`!-p`.  Utilisez :option:`!-p` pour "
"exécuter des correcteurs sur du code dont les instructions d'affichage ont "
"déjà été converties."

#: ../Doc/library/2to3.rst:107
msgid ""
"The :option:`!-o` or :option:`!--output-dir` option allows specification of "
"an alternate directory for processed output files to be written to.  The :"
"option:`!-n` flag is required when using this as backup files do not make "
"sense when not overwriting the input files."
msgstr ""
"L'option :option:`!-o` ou :option:`!--output-dir` permet de donner autre "
"répertoire pour les fichiers de sortie en écriture. L'option :option:`!-n` "
"est requise quand on les utilise comme fichiers de sauvegarde qui n'ont pas "
"de sens si les fichiers d'entrée ne sont pas écrasés."

#: ../Doc/library/2to3.rst:112
msgid "The :option:`!-o` option was added."
msgstr "L'option :option:`!-o` a été ajoutée."

#: ../Doc/library/2to3.rst:115
msgid ""
"The :option:`!-W` or :option:`!--write-unchanged-files` flag tells 2to3 to "
"always write output files even if no changes were required to the file.  "
"This is most useful with :option:`!-o` so that an entire Python source tree "
"is copied with translation from one directory to another. This option "
"implies the :option:`!-w` flag as it would not make sense otherwise."
msgstr ""
"L'option :option:`!-W` ou :option:`!—write-unchanged-files` indique à *2to3* "
"de toujours écrire des fichiers de sortie même si aucun changement du "
"fichier n'était nécessaire.  Ceci est très utile avec `!-o` pour qu'un arbre "
"des sources Python entier soit copié avec la traduction d'un répertoire à "
"l'autre. Cette option implique :option:`!-w` sans quoi elle n'aurait pas de "
"sens."

#: ../Doc/library/2to3.rst:121
msgid "The :option:`!-W` flag was added."
msgstr "L'option :option:`!-W` a été ajoutée."

#: ../Doc/library/2to3.rst:124
msgid ""
"The :option:`!--add-suffix` option specifies a string to append to all "
"output filenames.  The :option:`!-n` flag is required when specifying this "
"as backups are not necessary when writing to different filenames.  Example:"
msgstr ""
"L'option :option:`!--add-suffix` spécifie une chaîne à ajouter à tous les "
"noms de fichiers de sortie. L'option :option:`!-n` est nécessaire dans ce "
"cas, puisque sauvegarder n'est pas nécessaire en écrivant dans des fichiers "
"différents. Exemple:"

#: ../Doc/library/2to3.rst:132
msgid "Will cause a converted file named ``example.py3`` to be written."
msgstr "Écrit un fichier converti nommé ``example.py3``."

#: ../Doc/library/2to3.rst:134
msgid "The :option:`!--add-suffix` option was added."
msgstr "L'option :option:`!--add-suffix` est ajoutée."

#: ../Doc/library/2to3.rst:137
msgid "To translate an entire project from one directory tree to another use:"
msgstr ""
"Pour traduire un projet entier d'une arborescence de répertoires à une "
"autre, utilisez :"

#: ../Doc/library/2to3.rst:147
msgid "Fixers"
msgstr "Correcteurs"

#: ../Doc/library/2to3.rst:149
msgid ""
"Each step of transforming code is encapsulated in a fixer.  The command "
"``2to3 -l`` lists them.  As :ref:`documented above <2to3-using>`, each can "
"be turned on and off individually.  They are described here in more detail."
msgstr ""
"Chaque étape de la transformation du code est encapsulée dans un "
"correcteur.  La commande ``2to3 -l`` les énumère.  Comme :ref:`documenté ci-"
"dessus <2to3-using>`, chacun peut être activé ou désactivé "
"individuellement.  Ils sont décrits plus en détails ici."

#: ../Doc/library/2to3.rst:156
msgid ""
"Removes usage of :func:`apply`.  For example ``apply(function, *args, "
"**kwargs)`` is converted to ``function(*args, **kwargs)``."
msgstr ""
"Supprime l'usage d':func:`apply`.  Par exemple, ``apply(function, *args, "
"**kwargs)`` est converti en ``function(*args, **kwargs)``."

#: ../Doc/library/2to3.rst:161
msgid "Replaces deprecated :mod:`unittest` method names with the correct ones."
msgstr ""
"Remplace les noms de méthodes obsolètes du module :mod:`unittest` par les "
"bons."

#: ../Doc/library/2to3.rst:164 ../Doc/library/2to3.rst:352
msgid "From"
msgstr "De"

#: ../Doc/library/2to3.rst:164 ../Doc/library/2to3.rst:352
msgid "To"
msgstr "À"

#: ../Doc/library/2to3.rst:166
msgid "``failUnlessEqual(a, b)``"
msgstr "``failUnlessEqual(a, b)``"

#: ../Doc/library/2to3.rst:166 ../Doc/library/2to3.rst:168
msgid ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"
msgstr ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"

#: ../Doc/library/2to3.rst:168
msgid "``assertEquals(a, b)``"
msgstr "``assertEquals(a, b)``"

#: ../Doc/library/2to3.rst:170
msgid "``failIfEqual(a, b)``"
msgstr "``failIfEqual(a, b)``"

#: ../Doc/library/2to3.rst:170 ../Doc/library/2to3.rst:172
msgid ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"
msgstr ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"

#: ../Doc/library/2to3.rst:172
msgid "``assertNotEquals(a, b)``"
msgstr "``assertNotEquals(a, b)``"

#: ../Doc/library/2to3.rst:174
msgid "``failUnless(a)``"
msgstr "``failUnless(a)``"

#: ../Doc/library/2to3.rst:174 ../Doc/library/2to3.rst:176
msgid ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"
msgstr ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"

#: ../Doc/library/2to3.rst:176
msgid "``assert_(a)``"
msgstr "``assert_(a)``"

#: ../Doc/library/2to3.rst:178
msgid "``failIf(a)``"
msgstr "``failIf(a)``"

#: ../Doc/library/2to3.rst:178
msgid ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"
msgstr ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"

#: ../Doc/library/2to3.rst:180
msgid "``failUnlessRaises(exc, cal)``"
msgstr "``failUnlessRaises(exc, cal)``"

#: ../Doc/library/2to3.rst:180
msgid ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"
msgstr ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"

#: ../Doc/library/2to3.rst:182
msgid "``failUnlessAlmostEqual(a, b)``"
msgstr "``failUnlessAlmostEqual(a, b)``"

#: ../Doc/library/2to3.rst:182 ../Doc/library/2to3.rst:184
msgid ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"
msgstr ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"

#: ../Doc/library/2to3.rst:184
msgid "``assertAlmostEquals(a, b)``"
msgstr "``assertAlmostEquals(a, b)``"

#: ../Doc/library/2to3.rst:186
msgid "``failIfAlmostEqual(a, b)``"
msgstr "``failIfAlmostEqual(a, b)``"

#: ../Doc/library/2to3.rst:186 ../Doc/library/2to3.rst:188
msgid ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"
msgstr ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"

#: ../Doc/library/2to3.rst:188
msgid "``assertNotAlmostEquals(a, b)``"
msgstr "``assertNotAlmostEquals(a, b)``"

#: ../Doc/library/2to3.rst:194
msgid "Converts :class:`basestring` to :class:`str`."
msgstr "Convertit une :class:`basestring` en :class:`str`."

#: ../Doc/library/2to3.rst:198
msgid ""
"Converts :class:`buffer` to :class:`memoryview`.  This fixer is optional "
"because the :class:`memoryview` API is similar but not exactly the same as "
"that of :class:`buffer`."
msgstr ""
"Convertit un :class:`buffer` en :class:`memoryview`.  Ce correcteur est "
"optionnel car l'API :class:`memoryview` est similaire mais pas exactement "
"pareil que celle de :class:`buffer`."

#: ../Doc/library/2to3.rst:204
msgid ""
"Fixes dictionary iteration methods.  :meth:`dict.iteritems` is converted to :"
"meth:`dict.items`, :meth:`dict.iterkeys` to :meth:`dict.keys`, and :meth:"
"`dict.itervalues` to :meth:`dict.values`.  Similarly, :meth:`dict."
"viewitems`, :meth:`dict.viewkeys` and :meth:`dict.viewvalues` are converted "
"respectively to :meth:`dict.items`, :meth:`dict.keys` and :meth:`dict."
"values`.  It also wraps existing usages of :meth:`dict.items`, :meth:`dict."
"keys`, and :meth:`dict.values` in a call to :class:`list`."
msgstr ""
"Fixe les méthodes d'itération sur les dictionnaires.  :meth:`dict.iteritems` "
"est converti en :meth:`dict.items`, :meth:`dict.iterkeys` en :meth:`dict."
"keys` et :meth:`dict.itervalues` en :meth:`dict.values`.  De la même façon, :"
"meth:`dict.viewitems`, :meth:`dict.viewkeys` et :meth:`dict.viewvalues` sont "
"convertis respectivement en :meth:`dict.items`, :meth:`dict.keys` et :meth:"
"`dict.values`.  Il encapsule également les usages existants de :meth:`dict."
"items`, :meth:`dict.keys` et :meth:`dict.values` dans un appel à :class:"
"`list`."

#: ../Doc/library/2to3.rst:214
msgid "Converts ``except X, T`` to ``except X as T``."
msgstr "Convertit ``except X, T`` en ``except X as T``."

#: ../Doc/library/2to3.rst:218
msgid "Converts the ``exec`` statement to the :func:`exec` function."
msgstr "Convertit l'instruction ``exec`` en fonction :func:`exec`."

#: ../Doc/library/2to3.rst:222
msgid ""
"Removes usage of :func:`execfile`.  The argument to :func:`execfile` is "
"wrapped in calls to :func:`open`, :func:`compile`, and :func:`exec`."
msgstr ""
"Supprime l'usage de :func:`execfile`.  L'argument de :func:`execfile` est "
"encapsulé dans des appels à :func:`open`, :func:`compile` et :func:`exec`."

#: ../Doc/library/2to3.rst:227
msgid ""
"Changes assignment of :attr:`sys.exitfunc` to use of the :mod:`atexit` "
"module."
msgstr ""
"Change l'affectation de :attr:`sys.exitfunc` pour utiliser le module :mod:"
"`atexit`."

#: ../Doc/library/2to3.rst:232
msgid "Wraps :func:`filter` usage in a :class:`list` call."
msgstr "Encapsule l'usage de :func:`filter` dans un appel à :class:`list`."

#: ../Doc/library/2to3.rst:236
msgid ""
"Fixes function attributes that have been renamed.  For example, "
"``my_function.func_closure`` is converted to ``my_function.__closure__``."
msgstr ""
"Fixe les attributs de fonction ayant été renommés. Par exemple, "
"``my_function.func_closure`` est converti en ``my_function.__closure__``."

#: ../Doc/library/2to3.rst:241
msgid "Removes ``from __future__ import new_feature`` statements."
msgstr "Supprime les instructions ``from __future__ import new_feature``."

#: ../Doc/library/2to3.rst:245
msgid "Renames :func:`os.getcwdu` to :func:`os.getcwd`."
msgstr "Renomme :func:`os.getcwdu` en :func:`os.getcwd`."

#: ../Doc/library/2to3.rst:249
msgid "Changes ``dict.has_key(key)`` to ``key in dict``."
msgstr "Change ``dict.has_key(key)`` en ``key in dict``."

#: ../Doc/library/2to3.rst:253
msgid ""
"This optional fixer performs several transformations that make Python code "
"more idiomatic.  Type comparisons like ``type(x) is SomeClass`` and "
"``type(x) == SomeClass`` are converted to ``isinstance(x, SomeClass)``. "
"``while 1`` becomes ``while True``.  This fixer also tries to make use of :"
"func:`sorted` in appropriate places.  For example, this block ::"
msgstr ""
"Ce correcteur optionnel effectue plusieurs transformations rendant le code "
"Python plus idiomatique.  Les comparaisons de types telles que ``type(x) is "
"SomeClass`` et ``type(x) == SomeClass`` sont converties en ``isinstance(x, "
"SomeClass)``. ``while 1`` devient ``while True``.  Ce correcteur essaye "
"aussi d'utiliser :func:`sorted` aux endroits appropriés.  Par exemple, ce "
"bloc ::"

#: ../Doc/library/2to3.rst:262
msgid "is changed to ::"
msgstr "est transformé en ::"

#: ../Doc/library/2to3.rst:268
msgid "Detects sibling imports and converts them to relative imports."
msgstr ""
"Détecte les importations voisines et les convertit en importations relatives."

#: ../Doc/library/2to3.rst:272
msgid "Handles module renames in the standard library."
msgstr "Gère les renommages de modules dans la bibliothèque standard."

#: ../Doc/library/2to3.rst:276
msgid ""
"Handles other modules renames in the standard library.  It is separate from "
"the :2to3fixer:`imports` fixer only because of technical limitations."
msgstr ""
"Gères d'autres renommages de modules dans la bibliothèque standard. Il est "
"distinct de :2to3fixer:`imports` seulement en raison de limitations "
"techniques."

#: ../Doc/library/2to3.rst:281
msgid "Converts ``input(prompt)`` to ``eval(input(prompt))``."
msgstr "Convertit ``input(prompt)`` en ``eval(input(prompt))``."

#: ../Doc/library/2to3.rst:285
msgid "Converts :func:`intern` to :func:`sys.intern`."
msgstr "Convertit :func:`intern` en :func:`sys.intern`."

#: ../Doc/library/2to3.rst:289
msgid ""
"Fixes duplicate types in the second argument of :func:`isinstance`.  For "
"example, ``isinstance(x, (int, int))`` is converted to ``isinstance(x, "
"int)`` and ``isinstance(x, (int, float, int))`` is converted to "
"``isinstance(x, (int, float))``."
msgstr ""
"Fixe les types dupliqués dans le second argument de :func:`isinstance`.  Par "
"exemple, ``isinstance(x, (int, int))`` est converti en ``isinstance(x, "
"int)`` et ``isinstance(x, (int, float, int))`` est converti en "
"``isinstance(x, (int, float))``."

#: ../Doc/library/2to3.rst:296
msgid ""
"Removes imports of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap`.  Imports of :func:`itertools.ifilterfalse` are also "
"changed to :func:`itertools.filterfalse`."
msgstr ""
"Supprime les importations de :func:`itertools.ifilter`, :func:`itertools."
"izip` et :func:`itertools.imap`. Les importations de :func:`itertools."
"ifilterfalse` sont aussi changées en :func:`itertools.filterfalse`."

#: ../Doc/library/2to3.rst:302
msgid ""
"Changes usage of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap` to their built-in equivalents. :func:`itertools."
"ifilterfalse` is changed to :func:`itertools.filterfalse`."
msgstr ""
"Change l'usage de :func:`itertools.ifilter`, :func:`itertools.izip` et :func:"
"`itertools.imap` en leurs équivalents intégrés. :func:`itertools."
"ifilterfalse` est changé en :func:`itertools.filterfalse`."

#: ../Doc/library/2to3.rst:308
msgid "Renames :class:`long` to :class:`int`."
msgstr "Renomme :class:`long` en :class:`int`."

#: ../Doc/library/2to3.rst:312
msgid ""
"Wraps :func:`map` in a :class:`list` call.  It also changes ``map(None, x)`` "
"to ``list(x)``.  Using ``from future_builtins import map`` disables this "
"fixer."
msgstr ""
"Encapsule :func:`map` dans un appel à :class:`list`.  Change aussi "
"``map(None, x)`` en ``list(x)``.  L'usage de ``from future_builtins import "
"map`` désactive ce correcteur."

#: ../Doc/library/2to3.rst:318
msgid ""
"Converts the old metaclass syntax (``__metaclass__ = Meta`` in the class "
"body) to the new (``class X(metaclass=Meta)``)."
msgstr ""
"Convertit l'ancienne syntaxe de métaclasse (``__metaclass__ = Meta`` dans le "
"corps de la classe) à la nouvelle (``class X(metaclasse=Meta)``)."

#: ../Doc/library/2to3.rst:323
msgid ""
"Fixes old method attribute names.  For example, ``meth.im_func`` is "
"converted to ``meth.__func__``."
msgstr ""
"Fixe les anciens noms d'attributs de méthodes.  Par exemple, ``meth."
"im_func`` est converti en ``meth.__func__``."

#: ../Doc/library/2to3.rst:328
msgid "Converts the old not-equal syntax, ``<>``, to ``!=``."
msgstr "Convertit l'ancienne syntaxe d'inégalité, ``<>``, en ``!=``."

#: ../Doc/library/2to3.rst:332
msgid ""
"Converts the use of iterator's :meth:`~iterator.next` methods to the :func:"
"`next` function.  It also renames :meth:`next` methods to :meth:`~iterator."
"__next__`."
msgstr ""
"Convertit l'usage des méthodes :meth:`~iterator.next` de l' itérateur en :"
"func:`next`.  Renomme également les méthodes :meth:`next` en :meth:"
"`~iterator.__next__`."

#: ../Doc/library/2to3.rst:338
msgid "Renames :meth:`__nonzero__` to :meth:`~object.__bool__`."
msgstr "Renomme  :meth:`__nonzero__` en :meth:`~object.__bool__`."

#: ../Doc/library/2to3.rst:342
msgid "Converts octal literals into the new syntax."
msgstr ""
"Convertit les nombres écrits littéralement en octal dans leur nouvelle "
"syntaxe."

#: ../Doc/library/2to3.rst:346
msgid ""
"Converts calls to various functions in the :mod:`operator` module to other, "
"but equivalent, function calls.  When needed, the appropriate ``import`` "
"statements are added, e.g. ``import collections.abc``.  The following "
"mapping are made:"
msgstr ""
"Convertit les appels à diverses fonctions du module :mod:`operator` en "
"appels d'autres fonctions équivalentes.  Si besoin, les instructions "
"``import`` appropriées sont ajoutées, e.g. ``import collections.abc``.  Les "
"correspondances suivantes sont appliquées :"

#: ../Doc/library/2to3.rst:354
msgid "``operator.isCallable(obj)``"
msgstr "``operator.isCallable(obj)``"

#: ../Doc/library/2to3.rst:354
msgid "``callable(obj)``"
msgstr "``callable(obj)``"

#: ../Doc/library/2to3.rst:355
msgid "``operator.sequenceIncludes(obj)``"
msgstr "``operator.sequenceIncludes(obj)``"

#: ../Doc/library/2to3.rst:355
msgid "``operator.contains(obj)``"
msgstr "``operator.contains(obj)``"

#: ../Doc/library/2to3.rst:356
msgid "``operator.isSequenceType(obj)``"
msgstr "``operator.isSequenceType(obj)``"

#: ../Doc/library/2to3.rst:356
msgid "``isinstance(obj, collections.abc.Sequence)``"
msgstr "``isinstance(obj, collections.abc.Sequence)``"

#: ../Doc/library/2to3.rst:357
msgid "``operator.isMappingType(obj)``"
msgstr "``operator.isMappingType(obj)``"

#: ../Doc/library/2to3.rst:357
msgid "``isinstance(obj, collections.abc.Mapping)``"
msgstr "``isinstance(obj, collections.abc.Mapping)``"

#: ../Doc/library/2to3.rst:358
msgid "``operator.isNumberType(obj)``"
msgstr "``operator.isNumberType(obj)``"

#: ../Doc/library/2to3.rst:358
msgid "``isinstance(obj, numbers.Number)``"
msgstr "``isinstance(obj, numbers.Number)``"

#: ../Doc/library/2to3.rst:359
msgid "``operator.repeat(obj, n)``"
msgstr "``operator.repeat(obj, n)``"

#: ../Doc/library/2to3.rst:359
msgid "``operator.mul(obj, n)``"
msgstr "``operator.mul(obj, n)``"

#: ../Doc/library/2to3.rst:360
msgid "``operator.irepeat(obj, n)``"
msgstr "``operator.irepeat(obj, n)``"

#: ../Doc/library/2to3.rst:360
msgid "``operator.imul(obj, n)``"
msgstr "``operator.imul(obj, n)``"

#: ../Doc/library/2to3.rst:365
msgid ""
"Add extra parenthesis where they are required in list comprehensions.  For "
"example, ``[x for x in 1, 2]`` becomes ``[x for x in (1, 2)]``."
msgstr ""
"Ajoute des parenthèses supplémentaires lorsqu'elles sont nécessaires dans "
"les listes en compréhension.  Par exemple, ``[x for x in 1, 2]`` devient "
"``[x for x in (1, 2)]``."

#: ../Doc/library/2to3.rst:370
msgid "Converts the ``print`` statement to the :func:`print` function."
msgstr "Convertit l'instruction ``print`` en fonction :func:`print`."

#: ../Doc/library/2to3.rst:374
msgid ""
"Converts ``raise E, V`` to ``raise E(V)``, and ``raise E, V, T`` to ``raise "
"E(V).with_traceback(T)``.  If ``E`` is a tuple, the translation will be "
"incorrect because substituting tuples for exceptions has been removed in 3.0."
msgstr ""
"Convertit ``raise E, V`` en ``raise E(V)`` et ``raise E, V, T`` en ``raise "
"E(V).with_traceback(T)``.  Si ``E`` est un tuple, la conversion sera "
"incorrecte puisque la substitution de tuples aux exceptions a été supprimée "
"en 3.0."

#: ../Doc/library/2to3.rst:380
msgid "Converts :func:`raw_input` to :func:`input`."
msgstr "Convertit :func:`raw_input` en :func:`input`."

#: ../Doc/library/2to3.rst:384
msgid "Handles the move of :func:`reduce` to :func:`functools.reduce`."
msgstr "Gère le déplacement de :func:`reduce` à :func:`functools.reduce`."

#: ../Doc/library/2to3.rst:388
msgid "Converts :func:`reload` to :func:`importlib.reload`."
msgstr ""
"Convertit les appels à :func:`reload` en appels à :func:`importlib.reload`."

#: ../Doc/library/2to3.rst:392
msgid "Changes :data:`sys.maxint` to :data:`sys.maxsize`."
msgstr "Change :data:`sys.maxint` en :data:`sys.maxsize`."

#: ../Doc/library/2to3.rst:396
msgid "Replaces backtick repr with the :func:`repr` function."
msgstr ""
"Remplace les accents graves utilisés comme ``repr`` par des appels à :func:"
"`repr`."

#: ../Doc/library/2to3.rst:400
msgid ""
"Replaces use of the :class:`set` constructor with set literals.  This fixer "
"is optional."
msgstr ""
"Remplace l'usage du constructeur de :class:`set` par les ensembles "
"littéraux.  Ce correcteur est optionnel."

#: ../Doc/library/2to3.rst:405
msgid "Renames :exc:`StandardError` to :exc:`Exception`."
msgstr "Renomme :exc:`StandardError` en :exc:`Exception`."

#: ../Doc/library/2to3.rst:409
msgid ""
"Changes the deprecated :data:`sys.exc_value`, :data:`sys.exc_type`, :data:"
"`sys.exc_traceback` to use :func:`sys.exc_info`."
msgstr ""
"Change les :data:`sys.exc_value`, :data:`sys.exc_type`, :data:`sys."
"exc_traceback` dépréciés en :func:`sys.exc_info`."

#: ../Doc/library/2to3.rst:414
msgid "Fixes the API change in generator's :meth:`throw` method."
msgstr ""
"Fixe le changement de l'API dans la méthode :meth:`throw` du générateur."

#: ../Doc/library/2to3.rst:418
msgid ""
"Removes implicit tuple parameter unpacking.  This fixer inserts temporary "
"variables."
msgstr ""
"Supprime la décompression implicite des paramètres d'un tuple. Ce correcteur "
"ajoute des variables temporaires."

#: ../Doc/library/2to3.rst:423
msgid ""
"Fixes code broken from the removal of some members in the :mod:`types` "
"module."
msgstr ""
"Fixe le code cassé par la suppression de certains membres du module :mod:"
"`types`."

#: ../Doc/library/2to3.rst:428
msgid "Renames :class:`unicode` to :class:`str`."
msgstr "Renomme :class:`unicode` en :class:`str`."

#: ../Doc/library/2to3.rst:432
msgid ""
"Handles the rename of :mod:`urllib` and :mod:`urllib2` to the :mod:`urllib` "
"package."
msgstr ""
"Gère le renommage des paquets :mod:`urllib` et :mod:`urllib2` en :mod:"
"`urllib`."

#: ../Doc/library/2to3.rst:437
msgid ""
"Removes excess whitespace from comma separated items.  This fixer is "
"optional."
msgstr ""
"Supprime l'espace excédentaire des éléments séparés par des virgules. Ce "
"correcteur est optionnel."

#: ../Doc/library/2to3.rst:442
msgid ""
"Renames :func:`xrange` to :func:`range` and wraps existing :func:`range` "
"calls with :class:`list`."
msgstr ""
"Renomme la fonction :func:`xrange` en :func:`range` et encapsule les appels "
"à la fonction :func:`range` avec des appels à :class:`list`."

#: ../Doc/library/2to3.rst:447
msgid "Changes ``for x in file.xreadlines()`` to ``for x in file``."
msgstr "Change ``for x in file.xreadlines()`` en ``for x in file``."

#: ../Doc/library/2to3.rst:451
msgid ""
"Wraps :func:`zip` usage in a :class:`list` call.  This is disabled when "
"``from future_builtins import zip`` appears."
msgstr ""
"Encapsule l'usage de :func:`zip` dans un appel à :class:`list`.  Ceci est "
"désactivé lorsque ``from future_builtins import zip`` apparaît."

#: ../Doc/library/2to3.rst:456
msgid ":mod:`lib2to3` - 2to3's library"
msgstr ":mod:`lib2to3` — la bibliothèque de *2to3*"

#: ../Doc/library/2to3.rst:465
msgid "**Source code:** :source:`Lib/lib2to3/`"
msgstr "**Code source:** :source:`Lib/lib2to3/`"

#: ../Doc/library/2to3.rst:471
msgid ""
"The :mod:`lib2to3` API should be considered unstable and may change "
"drastically in the future."
msgstr ""
"L'API de :mod:`lib2to3` devrait être considérée instable et peut changer "
"drastiquement dans le futur."

#~ msgid "``hasattr(obj, '__call__')``"
#~ msgstr "``hasattr(obj, '__call__')``"
