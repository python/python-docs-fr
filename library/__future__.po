# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 21:40+0100\n"
"PO-Revision-Date: 2021-11-06 19:52+0100\n"
"Last-Translator: Jean Abou Samra <jean@abou-samra.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0\n"

#: library/__future__.rst:2
#, fuzzy
msgid ":mod:`!__future__` --- Future statement definitions"
msgstr ":mod:`__future__` — Définitions des futurs"

#: library/__future__.rst:7
msgid "**Source code:** :source:`Lib/__future__.py`"
msgstr "**Source code:** :source:`Lib/_future_.py`"

#: library/__future__.rst:11
msgid ""
"Imports of the form ``from __future__ import feature`` are called :ref:"
"`future statements <future>`. These are special-cased by the Python compiler "
"to allow the use of new Python features in modules containing the future "
"statement before the release in which the feature becomes standard."
msgstr ""

#: library/__future__.rst:16
msgid ""
"While these future statements are given additional special meaning by the "
"Python compiler, they are still executed like any other import statement and "
"the :mod:`__future__` exists and is handled by the import system the same "
"way any other Python module would be. This design serves three purposes:"
msgstr ""

#: library/__future__.rst:21
msgid ""
"To avoid confusing existing tools that analyze import statements and expect "
"to find the modules they're importing."
msgstr ""
"éviter de dérouter les outils existants qui analysent les instructions "
"d'importation et s'attendent à trouver les modules qu'ils importent ;"

#: library/__future__.rst:24
msgid ""
"To document when incompatible changes were introduced, and when they will be "
"--- or were --- made mandatory.  This is a form of executable documentation, "
"and can be inspected programmatically via importing :mod:`__future__` and "
"examining its contents."
msgstr ""
"Pour documenter le phasage de changements entraînant des incompatibilités : "
"introduction, utilisation obligatoire. Il s’agit d’une forme de "
"documentation exécutable, qui peut être inspectée par un programme en "
"important :mod:`__future__` et en examinant son contenu."

#: library/__future__.rst:29
#, fuzzy
msgid ""
"To ensure that :ref:`future statements <future>` run under releases prior to "
"Python 2.1 at least yield runtime exceptions (the import of :mod:"
"`__future__` will fail, because there was no module of that name prior to "
"2.1)."
msgstr ""
"s'assurer que les :ref:`instructions *future* <future>` lancées sous les "
"versions antérieures à 2.1 lèvent au moins des exceptions à l'exécution "
"(l’importation du module :mod:`__future__` échoue, car il n’y avait pas de "
"module de ce nom avant 2.1) ;"

#: library/__future__.rst:34
msgid "Module Contents"
msgstr ""

#: library/__future__.rst:36
msgid ""
"No feature description will ever be deleted from :mod:`__future__`. Since "
"its introduction in Python 2.1 the following features have found their way "
"into the language using this mechanism:"
msgstr ""
"Aucune fonctionnalité ne sera jamais supprimée de :mod:`__future__`. Depuis "
"son introduction dans Python 2.1, les fonctionnalités suivantes ont trouvé "
"leur places dans le langage utilisant ce mécanisme :"

#: library/__future__.rst:41
msgid "feature"
msgstr "fonctionnalité"

#: library/__future__.rst:41
msgid "optional in"
msgstr "optionnel dans"

#: library/__future__.rst:41
msgid "mandatory in"
msgstr "obligatoire dans"

#: library/__future__.rst:41
msgid "effect"
msgstr "effet"

#: library/__future__.rst:43
msgid "nested_scopes"
msgstr "nested_scopes"

#: library/__future__.rst:43
msgid "2.1.0b1"
msgstr "2.1.0b1"

#: library/__future__.rst:43
msgid "2.2"
msgstr "2.2"

#: library/__future__.rst:43
msgid ":pep:`227`: *Statically Nested Scopes*"
msgstr ":pep:`227` : *Portées imbriquées*"

#: library/__future__.rst:46
msgid "generators"
msgstr "générateurs"

#: library/__future__.rst:46
msgid "2.2.0a1"
msgstr "2.2.0a1"

#: library/__future__.rst:46
msgid "2.3"
msgstr "2.3"

#: library/__future__.rst:46
msgid ":pep:`255`: *Simple Generators*"
msgstr ":pep:`255` : *Générateurs simples*"

#: library/__future__.rst:49
msgid "division"
msgstr "division"

#: library/__future__.rst:49
msgid "2.2.0a2"
msgstr "2.2.0a2"

#: library/__future__.rst:52 library/__future__.rst:61
msgid "3.0"
msgstr "3.0"

#: library/__future__.rst:49
msgid ":pep:`238`: *Changing the Division Operator*"
msgstr ":pep:`238` : *Changement de l'opérateur de division*"

#: library/__future__.rst:52
msgid "absolute_import"
msgstr "absolute_import"

#: library/__future__.rst:55
msgid "2.5.0a1"
msgstr "2.5.0a1"

#: library/__future__.rst:52
msgid ":pep:`328`: *Imports: Multi-Line and Absolute/Relative*"
msgstr ""
":pep:`328` : *Importations : multilignes et absolues/relatives* (ressource "
"en anglais)"

#: library/__future__.rst:55
msgid "with_statement"
msgstr "with_statement"

#: library/__future__.rst:55
msgid "2.6"
msgstr "2.6"

#: library/__future__.rst:55
msgid ":pep:`343`: *The \"with\" Statement*"
msgstr ":pep:`343` : *L'instruction \"with\"*"

#: library/__future__.rst:58
msgid "print_function"
msgstr "print_function"

#: library/__future__.rst:61
msgid "2.6.0a2"
msgstr "2.6.0a2"

#: library/__future__.rst:58
msgid ":pep:`3105`: *Make print a function*"
msgstr ":pep:`3105` : *Transformation de print en fonction*"

#: library/__future__.rst:61
msgid "unicode_literals"
msgstr "unicode_literals"

#: library/__future__.rst:61
msgid ":pep:`3112`: *Bytes literals in Python 3000*"
msgstr ":pep:`3112` : *Chaînes d'octets littéraux en Python 3000*"

#: library/__future__.rst:64
msgid "generator_stop"
msgstr "generator_stop"

#: library/__future__.rst:64
msgid "3.5.0b1"
msgstr "3.5.0b1"

#: library/__future__.rst:64
msgid "3.7"
msgstr "3.7"

#: library/__future__.rst:64
msgid ":pep:`479`: *StopIteration handling inside generators*"
msgstr ""
":pep:`479` : *Gestion de *StopIteration* à l’intérieur des générateurs*"

#: library/__future__.rst:67
msgid "annotations"
msgstr "annotations"

#: library/__future__.rst:67
msgid "3.7.0b1"
msgstr "3.7.0b1"

#: library/__future__.rst:67
msgid "TBD [1]_"
msgstr ""

#: library/__future__.rst:67
msgid ":pep:`563`: *Postponed evaluation of annotations*"
msgstr ":pep:`563` : *Évaluation différée des annotations*"

#: library/__future__.rst:77
msgid "Each statement in :file:`__future__.py` is of the form::"
msgstr "Chaque instruction dans :file:`__future__.py` est de la forme ::"

#: library/__future__.rst:79
msgid ""
"FeatureName = _Feature(OptionalRelease, MandatoryRelease,\n"
"                       CompilerFlag)"
msgstr ""

#: library/__future__.rst:82
msgid ""
"where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both "
"are 5-tuples of the same form as :data:`sys.version_info`::"
msgstr ""
"où, normalement, *OptionalRelease* est inférieur à *MandatoryRelease*, et "
"les deux sont des quintuplets de la même forme que :data:`sys."
"version_info` ::"

#: library/__future__.rst:85
msgid ""
"(PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int\n"
" PY_MINOR_VERSION, # the 1; an int\n"
" PY_MICRO_VERSION, # the 0; an int\n"
" PY_RELEASE_LEVEL, # \"alpha\", \"beta\", \"candidate\" or \"final\"; "
"string\n"
" PY_RELEASE_SERIAL # the 3; an int\n"
")"
msgstr ""

#: library/__future__.rst:94
msgid ""
"*OptionalRelease* records the first release in which the feature was "
"accepted."
msgstr ""
"*OptionalRelease* enregistre la première version dans laquelle la "
"fonctionnalité a été acceptée."

#: library/__future__.rst:98
msgid ""
"In the case of a *MandatoryRelease* that has not yet occurred, "
"*MandatoryRelease* predicts the release in which the feature will become "
"part of the language."
msgstr ""
"Dans le cas d'un *MandatoryRelease* qui n'a pas encore eu lieu, "
"*MandatoryRelease* prédit la *release* dans laquelle la fonctionnalité "
"deviendra un élément du langage."

#: library/__future__.rst:102
msgid ""
"Else *MandatoryRelease* records when the feature became part of the "
"language; in releases at or after that, modules no longer need a future "
"statement to use the feature in question, but may continue to use such "
"imports."
msgstr ""
"Sinon *MandatoryRelease* enregistre lorsque la fonctionnalité est devenue "
"une partie du langage ; dans cette version ou les suivantes, les modules "
"n'ont plus besoin d'une déclaration *future* pour utiliser la fonctionnalité "
"en question, mais ils peuvent continuer à utiliser ces importations."

#: library/__future__.rst:106
#, fuzzy
msgid ""
"*MandatoryRelease* may also be ``None``, meaning that a planned feature got "
"dropped or that it is not yet decided."
msgstr ""
"*MandatoryRelease* peut également être ``None``, ce qui signifie qu'une "
"fonction planifiée a été abandonnée."

#: library/__future__.rst:111
#, fuzzy
msgid ""
"*CompilerFlag* is the (bitfield) flag that should be passed in the fourth "
"argument to the built-in function :func:`compile` to enable the feature in "
"dynamically compiled code.  This flag is stored in the :attr:`_Feature."
"compiler_flag` attribute on :class:`_Feature` instances."
msgstr ""
"*CompilerFlag* est un drapeau (chaque bit représente un champ) qui doit être "
"passé en tant que quatrième argument à la fonction native :func:`compile` "
"pour activer la fonctionnalité dans le code compilé dynamiquement. Cet "
"indicateur est stocké dans l'attribut :attr:`compiler_flag` dans les "
"instances de :class:`_Feature`."

#: library/__future__.rst:117
msgid ""
"``from __future__ import annotations`` was previously scheduled to become "
"mandatory in Python 3.10, but the Python Steering Council twice decided to "
"delay the change (`announcement for Python 3.10 <https://mail.python.org/"
"archives/list/python-dev@python.org/message/CLVXXPQ2T2LQ5MP2Y53VVQFCXYWQJHKZ/"
">`__; `announcement for Python 3.11 <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__). No "
"final decision has been made yet. See also :pep:`563` and :pep:`649`."
msgstr ""

#: library/__future__.rst:127
msgid ":ref:`future`"
msgstr ":ref:`future`"

#: library/__future__.rst:128
msgid "How the compiler treats future imports."
msgstr "Comment le compilateur gère les importations « futures »."

#: library/__future__.rst:130
msgid ":pep:`236` - Back to the __future__"
msgstr ""

#: library/__future__.rst:131
msgid "The original proposal for the __future__ mechanism."
msgstr ""

#~ msgid ":mod:`__future__` is a real module, and serves three purposes:"
#~ msgstr ""
#~ "Le module :mod:`__future__` est un vrai module, et il a trois objectifs :"

#~ msgid ""
#~ "Instances of class :class:`_Feature` have two corresponding methods, :"
#~ "meth:`getOptionalRelease` and :meth:`getMandatoryRelease`."
#~ msgstr ""
#~ "Les instances de classe :class:`_Feature` ont deux méthodes "
#~ "correspondantes, :meth:`getOptionalRelease` et :meth:"
#~ "`getMandatoryRelease`."

#~ msgid "3.11"
#~ msgstr "3.11"

#~ msgid "3.10"
#~ msgstr "3.10"

#~ msgid "4.0"
#~ msgstr "4.0"
