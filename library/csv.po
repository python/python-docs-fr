# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: 2020-04-27 23:16+0200\n"
"Last-Translator: Mathieu Dupuy <deronnax@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/library/csv.rst:2
msgid ":mod:`csv` --- CSV File Reading and Writing"
msgstr ":mod:`csv` — Lecture et écriture de fichiers CSV"

#: ../Doc/library/csv.rst:9
msgid "**Source code:** :source:`Lib/csv.py`"
msgstr "**Code source :** :source:`Lib/csv.py`"

#: ../Doc/library/csv.rst:17
msgid ""
"The so-called CSV (Comma Separated Values) format is the most common import "
"and export format for spreadsheets and databases.  CSV format was used for "
"many years prior to attempts to describe the format in a standardized way "
"in :rfc:`4180`.  The lack of a well-defined standard means that subtle "
"differences often exist in the data produced and consumed by different "
"applications.  These differences can make it annoying to process CSV files "
"from multiple sources. Still, while the delimiters and quoting characters "
"vary, the overall format is similar enough that it is possible to write a "
"single module which can efficiently manipulate such data, hiding the details "
"of reading and writing the data from the programmer."
msgstr ""
"Le format CSV (*Comma Separated Values*, valeurs séparées par des virgules) "
"est le format le plus commun dans l'importation et l'exportation de feuilles "
"de calculs et de bases de données.  Le format fut utilisé pendant des années "
"avant qu'aient lieu des tentatives de standardisation avec la :rfc:`4180`.  "
"L'absence de format bien défini signifie que des différences subtiles "
"existent dans la production et la consommation de données par différentes "
"applications.  Ces différences peuvent gêner lors du traitement de fichiers "
"CSV depuis des sources multiples. Cependant, bien que les séparateurs et "
"délimiteurs varient, le format global est suffisamment similaire pour qu'un "
"module unique puisse manipuler efficacement ces données, masquant au "
"programmeur les détails de lecture/écriture des données."

#: ../Doc/library/csv.rst:28
msgid ""
"The :mod:`csv` module implements classes to read and write tabular data in "
"CSV format.  It allows programmers to say, \"write this data in the format "
"preferred by Excel,\" or \"read data from this file which was generated by "
"Excel,\" without knowing the precise details of the CSV format used by "
"Excel.  Programmers can also describe the CSV formats understood by other "
"applications or define their own special-purpose CSV formats."
msgstr ""
"Le module :mod:`csv` implémente des classes pour lire et écrire des données "
"tabulaires au format CSV.  Il vous permet de dire « écris ces données dans "
"le format préféré par Excel » ou « lis les données de ce fichier généré par "
"Excel », sans connaître les détails précis du format CSV utilisé par Excel.  "
"Vous pouvez aussi décrire les formats CSV utilisés par d'autres application "
"ou définir vos propres spécialisations."

#: ../Doc/library/csv.rst:35
msgid ""
"The :mod:`csv` module's :class:`reader` and :class:`writer` objects read and "
"write sequences.  Programmers can also read and write data in dictionary "
"form using the :class:`DictReader` and :class:`DictWriter` classes."
msgstr ""
"Les objets :class:`reader` et :class:`writer` du module :mod:`csv` lisent et "
"écrivent des séquences.  Vous pouvez aussi lire/écrire les données dans un "
"dictionnaire en utilisant les classes :class:`DictReader` et :class:"
"`DictWriter`."

#: ../Doc/library/csv.rst:41
msgid ":pep:`305` - CSV File API"
msgstr ":pep:`305` ­— Interface des fichiers CSV"

#: ../Doc/library/csv.rst:42
msgid "The Python Enhancement Proposal which proposed this addition to Python."
msgstr ""
"La proposition d'amélioration de Python (PEP) qui a proposé cet ajout au "
"langage."

#: ../Doc/library/csv.rst:48
msgid "Module Contents"
msgstr "Contenu du module"

#: ../Doc/library/csv.rst:50
msgid "The :mod:`csv` module defines the following functions:"
msgstr "Le module :mod:`csv` définit les fonctions suivantes :"

#: ../Doc/library/csv.rst:58
msgid ""
"Return a reader object which will iterate over lines in the given *csvfile*. "
"*csvfile* can be any object which supports the :term:`iterator` protocol and "
"returns a string each time its :meth:`!__next__` method is called --- :term:"
"`file objects <file object>` and list objects are both suitable.   If "
"*csvfile* is a file object, it should be opened with ``newline=''``. [1]_  "
"An optional *dialect* parameter can be given which is used to define a set "
"of parameters specific to a particular CSV dialect.  It may be an instance "
"of a subclass of the :class:`Dialect` class or one of the strings returned "
"by the :func:`list_dialects` function.  The other optional *fmtparams* "
"keyword arguments can be given to override individual formatting parameters "
"in the current dialect.  For full details about the dialect and formatting "
"parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"Renvoie un objet lecteur, qui itérera sur les lignes de l'objet *csvfile* "
"donné. *csvfile* peut être n'importe quel objet supportant le protocole :"
"term:`itérateur <iterator>` et renvoyant une chaîne de caractères chaque "
"fois que sa méthode :meth:`!__next__` est appelée — les :term:`fichiers "
"objets <file object>` et les listes sont tous deux valables.   Si *csvfile* "
"est un fichier, il doit être ouvert avec ``newline=''``. [1]_  Un paramètre "
"*dialect* optionnel peut être fourni pour définir un ensemble de paramètres "
"spécifiques à un dialecte CSV particulier.  Il peut s'agir d'une instance de "
"sous-classe de :class:`Dialect` ou de l'une des chaînes renvoyées par la "
"fonction :func:`list_dialects`.  Les autres arguments nommés optionnels "
"(*fmtparams*) peuvent être spécifiés pour redéfinir des paramètres de "
"formatage particuliers dans le dialecte courant.  Pour des détails complets "
"sur les dialectes et paramètres de formatage, voir la section :ref:`csv-fmt-"
"params`."

#: ../Doc/library/csv.rst:71
msgid ""
"Each row read from the csv file is returned as a list of strings.  No "
"automatic data type conversion is performed unless the ``QUOTE_NONNUMERIC`` "
"format option is specified (in which case unquoted fields are transformed "
"into floats)."
msgstr ""
"Chaque ligne lue depuis le fichier CSV est renvoyée comme une liste de "
"chaînes de caractères.  Aucune conversion automatique de type des données "
"n'est effectuée à moins que l'option de formatage ``QUOTE_NONNUMERIC`` soit "
"spécifiée (dans ce cas, les champs sans guillemets sont transformés en "
"nombres flottants)."

#: ../Doc/library/csv.rst:75 ../Doc/library/csv.rst:105
#: ../Doc/library/csv.rst:172 ../Doc/library/csv.rst:208
msgid "A short usage example::"
msgstr "Un court exemple d'utilisation ::"

#: ../Doc/library/csv.rst:88
msgid ""
"Return a writer object responsible for converting the user's data into "
"delimited strings on the given file-like object.  *csvfile* can be any "
"object with a :func:`write` method.  If *csvfile* is a file object, it "
"should be opened with ``newline=''`` [1]_.  An optional *dialect* parameter "
"can be given which is used to define a set of parameters specific to a "
"particular CSV dialect.  It may be an instance of a subclass of the :class:"
"`Dialect` class or one of the strings returned by the :func:`list_dialects` "
"function.  The other optional *fmtparams* keyword arguments can be given to "
"override individual formatting parameters in the current dialect.  For full "
"details about the dialect and formatting parameters, see section :ref:`csv-"
"fmt-params`. To make it as easy as possible to interface with modules which "
"implement the DB API, the value :const:`None` is written as the empty "
"string.  While this isn't a reversible transformation, it makes it easier to "
"dump SQL NULL data values to CSV files without preprocessing the data "
"returned from a ``cursor.fetch*`` call. All other non-string data are "
"stringified with :func:`str` before being written."
msgstr ""
"Renvoie un objet transcripteur responsable de convertir les données de "
"l'utilisateur en chaînes délimitées sur l'objet fichier-compatible donné.  "
"*csvfile* peut être n'importe quel objet avec une méthode :func:`write`.  Si "
"*csvfile* est un fichier, il doit être ouvert avec ``newline=''``. [1]_  Un "
"paramètre *dialect* optionnel peut être fourni pour définir un ensemble de "
"paramètres spécifiques à un dialecte CSV particulier.  Il peut s'agir d'une "
"instance de sous-classe de :class:`Dialect` ou de l'une des chaînes "
"renvoyées par la fonction :func:`list_dialects`.  Les autres arguments "
"nommés optionnels (*fmtparams*) peuvent être spécifiés pour redéfinir des "
"paramètres de formatage particuliers dans le dialecte courant.  Pour des "
"détails complets sur les dialectes et paramètres de formatage, voir la "
"section :ref:`csv-fmt-params`. Pour faciliter au mieux l'interfaçage avec "
"d'autres modules implémentant l'interface *DB*, la valeur :const:`None` est "
"écrite comme une chaîne vide.  Bien que ce ne soit pas une transformation "
"réversible, cela simplifie l'exportation de données SQL *NULL* vers des "
"fichiers CSV sans pré-traiter les données renvoyées par un appel à ``cursor."
"fetch*``. Toutes les autres données qui ne sont pas des chaînes de "
"caractères sont transformées en chaînes par un appel à :func:`str` avant "
"d'être écrites."

#: ../Doc/library/csv.rst:117
msgid ""
"Associate *dialect* with *name*.  *name* must be a string. The dialect can "
"be specified either by passing a sub-class of :class:`Dialect`, or by "
"*fmtparams* keyword arguments, or both, with keyword arguments overriding "
"parameters of the dialect. For full details about the dialect and formatting "
"parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"Associe *dialect* avec *name*.  *name* doit être une chaîne de caractères. "
"Le dialecte peut être spécifié en passant une instance d'une sous-classe de :"
"class:`Dialect`, des arguments nommés *fmtparams*, ou les deux, avec les "
"arguments nommés redéfinissant les paramètres du dialecte. Pour des détails "
"complets sur les dialectes et paramètres de formatage, voir la section :ref:"
"`csv-fmt-params`."

#: ../Doc/library/csv.rst:126
msgid ""
"Delete the dialect associated with *name* from the dialect registry.  An :"
"exc:`Error` is raised if *name* is not a registered dialect name."
msgstr ""
"Supprime le dialecte associé à *name* depuis le registre des dialectes.  "
"Une :exc:`Error` est levée si *name* n'est pas un nom de dialecte enregistré."

#: ../Doc/library/csv.rst:132
msgid ""
"Return the dialect associated with *name*.  An :exc:`Error` is raised if "
"*name* is not a registered dialect name.  This function returns an "
"immutable :class:`Dialect`."
msgstr ""
"Renvoie le dialecte associé à *name*.  Une :exc:`Error` est levée si *name* "
"n'est pas un nom de dialecte enregistré.  Cette fonction renvoie un objet :"
"class:`Dialect` immuable."

#: ../Doc/library/csv.rst:138
msgid "Return the names of all registered dialects."
msgstr "Renvoie les noms de tous les dialectes enregistrés."

#: ../Doc/library/csv.rst:143
msgid ""
"Returns the current maximum field size allowed by the parser. If *new_limit* "
"is given, this becomes the new limit."
msgstr ""
"Renvoie la taille de champ maximale courante autorisée par l'analyseur. Si "
"*new_limit* est donnée, elle devient la nouvelle limite."

#: ../Doc/library/csv.rst:147
msgid "The :mod:`csv` module defines the following classes:"
msgstr "Le module :mod:`csv` définit les classes suivantes :"

#: ../Doc/library/csv.rst:152
msgid ""
"Create an object that operates like a regular reader but maps the "
"information in each row to a :class:`dict` whose keys are given by the "
"optional *fieldnames* parameter."
msgstr ""
"Crée un objet qui opère comme un lecteur ordinaire mais assemble les "
"informations de chaque ligne dans un :class:`dict` dont les clés sont "
"données par le paramètre optionnel *fieldnames*."

#: ../Doc/library/csv.rst:156
msgid ""
"The *fieldnames* parameter is a :term:`sequence`.  If *fieldnames* is "
"omitted, the values in the first row of file *f* will be used as the "
"fieldnames.  Regardless of how the fieldnames are determined, the dictionary "
"preserves their original ordering."
msgstr ""
"Le paramètre *fieldnames* est une :term:`séquence <sequence>`.  Si "
"*fieldnames* est omis, les valeurs de la première ligne du fichier *f* sont "
"utilisées comme noms de champs.  Sans se soucier de comment sont déterminés "
"les noms de champs, le dictionnaire préserve leur ordre original."

#: ../Doc/library/csv.rst:161
msgid ""
"If a row has more fields than fieldnames, the remaining data is put in a "
"list and stored with the fieldname specified by *restkey* (which defaults to "
"``None``).  If a non-blank row has fewer fields than fieldnames, the missing "
"values are filled-in with ``None``."
msgstr ""
"Si une ligne a plus de champs que *fieldnames*, les données excédentaires "
"sont mises dans une liste stockée dans le champ spécifié par *restkey* "
"(``None`` par défaut).  Si une ligne non-vide a moins de champs que "
"*fieldnames*, les valeurs manquantes sont mises à ``None``."

#: ../Doc/library/csv.rst:166
msgid ""
"All other optional or keyword arguments are passed to the underlying :class:"
"`reader` instance."
msgstr ""
"Tous les autres arguments optionnels ou nommés sont passés à l'instance :"
"class:`reader` sous-jacente."

#: ../Doc/library/csv.rst:169
msgid "Returned rows are now of type :class:`dict`."
msgstr "Les lignes renvoyées sont maintenant de type :class:`dict`."

#: ../Doc/library/csv.rst:190
msgid ""
"Create an object which operates like a regular writer but maps dictionaries "
"onto output rows.  The *fieldnames* parameter is a :mod:`sequence "
"<collections.abc>` of keys that identify the order in which values in the "
"dictionary passed to the :meth:`writerow` method are written to file *f*.  "
"The optional *restval* parameter specifies the value to be written if the "
"dictionary is missing a key in *fieldnames*.  If the dictionary passed to "
"the :meth:`writerow` method contains a key not found in *fieldnames*, the "
"optional *extrasaction* parameter indicates what action to take. If it is "
"set to ``'raise'``, the default value, a :exc:`ValueError` is raised. If it "
"is set to ``'ignore'``, extra values in the dictionary are ignored. Any "
"other optional or keyword arguments are passed to the underlying :class:"
"`writer` instance."
msgstr ""
"Crée un objet qui opère comme un transcripteur ordinaire mais qui produit "
"les lignes de sortie depuis des dictionnaires.  Le paramètre *fieldnames* "
"est une :mod:`séquence <collections.abc>` de clés  qui indique l'ordre dans "
"lequel les valeurs du dictionnaire passé à la méthode :meth:`writerow` "
"doivent être écrites vers le fichier *f*.  Le paramètre optionnel *restval* "
"spécifie la valeur à écrire si une clé de *fieldnames* manque dans le "
"dictionnaire.  Si le dictionnaire passé à :meth:`writerow` possède une clé "
"non présente dans *fieldnames*, le paramètre optionnel *extrasaction* "
"indique quelle action réaliser. S'il vaut ``'raise'``, sa valeur par défaut, "
"une :exc:`ValueError` est levée. S'il faut ``'ignore'``, les valeurs "
"excédentaires du dictionnaire sont ignorées. Les autres arguments optionnels "
"ou nommés sont passés à l'instance :class:`writer` sous-jacente."

#: ../Doc/library/csv.rst:205
msgid ""
"Note that unlike the :class:`DictReader` class, the *fieldnames* parameter "
"of the :class:`DictWriter` class is not optional."
msgstr ""
"Notez que contrairement à la classe :class:`DictReader`, le paramètre "
"*fieldnames* de :class:`DictWriter` n'est pas optionnel."

#: ../Doc/library/csv.rst:224
msgid ""
"The :class:`Dialect` class is a container class relied on primarily for its "
"attributes, which are used to define the parameters for a specific :class:"
"`reader` or :class:`writer` instance."
msgstr ""
"La classe :class:`Dialect` est une classe de conteneurs utilisée "
"principalement pour ses attributs, qui servent à définir des paramètres pour "
"des instances spécifiques de :class:`reader` ou :class:`writer`."

#: ../Doc/library/csv.rst:231
msgid ""
"The :class:`excel` class defines the usual properties of an Excel-generated "
"CSV file.  It is registered with the dialect name ``'excel'``."
msgstr ""
"La classe :class:`excel` définit les propriétés usuelles d'un fichier CSV "
"généré par Excel.  Elle est enregistrée avec le nom de dialecte ``'excel'``."

#: ../Doc/library/csv.rst:237
msgid ""
"The :class:`excel_tab` class defines the usual properties of an Excel-"
"generated TAB-delimited file.  It is registered with the dialect name "
"``'excel-tab'``."
msgstr ""
"La classe :class:`excel_tab` définit les propriétés usuelles d'un fichier "
"CSV généré par Excel avec des tabulations comme séparateurs.  Elle est "
"enregistrée avec le nom de dialecte ``'excel-tab'``."

#: ../Doc/library/csv.rst:243
msgid ""
"The :class:`unix_dialect` class defines the usual properties of a CSV file "
"generated on UNIX systems, i.e. using ``'\\n'`` as line terminator and "
"quoting all fields.  It is registered with the dialect name ``'unix'``."
msgstr ""
"La classe :class:`unix_dialect` définit les propriétés usuelles d'un fichier "
"CSV généré sur un système Unix, c'est-à-dire utilisant ``'\\n'`` comme "
"marqueur de fin de ligne et délimitant tous les champs par des guillemets.  "
"Elle est enregistrée avec le nom de dialecte ``'unix'``."

#: ../Doc/library/csv.rst:252
msgid "The :class:`Sniffer` class is used to deduce the format of a CSV file."
msgstr ""
"La classe :class:`Sniffer` est utilisée pour déduire le format d'un fichier "
"CSV."

#: ../Doc/library/csv.rst:254
msgid "The :class:`Sniffer` class provides two methods:"
msgstr "La classe :class:`Sniffer` fournit deux méthodes :"

#: ../Doc/library/csv.rst:258
msgid ""
"Analyze the given *sample* and return a :class:`Dialect` subclass reflecting "
"the parameters found.  If the optional *delimiters* parameter is given, it "
"is interpreted as a string containing possible valid delimiter characters."
msgstr ""
"Analyse l'extrait donné (*sample*) et renvoie une sous-classe :class:"
"`Dialect` reflétant les paramètres trouvés.  Si le paramètre optionnel "
"*delimiters* est donné, il est interprété comme une chaîne contenant tous "
"les caractères valides de séparation possibles."

#: ../Doc/library/csv.rst:266
msgid ""
"Analyze the sample text (presumed to be in CSV format) and return :const:"
"`True` if the first row appears to be a series of column headers."
msgstr ""
"Analyse l'extrait de texte (présumé être au format CSV) et renvoie :const:"
"`True` si la première ligne semble être une série d'en-têtes de colonnes."

#: ../Doc/library/csv.rst:269
msgid "An example for :class:`Sniffer` use::"
msgstr "Un exemple d'utilisation de :class:`Sniffer` ::"

#: ../Doc/library/csv.rst:278
msgid "The :mod:`csv` module defines the following constants:"
msgstr "Le module :mod:`csv` définit les constantes suivantes :"

#: ../Doc/library/csv.rst:282
msgid "Instructs :class:`writer` objects to quote all fields."
msgstr ""
"Indique aux objets :class:`writer` de délimiter tous les champs par des "
"guillemets."

#: ../Doc/library/csv.rst:287
msgid ""
"Instructs :class:`writer` objects to only quote those fields which contain "
"special characters such as *delimiter*, *quotechar* or any of the characters "
"in *lineterminator*."
msgstr ""
"Indique aux objets :class:`writer` de ne délimiter ainsi que les champs "
"contenant un caractère spécial comme *delimiter*, *quotechar* ou n'importe "
"quel caractère de *lineterminator*."

#: ../Doc/library/csv.rst:294
msgid "Instructs :class:`writer` objects to quote all non-numeric fields."
msgstr ""
"Indique aux objets :class:`writer` de délimiter ainsi tous les champs non-"
"numériques."

#: ../Doc/library/csv.rst:296
msgid "Instructs the reader to convert all non-quoted fields to type *float*."
msgstr ""
"Indique au lecteur de convertir tous les champs non délimités par des "
"guillemets vers des *float*."

#: ../Doc/library/csv.rst:301
msgid ""
"Instructs :class:`writer` objects to never quote fields.  When the current "
"*delimiter* occurs in output data it is preceded by the current *escapechar* "
"character.  If *escapechar* is not set, the writer will raise :exc:`Error` "
"if any characters that require escaping are encountered."
msgstr ""
"Indique aux objets :class:`writer` de ne jamais délimiter les champs par des "
"guillemets.  Quand le *delimiter* courant apparaît dans les données, il est "
"précédé sur la sortie par un caractère *escapechar*.  Si *escapechar* n'est "
"pas précisé, le transcripteur lèvera une :exc:`Error` si un caractère "
"nécessitant un échappement est rencontré."

#: ../Doc/library/csv.rst:306
msgid ""
"Instructs :class:`reader` to perform no special processing of quote "
"characters."
msgstr ""
"Indique au :class:`reader` de ne pas opérer de traitement spécial sur les "
"guillemets."

#: ../Doc/library/csv.rst:308
msgid "The :mod:`csv` module defines the following exception:"
msgstr "Le module :mod:`csv` définit les exceptions suivantes :"

#: ../Doc/library/csv.rst:313
msgid "Raised by any of the functions when an error is detected."
msgstr "Levée par les fonctions du module quand une erreur détectée."

#: ../Doc/library/csv.rst:318
msgid "Dialects and Formatting Parameters"
msgstr "Dialectes et paramètres de formatage"

#: ../Doc/library/csv.rst:320
msgid ""
"To make it easier to specify the format of input and output records, "
"specific formatting parameters are grouped together into dialects.  A "
"dialect is a subclass of the :class:`Dialect` class having a set of specific "
"methods and a single :meth:`validate` method.  When creating :class:`reader` "
"or :class:`writer` objects, the programmer can specify a string or a "
"subclass of the :class:`Dialect` class as the dialect parameter.  In "
"addition to, or instead of, the *dialect* parameter, the programmer can also "
"specify individual formatting parameters, which have the same names as the "
"attributes defined below for the :class:`Dialect` class."
msgstr ""
"Pour faciliter la spécification du format des entrées et sorties, les "
"paramètres de formatage spécifiques sont regroupés en dialectes.  Un "
"dialecte est une sous-classe de :class:`Dialect` avec un ensemble de "
"méthodes spécifiques et une méthode :meth:`validate`.  Quand un objet :class:"
"`reader` ou :class:`writer` est créé, vous pouvez spécifier une chaîne ou "
"une sous-classe de :class:`Dialect` comme paramètre *dialect*.  En plus du "
"paramètre *dialect*, ou à sa place, vous pouvez aussi préciser des "
"paramètres de formatage individuels, qui ont les mêmes noms que les "
"attributs de :class:`Dialect` définis ci-dessous."

#: ../Doc/library/csv.rst:330
msgid "Dialects support the following attributes:"
msgstr "Les dialectes supportent les attributs suivants :"

#: ../Doc/library/csv.rst:335
msgid ""
"A one-character string used to separate fields.  It defaults to ``','``."
msgstr ""
"Une chaîne d'un seul caractère utilisée pour séparer les champs.  Elle vaut "
"``','`` par défaut."

#: ../Doc/library/csv.rst:340
msgid ""
"Controls how instances of *quotechar* appearing inside a field should "
"themselves be quoted.  When :const:`True`, the character is doubled. When :"
"const:`False`, the *escapechar* is used as a prefix to the *quotechar*.  It "
"defaults to :const:`True`."
msgstr ""
"Contrôle comment les caractères *quotechar* dans le champ doivent être "
"retranscrits.  Quand ce paramètre vaut :const:`True`, le caractère est "
"doublé. Quand il vaut :const:`False`, le caractère *escapechar* est utilisé "
"comme préfixe à *quotechar*.  Il vaut :const:`True` par défaut."

#: ../Doc/library/csv.rst:345
msgid ""
"On output, if *doublequote* is :const:`False` and no *escapechar* is set, :"
"exc:`Error` is raised if a *quotechar* is found in a field."
msgstr ""
"En écriture, si *doublequote* vaut :const:`False` et qu'aucun *escapechar* "
"n'est précisé, une :exc:`Error` est levée si un *quotechar* est trouvé dans "
"le champ."

#: ../Doc/library/csv.rst:351
msgid ""
"A one-character string used by the writer to escape the *delimiter* if "
"*quoting* is set to :const:`QUOTE_NONE` and the *quotechar* if *doublequote* "
"is :const:`False`. On reading, the *escapechar* removes any special meaning "
"from the following character. It defaults to :const:`None`, which disables "
"escaping."
msgstr ""
"Une chaîne d'un seul caractère utilisée par le transcripteur pour échapper "
"*delimiter* si *quoting* vaut :const:`QUOTE_NONE`, et pour échapper "
"*quotechar* si *doublequote* vaut :const:`False`. À la lecture, *escapechar* "
"retire toute signification spéciale au caractère qui le suit. Elle vaut par "
"défaut :const:`None`, ce qui désactive l'échappement."

#: ../Doc/library/csv.rst:359
msgid ""
"The string used to terminate lines produced by the :class:`writer`. It "
"defaults to ``'\\r\\n'``."
msgstr ""
"La chaîne utilisée pour terminer les lignes produites par un :class:"
"`writer`. Elle vaut par défaut ``'\\r\\n'``."

#: ../Doc/library/csv.rst:364
msgid ""
"The :class:`reader` is hard-coded to recognise either ``'\\r'`` or ``'\\n'`` "
"as end-of-line, and ignores *lineterminator*. This behavior may change in "
"the future."
msgstr ""
"La classe :class:`reader` est codée en dur pour reconnaître ``'\\r'`` et "
"``'\\n'`` comme marqueurs de fin de ligne, et ignorer *lineterminator*. Ce "
"comportement pourrait changer dans le futur."

#: ../Doc/library/csv.rst:371
msgid ""
"A one-character string used to quote fields containing special characters, "
"such as the *delimiter* or *quotechar*, or which contain new-line "
"characters.  It defaults to ``'\"'``."
msgstr ""
"Une chaîne d'un seul caractère utilisée pour délimiter les champs contenant "
"des caractères spéciaux, comme *delimiter* ou *quotechar*, ou contenant un "
"caractère de fin de ligne.  Elle vaut ``'\"'`` par défaut."

#: ../Doc/library/csv.rst:378
msgid ""
"Controls when quotes should be generated by the writer and recognised by the "
"reader.  It can take on any of the :const:`QUOTE_\\*` constants (see "
"section :ref:`csv-contents`) and defaults to :const:`QUOTE_MINIMAL`."
msgstr ""
"Contrôle quand les guillemets doivent être générés par le transcripteur et "
"reconnus par le lecteur.  Il peut prendre comme valeur l'une des constantes :"
"const:`QUOTE_\\*` (voir la section :ref:`csv-contents`) et vaut par défaut :"
"const:`QUOTE_MINIMAL`."

#: ../Doc/library/csv.rst:385
msgid ""
"When :const:`True`, whitespace immediately following the *delimiter* is "
"ignored. The default is :const:`False`."
msgstr ""
"Quand il vaut :const:`True`, les espaces suivant directement *delimiter* "
"sont ignorés. Il vaut :const:`False` par défaut."

#: ../Doc/library/csv.rst:391
msgid ""
"When ``True``, raise exception :exc:`Error` on bad CSV input. The default is "
"``False``."
msgstr ""
"Quand il vaut ``True``, une exception :exc:`Error` est levée lors de "
"mauvaises entrées CSV. Il vaut ``False`` par défaut."

#: ../Doc/library/csv.rst:395
msgid "Reader Objects"
msgstr "Objets lecteurs"

#: ../Doc/library/csv.rst:397
msgid ""
"Reader objects (:class:`DictReader` instances and objects returned by the :"
"func:`reader` function) have the following public methods:"
msgstr ""
"Les objets lecteurs (instances de :class:`DictReader` ou objets renvoyés par "
"la fonction :func:`reader`) ont les méthodes publiques suivantes :"

#: ../Doc/library/csv.rst:402
msgid ""
"Return the next row of the reader's iterable object as a list (if the object "
"was returned from :func:`reader`) or a dict (if it is a :class:`DictReader` "
"instance), parsed according to the current dialect.  Usually you should call "
"this as ``next(reader)``."
msgstr ""
"Renvoie la ligne suivante de l'objet itérable du lecteur en tant que liste "
"(si l'objet est renvoyé depuis :func:`reader`) ou dictionnaire (si l'objet "
"est un :class:`DictReader`), analysé suivant le dialecte courant.  "
"Généralement, vous devez appeler la méthode à l'aide de ``next(reader)``."

#: ../Doc/library/csv.rst:408
msgid "Reader objects have the following public attributes:"
msgstr "Les objets lecteurs ont les attributs publics suivants :"

#: ../Doc/library/csv.rst:412
msgid "A read-only description of the dialect in use by the parser."
msgstr "Une description en lecture seule du dialecte utilisé par l'analyseur."

#: ../Doc/library/csv.rst:417
msgid ""
"The number of lines read from the source iterator. This is not the same as "
"the number of records returned, as records can span multiple lines."
msgstr ""
"Le nombre de lignes lues depuis l'itérateur source. Ce n'est pas équivalent "
"au nombre d'enregistrements renvoyés, puisque certains enregistrements "
"peuvent s'étendre sur plusieurs lignes."

#: ../Doc/library/csv.rst:421
msgid "DictReader objects have the following public attribute:"
msgstr "Les objets *DictReader* ont les attributs publics suivants :"

#: ../Doc/library/csv.rst:425
msgid ""
"If not passed as a parameter when creating the object, this attribute is "
"initialized upon first access or when the first record is read from the file."
msgstr ""
"S'il n'est pas passé comme paramètre à la création de l'objet, cet attribut "
"est initialisé lors du premier accès ou quand le premier enregistrement est "
"lu depuis le fichier."

#: ../Doc/library/csv.rst:432
msgid "Writer Objects"
msgstr "Objets transcripteurs"

#: ../Doc/library/csv.rst:434
msgid ""
":class:`Writer` objects (:class:`DictWriter` instances and objects returned "
"by the :func:`writer` function) have the following public methods.  A *row* "
"must be an iterable of strings or numbers for :class:`Writer` objects and a "
"dictionary mapping fieldnames to strings or numbers (by passing them "
"through :func:`str` first) for :class:`DictWriter` objects.  Note that "
"complex numbers are written out surrounded by parens. This may cause some "
"problems for other programs which read CSV files (assuming they support "
"complex numbers at all)."
msgstr ""
"Les objets :class:`Writer` (instances de :class:`DictWriter` ou objets "
"renvoyés par la fonction :func:`writer`) ont les méthodes publiques "
"suivantes.  Une *row* doit être un itérable de chaînes de caractères ou de "
"nombres pour les objets :class:`Writer`, et un dictionnaire associant des "
"noms de champs à des chaînes ou des nombres (en les faisant d'abord passer "
"par :func:`str`) pour les objets :class:`DictWriter`.  Notez que les nombres "
"complexes sont retranscrits entourés de parenthèses. Cela peut causer "
"quelques problèmes pour d'autres programmes qui liraient ces fichiers CSV "
"(en supposant qu'ils supportent les nombres complexes)."

#: ../Doc/library/csv.rst:445
msgid ""
"Write the *row* parameter to the writer's file object, formatted according "
"to the current dialect. Return the return value of the call to the *write* "
"method of the underlying file object."
msgstr ""
"Écrit le paramètre *row* vers le fichier associé au transcripteur, formaté "
"selon le dialecte courant. Renvoie la valeur de retour de l'appel à la "
"méthode *write* de l'objet fichier sous-jacent."

#: ../Doc/library/csv.rst:449
msgid "Added support of arbitrary iterables."
msgstr "Ajout du support d'itérables arbitraires."

#: ../Doc/library/csv.rst:454
msgid ""
"Write all elements in *rows* (an iterable of *row* objects as described "
"above) to the writer's file object, formatted according to the current "
"dialect."
msgstr ""
"Écrit tous les éléments de *rows* (itérable d'objets *row* comme décrits "
"précédemment) vers le fichier associé au transcripteur, formatés selon le "
"dialecte courant."

#: ../Doc/library/csv.rst:458
msgid "Writer objects have the following public attribute:"
msgstr "Les objets transcripteurs ont les attributs publics suivants :"

#: ../Doc/library/csv.rst:463
msgid "A read-only description of the dialect in use by the writer."
msgstr ""
"Une description en lecture seule du dialecte utilisé par le transcripteur."

#: ../Doc/library/csv.rst:466
msgid "DictWriter objects have the following public method:"
msgstr "Les objets *DictWriter* ont les attributs publics suivants :"

#: ../Doc/library/csv.rst:471
msgid ""
"Write a row with the field names (as specified in the constructor) to the "
"writer's file object, formatted according to the current dialect. Return the "
"return value of the :meth:`csvwriter.writerow` call used internally."
msgstr ""
"Écrit une ligne avec le nom des en-têtes (comme définies dans le "
"constructeur) dans l'objet fichier associé au transcripteur, formatée selon "
"le dialecte courant. Renvoie la valeur de retour de l'appel :meth:`csvwriter."
"writerow` utilisé en interne."

#: ../Doc/library/csv.rst:476
msgid ""
":meth:`writeheader` now also returns the value returned by the :meth:"
"`csvwriter.writerow` method it uses internally."
msgstr ""
":meth:`writeheader` renvoie maintenant aussi la valeur renvoyée par la "
"méthode :meth:`csvwriter.writerow` qu'il utilise en interne."

#: ../Doc/library/csv.rst:484
msgid "Examples"
msgstr "Exemples"

#: ../Doc/library/csv.rst:486
msgid "The simplest example of reading a CSV file::"
msgstr "Le plus simple exemple de lecture d'un fichier CSV ::"

#: ../Doc/library/csv.rst:494
msgid "Reading a file with an alternate format::"
msgstr "Lire un fichier avec un format alternatif ::"

#: ../Doc/library/csv.rst:502
msgid "The corresponding simplest possible writing example is::"
msgstr "Le plus simple exemple d'écriture correspondant est ::"

#: ../Doc/library/csv.rst:509
msgid ""
"Since :func:`open` is used to open a CSV file for reading, the file will by "
"default be decoded into unicode using the system default encoding (see :func:"
"`locale.getpreferredencoding`).  To decode a file using a different "
"encoding, use the ``encoding`` argument of open::"
msgstr ""
"Puisque :func:`open` est utilisée pour ouvrir un fichier CSV en lecture, le "
"fichier sera par défaut décodé vers Unicode en utilisant l'encodage par "
"défaut (voir :func:`locale.getpreferredencoding`).  Pour décoder un fichier "
"utilisant un encodage différent, utilisez l'argument ``encoding`` de "
"*open* ::"

#: ../Doc/library/csv.rst:520
msgid ""
"The same applies to writing in something other than the system default "
"encoding: specify the encoding argument when opening the output file."
msgstr ""
"La même chose s'applique lors de l'écriture dans un autre encodage que celui "
"par défaut du système : spécifiez l'encodage en argument lors de l'ouverture "
"du fichier de sortie."

#: ../Doc/library/csv.rst:523
msgid "Registering a new dialect::"
msgstr "Enregistrer un nouveau dialecte ::"

#: ../Doc/library/csv.rst:530
msgid ""
"A slightly more advanced use of the reader --- catching and reporting "
"errors::"
msgstr ""
"Un exemple d'utilisation un peu plus avancé du lecteur --- attrapant et "
"notifiant les erreurs ::"

#: ../Doc/library/csv.rst:542
msgid ""
"And while the module doesn't directly support parsing strings, it can easily "
"be done::"
msgstr ""
"Et bien que le module ne permette pas d'analyser directement des chaînes, "
"cela peut être fait facilement ::"

#: ../Doc/library/csv.rst:551
msgid "Footnotes"
msgstr "Notes"

#: ../Doc/library/csv.rst:552
msgid ""
"If ``newline=''`` is not specified, newlines embedded inside quoted fields "
"will not be interpreted correctly, and on platforms that use ``\\r\\n`` "
"linendings on write an extra ``\\r`` will be added.  It should always be "
"safe to specify ``newline=''``, since the csv module does its own (:term:"
"`universal <universal newlines>`) newline handling."
msgstr ""
"Si ``newline=''`` n'est pas spécifié, les caractères de fin de ligne "
"embarqués dans des champs délimités par des guillemets ne seront pas "
"interprétés correctement, et sur les plateformes qui utilisent ``\\r\\n`` "
"comme marqueur de fin de ligne, un ``\\r`` sera ajouté.  Vous devriez "
"toujours spécifier sans crainte ``newline=''``, puisque le module *csv* gère "
"lui-même les fins de lignes (:term:`universelles <universal newlines>`)."

#~ msgid "Write a row with the field names (as specified in the constructor)."
#~ msgstr ""
#~ "Écrit une ligne contenant les noms de champs (comme spécifiés au "
#~ "constructeur)."
