# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: 2022-10-18 15:55+0200\n"
"Last-Translator: Julien Palard <julien@palard.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Poedit 2.0.5\n"

#: library/lzma.rst:2
#, fuzzy
msgid ":mod:`!lzma` --- Compression using the LZMA algorithm"
msgstr ":mod:`lzma` — Compression via l'algorithme LZMA"

#: library/lzma.rst:12
msgid "**Source code:** :source:`Lib/lzma.py`"
msgstr "**Code source :** :source:`Lib/lzma.py`"

#: library/lzma.rst:16
msgid ""
"This module provides classes and convenience functions for compressing and "
"decompressing data using the LZMA compression algorithm. Also included is a "
"file interface supporting the ``.xz`` and legacy ``.lzma`` file formats used "
"by the :program:`xz` utility, as well as raw compressed streams."
msgstr ""
"Ce module fournit des classes et des fonctions utiles pour compresser et "
"décompresser des données en utilisant l'algorithme de compression LZMA. Ce "
"module inclut aussi aussi une interface prenant en charge les fichiers ``."
"xz`` et son format originel ``.lzma`` utilisés par l'utilitaire :program:"
"`xz`, ainsi que les flux bruts compressés."

#: library/lzma.rst:21
#, fuzzy
msgid ""
"The interface provided by this module is very similar to that of the :mod:"
"`bz2` module. Note that :class:`LZMAFile` and :class:`bz2.BZ2File` are *not* "
"thread-safe, so if you need to use a single :class:`LZMAFile` instance from "
"multiple threads, it is necessary to protect it with a lock."
msgstr ""
"L'interface disponible par ce module ressemble en de nombreux points à celle "
"du module :mod:`bz2`. Cependant, notez que la :class:`LZMAFile` n'est pas "
"*thread-safe*, comme l'est la :class:`bz2.BZ2File`. Donc, si vous souhaitez "
"utiliser une seule instance de :class:`LZMAFile` pour plusieurs fils, il "
"sera alors nécessaire de la protéger avec un verrou (*lock*)."

#: library/lzma.rst:29
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the compressor/decompressor state."
msgstr ""
"Cette exception est levée dès lors qu'une erreur survient pendant la "
"compression ou la décompression, ou pendant l'initialisation de l'état de la "
"compression/décompression."

#: library/lzma.rst:34
msgid "Reading and writing compressed files"
msgstr "Lire et écrire des fichiers compressés"

#: library/lzma.rst:38
#, fuzzy
msgid ""
"Open an LZMA-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr ""
"Ouvre un fichier compressé en *gzip* en mode binaire ou texte, renvoie un "
"objet :term:`file object`."

#: library/lzma.rst:41
msgid ""
"The *filename* argument can be either an actual file name (given as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object), in "
"which case the named file is opened, or it can be an existing file object to "
"read from or write to."
msgstr ""
"L'argument *nom de fichier* peut être soit le nom d'un fichier à créer "
"(donné pour :class:`str`, :class:`bytes` ou un objet :term:`path-like <path-"
"like object>`), dont le fichier nommé reste ouvert, ou soit un objet fichier "
"existant à lire ou à écrire."

#: library/lzma.rst:46
msgid ""
"The *mode* argument can be any of ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` or ``\"ab\"`` for binary mode, "
"or ``\"rt\"``, ``\"wt\"``, ``\"xt\"``, or ``\"at\"`` for text mode. The "
"default is ``\"rb\"``."
msgstr ""
"L'argument *mode* peut être n'importe quel argument suivant : ``\"r\"``, "
"``\"rb\"``, ``\"w\"``, ``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` ou "
"``\"ab\"`` pour le mode binaire, ou ``\"rt\"``, ``\"wt\"``, ``\"xt\"``, ou "
"``\"at\"`` pour le mode texte. La valeur par défaut est ``\"rb\"``."

#: library/lzma.rst:95
msgid ""
"When opening a file for reading, the *format* and *filters* arguments have "
"the same meanings as for :class:`LZMADecompressor`. In this case, the "
"*check* and *preset* arguments should not be used."
msgstr ""
"Quand un fichier est ouvert pour le lire, les arguments *format* et "
"*filters* ont les mêmes significations que pour la :class:"
"`LZMADecompressor`. Par conséquent, les arguments *check* et *preset* ne "
"devront pas être sollicités."

#: library/lzma.rst:99
msgid ""
"When opening a file for writing, the *format*, *check*, *preset* and "
"*filters* arguments have the same meanings as for :class:`LZMACompressor`."
msgstr ""
"Dès ouverture d'un fichier pour l'écriture, les arguments *format*, *check*, "
"*preset* et *filters* ont le même sens que dans la :class:`LZMACompressor`."

#: library/lzma.rst:57
msgid ""
"For binary mode, this function is equivalent to the :class:`LZMAFile` "
"constructor: ``LZMAFile(filename, mode, ...)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""
"Pour le mode binaire, cette fonction équivaut au constructeur de la :class:"
"`LZMAFile` : ``LZMAFile(filename, mode, ...)``. Dans ce cas précis, les "
"arguments *encoding*, *errors* et *newline* ne sont pas accessibles."

#: library/lzma.rst:61
#, fuzzy
msgid ""
"For text mode, a :class:`LZMAFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""
"Pour le mode texte, un objet :class:`BZ2File` est créé et encapsulé dans une "
"instance :class:`io.TextIOWrapper` avec l'encodage spécifié, le comportement "
"de gestion des erreurs et les fins de ligne."

#: library/lzma.rst:65
msgid "Added support for the ``\"x\"``, ``\"xb\"`` and ``\"xt\"`` modes."
msgstr "Support ajouté pour les modes ``\"x\"``, ``\"xb\"`` et ``\"xt\"``."

#: library/lzma.rst:141
msgid "Accepts a :term:`path-like object`."
msgstr "Accepte un :term:`path-like object`."

#: library/lzma.rst:74
msgid "Open an LZMA-compressed file in binary mode."
msgstr "Ouvre un fichier LZMA compressé en mode binaire."

#: library/lzma.rst:76
msgid ""
"An :class:`LZMAFile` can wrap an already-open :term:`file object`, or "
"operate directly on a named file. The *filename* argument specifies either "
"the file object to wrap, or the name of the file to open (as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object). When "
"wrapping an existing file object, the wrapped file will not be closed when "
"the :class:`LZMAFile` is closed."
msgstr ""
"An :class:`LZMAFile` can wrap an already-open :term:`file object`, or "
"operate directly on a named file. The *filename* argument specifies either "
"the file object to wrap, or the name of the file to open (as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object). When "
"wrapping an existing file object, the wrapped file will not be closed when "
"the :class:`LZMAFile` is closed."

#: library/lzma.rst:83
msgid ""
"The *mode* argument can be either ``\"r\"`` for reading (default), ``\"w\"`` "
"for overwriting, ``\"x\"`` for exclusive creation, or ``\"a\"`` for "
"appending. These can equivalently be given as ``\"rb\"``, ``\"wb\"``, "
"``\"xb\"`` and ``\"ab\"`` respectively."
msgstr ""
"L'argument *mode* peut être soit ``\"r\"`` pour la lecture (défaut), "
"``\"w\"`` pour la ré-écriture, ``\"x\"`` pour la création exclusive, ou "
"``\"a\"`` pour l'insertion. Elles peuvent aussi être écrites de la façon "
"suivante : ``\"rb\"``, ``\"wb\"``, ``\"xb\"`` et ``\"ab\"`` respectivement."

#: library/lzma.rst:88
#, fuzzy
msgid ""
"If *filename* is a file object (rather than an actual file name), a mode of "
"``\"w\"`` does not truncate the file, and is instead equivalent to ``\"a\"``."
msgstr ""
"Si *filename* est un objet fichier (plutôt que le nom de fichier réel), le "
"mode ``'w'`` ne tronque pas le fichier, mais équivaut à ``'a'``."

#: library/lzma.rst:91
msgid ""
"When opening a file for reading, the input file may be the concatenation of "
"multiple separate compressed streams. These are transparently decoded as a "
"single logical stream."
msgstr ""
"Dès l'ouverture d'un fichier pour être lu, le fichier d'entrée peut être le "
"résultat d'une concaténation de plusieurs flux distincts et compressés. Ceux-"
"ci sont décodés de manière transparente en un seul flux logique."

#: library/lzma.rst:102
#, fuzzy
msgid ""
":class:`LZMAFile` supports all the members specified by :class:`io."
"BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and :meth:`~io."
"IOBase.truncate`. Iteration and the :keyword:`with` statement are supported."
msgstr ""
":class:`BZ2File` fournit tous les membres spécifiés par la classe :class:`io."
"BufferedIOBase`, excepté les méthodes :meth:`detach` et :meth:`truncate`. "
"L'itération et l'instruction :keyword:`with` sont prises en charge."

#: library/lzma.rst:107
#, fuzzy
msgid "The following method and attributes are also provided:"
msgstr "Les méthodes suivantes sont aussi disponibles :"

#: library/lzma.rst:111
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr ""
"Renvoie la donnée en mémoire-tampon sans progression de la position du "
"fichier. Au moins un octet de donnée sera renvoyé, jusqu'à ce que l'EOF soit "
"atteinte. Le nombre exact d'octets renvoyés demeure indéterminé (l'argument "
"*taille* est ignoré)."

#: library/lzma.rst:115
#, fuzzy
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`LZMAFile`, it may change the position of the underlying file object (e.g. "
"if the :class:`LZMAFile` was constructed by passing a file object for "
"*filename*)."
msgstr ""
"Bien que l'appel à la méthode :meth:`peek` ne change pas la position du "
"fichier de la classe :class:`BZ2File`, il peut changer la position de "
"l'objet fichier sous-jacent (e.g. si la classe :class:`BZ2File` a été "
"construite en passant un objet fichier à *filename*)."

#: library/lzma.rst:122
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr ""

#: library/lzma.rst:128
msgid ""
"The lzma file name.  Equivalent to the :attr:`~io.FileIO.name` attribute of "
"the underlying :term:`file object`."
msgstr ""

#: library/lzma.rst:134
#, fuzzy
msgid "Added support for the ``\"x\"`` and ``\"xb\"`` modes."
msgstr "Ajout de la prise en charge des modes ``'x'`` et ``'xb'``."

#: library/lzma.rst:137
msgid ""
"The :meth:`~io.BufferedIOBase.read` method now accepts an argument of "
"``None``."
msgstr ""
"La méthode :meth:`~io.BufferedIOBase.read` accepte maintenant un argument "
"``None``."

#: library/lzma.rst:146
msgid "Compressing and decompressing data in memory"
msgstr "Compresser et décompresser une donnée en mémoire"

#: library/lzma.rst:150
msgid ""
"Create a compressor object, which can be used to compress data incrementally."
msgstr ""
"Créé un objet compresseur, qui peut être utilisé pour compresser "
"incrémentalement une donnée."

#: library/lzma.rst:152
msgid ""
"For a more convenient way of compressing a single chunk of data, see :func:"
"`compress`."
msgstr ""
"Pour une façon plus adaptée de compresser un seul extrait de donnée, voir :"
"func:`compress`."

#: library/lzma.rst:155
msgid ""
"The *format* argument specifies what container format should be used. "
"Possible values are:"
msgstr ""
"L'argument *format* définit quel format de conteneur sera mis en œuvre. Les "
"valeurs possibles sont :"

#: library/lzma.rst:158
msgid ":const:`FORMAT_XZ`: The ``.xz`` container format."
msgstr ":const:`FORMAT_XZ`: Le format du  conteneur ``.xz``."

#: library/lzma.rst:159
msgid "This is the default format."
msgstr "C'est le format par défaut."

#: library/lzma.rst:161
msgid ":const:`FORMAT_ALONE`: The legacy ``.lzma`` container format."
msgstr ":const:`FORMAT_ALONE`: L'ancien format du conteneur ``.lzma``."

#: library/lzma.rst:162
msgid ""
"This format is more limited than ``.xz`` -- it does not support integrity "
"checks or multiple filters."
msgstr ""
"Ce format est davantage limité que ``.xz`` --il ne supporte pas les "
"vérifications d'intégrité ou les filtres multiples."

#: library/lzma.rst:165
msgid ":const:`FORMAT_RAW`: A raw data stream, not using any container format."
msgstr ""
":const:`FORMAT_RAW`: Un flux de données brut, n'utilisant aucun format de "
"conteneur."

#: library/lzma.rst:166
msgid ""
"This format specifier does not support integrity checks, and requires that "
"you always specify a custom filter chain (for both compression and "
"decompression). Additionally, data compressed in this manner cannot be "
"decompressed using :const:`FORMAT_AUTO` (see :class:`LZMADecompressor`)."
msgstr ""
"Ce format spécifique ne prend pas en charge les vérifications d'intégrité et "
"exige systématiquement la définition d'une chaîne de filtrage personnalisée "
"(à la fois pour la compression et la décompression). Par ailleurs, les "
"données compressées par ce biais ne peuvent pas être décompressées par "
"l'usage de :const:`FORMAT_AUTO` (voir :  :class:`LZMADecompressor`)."

#: library/lzma.rst:171
msgid ""
"The *check* argument specifies the type of integrity check to include in the "
"compressed data. This check is used when decompressing, to ensure that the "
"data has not been corrupted. Possible values are:"
msgstr ""
"L'argument *check* détermine le type de vérification d'intégrité à exploiter "
"avec la donnée compressée. Cette vérification est déclenchée lors de la "
"décompression, pour garantir que la donnée n'a pas été corrompue. Les "
"valeurs possibles sont :"

#: library/lzma.rst:175
msgid ""
":const:`CHECK_NONE`: No integrity check. This is the default (and the only "
"acceptable value) for :const:`FORMAT_ALONE` and :const:`FORMAT_RAW`."
msgstr ""
":const:`CHECK_NONE`: Pas de vérification d'intégrité. C'est la valeur par "
"défaut (et la seule valeur acceptable) pour :const:`FORMAT_ALONE` et :const:"
"`FORMAT_RAW`."

#: library/lzma.rst:179
msgid ":const:`CHECK_CRC32`: 32-bit Cyclic Redundancy Check."
msgstr ""
":const:`CHECK_CRC32`: Vérification par Redondance Cyclique 32-bit (*Cyclic "
"Redundancy Check*)."

#: library/lzma.rst:181
msgid ""
":const:`CHECK_CRC64`: 64-bit Cyclic Redundancy Check. This is the default "
"for :const:`FORMAT_XZ`."
msgstr ""
":const:`CHECK_CRC64`: Vérification par Redondance Cyclique 64-bit (*Cyclic "
"Redundancy Check*). Valeur par défaut pour :const:`FORMAT_XZ`."

#: library/lzma.rst:184
msgid ":const:`CHECK_SHA256`: 256-bit Secure Hash Algorithm."
msgstr ""
":const:`CHECK_SHA256`: Algorithme de Hachage Sécurisé 256-bit (*Secure Hash "
"Algorithm*)."

#: library/lzma.rst:186
msgid ""
"If the specified check is not supported, an :class:`LZMAError` is raised."
msgstr ""
"Si le type de vérification n'est pas supporté par le système, une erreur de "
"type :class:`LZMAError` est levée."

#: library/lzma.rst:188
msgid ""
"The compression settings can be specified either as a preset compression "
"level (with the *preset* argument), or in detail as a custom filter chain "
"(with the *filters* argument)."
msgstr ""
"Les réglages de compression peuvent être définis soit comme un pré-réglage "
"de niveau de compression (avec l'argument *preset*) ; soit de façon "
"détaillée comme une chaîne particulière de filtres (avec l'argument "
"*filters*)."

#: library/lzma.rst:192
msgid ""
"The *preset* argument (if provided) should be an integer between ``0`` and "
"``9`` (inclusive), optionally OR-ed with the constant :const:"
"`PRESET_EXTREME`. If neither *preset* nor *filters* are given, the default "
"behavior is to use :const:`PRESET_DEFAULT` (preset level ``6``). Higher "
"presets produce smaller output, but make the compression process slower."
msgstr ""
"L'argument *preset* (s'il est fourni) doit être un entier compris entre "
"``0`` et ``9`` (inclus), éventuellement relié à OR avec la constante :const:"
"`PRESET_EXTREME`. Si aucun *preset* ni *filters* ne ont définis, le "
"comportement par défaut consiste à utiliser la :const:`PRESET_DEFAULT` "
"(niveau par défaut : ``6``). Des pré-réglages plus élevés entraîne une "
"sortie plus petite, mais rend le processus de compression plus lent."

#: library/lzma.rst:201
msgid ""
"In addition to being more CPU-intensive, compression with higher presets "
"also requires much more memory (and produces output that needs more memory "
"to decompress). With preset ``9`` for example, the overhead for an :class:"
"`LZMACompressor` object can be as high as 800 MiB. For this reason, it is "
"generally best to stick with the default preset."
msgstr ""
"En plus d'être plus gourmande en CPU, la compression avec des préréglages "
"plus élevés nécessite beaucoup plus de mémoire (et produit des résultats qui "
"nécessitent plus de mémoire pour décompresser). Par exemple, avec le "
"préréglage ``9``, l'objet d'une :class:`LZMACompressor` peut dépasser "
"largement les 800 Mo. Pour cette raison, il est généralement préférable de "
"respecter le préréglage par défaut."

#: library/lzma.rst:207
msgid ""
"The *filters* argument (if provided) should be a filter chain specifier. "
"See :ref:`filter-chain-specs` for details."
msgstr ""
"L'argument *filters* (s'il est défini) doit être un critère de la chaîne de "
"filtrage. Voir :ref:`filter-chain-specs` pour plus de précisions."

#: library/lzma.rst:212
msgid ""
"Compress *data* (a :class:`bytes` object), returning a :class:`bytes` object "
"containing compressed data for at least part of the input. Some of *data* "
"may be buffered internally, for use in later calls to :meth:`compress` and :"
"meth:`flush`. The returned data should be concatenated with the output of "
"any previous calls to :meth:`compress`."
msgstr ""
"Une *data* compressée (un objet :class:`bytes`), renvoie un objet :class:"
"`bytes` contenant une donnée compressée pour au moins une partie de "
"l'entrée. Certaine *data* peuvent être mise en tampon, pour être utiliser "
"lors de prochains appels par :meth:`compress` et :meth:`flush`. La donnée "
"renvoyée pourra être concaténée avec la sortie d'appels précédents vers la "
"méthode :meth:`compress`."

#: library/lzma.rst:220
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing "
"any data stored in the compressor's internal buffers."
msgstr ""
"Conclut l'opération de compression, en renvoyant l'objet :class:`bytes` "
"constitué de toutes les données stockées dans les tampons interne du "
"compresseur."

#: library/lzma.rst:223
#, fuzzy
msgid "The compressor cannot be used after this method has been called."
msgstr ""
"L'objet compresseur ne peut pas être utilisé après que cette méthode a été "
"appelée."

#: library/lzma.rst:228
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr ""
"Créé un objet de décompression, pour décompresser de façon incrémentale une "
"donnée."

#: library/lzma.rst:231
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see :func:`decompress`."
msgstr ""
"Pour un moyen plus pratique de décompresser un flux compressé complet en une "
"seule fois, voir :func:`decompress`."

#: library/lzma.rst:234
msgid ""
"The *format* argument specifies the container format that should be used. "
"The default is :const:`FORMAT_AUTO`, which can decompress both ``.xz`` and "
"``.lzma`` files. Other possible values are :const:`FORMAT_XZ`, :const:"
"`FORMAT_ALONE`, and :const:`FORMAT_RAW`."
msgstr ""
"L'argument *format* spécifie le format du conteneur à utiliser. La valeur "
"par défaut est :const:`FORMAT_AUTO` pouvant à la fois décompresser les "
"fichiers ``.xz`` et ``.lzma``. D'autres valeurs sont possibles comme :const:"
"`FORMAT_XZ`, :const:`FORMAT_ALONE`, et :const:`FORMAT_RAW`."

#: library/lzma.rst:239
msgid ""
"The *memlimit* argument specifies a limit (in bytes) on the amount of memory "
"that the decompressor can use. When this argument is used, decompression "
"will fail with an :class:`LZMAError` if it is not possible to decompress the "
"input within the given memory limit."
msgstr ""
"L'argument *memlimit* spécifie une limite (en octets) sur la quantité de "
"mémoire que le décompresseur peut utiliser. Lorsque cet argument est "
"utilisé, la décompression échouera avec une :class:`LZMAError` s'il n'est "
"pas possible de décompresser l'entrée dans la limite mémoire disponible."

#: library/lzma.rst:244
msgid ""
"The *filters* argument specifies the filter chain that was used to create "
"the stream being decompressed. This argument is required if *format* is :"
"const:`FORMAT_RAW`, but should not be used for other formats. See :ref:"
"`filter-chain-specs` for more information about filter chains."
msgstr ""
"L'argument *filters* spécifie la chaîne de filtrage utilisée pour créer le "
"flux décompressé. Cet argument est requis si *format* est :const:"
"`FORMAT_RAW`, mais ne doit pas être utilisé pour d'autres formats. Voir :ref:"
"`filter-chain-specs` pour plus d'informations sur les chaînes de filtrage."

#: library/lzma.rst:250
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed streams, unlike :func:`decompress` and :class:`LZMAFile`. To "
"decompress a multi-stream input with :class:`LZMADecompressor`, you must "
"create a new decompressor for each stream."
msgstr ""
"Cette classe ne gère pas de manière transparente les entrées contenant "
"plusieurs flux compressés, contrairement à :func:`decompress` et :class:"
"`LZMAFile`. Pour décompresser une entrée multi-flux avec  :class:"
"`LZMADecompressor`, vous devez créer un nouveau décompresseur à chaque flux."

#: library/lzma.rst:257
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data "
"as bytes. Some of *data* may be buffered internally, for use in later calls "
"to :meth:`decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`decompress`."
msgstr ""
"Décompresse *data* (un :term:`bytes-like object`), renvoyant une donnée non "
"compressée en tant que chaîne d'octets. Certaines de ces *data* peuvent être "
"mises en interne en tampon, pour un usage lors d'appels ultérieurs par la "
"méthode :meth:`decompress`. La donnée renvoyée doit être concaténée avec la "
"sortie des appels précédents à la méthode :meth:`decompress`."

#: library/lzma.rst:263
msgid ""
"If *max_length* is nonnegative, returns at most *max_length* bytes of "
"decompressed data. If this limit is reached and further output can be "
"produced, the :attr:`~.needs_input` attribute will be set to ``False``. In "
"this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"Si *max_length* est positif, renvoie au plus *max_length* octets de données "
"compressées. Si la limite est atteinte et que d'autres sorties peuvent être "
"produites, l'attribut :attr:`~.needs_input` est positionné sur ``False``. "
"Dans ce cas, lors de l'appel suivant à la méthode :meth:`~.decompress`, vous "
"pouvez fournir ``b''`` dans *data* afin d'obtenir la suite de la sortie."

#: library/lzma.rst:270
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), "
"the :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"Si toutes les données entrées ont été décompressées et renvoyées (soit parce "
"qu'il y avait moins de *max_length* octets, ou parce que *max_length* était "
"négatif), l'attribut :attr:`~.needs_input` sera configuré sur ``True``."

#: library/lzma.rst:275
#, fuzzy
msgid ""
"Attempting to decompress data after the end of stream is reached raises an :"
"exc:`EOFError`.  Any data found after the end of the stream is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""
"Essayer de décompresser des données après que la fin du flux soit atteinte "
"lève une erreur ``EOFError``. Toute donnée trouvée après la fin du flux est "
"ignorée et sauvegardée dans l'attribut :attr:`~.unused_data`."

#: library/lzma.rst:279
msgid "Added the *max_length* parameter."
msgstr "Ajout du paramètre *max_length*."

#: library/lzma.rst:284
msgid ""
"The ID of the integrity check used by the input stream. This may be :const:"
"`CHECK_UNKNOWN` until enough of the input has been decoded to determine what "
"integrity check it uses."
msgstr ""
"L'ID de la vérification d'intégrité exploité par le flux entrant. Il s'agit "
"de :const:`CHECK_UNKNOWN` tant que ce flux a été décodé pour déterminer quel "
"type de vérification d'intégrité à été utilisé."

#: library/lzma.rst:290
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "``True`` si le marqueur de fin de flux a été atteint."

#: library/lzma.rst:294
msgid "Data found after the end of the compressed stream."
msgstr "Donnée trouvée après la fin du flux compressé."

#: library/lzma.rst:296
msgid "Before the end of the stream is reached, this will be ``b\"\"``."
msgstr "Avant d'atteindre la fin du flux, ce sera ``b\"\"``."

#: library/lzma.rst:300
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new uncompressed input."
msgstr ""
"``False`` si la méthode :meth:`.decompress` peut fournir plus de données "
"décompressées avant l'acquisition d'une nouvelle entrée non compressée."

#: library/lzma.rst:307
msgid ""
"Compress *data* (a :class:`bytes` object), returning the compressed data as "
"a :class:`bytes` object."
msgstr ""
"*data* compressée (un objet :class:`bytes`), renvoyant une donnée compressée "
"comme un objet :class:`bytes`."

#: library/lzma.rst:310
msgid ""
"See :class:`LZMACompressor` above for a description of the *format*, "
"*check*, *preset* and *filters* arguments."
msgstr ""
"Voir :class:`LZMACompressor` ci-dessus pour une description des arguments "
"*format*, *check*, *preset* et *filters*."

#: library/lzma.rst:316
msgid ""
"Decompress *data* (a :class:`bytes` object), returning the uncompressed data "
"as a :class:`bytes` object."
msgstr ""
"Décompresse *data* (un objet :class:`bytes` ), et retourne la donnée "
"décompressée sous la forme d'un objet :class:`bytes`."

#: library/lzma.rst:319
msgid ""
"If *data* is the concatenation of multiple distinct compressed streams, "
"decompress all of these streams, and return the concatenation of the results."
msgstr ""
"Si *data* est le résultat de la concaténation de plusieurs flux compressés "
"et distincts , il les décompresse tous, et retourne les résultats concaténés."

#: library/lzma.rst:322
msgid ""
"See :class:`LZMADecompressor` above for a description of the *format*, "
"*memlimit* and *filters* arguments."
msgstr ""
"Voir :class:`LZMADecompressor` ci-dessus pour une description des arguments "
"*format*, *memlimit* et *filters*."

#: library/lzma.rst:327
msgid "Miscellaneous"
msgstr "Divers"

#: library/lzma.rst:331
msgid ""
"Return ``True`` if the given integrity check is supported on this system."
msgstr ""

#: library/lzma.rst:333
msgid ""
":const:`CHECK_NONE` and :const:`CHECK_CRC32` are always supported. :const:"
"`CHECK_CRC64` and :const:`CHECK_SHA256` may be unavailable if you are using "
"a version of :program:`liblzma` that was compiled with a limited feature set."
msgstr ""
":const:`CHECK_NONE` et :const:`CHECK_CRC32` sont toujours pris en charge. :"
"const:`CHECK_CRC64` et :const:`CHECK_SHA256` peuvent être indisponibles si "
"vous utilisez une version de :program:`liblzma` compilée avec des "
"possibilités restreintes."

#: library/lzma.rst:342
msgid "Specifying custom filter chains"
msgstr "Préciser des chaînes de filtre personnalisées"

#: library/lzma.rst:344
msgid ""
"A filter chain specifier is a sequence of dictionaries, where each "
"dictionary contains the ID and options for a single filter. Each dictionary "
"must contain the key ``\"id\"``, and may contain additional keys to specify "
"filter-dependent options. Valid filter IDs are as follows:"
msgstr ""
"Une chaîne de filtres est une séquence de dictionnaires, où chaque "
"dictionnaire contient l'ID et les options pour chaque filtre. Le moindre "
"dictionnaire contient la clé ``\"id\"`` et peut aussi contenir d'autres clés "
"pour préciser chaque options relative au filtre déclaré. Les ID valides des "
"filtres sont définies comme suit :"

#: library/lzma.rst:349
msgid "Compression filters:"
msgstr "Filtres de compression :"

#: library/lzma.rst:351
msgid ":const:`FILTER_LZMA1` (for use with :const:`FORMAT_ALONE`)"
msgstr ":const:`FILTER_LZMA1` (à utiliser avec :const:`FORMAT_ALONE`)"

#: library/lzma.rst:352
msgid ""
":const:`FILTER_LZMA2` (for use with :const:`FORMAT_XZ` and :const:"
"`FORMAT_RAW`)"
msgstr ""
":const:`FILTER_LZMA2` (à utiliser avec :const:`FORMAT_XZ` et :const:"
"`FORMAT_RAW`)"

#: library/lzma.rst:354
msgid "Delta filter:"
msgstr "Filtre Delta :"

#: library/lzma.rst:356
msgid ":const:`FILTER_DELTA`"
msgstr ":const:`FILTER_DELTA`"

#: library/lzma.rst:358
msgid "Branch-Call-Jump (BCJ) filters:"
msgstr "Filtres Branch-Call-Jump (BCJ) :"

#: library/lzma.rst:360
msgid ":const:`FILTER_X86`"
msgstr ":const:`FILTER_X86`"

#: library/lzma.rst:361
msgid ":const:`FILTER_IA64`"
msgstr ":const:`FILTER_IA64`"

#: library/lzma.rst:362
msgid ":const:`FILTER_ARM`"
msgstr ":const:`FILTER_ARM`"

#: library/lzma.rst:363
msgid ":const:`FILTER_ARMTHUMB`"
msgstr ":const:`FILTER_ARMTHUMB`"

#: library/lzma.rst:364
msgid ":const:`FILTER_POWERPC`"
msgstr ":const:`FILTER_POWERPC`"

#: library/lzma.rst:365
msgid ":const:`FILTER_SPARC`"
msgstr ":const:`FILTER_SPARC`"

#: library/lzma.rst:367
msgid ""
"A filter chain can consist of up to 4 filters, and cannot be empty. The last "
"filter in the chain must be a compression filter, and any other filters must "
"be delta or BCJ filters."
msgstr ""
"Une chaîne de filtres peut contenir jusqu'à 4 filtres, et ne peut pas être "
"vide. Le dernier filtre de cette chaîne devra être un filtre de compression, "
"et tous les autres doivent être des filtres delta ou BCJ."

#: library/lzma.rst:371
msgid ""
"Compression filters support the following options (specified as additional "
"entries in the dictionary representing the filter):"
msgstr ""
"Les filtres de compression contiennent les options suivantes (définies comme "
"entrées additionnelles dans le dictionnaire qui représente le filtre) :"

#: library/lzma.rst:374
msgid ""
"``preset``: A compression preset to use as a source of default values for "
"options that are not specified explicitly."
msgstr ""
"``preset``: Un pré-réglage à exploiter comme une source de valeurs par "
"défaut pour les options qui ne sont pas explicitement définies."

#: library/lzma.rst:376
msgid ""
"``dict_size``: Dictionary size in bytes. This should be between 4 KiB and "
"1.5 GiB (inclusive)."
msgstr ""
"``dict_size``: La taille du dictionnaire en octets. Comprise entre 4 Ko et "
"1.5 Go (inclus)."

#: library/lzma.rst:378
msgid "``lc``: Number of literal context bits."
msgstr "``lc``: Nombre de bits dans le contexte littéral."

#: library/lzma.rst:379
msgid ""
"``lp``: Number of literal position bits. The sum ``lc + lp`` must be at most "
"4."
msgstr ""
"``lp``: Nombre de bits dans la position littérale. La somme ``lc + lp`` "
"devra être au moins 4."

#: library/lzma.rst:381
msgid "``pb``: Number of position bits; must be at most 4."
msgstr "``pb``: Nombre de bits à cette position ; au moins 4."

#: library/lzma.rst:382
msgid "``mode``: :const:`MODE_FAST` or :const:`MODE_NORMAL`."
msgstr "``mode``: :const:`MODE_FAST` ou :const:`MODE_NORMAL`."

#: library/lzma.rst:383
msgid ""
"``nice_len``: What should be considered a \"nice length\" for a match. This "
"should be 273 or less."
msgstr ""
"``nice_len``: Ce qui devra être pris en compte comme \"longueur "
"appréciable\" pour une recherche. Il devra être 273 ou moins."

#: library/lzma.rst:385
msgid ""
"``mf``: What match finder to use -- :const:`MF_HC3`, :const:`MF_HC4`, :const:"
"`MF_BT2`, :const:`MF_BT3`, or :const:`MF_BT4`."
msgstr ""
"``mf``: Quel type d'index de recherche à utiliser -- :const:`MF_HC3`, :const:"
"`MF_HC4`, :const:`MF_BT2`, :const:`MF_BT3`, ou :const:`MF_BT4`."

#: library/lzma.rst:387
msgid ""
"``depth``: Maximum search depth used by match finder. 0 (default) means to "
"select automatically based on other filter options."
msgstr ""
"``depth``: Profondeur maximum de la recherche, utilisée par l'index de "
"recherche. 0 (défaut) signifie une sélection automatique basée sur des "
"options de filtres différents."

#: library/lzma.rst:390
msgid ""
"The delta filter stores the differences between bytes, producing more "
"repetitive input for the compressor in certain circumstances. It supports "
"one option, ``dist``. This indicates the distance between bytes to be "
"subtracted. The default is 1, i.e. take the differences between adjacent "
"bytes."
msgstr ""
"Le filtre delta stocke les différences entre octets, induisant davantage "
"d'entrées répétitives pour le compresseur, selon les circonstances. Il "
"support une option, ``dist``. Ce paramètre définit la distance entre les "
"octets à soustraire. Par défaut : 1, soit la différence entre des octets "
"adjacents."

#: library/lzma.rst:395
msgid ""
"The BCJ filters are intended to be applied to machine code. They convert "
"relative branches, calls and jumps in the code to use absolute addressing, "
"with the aim of increasing the redundancy that can be exploited by the "
"compressor. These filters support one option, ``start_offset``. This "
"specifies the address that should be mapped to the beginning of the input "
"data. The default is 0."
msgstr ""
"Les filtres BCJ sont conçus pour être appliqués sur du langage machine. Ils "
"convertissent les branches relatives, les appels et les sauts dans le code à "
"des fins d'adressage strict, dans le but d'augmenter la redondance mise en "
"jeu par le compresseur. Ils ne supportent qu'une seule option : "
"``start_offset``, pour définir l'adresse où sera déclenché le début de la "
"donnée d'entrée. Par défaut : 0."

#: library/lzma.rst:403
msgid "Examples"
msgstr "Exemples"

#: library/lzma.rst:405
msgid "Reading in a compressed file::"
msgstr "Lire un fichier compressé ::"

#: library/lzma.rst:407
msgid ""
"import lzma\n"
"with lzma.open(\"file.xz\") as f:\n"
"    file_content = f.read()"
msgstr ""

#: library/lzma.rst:411
msgid "Creating a compressed file::"
msgstr "Créer un fichier compressé ::"

#: library/lzma.rst:413
msgid ""
"import lzma\n"
"data = b\"Insert Data Here\"\n"
"with lzma.open(\"file.xz\", \"w\") as f:\n"
"    f.write(data)"
msgstr ""

#: library/lzma.rst:418
msgid "Compressing data in memory::"
msgstr "Compresser des données en mémoire ::"

#: library/lzma.rst:420
msgid ""
"import lzma\n"
"data_in = b\"Insert Data Here\"\n"
"data_out = lzma.compress(data_in)"
msgstr ""

#: library/lzma.rst:424
msgid "Incremental compression::"
msgstr "Compression incrémentale ::"

#: library/lzma.rst:426
msgid ""
"import lzma\n"
"lzc = lzma.LZMACompressor()\n"
"out1 = lzc.compress(b\"Some data\\n\")\n"
"out2 = lzc.compress(b\"Another piece of data\\n\")\n"
"out3 = lzc.compress(b\"Even more data\\n\")\n"
"out4 = lzc.flush()\n"
"# Concatenate all the partial results:\n"
"result = b\"\".join([out1, out2, out3, out4])"
msgstr ""

#: library/lzma.rst:435
msgid "Writing compressed data to an already-open file::"
msgstr "Écrire des données compressées dans un fichier préalablement ouvert ::"

#: library/lzma.rst:437
msgid ""
"import lzma\n"
"with open(\"file.xz\", \"wb\") as f:\n"
"    f.write(b\"This data will not be compressed\\n\")\n"
"    with lzma.open(f, \"w\") as lzf:\n"
"        lzf.write(b\"This *will* be compressed\\n\")\n"
"    f.write(b\"Not compressed\\n\")"
msgstr ""

#: library/lzma.rst:444
msgid "Creating a compressed file using a custom filter chain::"
msgstr ""
"Créer un fichier compressé en utilisant une chaîne de filtre personnalisée ::"

#: library/lzma.rst:446
msgid ""
"import lzma\n"
"my_filters = [\n"
"    {\"id\": lzma.FILTER_DELTA, \"dist\": 5},\n"
"    {\"id\": lzma.FILTER_LZMA2, \"preset\": 7 | lzma.PRESET_EXTREME},\n"
"]\n"
"with lzma.open(\"file.xz\", \"w\", filters=my_filters) as f:\n"
"    f.write(b\"blah blah blah\")"
msgstr ""
