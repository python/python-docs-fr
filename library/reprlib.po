# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-29 16:06+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/reprlib.rst:2
msgid ":mod:`reprlib` --- Alternate :func:`repr` implementation"
msgstr ""

#: ../Doc/library/reprlib.rst:9
msgid "**Source code:** :source:`Lib/reprlib.py`"
msgstr "**Code source :** :source:`Lib/reprlib.py`"

#: ../Doc/library/reprlib.rst:13
msgid ""
"The :mod:`reprlib` module provides a means for producing object "
"representations with limits on the size of the resulting strings. This is "
"used in the Python debugger and may be useful in other contexts as well."
msgstr ""

#: ../Doc/library/reprlib.rst:17
msgid "This module provides a class, an instance, and a function:"
msgstr ""

#: ../Doc/library/reprlib.rst:22
msgid ""
"Class which provides formatting services useful in implementing functions "
"similar to the built-in :func:`repr`; size limits for  different object "
"types are added to avoid the generation of representations which are "
"excessively long."
msgstr ""

#: ../Doc/library/reprlib.rst:29
msgid ""
"This is an instance of :class:`Repr` which is used to provide the :func:`."
"repr` function described below.  Changing the attributes of this object will "
"affect the size limits used by :func:`.repr` and the Python debugger."
msgstr ""

#: ../Doc/library/reprlib.rst:37
msgid ""
"This is the :meth:`~Repr.repr` method of ``aRepr``.  It returns a string "
"similar to that returned by the built-in function of the same name, but with "
"limits on most sizes."
msgstr ""

#: ../Doc/library/reprlib.rst:41
msgid ""
"In addition to size-limiting tools, the module also provides a decorator for "
"detecting recursive calls to :meth:`__repr__` and substituting a placeholder "
"string instead."
msgstr ""

#: ../Doc/library/reprlib.rst:50
msgid ""
"Decorator for :meth:`__repr__` methods to detect recursive calls within the "
"same thread.  If a recursive call is made, the *fillvalue* is returned, "
"otherwise, the usual :meth:`__repr__` call is made.  For example:"
msgstr ""

#: ../Doc/library/reprlib.rst:72
msgid "Repr Objects"
msgstr ""

#: ../Doc/library/reprlib.rst:74
msgid ""
":class:`Repr` instances provide several attributes which can be used to "
"provide size limits for the representations of different object types,  and "
"methods which format specific object types."
msgstr ""

#: ../Doc/library/reprlib.rst:81
msgid ""
"Depth limit on the creation of recursive representations.  The default is "
"``6``."
msgstr ""

#: ../Doc/library/reprlib.rst:92
msgid ""
"Limits on the number of entries represented for the named object type.  The "
"default is ``4`` for :attr:`maxdict`, ``5`` for :attr:`maxarray`, and  ``6`` "
"for the others."
msgstr ""

#: ../Doc/library/reprlib.rst:99
msgid ""
"Maximum number of characters in the representation for an integer.  Digits "
"are dropped from the middle.  The default is ``40``."
msgstr ""

#: ../Doc/library/reprlib.rst:105
msgid ""
"Limit on the number of characters in the representation of the string.  Note "
"that the \"normal\" representation of the string is used as the character "
"source: if escape sequences are needed in the representation, these may be "
"mangled when the representation is shortened.  The default is ``30``."
msgstr ""

#: ../Doc/library/reprlib.rst:113
msgid ""
"This limit is used to control the size of object types for which no specific "
"formatting method is available on the :class:`Repr` object. It is applied in "
"a similar manner as :attr:`maxstring`.  The default is ``20``."
msgstr ""

#: ../Doc/library/reprlib.rst:120
msgid ""
"The equivalent to the built-in :func:`repr` that uses the formatting imposed "
"by the instance."
msgstr ""

#: ../Doc/library/reprlib.rst:126
msgid ""
"Recursive implementation used by :meth:`.repr`.  This uses the type of *obj* "
"to determine which formatting method to call, passing it *obj* and *level*.  "
"The type-specific methods should call :meth:`repr1` to perform recursive "
"formatting, with ``level - 1`` for the value of *level* in the recursive  "
"call."
msgstr ""

#: ../Doc/library/reprlib.rst:135
msgid ""
"Formatting methods for specific types are implemented as methods with a name "
"based on the type name.  In the method name, **TYPE** is replaced by ``'_'."
"join(type(obj).__name__.split())``. Dispatch to these methods is handled by :"
"meth:`repr1`. Type-specific methods which need to recursively format a value "
"should call ``self.repr1(subobj, level - 1)``."
msgstr ""

#: ../Doc/library/reprlib.rst:145
msgid "Subclassing Repr Objects"
msgstr ""

#: ../Doc/library/reprlib.rst:147
msgid ""
"The use of dynamic dispatching by :meth:`Repr.repr1` allows subclasses of :"
"class:`Repr` to add support for additional built-in object types or to "
"modify the handling of types already supported. This example shows how "
"special support for file objects could be added::"
msgstr ""
