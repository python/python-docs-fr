# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 21:40+0100\n"
"PO-Revision-Date: 2023-11-24 18:39+0100\n"
"Last-Translator: Jérémy TREMBLAY <jeremy-tremblay@outlook.fr>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.4\n"

#: library/pkgutil.rst:2
#, fuzzy
msgid ":mod:`!pkgutil` --- Package extension utility"
msgstr ":mod:`pkgutil` — Utilitaire d'extension de package"

#: library/pkgutil.rst:7
msgid "**Source code:** :source:`Lib/pkgutil.py`"
msgstr "**Code source :** :source:`Lib/pkgutil.py`"

#: library/pkgutil.rst:11
msgid ""
"This module provides utilities for the import system, in particular package "
"support."
msgstr ""
"Ce module fournit des utilitaires pour le système d'importation, en "
"particulier pour la prise en charge des paquets."

#: library/pkgutil.rst:16
msgid "A namedtuple that holds a brief summary of a module's info."
msgstr ""
"Un *n*-uplet nommé qui contient un bref résumé des informations d'un module."

#: library/pkgutil.rst:22
msgid ""
"Extend the search path for the modules which comprise a package.  Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr ""
"Étend le chemin de recherche pour les modules qui composent un paquet. "
"L'usage prévu est de placer le code suivant dans le :file:`__init__.py` d'un "
"paquet ::"

#: library/pkgutil.rst:25
msgid ""
"from pkgutil import extend_path\n"
"__path__ = extend_path(__path__, __name__)"
msgstr ""

#: library/pkgutil.rst:28
#, fuzzy
msgid ""
"For each directory on :data:`sys.path` that has a subdirectory that matches "
"the package name, add the subdirectory to the package's :attr:`~module."
"__path__`. This is useful if one wants to distribute different parts of a "
"single logical package as multiple directories."
msgstr ""
"Pour chaque répertoire sur :data:`sys.path` qui a un sous-répertoire "
"correspondant au nom du paquet, ajoute le sous-répertoire au :attr:"
"`__path__` du paquet. Cela est utile si l'on souhaite distribuer différentes "
"parties d'un paquet logique unique dans plusieurs répertoires."

#: library/pkgutil.rst:34
#, fuzzy
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the :"
"mod:`site` module for more information), except that it doesn't special-case "
"lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at face "
"value: apart from skipping blank lines and ignoring comments, all entries "
"found in a :file:`\\*.pkg` file are added to the path, regardless of whether "
"they exist on the filesystem (this is a feature)."
msgstr ""
"Elle recherche également les fichiers :file:`*.pkg` en commençant là où "
"``*`` correspond à l'argument *name*. Cette fonctionnalité est similaire aux "
"fichiers :file:`*.pth` (voir le module :mod:`site` pour plus "
"d'informations), à l'exception qu'elle ne traite pas de manière spéciale les "
"lignes commençant par ``import``. Un fichier :file:`*.pkg` est fiable de "
"facto : à part la vérification des doublons, toutes les entrées trouvées "
"dans un fichier :file:`*.pkg` sont ajoutées au chemin, quelle que soit leur "
"existence sur le système de fichiers. (C'est une fonctionnalité.)"

#: library/pkgutil.rst:42
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr ""
"Si le chemin d'entrée n'est pas une liste (comme c'est le cas pour les "
"paquets figés), il est retourné tel quel. Le chemin d'entrée n'est pas "
"modifié ; une copie étendue en est retournée. Les éléments ne sont ajoutés à "
"la copie qu'à la fin."

#: library/pkgutil.rst:46
msgid ""
"It is assumed that :data:`sys.path` is a sequence.  Items of :data:`sys."
"path` that are not strings referring to existing directories are ignored. "
"Unicode items on :data:`sys.path` that cause errors when used as filenames "
"may cause this function to raise an exception (in line with :func:`os.path."
"isdir` behavior)."
msgstr ""
"L'interpréteur estime que :data:`sys.path` est une séquence. Les éléments "
"de :data:`sys.path` qui ne sont pas des chaînes se référant à des "
"répertoires existants sont ignorés. Les éléments Unicode sur :data:`sys."
"path` qui provoquent des erreurs lorsqu'ils sont utilisés comme noms de "
"fichiers peuvent amener cette fonction à lever une exception (conformément "
"au comportement de :func:`os.path.isdir`)."

#: library/pkgutil.rst:54
msgid "Retrieve a module :term:`loader` for the given *fullname*."
msgstr "Récupère un :term:`loader` de module pour le *fullname* donné."

#: library/pkgutil.rst:56
msgid ""
"This is a backwards compatibility wrapper around :func:`importlib.util."
"find_spec` that converts most failures to :exc:`ImportError` and only "
"returns the loader rather than the full :class:`importlib.machinery."
"ModuleSpec`."
msgstr ""
"Il s'agit d'une surcouche de compatibilité ascendante autour de :func:"
"`importlib.util.find_spec` qui convertit la plupart des échecs en :exc:"
"`ImportError` et ne renvoie que le chargeur, plutôt que le :class:`importlib."
"machinery.ModuleSpec` complet."

#: library/pkgutil.rst:82 library/pkgutil.rst:121 library/pkgutil.rst:181
msgid ""
"Updated to be based directly on :mod:`importlib` rather than relying on the "
"package internal :pep:`302` import emulation."
msgstr ""
"Mise à jour pour être basée directement sur :mod:`importlib` au lieu de "
"dépendre de l'émulation interne de la :pep:`302` du paquet."

#: library/pkgutil.rst:101
msgid "Updated to be based on :pep:`451`"
msgstr "Mise à jour pour être basée sur la :pep:`451`"

#: library/pkgutil.rst:104
msgid "Use :func:`importlib.util.find_spec` instead."
msgstr ""

#: library/pkgutil.rst:74
msgid "Retrieve a :term:`finder` for the given *path_item*."
msgstr "Récupère un :term:`finder` pour l'élément *path_item* donné."

#: library/pkgutil.rst:76
msgid ""
"The returned finder is cached in :data:`sys.path_importer_cache` if it was "
"newly created by a path hook."
msgstr ""
"Le chercheur retourné est mis en cache dans :data:`sys.path_importer_cache` "
"s'il a été récemment créé par le chemin d'un point d'entrée."

#: library/pkgutil.rst:79
msgid ""
"The cache (or part of it) can be cleared manually if a rescan of :data:`sys."
"path_hooks` is necessary."
msgstr ""
"Le cache (ou une partie de celui-ci) peut être effacé manuellement si une "
"nouvelle analyse de :data:`sys.path_hooks` est nécessaire."

#: library/pkgutil.rst:89
msgid "Get a :term:`loader` object for *module_or_name*."
msgstr "Récupère un objet :term:`loader` pour *module_or_name*."

#: library/pkgutil.rst:91
msgid ""
"If the module or package is accessible via the normal import mechanism, a "
"wrapper around the relevant part of that machinery is returned.  Returns "
"``None`` if the module cannot be found or imported.  If the named module is "
"not already imported, its containing package (if any) is imported, in order "
"to establish the package ``__path__``."
msgstr ""
"Si le module ou le paquet est accessible via le mécanisme d'importation "
"normal, une encapsulation autour de la partie pertinente de cette mécanique "
"est renvoyé. Renvoie ``None`` si le module ne peut pas être trouvé ou "
"importé. Si le module nommé n'est pas déjà importé, son paquet contenant (le "
"cas échéant) est importé afin d'établir le paquet ``__path__``."

#: library/pkgutil.rst:110
msgid "Yield :term:`finder` objects for the given module name."
msgstr "Génère des objets :term:`finder` pour le nom du module donné."

#: library/pkgutil.rst:112
msgid ""
"If fullname contains a ``'.'``, the finders will be for the package "
"containing fullname, otherwise they will be all registered top level finders "
"(i.e. those on both :data:`sys.meta_path` and :data:`sys.path_hooks`)."
msgstr ""
"Si le nom complet contient un ``'.'``, les chercheurs sont pour le paquet "
"contenant le nom complet, sinon ils sont enregistrés pour tous les "
"chercheurs de niveau supérieur (c'est-à-dire ceux de :data:`sys.meta_path` "
"et de :data:`sys.path_hooks`)."

#: library/pkgutil.rst:116
msgid ""
"If the named module is in a package, that package is imported as a side "
"effect of invoking this function."
msgstr ""
"Si le module nommé se trouve dans un paquet, ce paquet est importé en tant "
"qu'effet secondaire de l'invocation de cette fonction."

#: library/pkgutil.rst:119
msgid "If no module name is specified, all top level finders are produced."
msgstr ""
"Si aucun nom de module n'est spécifié, tous les chercheurs de niveau "
"supérieur sont générés."

#: library/pkgutil.rst:128
msgid ""
"Yields :class:`ModuleInfo` for all submodules on *path*, or, if *path* is "
"``None``, all top-level modules on :data:`sys.path`."
msgstr ""
"Fournit des :class:`ModuleInfo` pour tous les sous-modules sur *path* ou, si "
"*path* est ``None``, pour tous les modules de niveau supérieur sur :data:"
"`sys.path`."

#: library/pkgutil.rst:152
msgid ""
"*path* should be either ``None`` or a list of paths to look for modules in."
msgstr ""
"*path* doit être soit ``None``, soit une liste de chemins pour rechercher "
"des modules."

#: library/pkgutil.rst:154
msgid ""
"*prefix* is a string to output on the front of every module name on output."
msgstr ""
"*prefix* est une chaîne de caractères à afficher au début de chaque nom de "
"module en sortie."

#: library/pkgutil.rst:176
msgid ""
"Only works for a :term:`finder` which defines an ``iter_modules()`` method. "
"This interface is non-standard, so the module also provides implementations "
"for :class:`importlib.machinery.FileFinder` and :class:`zipimport."
"zipimporter`."
msgstr ""
"Cela fonctionne uniquement pour un :term:`finder` qui définit une méthode "
"``iter_modules()``. Cette interface n'est pas standard, donc le module "
"fournit également des implémentations pour :class:`importlib.machinery."
"FileFinder` et :class:`zipimport.zipimporter`."

#: library/pkgutil.rst:149
msgid ""
"Yields :class:`ModuleInfo` for all modules recursively on *path*, or, if "
"*path* is ``None``, all accessible modules."
msgstr ""
"Fournit des :class:`ModuleInfo` pour tous les modules de manière récursive "
"sur *path* ou, si *path* est ``None``, tous les modules accessibles."

#: library/pkgutil.rst:156
msgid ""
"Note that this function must import all *packages* (*not* all modules!) on "
"the given *path*, in order to access the ``__path__`` attribute to find "
"submodules."
msgstr ""
"Notez que cette fonction doit importer tous les *packages* (*pas* tous les "
"modules !) sur le *path* donné, afin d'accéder à l'attribut ``__path__`` "
"pour trouver les sous-modules."

#: library/pkgutil.rst:160
msgid ""
"*onerror* is a function which gets called with one argument (the name of the "
"package which was being imported) if any exception occurs while trying to "
"import a package.  If no *onerror* function is supplied, :exc:"
"`ImportError`\\s are caught and ignored, while all other exceptions are "
"propagated, terminating the search."
msgstr ""
"*onerror* est une fonction qui est appelée avec un argument (le nom du "
"paquet qui était en cours d'importation) si une exception se produit lors de "
"la tentative d'importation d'un paquet. Si aucune fonction *onerror* n'est "
"fournie, les :exc:`ImportError`\\s sont attrapées et ignorées, tandis que "
"toutes les autres exceptions sont propagées, mettant fin à la recherche."

#: library/pkgutil.rst:166
msgid "Examples::"
msgstr "Exemples ::"

#: library/pkgutil.rst:168
msgid ""
"# list all modules python can access\n"
"walk_packages()\n"
"\n"
"# list all submodules of ctypes\n"
"walk_packages(ctypes.__path__, ctypes.__name__ + '.')"
msgstr ""

#: library/pkgutil.rst:188
msgid "Get a resource from a package."
msgstr "Obtient une ressource à partir d'un paquet."

#: library/pkgutil.rst:190
msgid ""
"This is a wrapper for the :term:`loader` :meth:`get_data <importlib.abc."
"ResourceLoader.get_data>` API.  The *package* argument should be the name of "
"a package, in standard module format (``foo.bar``).  The *resource* argument "
"should be in the form of a relative filename, using ``/`` as the path "
"separator.  The parent directory name ``..`` is not allowed, and nor is a "
"rooted name (starting with a ``/``)."
msgstr ""
"Ceci est une surcouche pour l'API :term:`loader` :meth:`get_data <importlib."
"abc.ResourceLoader.get_data>`. L'argument *package* doit être le nom d'un "
"paquet, au format module standard (``foo.bar``). L'argument *resource* doit "
"être sous forme d'un nom de fichier relatif, en utilisant ``/`` comme "
"séparateur de chemin. Le nom du répertoire parent ``..`` n'est pas autorisé, "
"pas plus qu'un nom racine (commençant par ``/``)."

#: library/pkgutil.rst:197
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr ""
"La fonction renvoie une chaîne binaire qui est le contenu de la ressource "
"spécifiée."

#: library/pkgutil.rst:200
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr ""
"Pour les paquets situés dans le système de fichiers, qui ont déjà été "
"importés, c'est l'équivalent approximatif de ::"

#: library/pkgutil.rst:203
msgid ""
"d = os.path.dirname(sys.modules[package].__file__)\n"
"data = open(os.path.join(d, resource), 'rb').read()"
msgstr ""

#: library/pkgutil.rst:206
msgid ""
"If the package cannot be located or loaded, or it uses a :term:`loader` "
"which does not support :meth:`get_data <importlib.abc.ResourceLoader."
"get_data>`, then ``None`` is returned.  In particular, the :term:`loader` "
"for :term:`namespace packages <namespace package>` does not support :meth:"
"`get_data <importlib.abc.ResourceLoader.get_data>`."
msgstr ""
"Si le paquet ne peut pas être localisé ou chargé, ou s'il utilise un :term:"
"`loader` qui ne prend pas en charge :meth:`get_data <importlib.abc."
"ResourceLoader.get_data>`, alors ``None`` est retourné. En particulier, le :"
"term:`loader` pour les :term:`paquets espaces de noms <namespace package>` "
"ne prend pas en charge :meth:`get_data <importlib.abc.ResourceLoader."
"get_data>`."

#: library/pkgutil.rst:215
msgid "Resolve a name to an object."
msgstr "Solutionne un nom en un objet."

#: library/pkgutil.rst:217
msgid ""
"This functionality is used in numerous places in the standard library (see :"
"issue:`12915`) - and equivalent functionality is also in widely used third-"
"party packages such as setuptools, Django and Pyramid."
msgstr ""
"Cette fonctionnalité est utilisée dans de nombreux endroits de la "
"bibliothèque standard (voir :issue:`12915`) - et une fonctionnalité "
"équivalente est également présente dans des paquets largement utilisés tels "
"que Setuptools, Django et Pyramid."

#: library/pkgutil.rst:221
msgid ""
"It is expected that *name* will be a string in one of the following formats, "
"where W is shorthand for a valid Python identifier and dot stands for a "
"literal period in these pseudo-regexes:"
msgstr ""
"Python s'attend à ce que *name* soit une chaîne de caractères dans l'un des "
"formats suivants, où W est une abréviation pour un identifiant Python valide "
"et le point représente un point littéral dans ces pseudo-regexes :"

#: library/pkgutil.rst:225
msgid "``W(.W)*``"
msgstr "``W(.W)*``"

#: library/pkgutil.rst:226
msgid "``W(.W)*:(W(.W)*)?``"
msgstr "``W(.W)*:(W(.W)*)?``"

#: library/pkgutil.rst:228
msgid ""
"The first form is intended for backward compatibility only. It assumes that "
"some part of the dotted name is a package, and the rest is an object "
"somewhere within that package, possibly nested inside other objects. Because "
"the place where the package stops and the object hierarchy starts can't be "
"inferred by inspection, repeated attempts to import must be done with this "
"form."
msgstr ""
"La première forme est destinée uniquement à assurer la compatibilité "
"ascendante. Elle suppose qu'une partie du nom pointé est un paquet, et que "
"le reste est un objet quelque part à l'intérieur de ce paquet, "
"éventuellement niché à l'intérieur d'autres objets. Puisque l'endroit où le "
"paquet s'arrête et où la hiérarchie des objets commence ne peut pas être "
"déduit par inspection, des tentatives répétées d'importation doivent être "
"effectuées avec cette forme."

#: library/pkgutil.rst:235
msgid ""
"In the second form, the caller makes the division point clear through the "
"provision of a single colon: the dotted name to the left of the colon is a "
"package to be imported, and the dotted name to the right is the object "
"hierarchy within that package. Only one import is needed in this form. If it "
"ends with the colon, then a module object is returned."
msgstr ""
"Dans la deuxième forme, l'appelant clarifie le point de division en "
"fournissant un seul deux-points : le nom pointé à gauche des deux-points est "
"un package à importer, et le nom pointé à droite est la hiérarchie d'objets "
"à l'intérieur de ce paquet. Seule une importation est nécessaire dans cette "
"forme. Si elle se termine par un deux-points, alors un objet module est "
"retourné."

#: library/pkgutil.rst:241
msgid ""
"The function will return an object (which might be a module), or raise one "
"of the following exceptions:"
msgstr ""
"La fonction renvoie un objet (qui pourrait être un module), ou génère l'une "
"des exceptions suivantes :"

#: library/pkgutil.rst:244
msgid ":exc:`ValueError` -- if *name* isn't in a recognised format."
msgstr ":exc:`ValueError` – si *name* n'est pas un format reconnu."

#: library/pkgutil.rst:246
msgid ":exc:`ImportError` -- if an import failed when it shouldn't have."
msgstr ""
":exc:`ImportError` – si une importation échoue lorsqu'elle n'aurait pas dû."

#: library/pkgutil.rst:248
msgid ""
":exc:`AttributeError` -- If a failure occurred when traversing the object "
"hierarchy within the imported package to get to the desired object."
msgstr ""
":exc:`AttributeError` – Si un échec s'est produit lors du parcours de la "
"hiérarchie d'objets dans le paquet importé pour accéder à l'objet souhaité."

#~ msgid ":pep:`302` Finder that wraps Python's \"classic\" import algorithm."
#~ msgstr ""
#~ ":pep:`302` Chercheur qui enveloppe l'algorithme d'importation "
#~ "« classique » de Python."

#~ msgid ""
#~ "If *dirname* is a string, a :pep:`302` finder is created that searches "
#~ "that directory.  If *dirname* is ``None``, a :pep:`302` finder is created "
#~ "that searches the current :data:`sys.path`, plus any modules that are "
#~ "frozen or built-in."
#~ msgstr ""
#~ "Si *dirname* est une chaîne, un chercheur :pep:`302` est créé pour "
#~ "rechercher ce répertoire. Si *dirname* est ``None``, un chercheur :pep:"
#~ "`302` est créé pour rechercher le :data:`sys.path` actuel, ainsi que les "
#~ "modules qui sont figés ou natifs."

#~ msgid ""
#~ "Note that :class:`ImpImporter` does not currently support being used by "
#~ "placement on :data:`sys.meta_path`."
#~ msgstr ""
#~ "Notez que :class:`ImpImporter` ne prend actuellement pas en charge son "
#~ "utilisation en tant que placement dans :data:`sys.meta_path`."

#~ msgid ""
#~ "This emulation is no longer needed, as the standard import mechanism is "
#~ "now fully :pep:`302` compliant and available in :mod:`importlib`."
#~ msgstr ""
#~ "Cette émulation n'est plus nécessaire, car le mécanisme d'importation "
#~ "standard est désormais entièrement conforme à la :pep:`302` et disponible "
#~ "dans :mod:`importlib`."

#~ msgid ""
#~ ":term:`Loader <loader>` that wraps Python's \"classic\" import algorithm."
#~ msgstr ""
#~ ":term:`Loader <loader>` qui encapsule l'algorithme d'importation "
#~ "« classique » de Python."
