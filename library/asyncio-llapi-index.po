# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-29 16:06+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/asyncio-llapi-index.rst:6
msgid "Low-level API Index"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:8
msgid "This page lists all low-level asyncio APIs."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:12
msgid "Obtaining the Event Loop"
msgstr "Obtenir une boucle d'évènements"

#: ../Doc/library/asyncio-llapi-index.rst:18
msgid ":func:`asyncio.get_running_loop`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:19
msgid "The **preferred** function to get the running event loop."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:21
msgid ":func:`asyncio.get_event_loop`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:22
msgid "Get an event loop instance (current or via the policy)."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:24
msgid ":func:`asyncio.set_event_loop`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:25
msgid "Set the event loop as current via the current policy."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:27
msgid ":func:`asyncio.new_event_loop`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:28
msgid "Create a new event loop."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:32
#: ../Doc/library/asyncio-llapi-index.rst:260
msgid "Examples"
msgstr "Exemples"

#: ../Doc/library/asyncio-llapi-index.rst:33
msgid ":ref:`Using asyncio.get_running_loop() <asyncio_example_future>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:37
msgid "Event Loop Methods"
msgstr "Méthodes de la boucle d'évènements"

#: ../Doc/library/asyncio-llapi-index.rst:39
msgid ""
"See also the main documentation section about the :ref:`event loop methods "
"<asyncio-event-loop>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:42
msgid "Lifecycle"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:47
msgid ":meth:`loop.run_until_complete`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:48
msgid "Run a Future/Task/awaitable until complete."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:50
msgid ":meth:`loop.run_forever`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:51
msgid "Run the event loop forever."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:53
msgid ":meth:`loop.stop`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:54
msgid "Stop the event loop."
msgstr "Arrête l'exécution de la boucle d'évènements."

#: ../Doc/library/asyncio-llapi-index.rst:56
msgid ":meth:`loop.close`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:57
msgid "Close the event loop."
msgstr "Arrête la boucle d'évènements."

#: ../Doc/library/asyncio-llapi-index.rst:59
msgid ":meth:`loop.is_running()`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:60
msgid "Return ``True`` if the event loop is running."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:62
msgid ":meth:`loop.is_closed()`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:63
#, fuzzy
msgid "Return ``True`` if the event loop is closed."
msgstr "Renvoie ``True`` si la boucle d'évènements est arrêtée."

#: ../Doc/library/asyncio-llapi-index.rst:65
msgid "``await`` :meth:`loop.shutdown_asyncgens`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:66
msgid "Close asynchronous generators."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:69
msgid "Debugging"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:74
msgid ":meth:`loop.set_debug`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:75
msgid "Enable or disable the debug mode."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:77
msgid ":meth:`loop.get_debug`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:78
msgid "Get the current debug mode."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:81
msgid "Scheduling Callbacks"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:86
msgid ":meth:`loop.call_soon`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:87
msgid "Invoke a callback soon."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:89
msgid ":meth:`loop.call_soon_threadsafe`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:90
msgid "A thread-safe variant of :meth:`loop.call_soon`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:92
msgid ":meth:`loop.call_later`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:93
msgid "Invoke a callback *after* the given time."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:95
msgid ":meth:`loop.call_at`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:96
msgid "Invoke a callback *at* the given time."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:99
msgid "Thread/Process Pool"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:104
msgid "``await`` :meth:`loop.run_in_executor`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:105
msgid ""
"Run a CPU-bound or other blocking function in a :mod:`concurrent.futures` "
"executor."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:108
msgid ":meth:`loop.set_default_executor`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:109
msgid "Set the default executor for :meth:`loop.run_in_executor`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:112
msgid "Tasks and Futures"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:117
msgid ":meth:`loop.create_future`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:118
msgid "Create a :class:`Future` object."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:120
msgid ":meth:`loop.create_task`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:121
msgid "Schedule coroutine as a :class:`Task`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:123
msgid ":meth:`loop.set_task_factory`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:124
msgid ""
"Set a factory used by :meth:`loop.create_task` to create :class:`Tasks "
"<Task>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:127
msgid ":meth:`loop.get_task_factory`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:128
msgid ""
"Get the factory :meth:`loop.create_task` uses to create :class:`Tasks "
"<Task>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:132
msgid "DNS"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:137
msgid "``await`` :meth:`loop.getaddrinfo`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:138
msgid "Asynchronous version of :meth:`socket.getaddrinfo`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:140
msgid "``await`` :meth:`loop.getnameinfo`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:141
msgid "Asynchronous version of :meth:`socket.getnameinfo`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:144
msgid "Networking and IPC"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:149
msgid "``await`` :meth:`loop.create_connection`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:150
msgid "Open a TCP connection."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:152
msgid "``await`` :meth:`loop.create_server`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:153
msgid "Create a TCP server."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:155
msgid "``await`` :meth:`loop.create_unix_connection`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:156
msgid "Open a Unix socket connection."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:158
msgid "``await`` :meth:`loop.create_unix_server`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:159
msgid "Create a Unix socket server."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:161
msgid "``await`` :meth:`loop.connect_accepted_socket`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:162
msgid "Wrap a :class:`~socket.socket` into a ``(transport, protocol)`` pair."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:165
msgid "``await`` :meth:`loop.create_datagram_endpoint`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:166
msgid "Open a datagram (UDP) connection."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:168
msgid "``await`` :meth:`loop.sendfile`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:169
msgid "Send a file over a transport."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:171
msgid "``await`` :meth:`loop.start_tls`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:172
msgid "Upgrade an existing connection to TLS."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:174
msgid "``await`` :meth:`loop.connect_read_pipe`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:175
msgid "Wrap a read end of a pipe into a ``(transport, protocol)`` pair."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:177
msgid "``await`` :meth:`loop.connect_write_pipe`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:178
msgid "Wrap a write end of a pipe into a ``(transport, protocol)`` pair."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:181
msgid "Sockets"
msgstr "Interfaces de connexion (*sockets*)"

#: ../Doc/library/asyncio-llapi-index.rst:186
msgid "``await`` :meth:`loop.sock_recv`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:187
msgid "Receive data from the :class:`~socket.socket`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:189
msgid "``await`` :meth:`loop.sock_recv_into`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:190
msgid "Receive data from the :class:`~socket.socket` into a buffer."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:192
msgid "``await`` :meth:`loop.sock_sendall`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:193
msgid "Send data to the :class:`~socket.socket`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:195
msgid "``await`` :meth:`loop.sock_connect`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:196
msgid "Connect the :class:`~socket.socket`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:198
msgid "``await`` :meth:`loop.sock_accept`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:199
msgid "Accept a :class:`~socket.socket` connection."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:201
msgid "``await`` :meth:`loop.sock_sendfile`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:202
msgid "Send a file over the :class:`~socket.socket`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:204
msgid ":meth:`loop.add_reader`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:205
msgid "Start watching a file descriptor for read availability."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:207
msgid ":meth:`loop.remove_reader`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:208
msgid "Stop watching a file descriptor for read availability."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:210
msgid ":meth:`loop.add_writer`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:211
msgid "Start watching a file descriptor for write availability."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:213
msgid ":meth:`loop.remove_writer`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:214
msgid "Stop watching a file descriptor for write availability."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:217
#, fuzzy
msgid "Unix Signals"
msgstr "Signaux Unix"

#: ../Doc/library/asyncio-llapi-index.rst:222
msgid ":meth:`loop.add_signal_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:223
msgid "Add a handler for a :mod:`signal`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:225
msgid ":meth:`loop.remove_signal_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:226
msgid "Remove a handler for a :mod:`signal`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:229
msgid "Subprocesses"
msgstr "Sous-processus"

#: ../Doc/library/asyncio-llapi-index.rst:234
msgid ":meth:`loop.subprocess_exec`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:235
msgid "Spawn a subprocess."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:237
msgid ":meth:`loop.subprocess_shell`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:238
msgid "Spawn a subprocess from a shell command."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:241
msgid "Error Handling"
msgstr "Gestion des erreurs"

#: ../Doc/library/asyncio-llapi-index.rst:246
msgid ":meth:`loop.call_exception_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:247
msgid "Call the exception handler."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:249
msgid ":meth:`loop.set_exception_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:250
msgid "Set a new exception handler."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:252
msgid ":meth:`loop.get_exception_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:253
msgid "Get the current exception handler."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:255
msgid ":meth:`loop.default_exception_handler`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:256
msgid "The default exception handler implementation."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:261
msgid ""
":ref:`Using asyncio.get_event_loop() and loop.run_forever() "
"<asyncio_example_lowlevel_helloworld>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:264
msgid ":ref:`Using loop.call_later() <asyncio_example_call_later>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:266
msgid ""
"Using ``loop.create_connection()`` to implement :ref:`an echo-client "
"<asyncio_example_tcp_echo_client_protocol>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:269
msgid ""
"Using ``loop.create_connection()`` to :ref:`connect a socket "
"<asyncio_example_create_connection>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:272
msgid ""
":ref:`Using add_reader() to watch an FD for read events "
"<asyncio_example_watch_fd>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:275
msgid ":ref:`Using loop.add_signal_handler() <asyncio_example_unix_signals>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:277
msgid ":ref:`Using loop.subprocess_exec() <asyncio_example_subprocess_proto>`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:281
msgid "Transports"
msgstr "Transports"

#: ../Doc/library/asyncio-llapi-index.rst:283
msgid "All transports implement the following methods:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:289
msgid ":meth:`transport.close() <BaseTransport.close>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:290
msgid "Close the transport."
msgstr "Ferme le transport."

#: ../Doc/library/asyncio-llapi-index.rst:292
msgid ":meth:`transport.is_closing() <BaseTransport.is_closing>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:293
msgid "Return ``True`` if the transport is closing or is closed."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:295
msgid ":meth:`transport.get_extra_info() <BaseTransport.get_extra_info>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:296
msgid "Request for information about the transport."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:298
msgid ":meth:`transport.set_protocol() <BaseTransport.set_protocol>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:299
msgid "Set a new protocol."
msgstr "Change le protocole."

#: ../Doc/library/asyncio-llapi-index.rst:301
msgid ":meth:`transport.get_protocol() <BaseTransport.get_protocol>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:302
msgid "Return the current protocol."
msgstr "Renvoie le protocole courant."

#: ../Doc/library/asyncio-llapi-index.rst:305
msgid ""
"Transports that can receive data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, :meth:`loop."
"create_unix_connection`, :meth:`loop.connect_read_pipe`, etc:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:310
msgid "Read Transports"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:315
msgid ":meth:`transport.is_reading() <ReadTransport.is_reading>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:316
msgid "Return ``True`` if the transport is receiving."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:318
msgid ":meth:`transport.pause_reading() <ReadTransport.pause_reading>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:319
msgid "Pause receiving."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:321
msgid ":meth:`transport.resume_reading() <ReadTransport.resume_reading>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:322
msgid "Resume receiving."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:325
msgid ""
"Transports that can Send data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, :meth:`loop."
"create_unix_connection`, :meth:`loop.connect_write_pipe`, etc:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:330
msgid "Write Transports"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:335
msgid ":meth:`transport.write() <WriteTransport.write>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:336
msgid "Write data to the transport."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:338
msgid ":meth:`transport.writelines() <WriteTransport.writelines>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:339
msgid "Write buffers to the transport."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:341
msgid ":meth:`transport.can_write_eof() <WriteTransport.can_write_eof>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:342
msgid "Return :const:`True` if the transport supports sending EOF."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:344
msgid ":meth:`transport.write_eof() <WriteTransport.write_eof>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:345
msgid "Close and send EOF after flushing buffered data."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:347
msgid ":meth:`transport.abort() <WriteTransport.abort>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:348
#: ../Doc/library/asyncio-llapi-index.rst:370
msgid "Close the transport immediately."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:350
msgid ""
":meth:`transport.get_write_buffer_size() <WriteTransport."
"get_write_buffer_size>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:352
msgid "Return high and low water marks for write flow control."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:354
msgid ""
":meth:`transport.set_write_buffer_limits() <WriteTransport."
"set_write_buffer_limits>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:356
msgid "Set new high and low water marks for write flow control."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:359
msgid "Transports returned by :meth:`loop.create_datagram_endpoint`:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:361
msgid "Datagram Transports"
msgstr "Transports de datagrammes"

#: ../Doc/library/asyncio-llapi-index.rst:366
msgid ":meth:`transport.sendto() <DatagramTransport.sendto>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:367
msgid "Send data to the remote peer."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:369
msgid ":meth:`transport.abort() <DatagramTransport.abort>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:373
msgid ""
"Low-level transport abstraction over subprocesses. Returned by :meth:`loop."
"subprocess_exec` and :meth:`loop.subprocess_shell`:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:377
msgid "Subprocess Transports"
msgstr "Transports vers des sous-processus"

#: ../Doc/library/asyncio-llapi-index.rst:382
msgid ":meth:`transport.get_pid() <SubprocessTransport.get_pid>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:383
msgid "Return the subprocess process id."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:385
msgid ""
":meth:`transport.get_pipe_transport() <SubprocessTransport."
"get_pipe_transport>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:387
msgid ""
"Return the transport for the requested communication pipe (*stdin*, "
"*stdout*, or *stderr*)."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:390
msgid ":meth:`transport.get_returncode() <SubprocessTransport.get_returncode>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:391
msgid "Return the subprocess return code."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:393
msgid ":meth:`transport.kill() <SubprocessTransport.kill>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:394
msgid "Kill the subprocess."
msgstr "Tue le sous-processus."

#: ../Doc/library/asyncio-llapi-index.rst:396
msgid ":meth:`transport.send_signal() <SubprocessTransport.send_signal>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:397
msgid "Send a signal to the subprocess."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:399
msgid ":meth:`transport.terminate() <SubprocessTransport.terminate>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:400
msgid "Stop the subprocess."
msgstr "Termine le sous-processus."

#: ../Doc/library/asyncio-llapi-index.rst:402
msgid ":meth:`transport.close() <SubprocessTransport.close>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:403
msgid "Kill the subprocess and close all pipes."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:407
msgid "Protocols"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:409
msgid "Protocol classes can implement the following **callback methods**:"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:415
msgid "``callback`` :meth:`connection_made() <BaseProtocol.connection_made>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:416
msgid "Called when a connection is made."
msgstr "Appelé lorsqu'une connexion est établie."

#: ../Doc/library/asyncio-llapi-index.rst:418
msgid "``callback`` :meth:`connection_lost() <BaseProtocol.connection_lost>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:419
msgid "Called when the connection is lost or closed."
msgstr "Appelé lorsqu'une connexion est perdue ou fermée."

#: ../Doc/library/asyncio-llapi-index.rst:421
msgid "``callback`` :meth:`pause_writing() <BaseProtocol.pause_writing>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:422
msgid "Called when the transport's buffer goes over the high water mark."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:424
msgid "``callback`` :meth:`resume_writing() <BaseProtocol.resume_writing>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:425
msgid "Called when the transport's buffer drains below the low water mark."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:428
msgid "Streaming Protocols (TCP, Unix Sockets, Pipes)"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:433
msgid "``callback`` :meth:`data_received() <Protocol.data_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:434
msgid "Called when some data is received."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:436
msgid "``callback`` :meth:`eof_received() <Protocol.eof_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:437
#: ../Doc/library/asyncio-llapi-index.rst:452
msgid "Called when an EOF is received."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:440
msgid "Buffered Streaming Protocols"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:445
msgid "``callback`` :meth:`get_buffer() <BufferedProtocol.get_buffer>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:446
msgid "Called to allocate a new receive buffer."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:448
msgid "``callback`` :meth:`buffer_updated() <BufferedProtocol.buffer_updated>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:449
msgid "Called when the buffer was updated with the received data."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:451
msgid "``callback`` :meth:`eof_received() <BufferedProtocol.eof_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:455
msgid "Datagram Protocols"
msgstr "Protocoles non-connectés"

#: ../Doc/library/asyncio-llapi-index.rst:460
msgid ""
"``callback`` :meth:`datagram_received() <DatagramProtocol.datagram_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:462
msgid "Called when a datagram is received."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:464
msgid "``callback`` :meth:`error_received() <DatagramProtocol.error_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:465
msgid ""
"Called when a previous send or receive operation raises an :class:`OSError`."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:469
msgid "Subprocess Protocols"
msgstr "Protocoles liés aux sous-processus"

#: ../Doc/library/asyncio-llapi-index.rst:474
msgid ""
"``callback`` :meth:`pipe_data_received() <SubprocessProtocol."
"pipe_data_received>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:476
#, fuzzy
msgid ""
"Called when the child process writes data into its *stdout* or *stderr* pipe."
msgstr ""
"Appelé lorsqu'un processus enfant écrit sur sa sortie d'erreur ou sa sortie "
"standard."

#: ../Doc/library/asyncio-llapi-index.rst:479
msgid ""
"``callback`` :meth:`pipe_connection_lost() <SubprocessProtocol."
"pipe_connection_lost>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:481
msgid ""
"Called when one of the pipes communicating with the child process is closed."
msgstr ""
"Appelé lorsqu'une des *pipe*\\ s de communication avec un sous-processus est "
"fermée."

#: ../Doc/library/asyncio-llapi-index.rst:484
msgid ""
"``callback`` :meth:`process_exited() <SubprocessProtocol.process_exited>`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:486
msgid "Called when the child process has exited."
msgstr "Appelé lorsqu'un processus enfant se termine."

#: ../Doc/library/asyncio-llapi-index.rst:490
msgid "Event Loop Policies"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:492
msgid ""
"Policies is a low-level mechanism to alter the behavior of functions like :"
"func:`asyncio.get_event_loop`.  See also the main :ref:`policies section "
"<asyncio-policies>` for more details."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:498
msgid "Accessing Policies"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:503
msgid ":meth:`asyncio.get_event_loop_policy`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:504
msgid "Return the current process-wide policy."
msgstr "Renvoie la stratégie actuelle à l'échelle du processus."

#: ../Doc/library/asyncio-llapi-index.rst:506
msgid ":meth:`asyncio.set_event_loop_policy`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:507
msgid "Set a new process-wide policy."
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:509
msgid ":class:`AbstractEventLoopPolicy`"
msgstr ""

#: ../Doc/library/asyncio-llapi-index.rst:510
msgid "Base class for policy objects."
msgstr ""
