# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-03 22:10+0200\n"
"PO-Revision-Date: 2019-12-13 14:14+0100\n"
"Last-Translator: Jules Lasne <jules.lasne@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.2\n"

#: ../Doc/library/readline.rst:2
msgid ":mod:`readline` --- GNU readline interface"
msgstr ":mod:`readline` — interface pour GNU *readline*"

#: ../Doc/library/readline.rst:12
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly, or via the :mod:`rlcompleter` module, "
"which supports completion of Python identifiers at the interactive prompt.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the built-in :"
"func:`input` function."
msgstr ""
"Le module :mod:`readline` définit des fonctions pour faciliter la complétion "
"et la lecture/écriture des fichiers d'historique depuis l'interpréteur "
"Python. Ce module peut être utilisé directement, ou depuis le module :mod:"
"`rlcompleter`, qui gère la complétion des mots clefs dans l'invite de "
"commande interactive. Les paramétrages faits en utilisant ce module "
"affectent à la fois le comportement de l'invite de commande interactive et "
"l'invite de commande fournie par la fonction native :func:`input`."

#: ../Doc/library/readline.rst:20
msgid ""
"Readline keybindings may be configured via an initialization file, typically "
"``.inputrc`` in your home directory.  See `Readline Init File <https://"
"tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9>`_ in the GNU Readline "
"manual for information about the format and allowable constructs of that "
"file, and the capabilities of the Readline library in general."
msgstr ""
"L'association de touches de *readline* peut être configurée via un fichier "
"d'initialisation, normalement nommé ``.inputrc`` dans votre répertoire "
"d’accueil. Voir `Readline Init File <https://tiswww.cwru.edu/php/chet/"
"readline/rluserman.html#SEC9>`_ dans le manuel GNU pour *readline* pour des "
"information à propos du format et de la construction autorisée de ce "
"fichier, ainsi que les possibilités de la bibliothèque *readline* en général."

#: ../Doc/library/readline.rst:29
msgid ""
"The underlying Readline library API may be implemented by the ``libedit`` "
"library instead of GNU readline. On macOS the :mod:`readline` module detects "
"which library is being used at run time."
msgstr ""
"L'API de la bibliothèque utilisée par *readline* peut être implémentée par "
"la bibliothèque ``libedit`` au lieu de *GNU readline*. Sur MacOS le module :"
"mod:`readline` détecte quelle bibliothèque est utilisée au cours de "
"l'exécution du programme."

#: ../Doc/library/readline.rst:34
msgid ""
"The configuration file for ``libedit`` is different from that of GNU "
"readline. If you programmatically load configuration strings you can check "
"for the text \"libedit\" in :const:`readline.__doc__` to differentiate "
"between GNU readline and libedit."
msgstr ""
"Le fichier de configuration pour *libedit* est différent de celui de *GNU "
"readline*. Si, dans votre programme, vous chargez les chaines de "
"configuration vous pouvez valider le texte *libedit* dans :const:`readline."
"__doc__` pour faire la différence entre *GNU readline* et *libedit*."

#: ../Doc/library/readline.rst:39
msgid ""
"If you use *editline*/``libedit`` readline emulation on macOS, the "
"initialization file located in your home directory is named ``.editrc``. For "
"example, the following content in ``~/.editrc`` will turn ON *vi* "
"keybindings and TAB completion::"
msgstr ""
"Si vous utilisez l'émulation *editline*/``libedit`` sur MacOS, le fichier "
"d'initialisation situé dans votre répertoire d’accueil est appelé ``."
"editrc``. Par exemple, le contenu suivant dans ``~/.editrc`` active "
"l'association de touches *vi*  et la complétion avec la touche de "
"tabulation ::"

#: ../Doc/library/readline.rst:49
msgid "Init file"
msgstr "Fichier d'initialisation"

#: ../Doc/library/readline.rst:51
msgid "The following functions relate to the init file and user configuration:"
msgstr ""
"Les fonctions suivantes se rapportent au fichier d'initialisation et à la "
"configuration utilisateur."

#: ../Doc/library/readline.rst:56
msgid ""
"Execute the init line provided in the *string* argument. This calls :c:func:"
"`rl_parse_and_bind` in the underlying library."
msgstr ""
"Exécute la ligne d'initialisation fournie dans l'argument *string*. Cela "
"appelle la fonction :c:func:`rl_parse_and_bind` de la bibliothèque sous-"
"jacente."

#: ../Doc/library/readline.rst:62
msgid ""
"Execute a readline initialization file. The default filename is the last "
"filename used. This calls :c:func:`rl_read_init_file` in the underlying "
"library."
msgstr ""
"Exécute un fichier d'initialisation *readline*. Le nom de fichier par défaut "
"est le dernier nom de fichier utilisé. Cela appelle la fonction :c:func:"
"`rl_read_init_file` de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:67
msgid "Line buffer"
msgstr "Tampon de ligne"

#: ../Doc/library/readline.rst:69
msgid "The following functions operate on the line buffer:"
msgstr "Les fonctions suivantes opèrent sur le tampon de ligne:"

#: ../Doc/library/readline.rst:74
msgid ""
"Return the current contents of the line buffer (:c:data:`rl_line_buffer` in "
"the underlying library)."
msgstr ""
"Renvoie le contenu courant du tampon de ligne (:c:data:`rl_line_buffer` dans "
"la bibliothèque sous-jacente)."

#: ../Doc/library/readline.rst:80
msgid ""
"Insert text into the line buffer at the cursor position.  This calls :c:func:"
"`rl_insert_text` in the underlying library, but ignores the return value."
msgstr ""
"Insère du texte dans le tampon de ligne à la position du curseur. Cela "
"appelle la fonction :c:func:`rl_insert_text` de la bibliothèque sous-"
"jacente, mais ignore la valeur de retour."

#: ../Doc/library/readline.rst:87
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer.  This calls :c:func:`rl_redisplay` in the underlying library."
msgstr ""
"Change ce qui est affiché sur l'écran pour représenter le contenu courant de "
"la ligne de tampon. Cela appelle la fonction :c:func:`rl_redisplay` dans la "
"bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:92
msgid "History file"
msgstr "Fichier d'historique"

#: ../Doc/library/readline.rst:94
msgid "The following functions operate on a history file:"
msgstr "les fonctions suivantes opèrent sur un fichier d'historique :"

#: ../Doc/library/readline.rst:99
msgid ""
"Load a readline history file, and append it to the history list. The default "
"filename is :file:`~/.history`.  This calls :c:func:`read_history` in the "
"underlying library."
msgstr ""
"Charge un fichier d'historique de *readline*, et l'ajoute à la liste "
"d'historique. Le fichier par défaut est :file:`~/.history`. Cela appelle la "
"fonction :c:func:`read_history` de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:106
msgid ""
"Save the history list to a readline history file, overwriting any existing "
"file.  The default filename is :file:`~/.history`.  This calls :c:func:"
"`write_history` in the underlying library."
msgstr ""
"Enregistre la liste de l'historique dans un fichier d'historique de "
"*readline*, en écrasant un éventuel fichier existant. Le nom de fichier par "
"défaut est :file:`~/.history`. Cela appelle la fonction :c:func:"
"`write_history` de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:113
msgid ""
"Append the last *nelements* items of history to a file.  The default "
"filename is :file:`~/.history`.  The file must already exist.  This calls :c:"
"func:`append_history` in the underlying library.  This function only exists "
"if Python was compiled for a version of the library that supports it."
msgstr ""
"Ajoute les derniers objets *nelements* de l'historique dans un fichier. Le "
"nom de fichier par défaut est :file:`~/.history`. Le fichier doit déjà "
"exister. Cela appelle la fonction :c:func:`append_history` de la "
"bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:125
msgid ""
"Set or return the desired number of lines to save in the history file. The :"
"func:`write_history_file` function uses this value to truncate the history "
"file, by calling :c:func:`history_truncate_file` in the underlying library.  "
"Negative values imply unlimited history file size."
msgstr ""
"Définit ou renvoie le nombre souhaité de lignes à enregistrer dans le "
"fichier d'historique. La fonction :func:`write_history_file` utilise cette "
"valeur pour tronquer le fichier d'historique, en appelant :c:func:"
"`history_truncate_file` de la bibliothèque sous-jacente. Les valeurs "
"négatives impliquent une taille de fichier d'historique illimitée."

#: ../Doc/library/readline.rst:133
msgid "History list"
msgstr "Liste d'historique"

#: ../Doc/library/readline.rst:135
msgid "The following functions operate on a global history list:"
msgstr "Les fonctions suivantes opèrent sur une liste d'historique globale :"

#: ../Doc/library/readline.rst:140
msgid ""
"Clear the current history.  This calls :c:func:`clear_history` in the "
"underlying library.  The Python function only exists if Python was compiled "
"for a version of the library that supports it."
msgstr ""
"Effacer l'historique courant. Cela appelle la fonction :c:func:"
"`clear_history` de la bibliothèque sous-jacente. La fonction Python existe "
"seulement si Python à été compilé pour une version de la bibliothèque qui le "
"gère."

#: ../Doc/library/readline.rst:147
msgid ""
"Return the number of items currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr ""
"Renvoie le nombre d'objets actuellement dans l'historique. (C'est différent "
"de :func:`get_history_length`, qui renvoie le nombre maximum de lignes qui "
"vont être écrites dans un fichier d'historique.)"

#: ../Doc/library/readline.rst:154
msgid ""
"Return the current contents of history item at *index*.  The item index is "
"one-based.  This calls :c:func:`history_get` in the underlying library."
msgstr ""
"Renvoie le contenu courant de l'objet d'historique à *index*. L'index de "
"l'objet commence à 1. Cela appelle :c:func:`history_get` de la bibliothèque "
"sous-jacente."

#: ../Doc/library/readline.rst:160
msgid ""
"Remove history item specified by its position from the history. The position "
"is zero-based.  This calls :c:func:`remove_history` in the underlying "
"library."
msgstr ""
"Supprime l'objet de l'historique défini par sa position depuis l'historique. "
"L'index de la position commence à zéro. Cela appelle la fonction :c:func:"
"`remove_history` de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:167
msgid ""
"Replace history item specified by its position with *line*. The position is "
"zero-based.  This calls :c:func:`replace_history_entry` in the underlying "
"library."
msgstr ""
"Remplace un objet de l'historique à la position définie par *line*. L'index "
"de la position commence à zéro. Cela appelle :c:func:`replace_history_entry` "
"de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:174
msgid ""
"Append *line* to the history buffer, as if it was the last line typed. This "
"calls :c:func:`add_history` in the underlying library."
msgstr ""
"Ajoute *line* au tampon d'historique, comme si c'était la dernière ligne "
"saisie. Cela appelle la fonction :c:func:`add_history` de la libraire sous-"
"jacente."

#: ../Doc/library/readline.rst:180
msgid ""
"Enable or disable automatic calls to :c:func:`add_history` when reading "
"input via readline.  The *enabled* argument should be a Boolean value that "
"when true, enables auto history, and that when false, disables auto history."
msgstr ""
"Active ou désactive les appels automatiques à la fonction :c:func:"
"`add_history` lors de la lecture d'une entrée via *readline*. L'argument "
"*enabled* doit être une valeur booléenne qui lorsqu'elle est vraie, active "
"l'historique automatique, et qui lorsqu'elle est fausse, désactive "
"l'historique automatique."

#: ../Doc/library/readline.rst:193
msgid "Startup hooks"
msgstr "Fonctions de rappel au démarrage"

#: ../Doc/library/readline.rst:198
msgid ""
"Set or remove the function invoked by the :c:data:`rl_startup_hook` callback "
"of the underlying library.  If *function* is specified, it will be used as "
"the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments just before "
"readline prints the first prompt."
msgstr ""
"Définit ou supprime la fonction invoquée par le la fonction de retour :c:"
"data:`rl_startup_hook` de la bibliothèque sous-jacente. Si *function* est "
"spécifié, il est utilisé en tant que nouvelle fonction de rappel ; si omis "
"ou ``None``, toute fonction déjà installée est supprimée. La fonction de "
"rappel est appelée sans arguments juste avant que *readline* affiche la "
"première invite de commande."

#: ../Doc/library/readline.rst:207
msgid ""
"Set or remove the function invoked by the :c:data:`rl_pre_input_hook` "
"callback of the underlying library.  If *function* is specified, it will be "
"used as the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments after the first "
"prompt has been printed and just before readline starts reading input "
"characters.  This function only exists if Python was compiled for a version "
"of the library that supports it."
msgstr ""
"Définit ou supprime la fonction invoquée par la fonction de retour :c:data:"
"`rl_pre_input_hook` de la bibliothèque sous-jacente. Si *function* est "
"spécifié, il sera utilisé par la nouvelle fonction de rappel ; si omis ou "
"``None``, toute fonction déjà installée est supprimée. La fonction de rappel "
"est appelée sans arguments après que la première invite de commande ait été "
"affichée et juste avant que *readline* commence à lire les caractères "
"saisis. Cette fonction existe seulement si Python a été compilé pour une "
"version de la bibliothèque qui le gère."

#: ../Doc/library/readline.rst:217
msgid "Completion"
msgstr "Complétion"

#: ../Doc/library/readline.rst:219
msgid ""
"The following functions relate to implementing a custom word completion "
"function.  This is typically operated by the Tab key, and can suggest and "
"automatically complete a word being typed.  By default, Readline is set up "
"to be used by :mod:`rlcompleter` to complete Python identifiers for the "
"interactive interpreter.  If the :mod:`readline` module is to be used with a "
"custom completer, a different set of word delimiters should be set."
msgstr ""
"Les fonctions suivantes relatent comment implémenter une fonction de "
"complétion d'un mot spécifique. C'est typiquement déclenché par la touche "
"Tab, et peut suggérer et automatiquement compléter un mot en cours de "
"saisie. Par défaut, Readline est configuré pour être utilisé par :mod:"
"`rlcompleter` pour compléter les mots clefs de Python pour l'interpréteur "
"interactif. Si le module :mod:`readline` doit être utilisé avec une "
"complétion spécifique, un ensemble de mots délimiteurs doivent être définis."

#: ../Doc/library/readline.rst:229
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""
"Définit ou supprime la fonction de complétion. Si *function* est spécifié, "
"il sera utilisé en tant que nouvelle fonction de complétion; si omis ou "
"``None``, toute fonction de complétion déjà installé est supprimé. La "
"fonction de complétion est appelée telle que ``function(text, state)``, pour "
"*state* valant ``0``, ``1``, ``2``, ..., jusqu'à ce qu'elle renvoie une "
"valeur qui n'est pas une chaîne de caractères. Elle doit renvoyer les "
"prochaines complétions possibles commençant par *text*."

#: ../Doc/library/readline.rst:236
msgid ""
"The installed completer function is invoked by the *entry_func* callback "
"passed to :c:func:`rl_completion_matches` in the underlying library. The "
"*text* string comes from the first parameter to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""
"La fonction de complétion installée est invoquée par la fonction de retour "
"*entry_func* passée à :c:func:`rl_completion_matches` de la bibliothèque "
"sous-jacente. La chaîne de caractère *text* va du premier paramètres vers la "
"fonction de retour :c:data:`rl_attempted_completion_function` de la "
"bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:245
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr ""
"Récupère la fonction de complétion, ou ``None`` si aucune fonction de "
"complétion n'a été définie."

#: ../Doc/library/readline.rst:250
msgid ""
"Get the type of completion being attempted.  This returns the :c:data:"
"`rl_completion_type` variable in the underlying library as an integer."
msgstr ""
"Récupère le type de complétion essayé. Cela renvoie la variable :c:data:"
"`rl_completion_type` dans la bibliothèque sous-jacente en tant qu'entier."

#: ../Doc/library/readline.rst:258
msgid ""
"Get the beginning or ending index of the completion scope. These indexes are "
"the *start* and *end* arguments passed to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""
"Récupère l'indexe de début ou de fin d'un contexte de complétion. Ces "
"indexes sont les arguments *start* et *end* passés à la fonction de retour :"
"c:data:`rl_attempted_completion_function` de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:267
msgid ""
"Set or get the word delimiters for completion.  These determine the start of "
"the word to be considered for completion (the completion scope). These "
"functions access the :c:data:`rl_completer_word_break_characters` variable "
"in the underlying library."
msgstr ""
"Définit ou récupère les mots délimitants pour la complétion. Ceux-ci "
"déterminent le début du mot devant être considéré pour la complétion (le "
"contexte de la complétion). Ces fonctions accèdent à la variable :c:data:"
"`rl_completer_word_break_characters`  de la bibliothèque sous-jacente."

#: ../Doc/library/readline.rst:275
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  "
"This sets or clears the :c:data:`rl_completion_display_matches_hook` "
"callback in the underlying library.  The completion display function is "
"called as ``function(substitution, [matches], longest_match_length)`` once "
"each time matches need to be displayed."
msgstr ""
"Définit ou supprime la fonction d'affichage de la complétion. Si *function* "
"est spécifié, il sera utilisé en tant que nouvelle fonction d'affichage de "
"complétion; si omis ou ``None``, toute fonction de complétion déjà installée "
"est supprimée. Cela définit ou supprime la fonction de retour :c:data:"
"`rl_completion_display_matches_hook` dans la bibliothèque sous-jacente. La "
"fonction d'affichage de complétion est appelée telle que "
"``function(substitution, [matches], longest_match_length)`` une seule fois "
"lorsque les correspondances doivent être affichées."

#: ../Doc/library/readline.rst:288
msgid "Example"
msgstr "Exemple"

#: ../Doc/library/readline.rst:290
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.python_history` from the user's home directory.  "
"The code below would normally be executed automatically during interactive "
"sessions from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""
"L'exemple suivant démontre comment utiliser les fonctions de lecture et "
"d'écriture de l'historique du module :mod:`readline` pour charger ou "
"sauvegarder automatiquement un fichier d'historique nommé :file:`."
"python_history` depuis le répertoire d’accueil de l’utilisateur. Le code ci-"
"dessous doit normalement être exécuté automatiquement durant une session "
"interactive depuis le fichier de l'utilisateur :envvar:`PYTHONSTARTUP`. ::"

#: ../Doc/library/readline.rst:310
msgid ""
"This code is actually automatically run when Python is run in :ref:"
"`interactive mode <tut-interactive>` (see :ref:`rlcompleter-config`)."
msgstr ""
"Ce code est en réalité automatiquement exécuté lorsque Python tourne en :ref:"
"`mode interactif <tut-interactive>` (voir :ref:`rlcompleter-config`)."

#: ../Doc/library/readline.rst:313
msgid ""
"The following example achieves the same goal but supports concurrent "
"interactive sessions, by only appending the new history. ::"
msgstr ""
"L'exemple suivant atteint le même objectif mais gère des sessions "
"interactives concurrentes, en ajoutant seulement le nouvel historique. ::"

#: ../Doc/library/readline.rst:334
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr ""
"L'exemple suivant étend la classe :class:`code.InteractiveConsole` pour "
"gérer la sauvegarde/restauration de l'historique. ::"
