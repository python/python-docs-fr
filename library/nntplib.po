# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/nntplib.rst:2
msgid ":mod:`nntplib` --- NNTP protocol client"
msgstr ""

#: ../Doc/library/nntplib.rst:7
msgid "**Source code:** :source:`Lib/nntplib.py`"
msgstr "**Code source :** :source:`Lib/nntplib.py`"

#: ../Doc/library/nntplib.rst:15
msgid ""
"This module defines the class :class:`NNTP` which implements the client side "
"of the Network News Transfer Protocol.  It can be used to implement a news "
"reader or poster, or automated news processors.  It is compatible with :rfc:"
"`3977` as well as the older :rfc:`977` and :rfc:`2980`."
msgstr ""

#: ../Doc/library/nntplib.rst:20
msgid ""
"Here are two small examples of how it can be used.  To list some statistics "
"about a newsgroup and print the subjects of the last 10 articles::"
msgstr ""

#: ../Doc/library/nntplib.rst:44
msgid ""
"To post an article from a binary file (this assumes that the article has "
"valid headers, and that you have right to post on the particular newsgroup)::"
msgstr ""

#: ../Doc/library/nntplib.rst:54
msgid "The module itself defines the following classes:"
msgstr ""

#: ../Doc/library/nntplib.rst:59
msgid ""
"Return a new :class:`NNTP` object, representing a connection to the NNTP "
"server running on host *host*, listening at port *port*. An optional "
"*timeout* can be specified for the socket connection. If the optional *user* "
"and *password* are provided, or if suitable credentials are present in :file:"
"`/.netrc` and the optional flag *usenetrc* is true, the ``AUTHINFO USER`` "
"and ``AUTHINFO PASS`` commands are used to identify and authenticate the "
"user to the server.  If the optional flag *readermode* is true, then a "
"``mode reader`` command is sent before authentication is performed.  Reader "
"mode is sometimes necessary if you are connecting to an NNTP server on the "
"local machine and intend to call reader-specific commands, such as "
"``group``.  If you get unexpected :exc:`NNTPPermanentError`\\ s, you might "
"need to set *readermode*. The :class:`NNTP` class supports the :keyword:"
"`with` statement to unconditionally consume :exc:`OSError` exceptions and to "
"close the NNTP connection when done, e.g.:"
msgstr ""

#: ../Doc/library/nntplib.rst:83 ../Doc/library/nntplib.rst:111
msgid ""
"Raises an :ref:`auditing event <auditing>` ``nntplib.connect`` with "
"arguments ``self``, ``host``, ``port``."
msgstr ""

#: ../Doc/library/nntplib.rst:None
msgid ""
"Raises an :ref:`auditing event <auditing>` ``nntplib.putline`` with "
"arguments ``self``, ``line``."
msgstr ""

#: ../Doc/library/nntplib.rst:86 ../Doc/library/nntplib.rst:114
msgid ""
"All commands will raise an :ref:`auditing event <auditing>` ``nntplib."
"putline`` with arguments ``self`` and ``line``, where ``line`` is the bytes "
"about to be sent to the remote host."
msgstr ""

#: ../Doc/library/nntplib.rst:90
msgid "*usenetrc* is now ``False`` by default."
msgstr ""

#: ../Doc/library/nntplib.rst:93
msgid "Support for the :keyword:`with` statement was added."
msgstr "La prise en charge de l'instruction :keyword:`with` a été ajoutée."

#: ../Doc/library/nntplib.rst:98
msgid ""
"Return a new :class:`NNTP_SSL` object, representing an encrypted connection "
"to the NNTP server running on host *host*, listening at port *port*.  :class:"
"`NNTP_SSL` objects have the same methods as :class:`NNTP` objects.  If "
"*port* is omitted, port 563 (NNTPS) is used. *ssl_context* is also optional, "
"and is a :class:`~ssl.SSLContext` object. Please read :ref:`ssl-security` "
"for best practices. All other parameters behave the same as for :class:"
"`NNTP`."
msgstr ""

#: ../Doc/library/nntplib.rst:106
msgid ""
"Note that SSL-on-563 is discouraged per :rfc:`4642`, in favor of STARTTLS as "
"described below.  However, some servers only support the former."
msgstr ""

#: ../Doc/library/nntplib.rst:120
msgid ""
"The class now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :data:`ssl.HAS_SNI`)."
msgstr ""

#: ../Doc/library/nntplib.rst:127
msgid ""
"Derived from the standard exception :exc:`Exception`, this is the base class "
"for all exceptions raised by the :mod:`nntplib` module.  Instances of this "
"class have the following attribute:"
msgstr ""

#: ../Doc/library/nntplib.rst:133
msgid "The response of the server if available, as a :class:`str` object."
msgstr ""

#: ../Doc/library/nntplib.rst:138
msgid "Exception raised when an unexpected reply is received from the server."
msgstr ""

#: ../Doc/library/nntplib.rst:143
msgid ""
"Exception raised when a response code in the range 400--499 is received."
msgstr ""

#: ../Doc/library/nntplib.rst:148
msgid ""
"Exception raised when a response code in the range 500--599 is received."
msgstr ""

#: ../Doc/library/nntplib.rst:153
msgid ""
"Exception raised when a reply is received from the server that does not "
"begin with a digit in the range 1--5."
msgstr ""

#: ../Doc/library/nntplib.rst:159
msgid "Exception raised when there is some error in the response data."
msgstr ""

#: ../Doc/library/nntplib.rst:165
msgid "NNTP Objects"
msgstr ""

#: ../Doc/library/nntplib.rst:167
msgid ""
"When connected, :class:`NNTP` and :class:`NNTP_SSL` objects support the "
"following methods and attributes."
msgstr ""

#: ../Doc/library/nntplib.rst:171
#, fuzzy
msgid "Attributes"
msgstr "Attributs :"

#: ../Doc/library/nntplib.rst:175
msgid ""
"An integer representing the version of the NNTP protocol supported by the "
"server.  In practice, this should be ``2`` for servers advertising :rfc:"
"`3977` compliance and ``1`` for others."
msgstr ""

#: ../Doc/library/nntplib.rst:183
msgid ""
"A string describing the software name and version of the NNTP server, or :"
"const:`None` if not advertised by the server."
msgstr ""

#: ../Doc/library/nntplib.rst:189
msgid "Methods"
msgstr "Méthodes"

#: ../Doc/library/nntplib.rst:191
msgid ""
"The *response* that is returned as the first item in the return tuple of "
"almost all methods is the server's response: a string beginning with a three-"
"digit code.  If the server's response indicates an error, the method raises "
"one of the above exceptions."
msgstr ""

#: ../Doc/library/nntplib.rst:196
msgid ""
"Many of the following methods take an optional keyword-only argument *file*. "
"When the *file* argument is supplied, it must be either a :term:`file "
"object` opened for binary writing, or the name of an on-disk file to be "
"written to. The method will then write any data returned by the server "
"(except for the response line and the terminating dot) to the file; any list "
"of lines, tuples or objects that the method normally returns will be empty."
msgstr ""

#: ../Doc/library/nntplib.rst:203
msgid ""
"Many of the following methods have been reworked and fixed, which makes them "
"incompatible with their 3.1 counterparts."
msgstr ""

#: ../Doc/library/nntplib.rst:210
msgid ""
"Send a ``QUIT`` command and close the connection.  Once this method has been "
"called, no other methods of the NNTP object should be called."
msgstr ""

#: ../Doc/library/nntplib.rst:216
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""

#: ../Doc/library/nntplib.rst:223
msgid ""
"Return the :rfc:`3977` capabilities advertised by the server, as a :class:"
"`dict` instance mapping capability names to (possibly empty) lists of "
"values. On legacy servers which don't understand the ``CAPABILITIES`` "
"command, an empty dictionary is returned instead."
msgstr ""

#: ../Doc/library/nntplib.rst:237
msgid ""
"Send ``AUTHINFO`` commands with the user name and password.  If *user* and "
"*password* are ``None`` and *usenetrc* is true, credentials from ``~/."
"netrc`` will be used if possible."
msgstr ""

#: ../Doc/library/nntplib.rst:241
msgid ""
"Unless intentionally delayed, login is normally performed during the :class:"
"`NNTP` object initialization and separately calling this function is "
"unnecessary.  To force authentication to be delayed, you must not set *user* "
"or *password* when creating the object, and must set *usenetrc* to False."
msgstr ""

#: ../Doc/library/nntplib.rst:252
msgid ""
"Send a ``STARTTLS`` command.  This will enable encryption on the NNTP "
"connection.  The *context* argument is optional and should be a :class:`ssl."
"SSLContext` object.  Please read :ref:`ssl-security` for best practices."
msgstr ""

#: ../Doc/library/nntplib.rst:257
msgid ""
"Note that this may not be done after authentication information has been "
"transmitted, and authentication occurs by default if possible during a :"
"class:`NNTP` object initialization.  See :meth:`NNTP.login` for information "
"on suppressing this behavior."
msgstr ""

#: ../Doc/library/nntplib.rst:264
msgid ""
"The method now supports hostname check with :attr:`ssl.SSLContext."
"check_hostname` and *Server Name Indication* (see :data:`ssl.HAS_SNI`)."
msgstr ""

#: ../Doc/library/nntplib.rst:271
msgid ""
"Send a ``NEWGROUPS`` command.  The *date* argument should be a :class:"
"`datetime.date` or :class:`datetime.datetime` object. Return a pair "
"``(response, groups)`` where *groups* is a list representing the groups that "
"are new since the given *date*. If *file* is supplied, though, then *groups* "
"will be empty."
msgstr ""

#: ../Doc/library/nntplib.rst:287
msgid ""
"Send a ``NEWNEWS`` command.  Here, *group* is a group name or ``'*'``, and "
"*date* has the same meaning as for :meth:`newgroups`.  Return a pair "
"``(response, articles)`` where *articles* is a list of message ids."
msgstr ""

#: ../Doc/library/nntplib.rst:291
msgid "This command is frequently disabled by NNTP server administrators."
msgstr ""

#: ../Doc/library/nntplib.rst:296
msgid ""
"Send a ``LIST`` or ``LIST ACTIVE`` command.  Return a pair ``(response, "
"list)`` where *list* is a list of tuples representing all the groups "
"available from this NNTP server, optionally matching the pattern string "
"*group_pattern*.  Each tuple has the form ``(group, last, first, flag)``, "
"where *group* is a group name, *last* and *first* are the last and first "
"article numbers, and *flag* usually takes one of these values:"
msgstr ""

#: ../Doc/library/nntplib.rst:304
msgid "``y``: Local postings and articles from peers are allowed."
msgstr ""

#: ../Doc/library/nntplib.rst:305
msgid "``m``: The group is moderated and all postings must be approved."
msgstr ""

#: ../Doc/library/nntplib.rst:306
msgid "``n``: No local postings are allowed, only articles from peers."
msgstr ""

#: ../Doc/library/nntplib.rst:307
msgid "``j``: Articles from peers are filed in the junk group instead."
msgstr ""

#: ../Doc/library/nntplib.rst:308
msgid "``x``: No local postings, and articles from peers are ignored."
msgstr ""

#: ../Doc/library/nntplib.rst:309
msgid "``=foo.bar``: Articles are filed in the ``foo.bar`` group instead."
msgstr ""

#: ../Doc/library/nntplib.rst:311
msgid ""
"If *flag* has another value, then the status of the newsgroup should be "
"considered unknown."
msgstr ""

#: ../Doc/library/nntplib.rst:314
msgid ""
"This command can return very large results, especially if *group_pattern* is "
"not specified.  It is best to cache the results offline unless you really "
"need to refresh them."
msgstr ""

#: ../Doc/library/nntplib.rst:318
msgid "*group_pattern* was added."
msgstr ""

#: ../Doc/library/nntplib.rst:324
msgid ""
"Send a ``LIST NEWSGROUPS`` command, where *grouppattern* is a wildmat string "
"as specified in :rfc:`3977` (it's essentially the same as DOS or UNIX shell "
"wildcard strings).  Return a pair ``(response, descriptions)``, where "
"*descriptions* is a dictionary mapping group names to textual descriptions."
msgstr ""

#: ../Doc/library/nntplib.rst:338
msgid ""
"Get a description for a single group *group*.  If more than one group "
"matches (if 'group' is a real wildmat string), return the first match.   If "
"no group matches, return an empty string."
msgstr ""

#: ../Doc/library/nntplib.rst:342
msgid ""
"This elides the response code from the server.  If the response code is "
"needed, use :meth:`descriptions`."
msgstr ""

#: ../Doc/library/nntplib.rst:348
msgid ""
"Send a ``GROUP`` command, where *name* is the group name.  The group is "
"selected as the current group, if it exists.  Return a tuple ``(response, "
"count, first, last, name)`` where *count* is the (estimated) number of "
"articles in the group, *first* is the first article number in the group, "
"*last* is the last article number in the group, and *name* is the group name."
msgstr ""

#: ../Doc/library/nntplib.rst:358
msgid ""
"Send an ``OVER`` command, or an ``XOVER`` command on legacy servers. "
"*message_spec* can be either a string representing a message id, or a "
"``(first, last)`` tuple of numbers indicating a range of articles in the "
"current group, or a ``(first, None)`` tuple indicating a range of articles "
"starting from *first* to the last article in the current group, or :const:"
"`None` to select the current article in the current group."
msgstr ""

#: ../Doc/library/nntplib.rst:365
msgid ""
"Return a pair ``(response, overviews)``.  *overviews* is a list of "
"``(article_number, overview)`` tuples, one for each article selected by "
"*message_spec*.  Each *overview* is a dictionary with the same number of "
"items, but this number depends on the server.  These items are either "
"message headers (the key is then the lower-cased header name) or metadata "
"items (the key is then the metadata name prepended with ``\":\"``).  The "
"following items are guaranteed to be present by the NNTP specification:"
msgstr ""

#: ../Doc/library/nntplib.rst:373
msgid ""
"the ``subject``, ``from``, ``date``, ``message-id`` and ``references`` "
"headers"
msgstr ""

#: ../Doc/library/nntplib.rst:375
msgid ""
"the ``:bytes`` metadata: the number of bytes in the entire raw article "
"(including headers and body)"
msgstr ""

#: ../Doc/library/nntplib.rst:377
msgid "the ``:lines`` metadata: the number of lines in the article body"
msgstr ""

#: ../Doc/library/nntplib.rst:379
msgid ""
"The value of each item is either a string, or :const:`None` if not present."
msgstr ""

#: ../Doc/library/nntplib.rst:381
msgid ""
"It is advisable to use the :func:`decode_header` function on header values "
"when they may contain non-ASCII characters::"
msgstr ""

#: ../Doc/library/nntplib.rst:401
msgid ""
"Send a ``HELP`` command.  Return a pair ``(response, list)`` where *list* is "
"a list of help strings."
msgstr ""

#: ../Doc/library/nntplib.rst:407
msgid ""
"Send a ``STAT`` command, where *message_spec* is either a message id "
"(enclosed in ``'<'`` and ``'>'``) or an article number in the current group. "
"If *message_spec* is omitted or :const:`None`, the current article in the "
"current group is considered.  Return a triple ``(response, number, id)`` "
"where *number* is the article number and *id* is the message id."
msgstr ""

#: ../Doc/library/nntplib.rst:421
msgid "Send a ``NEXT`` command.  Return as for :meth:`.stat`."
msgstr ""

#: ../Doc/library/nntplib.rst:426
msgid "Send a ``LAST`` command.  Return as for :meth:`.stat`."
msgstr ""

#: ../Doc/library/nntplib.rst:431
msgid ""
"Send an ``ARTICLE`` command, where *message_spec* has the same meaning as "
"for :meth:`.stat`.  Return a tuple ``(response, info)`` where *info* is a :"
"class:`~collections.namedtuple` with three attributes *number*, *message_id* "
"and *lines* (in that order).  *number* is the article number in the group "
"(or 0 if the information is not available), *message_id* the message id as a "
"string, and *lines* a list of lines (without terminating newlines) "
"comprising the raw message including headers and body."
msgstr ""

#: ../Doc/library/nntplib.rst:456
msgid ""
"Same as :meth:`article()`, but sends a ``HEAD`` command.  The *lines* "
"returned (or written to *file*) will only contain the message headers, not "
"the body."
msgstr ""

#: ../Doc/library/nntplib.rst:463
msgid ""
"Same as :meth:`article()`, but sends a ``BODY`` command.  The *lines* "
"returned (or written to *file*) will only contain the message body, not the "
"headers."
msgstr ""

#: ../Doc/library/nntplib.rst:470
msgid ""
"Post an article using the ``POST`` command.  The *data* argument is either "
"a :term:`file object` opened for binary reading, or any iterable of bytes "
"objects (representing raw lines of the article to be posted).  It should "
"represent a well-formed news article, including the required headers.  The :"
"meth:`post` method automatically escapes lines beginning with ``.`` and "
"appends the termination line."
msgstr ""

#: ../Doc/library/nntplib.rst:477
msgid ""
"If the method succeeds, the server's response is returned.  If the server "
"refuses posting, a :class:`NNTPReplyError` is raised."
msgstr ""

#: ../Doc/library/nntplib.rst:483
msgid ""
"Send an ``IHAVE`` command. *message_id* is the id of the message to send to "
"the server (enclosed in  ``'<'`` and ``'>'``).  The *data* parameter and the "
"return value are the same as for :meth:`post()`."
msgstr ""

#: ../Doc/library/nntplib.rst:490
msgid ""
"Return a pair ``(response, date)``.  *date* is a :class:`~datetime.datetime` "
"object containing the current date and time of the server."
msgstr ""

#: ../Doc/library/nntplib.rst:496
msgid "Send a ``SLAVE`` command.  Return the server's *response*."
msgstr ""

#: ../Doc/library/nntplib.rst:501
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request or response.  A value of ``2`` or higher produces the "
"maximum amount of debugging output, logging each line sent and received on "
"the connection (including message text)."
msgstr ""

#: ../Doc/library/nntplib.rst:509
msgid ""
"The following are optional NNTP extensions defined in :rfc:`2980`.  Some of "
"them have been superseded by newer commands in :rfc:`3977`."
msgstr ""

#: ../Doc/library/nntplib.rst:515
msgid ""
"Send an ``XHDR`` command.  The *hdr* argument is a header keyword, e.g. "
"``'subject'``.  The *str* argument should have the form ``'first-last'`` "
"where *first* and *last* are the first and last article numbers to search. "
"Return a pair ``(response, list)``, where *list* is a list of pairs ``(id, "
"text)``, where *id* is an article number (as a string) and *text* is the "
"text of the requested header for that article. If the *file* parameter is "
"supplied, then the output of the  ``XHDR`` command is stored in a file.  If "
"*file* is a string, then the method will open a file with that name, write "
"to it  then close it. If *file* is a :term:`file object`, then it will start "
"calling :meth:`write` on it to store the lines of the command output. If "
"*file* is supplied, then the returned *list* is an empty list."
msgstr ""

#: ../Doc/library/nntplib.rst:530
msgid ""
"Send an ``XOVER`` command.  *start* and *end* are article numbers delimiting "
"the range of articles to select.  The return value is the same of for :meth:"
"`over()`.  It is recommended to use :meth:`over()` instead, since it will "
"automatically use the newer ``OVER`` command if available."
msgstr ""

#: ../Doc/library/nntplib.rst:539
msgid ""
"Return a pair ``(resp, path)``, where *path* is the directory path to the "
"article with message ID *id*.  Most of the time, this extension is not "
"enabled by NNTP server administrators."
msgstr ""

#: ../Doc/library/nntplib.rst:543
msgid "The XPATH extension is not actively used."
msgstr ""

#: ../Doc/library/nntplib.rst:565
msgid "Utility functions"
msgstr "Fonctions utilitaires"

#: ../Doc/library/nntplib.rst:567
msgid "The module also defines the following utility function:"
msgstr ""

#: ../Doc/library/nntplib.rst:572
msgid ""
"Decode a header value, un-escaping any escaped non-ASCII characters. "
"*header_str* must be a :class:`str` object.  The unescaped value is "
"returned.  Using this function is recommended to display some headers in a "
"human readable form::"
msgstr ""
