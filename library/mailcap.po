# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2018-09-28 19:35+0200\n"
"Last-Translator: \n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.9\n"

#: library/mailcap.rst:2
msgid ":mod:`mailcap` --- Mailcap file handling"
msgstr ":mod:`mailcap` — Manipulation de fichiers Mailcap"

#: library/mailcap.rst:7
msgid "**Source code:** :source:`Lib/mailcap.py`"
msgstr "**Code source :** :source:`Lib/mailcap.py`"

#: library/mailcap.rst:11
msgid ""
"Mailcap files are used to configure how MIME-aware applications such as mail "
"readers and Web browsers react to files with different MIME types. (The name "
"\"mailcap\" is derived from the phrase \"mail capability\".)  For example, a "
"mailcap file might contain a line like ``video/mpeg; xmpeg %s``.  Then, if "
"the user encounters an email message or Web document with the MIME type :"
"mimetype:`video/mpeg`, ``%s`` will be replaced by a filename (usually one "
"belonging to a temporary file) and the :program:`xmpeg` program can be "
"automatically started to view the file."
msgstr ""
"Les fichiers *mailcap* sont utilisés pour configurer la façon dont les "
"applications compatibles avec MIME, comme les clients mails ou les "
"navigateurs, réagissent aux différents fichiers de types MIME. (Le nom "
"*mailcap* est une contraction de l’expression « *mail capability* ».)  Par "
"exemple, un fichier *mailcap* peut contenir une ligne de type ``video/mpeg; "
"xmpeg %s``.  Ensuite, si l’utilisateur récupère un message mail ou un "
"document web avec un type MIME :mimetype:`video/mpeg`, ``%s`` est remplacé "
"par un nom de fichier (généralement celui d’un fichier temporaire) et le "
"programme :program:`xmpeg` peut automatiquement débuter la lecture de ce "
"dernier."

#: library/mailcap.rst:20
#, fuzzy
msgid ""
"The mailcap format is documented in :rfc:`1524`, \"A User Agent "
"Configuration Mechanism For Multimedia Mail Format Information\", but is not "
"an Internet standard.  However, mailcap files are supported on most Unix "
"systems."
msgstr ""
"Le format *mailcap* est documenté dans la :rfc:`1524` « A User Agent "
"Configuration Mechanism For Multimedia Mail Format Information », mais n’est "
"pas un standard Internet. Cependant, la plupart des systèmes Unix savent "
"gérer les fichiers *mailcap*."

#: library/mailcap.rst:27
msgid ""
"Return a 2-tuple; the first element is a string containing the command line "
"to be executed (which can be passed to :func:`os.system`), and the second "
"element is the mailcap entry for a given MIME type.  If no matching MIME "
"type can be found, ``(None, None)`` is returned."
msgstr ""
"Renvoie un tuple à deux éléments ; le premier élément est une chaîne de "
"caractères (string) contenant la ligne de commande à exécuter (qui peut être "
"passée à :func:`os.system`), et le second élément est l’entrée *mailcap* "
"pour un type de MIME donné. Si le type MIME n’est pas identifié, ``(None, "
"None)`` est renvoyé."

#: library/mailcap.rst:32
msgid ""
"*key* is the name of the field desired, which represents the type of "
"activity to be performed; the default value is 'view', since in the  most "
"common case you simply want to view the body of the MIME-typed data.  Other "
"possible values might be 'compose' and 'edit', if you wanted to create a new "
"body of the given MIME type or alter the existing body data.  See :rfc:"
"`1524` for a complete list of these fields."
msgstr ""
"*key* est le nom de champ souhaité, qui représente le type d’action à "
"exécuter ; la valeur par défaut est ``'view'``, puisque dans la majorité des "
"cas le besoin consiste juste à lire le corps (body) de la donnée de type "
"MIME. Les autres valeurs possibles peuvent être ``'compose'`` et ``'edit'``, "
"si le besoin consiste à créer un nouveau corps de données (body) ou modifier "
"celui existant. Voir la :rfc:`1524` pour une liste complète des champs."

#: library/mailcap.rst:39
msgid ""
"*filename* is the filename to be substituted for ``%s`` in the command line; "
"the default value is ``'/dev/null'`` which is almost certainly not what you "
"want, so usually you'll override it by specifying a filename."
msgstr ""
"*filename* est le nom de fichier à remplacer pour ``%s`` en ligne de "
"commande ; la valeur par défaut est ``’/dev/null’`` qui n’est certainement "
"pas celle que vous attendez. Donc la plupart du temps, le nom de fichier "
"doit être indiqué."

#: library/mailcap.rst:43
msgid ""
"*plist* can be a list containing named parameters; the default value is "
"simply an empty list.  Each entry in the list must be a string containing "
"the parameter name, an equals sign (``'='``), and the parameter's value.  "
"Mailcap entries can contain  named parameters like ``%{foo}``, which will be "
"replaced by the value of the parameter named 'foo'.  For example, if the "
"command line ``showpartial %{id} %{number} %{total}`` was in a mailcap file, "
"and *plist* was set to ``['id=1', 'number=2', 'total=3']``, the resulting "
"command line would be ``'showpartial 1 2 3'``."
msgstr ""
"*plist* peut être une liste contenant des noms de paramètres ; la valeur par "
"défaut est une simple liste vide. Chaque entrée dans la liste doit être une "
"chaîne de caractères contenant le nom du paramètre, un signe égal (``’=‘``), "
"ainsi que la valeur du paramètre. Les entrées *mailcap* peuvent contenir des "
"noms de paramètres tels que ``%{foo}``, remplacé par la valeur du paramètre "
"nommé *foo*. Par exemple, si la ligne de commande ``showpartial %{id} "
"%{number} %{total}`` est un fichier *mailcap*, et *plist*  configuré à "
"``[‘id=1’, ‘number=2’, ‘total=3’]``, la ligne de commande qui en résulte est "
"``’showpartial 1 2 3’``."

#: library/mailcap.rst:52
msgid ""
"In a mailcap file, the \"test\" field can optionally be specified to test "
"some external condition (such as the machine architecture, or the window "
"system in use) to determine whether or not the mailcap line applies.  :func:"
"`findmatch` will automatically check such conditions and skip the entry if "
"the check fails."
msgstr ""
"Dans un fichier *mailcap*, le champ « test » peut être renseigné de façon "
"optionnelle afin de tester certaines conditions externes (comme "
"l’architecture machine, ou le gestionnaire de fenêtre utilisé) afin de "
"déterminer si la ligne *mailcap* est pertinente ou non. :func:`findmatch` "
"vérifie automatiquement ces conditions et ignore l’entrée si la vérification "
"échoue."

#: library/mailcap.rst:60
msgid ""
"Returns a dictionary mapping MIME types to a list of mailcap file entries. "
"This dictionary must be passed to the :func:`findmatch` function.  An entry "
"is stored as a list of dictionaries, but it shouldn't be necessary to know "
"the details of this representation."
msgstr ""
"Renvoie un dictionnaire qui associe les types MIME à une liste d’entrées de "
"fichier *mailcap*. Ce dictionnaire doit être transmis à la fonction :func:"
"`findmatch`. Une entrée est enregistrée en tant qu’une liste de "
"dictionnaires, mais il n’est pas nécessaire de connaitre les détails de "
"cette représentation."

#: library/mailcap.rst:65
msgid ""
"The information is derived from all of the mailcap files found on the "
"system. Settings in the user's mailcap file :file:`$HOME/.mailcap` will "
"override settings in the system mailcap files :file:`/etc/mailcap`, :file:`/"
"usr/etc/mailcap`, and :file:`/usr/local/etc/mailcap`."
msgstr ""
"L’information provient de tous les fichiers *mailcap* trouvés dans le "
"système. Les configurations réalisées dans le fichier *mailcap* du "
"répertoire utilisateur :file:`$HOME/.mailcap` outrepasse les configurations "
"systèmes des fichiers *mailcap* :file:`/etc/mailcap`, :file:`/usr/etc/"
"mailcap`, et :file:`/usr/local/etc/mailcap`."

#: library/mailcap.rst:70
msgid "An example usage::"
msgstr "Un exemple d’utilisation ::"
