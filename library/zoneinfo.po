# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-23 16:16+0200\n"
"PO-Revision-Date: 2021-03-18 15:39+0100\n"
"Last-Translator: Loc Cosnier <loc.cosnier@pm.me>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"
"X-Generator: Gtranslator 3.38.0\n"

#: library/zoneinfo.rst:2
msgid ":mod:`zoneinfo` --- IANA time zone support"
msgstr ":mod:`zoneinfo` — Prise en charge des fuseaux horaires IANA"

#: library/zoneinfo.rst:14
msgid ""
"The :mod:`zoneinfo` module provides a concrete time zone implementation to "
"support the IANA time zone database as originally specified in :pep:`615`. "
"By default, :mod:`zoneinfo` uses the system's time zone data if available; "
"if no system time zone data is available, the library will fall back to "
"using the first-party `tzdata`_ package available on PyPI."
msgstr ""
"Le module :mod:`zoneinfo` fournit une implémentation concrète des fuseaux "
"horaires qui s'appuie sur la base de données de fuseaux horaires IANA "
"spécifiée initialement dans la :pep:`615`. Par défaut, :mod:`zoneinfo` "
"utilise les données des fuseaux horaires du système si elles sont "
"disponibles, sinon la bibliothèque utilise le paquet quasi-natif `tzdata`_ "
"disponible sur PyPI."

#: library/zoneinfo.rst:24
msgid "Module: :mod:`datetime`"
msgstr "Module : :mod:`datetime`"

#: library/zoneinfo.rst:23
msgid ""
"Provides the :class:`~datetime.time` and :class:`~datetime.datetime` types "
"with which the :class:`ZoneInfo` class is designed to be used."
msgstr ""
"Fournit les types :class:`~datetime.time` et :class:`~datetime.datetime` "
"attendus par :class:`ZoneInfo`."

#: library/zoneinfo.rst:27
msgid "Package `tzdata`_"
msgstr "Paquet `tzdata`_"

#: library/zoneinfo.rst:27
msgid ""
"First-party package maintained by the CPython core developers to supply time "
"zone data via PyPI."
msgstr ""
"Paquet « quasi-natif » maintenu par les développeurs de CPython pour fournir "
"les données des fuseaux horaires via PyPI."

#: library/zoneinfo.rst:32
msgid "Using ``ZoneInfo``"
msgstr "Utilisation de ``ZoneInfo``"

#: library/zoneinfo.rst:34
msgid ""
":class:`ZoneInfo` is a concrete implementation of the :class:`datetime."
"tzinfo` abstract base class, and is intended to be attached to ``tzinfo``, "
"either via the constructor, the :meth:`datetime.replace <datetime.datetime."
"replace>` method or :meth:`datetime.astimezone <datetime.datetime."
"astimezone>`::"
msgstr ""
":class:`ZoneInfo` est une implémentation concrète de la classe de base "
"abstraite :class:`datetime.tzinfo`, et est destinée à être rattachée à "
"``tzinfo``, par le constructeur, par :meth:`datetime.replace <datetime."
"datetime.replace>` ou par :meth:`datetime.astimezone <datetime.datetime."
"astimezone>` ::"

#: library/zoneinfo.rst:49
msgid ""
"Datetimes constructed in this way are compatible with datetime arithmetic "
"and handle daylight saving time transitions with no further intervention::"
msgstr ""
"Les *datetime* construits de cette manière sont compatibles avec "
"l'arithmétique *datetime* et gèrent le passage à l'heure d'été sans autre "
"intervention ::"

#: library/zoneinfo.rst:60
msgid ""
"These time zones also support the :attr:`~datetime.datetime.fold` attribute "
"introduced in :pep:`495`.  During offset transitions which induce ambiguous "
"times (such as a daylight saving time to standard time transition), the "
"offset from *before* the transition is used when ``fold=0``, and the offset "
"*after* the transition is used when ``fold=1``, for example::"
msgstr ""
"Ces fuseaux horaires prennent aussi en charge l'attribut :attr:`~datetime."
"dateime.fold` introduit dans la :pep:`495`. Pendant les transitions des "
"décalages horaires qui induisent des temps ambigus (comme le passage de "
"l'heure d'été à l'heure normale), le décalage *avant* la transition est "
"utilisé quand ``fold=0``, et le décalage *après* la transition est utilisé "
"quand ``fold=1``, par exemple ::"

#: library/zoneinfo.rst:73
msgid ""
"When converting from another time zone, the fold will be set to the correct "
"value::"
msgstr ""
"Lors de la conversion à partir d'un autre fuseau horaire, *fold* sera réglé "
"à la valeur correcte ::"

#: library/zoneinfo.rst:89
msgid "Data sources"
msgstr "Sources de données"

#: library/zoneinfo.rst:91
msgid ""
"The ``zoneinfo`` module does not directly provide time zone data, and "
"instead pulls time zone information from the system time zone database or "
"the first-party PyPI package `tzdata`_, if available. Some systems, "
"including notably Windows systems, do not have an IANA database available, "
"and so for projects targeting cross-platform compatibility that require time "
"zone data, it is recommended to declare a dependency on tzdata. If neither "
"system data nor tzdata are available, all calls to :class:`ZoneInfo` will "
"raise :exc:`ZoneInfoNotFoundError`."
msgstr ""
"Le module ``zoninfo`` ne fournit pas de données de fuseaux horaires "
"directement, mais extrait des informations sur les fuseaux horaires de la "
"base de données des fuseaux horaires du système ou du paquet PyPI quasi-"
"natif `tzdata`_, s'ils sont disponibles. Certains systèmes, comme les "
"systèmes Windows, n'ont pas de base de données IANA, et donc il est "
"recommandé aux projets visant la compatibilité entre plates-formes et qui "
"nécessitent des données sur les fuseaux horaires, de déclarer une dépendance "
"à *tzdata*. Si aucune donnée système, ni *tzdata*, n'est disponible, tous "
"les appels à :class:`ZoneInfo` lèvent :exc:`ZoneInfoNotFoundError`."

#: library/zoneinfo.rst:103
msgid "Configuring the data sources"
msgstr "Configurer les sources de données"

#: library/zoneinfo.rst:105
msgid ""
"When ``ZoneInfo(key)`` is called, the constructor first searches the "
"directories specified in :data:`TZPATH` for a file matching ``key``, and on "
"failure looks for a match in the tzdata package. This behavior can be "
"configured in three ways:"
msgstr ""
"Lorsque ``ZoneInfo(key)`` est appelé, le constructeur recherche d'abord un "
"fichier nommé ``key`` dans les répertoires spécifiés par :data:`TZPATH` et, "
"en cas d'échec, recherche dans le paquet *tzdata*. Ce comportement peut être "
"configuré de trois manières :"

#: library/zoneinfo.rst:110
msgid ""
"The default :data:`TZPATH` when not otherwise specified can be configured "
"at :ref:`compile time <zoneinfo_data_compile_time_config>`."
msgstr ""
"La valeur par défaut :data:`TZPATH`, lorsqu'elle n'est pas spécifiée "
"autrement, peut être configurée à :ref:`la compilation "
"<zoneinfo_data_compile_time_config>`."

#: library/zoneinfo.rst:112
msgid ""
":data:`TZPATH` can be configured using :ref:`an environment variable "
"<zoneinfo_data_environment_var>`."
msgstr ""
":data:`TZPATH` peut être configuré en utilisant :ref:`une variable "
"d'environnement <zoneinfo_data_environment_var>`."

#: library/zoneinfo.rst:114
msgid ""
"At :ref:`runtime <zoneinfo_data_runtime_config>`, the search path can be "
"manipulated using the :func:`reset_tzpath` function."
msgstr ""
"À :ref:`l'exécution <zoneinfo_data_runtime_config>`, le chemin de recherche "
"peut être manipulé à l'aide de la fonction :func:`reset_tzpath`."

#: library/zoneinfo.rst:120
msgid "Compile-time configuration"
msgstr "Configuration à la compilation"

#: library/zoneinfo.rst:122
#, fuzzy
msgid ""
"The default :data:`TZPATH` includes several common deployment locations for "
"the time zone database (except on Windows, where there are no \"well-known\" "
"locations for time zone data). On POSIX systems, downstream distributors and "
"those building Python from source who know where their system time zone data "
"is deployed may change the default time zone path by specifying the compile-"
"time option ``TZPATH`` (or, more likely, the :option:`configure flag --with-"
"tzpath <--with-tzpath>`), which should be a string delimited by :data:`os."
"pathsep`."
msgstr ""
"Par défaut, :data:`TZPATH` comprend plusieurs emplacements de déploiement "
"courants pour la base de données de fuseaux horaires (sauf sous Windows, où "
"il n'existe pas de consensus pour l'emplacement des données de fuseaux "
"horaires). Sur les systèmes POSIX, les distributeurs en aval et ceux qui "
"construisent Python à partir des sources et qui savent où sont déployées les "
"données de fuseau horaire de leur système peuvent modifier le chemin par "
"défaut en spécifiant l'option de compilation ``TZPATH`` (ou, plus "
"précisément, avec l'option ``--with-tzpath`` du script ``configure``), qui "
"doit être une chaîne délimitée par :data:`os.pathsep`."

#: library/zoneinfo.rst:131
msgid ""
"On all platforms, the configured value is available as the ``TZPATH`` key "
"in :func:`sysconfig.get_config_var`."
msgstr ""
"Sur toutes les plates-formes, la valeur configurée est disponible en tant "
"que clé de ``TZPATH`` dans :func:`sysconfig.get_config_var`."

#: library/zoneinfo.rst:137
msgid "Environment configuration"
msgstr "Configuration par l'environnement"

#: library/zoneinfo.rst:139
msgid ""
"When initializing :data:`TZPATH` (either at import time or whenever :func:"
"`reset_tzpath` is called with no arguments), the ``zoneinfo`` module will "
"use the environment variable ``PYTHONTZPATH``, if it exists, to set the "
"search path."
msgstr ""
"Lors de l'initialisation de :data:`TZPATH` (soit au moment de l'importation, "
"soit lorsque :func:`reset_tzpath` est appelé sans argument), le module "
"``zoneinfo`` utilise la variable d'environnement ``PYTHONTZPATH``, si elle "
"existe, pour définir le chemin de recherche."

#: library/zoneinfo.rst:146
msgid ""
"This is an :data:`os.pathsep`-separated string containing the time zone "
"search path to use. It must consist of only absolute rather than relative "
"paths. Relative components specified in ``PYTHONTZPATH`` will not be used, "
"but otherwise the behavior when a relative path is specified is "
"implementation-defined; CPython will raise :exc:`InvalidTZPathWarning`, but "
"other implementations are free to silently ignore the erroneous component or "
"raise an exception."
msgstr ""
"Il s'agit d'une chaîne séparée par :data:`os.pathsep` contenant le chemin de "
"recherche du fuseau horaire à utiliser. Elle doit être constituée uniquement "
"de chemins absolus et non de chemins relatifs. Les composants relatifs "
"spécifiés dans ``PYTHONTZPATH`` ne sont pas utilisés, mais le comportement "
"reste défini par l'implémentation lorsqu'un chemin relatif est spécifié. "
"CPython lève :exc:`InvalidTZPathWarning` dans ce cas. Les autres "
"implémentations sont libres d'ignorer silencieusement le composant erroné ou "
"de lever une exception."

#: library/zoneinfo.rst:154
msgid ""
"To set the system to ignore the system data and use the tzdata package "
"instead, set ``PYTHONTZPATH=\"\"``."
msgstr ""
"Pour que le système ignore les données système et utilise le paquet *tzdata* "
"à la place, définissez ``PYTHONTZPATH=\"\"``."

#: library/zoneinfo.rst:160
msgid "Runtime configuration"
msgstr "Configuration à l'exécution"

#: library/zoneinfo.rst:162
msgid ""
"The TZ search path can also be configured at runtime using the :func:"
"`reset_tzpath` function. This is generally not an advisable operation, "
"though it is reasonable to use it in test functions that require the use of "
"a specific time zone path (or require disabling access to the system time "
"zones)."
msgstr ""
"Le chemin de recherche *TZ* peut également être configuré au moment de "
"l'exécution à l'aide de la fonction :func:`reset_tzpath`. Cette opération "
"n'est généralement pas conseillée, bien qu'il soit raisonnable de l'utiliser "
"dans les fonctions de test qui nécessitent l'utilisation d'un chemin de "
"fuseau horaire spécifique (ou qui nécessitent de désactiver l'accès aux "
"fuseaux horaires du système)."

#: library/zoneinfo.rst:169
msgid "The ``ZoneInfo`` class"
msgstr "La classe ``ZoneInfo``"

#: library/zoneinfo.rst:173
msgid ""
"A concrete :class:`datetime.tzinfo` subclass that represents an IANA time "
"zone specified by the string ``key``. Calls to the primary constructor will "
"always return objects that compare identically; put another way, barring "
"cache invalidation via :meth:`ZoneInfo.clear_cache`, for all values of "
"``key``, the following assertion will always be true:"
msgstr ""
"Une sous-classe concrète de :class:`datetime.tzinfo` qui représente un "
"fuseau horaire IANA spécifié par la chaîne ``key``. Les appels au "
"constructeur principal renvoient toujours des objets dont la comparaison est "
"identique ; autrement dit, sauf invalidation du cache via :meth:`ZoneInfo."
"clear_cache`, pour toutes les valeurs de ``key``, l'assertion suivante est "
"toujours vraie :"

#: library/zoneinfo.rst:185
msgid ""
"``key`` must be in the form of a relative, normalized POSIX path, with no up-"
"level references. The constructor will raise :exc:`ValueError` if a non-"
"conforming key is passed."
msgstr ""
"``key`` doit être sous la forme d'un chemin POSIX relatif et normalisé, sans "
"références de niveau supérieur. Le constructeur lève :exc:`ValueError` si "
"une clé non conforme est passée."

#: library/zoneinfo.rst:189
msgid ""
"If no file matching ``key`` is found, the constructor will raise :exc:"
"`ZoneInfoNotFoundError`."
msgstr ""
"Si aucun fichier correspondant à ``key`` n'est trouvé, le constructeur lève :"
"exc:`ZoneInfoNotFoundError`."

#: library/zoneinfo.rst:193
msgid "The ``ZoneInfo`` class has two alternate constructors:"
msgstr "La classe ``ZoneInfo`` possède deux constructeurs alternatifs :"

#: library/zoneinfo.rst:197
msgid ""
"Constructs a ``ZoneInfo`` object from a file-like object returning bytes (e."
"g. a file opened in binary mode or an :class:`io.BytesIO` object). Unlike "
"the primary constructor, this always constructs a new object."
msgstr ""
"Construit un objet ``ZoneInfo`` à partir d'un objet fichier renvoyant des "
"octets (par exemple, un fichier ouvert en mode binaire ou un objet :class:"
"`io.BytesIO`). Contrairement au constructeur principal, il construit "
"toujours un nouvel objet."

#: library/zoneinfo.rst:201
msgid ""
"The ``key`` parameter sets the name of the zone for the purposes of :py:meth:"
"`~object.__str__` and :py:meth:`~object.__repr__`."
msgstr ""
"Le paramètre ``key`` définit le nom de la zone pour les besoins de :py:meth:"
"`~object.__str__` et :py:meth:`~object.__repr__`."

#: library/zoneinfo.rst:204
msgid ""
"Objects created via this constructor cannot be pickled (see `pickling`_)."
msgstr ""
"Les objets créés via ce constructeur ne peuvent pas être sérialisés (voir "
"`pickling`_)."

#: library/zoneinfo.rst:208
msgid ""
"An alternate constructor that bypasses the constructor's cache. It is "
"identical to the primary constructor, but returns a new object on each call. "
"This is most likely to be useful for testing or demonstration purposes, but "
"it can also be used to create a system with a different cache invalidation "
"strategy."
msgstr ""
"Un constructeur alternatif qui contourne le cache du constructeur. Il est "
"identique au constructeur principal, mais renvoie un nouvel objet à chaque "
"appel. Il est surtout utile à des fins de test ou de démonstration, mais il "
"peut également être utilisé pour créer un système avec une stratégie "
"d'invalidation du cache différente."

#: library/zoneinfo.rst:214
msgid ""
"Objects created via this constructor will also bypass the cache of a "
"deserializing process when unpickled."
msgstr ""
"Les objets créés via ce constructeur contournent également le cache d'un "
"processus de *désérialisation* lorsqu'ils sont désérialisés."

#: library/zoneinfo.rst:221
msgid ""
"Using this constructor may change the semantics of your datetimes in "
"surprising ways, only use it if you know that you need to."
msgstr ""
"L'utilisation de ce constructeur peut modifier la sémantique de vos "
"*datetimes* de manière surprenante, ne l'utilisez que si vous en avez "
"vraiment besoin."

#: library/zoneinfo.rst:224
msgid "The following class methods are also available:"
msgstr "Les méthodes de classe suivantes sont également disponibles :"

#: library/zoneinfo.rst:228
msgid ""
"A method for invalidating the cache on the ``ZoneInfo`` class. If no "
"arguments are passed, all caches are invalidated and the next call to the "
"primary constructor for each key will return a new instance."
msgstr ""
"Une méthode pour invalider le cache de la classe ``ZoneInfo``. Si aucun "
"argument n'est passé, tous les caches sont invalidés et le prochain appel au "
"constructeur principal pour chaque clé renverra une nouvelle instance."

#: library/zoneinfo.rst:232
msgid ""
"If an iterable of key names is passed to the ``only_keys`` parameter, only "
"the specified keys will be removed from the cache. Keys passed to "
"``only_keys`` but not found in the cache are ignored."
msgstr ""
"Si un itérable de noms de clés est passé au paramètre ``only_keys``, seules "
"les clés spécifiées sont retirées du cache. Les clés passées à ``only_keys`` "
"mais non trouvées dans le cache sont ignorées."

#: library/zoneinfo.rst:240
msgid ""
"Invoking this function may change the semantics of datetimes using "
"``ZoneInfo`` in surprising ways; this modifies process-wide global state and "
"thus may have wide-ranging effects. Only use it if you know that you need to."
msgstr ""
"L'invocation de cette fonction peut changer la sémantique des *datetimes* "
"utilisant ``ZoneInfo`` de manière surprenante ; cela modifie l'état global "
"du processus et peut donc avoir des effets étendus. Ne l'utilisez que si "
"vous en avez vraiment besoin."

#: library/zoneinfo.rst:245
msgid "The class has one attribute:"
msgstr "La classe a un attribut :"

#: library/zoneinfo.rst:249
msgid ""
"This is a read-only :term:`attribute` that returns the value of ``key`` "
"passed to the constructor, which should be a lookup key in the IANA time "
"zone database (e.g. ``America/New_York``, ``Europe/Paris`` or ``Asia/"
"Tokyo``)."
msgstr ""
"Il s'agit d'un :term:`attribut` en lecture seule qui renvoie la valeur de "
"``key`` passée au constructeur, qui doit être une clé de recherche dans la "
"base de données des fuseaux horaires de l'IANA (par exemple, ``America/"
"New_York``, ``Europe/Paris`` ou ``Asia/Tokyo``)."

#: library/zoneinfo.rst:254
msgid ""
"For zones constructed from file without specifying a ``key`` parameter, this "
"will be set to ``None``."
msgstr ""
"Pour les zones construites à partir d'un fichier sans spécifier de paramètre "
"``key``, cette valeur sera fixée à ``None``."

#: library/zoneinfo.rst:259
msgid ""
"Although it is a somewhat common practice to expose these to end users, "
"these values are designed to be primary keys for representing the relevant "
"zones and not necessarily user-facing elements.  Projects like CLDR (the "
"Unicode Common Locale Data Repository) can be used to get more user-friendly "
"strings from these keys."
msgstr ""
"Bien qu'il soit assez courant de les exposer aux utilisateurs finaux, ces "
"valeurs sont conçues pour être des clés primaires permettant de représenter "
"les zones concernées et pas nécessairement des éléments destinés à "
"l'utilisateur.  Des projets comme CLDR (Unicode Common Locale Data "
"Repository) peuvent être utilisés pour obtenir des chaînes de caractères "
"plus conviviales à partir de ces clés."

#: library/zoneinfo.rst:266
msgid "String representations"
msgstr "Représentation sous forme de chaîne de caractères"

#: library/zoneinfo.rst:268
msgid ""
"The string representation returned when calling :py:class:`str` on a :class:"
"`ZoneInfo` object defaults to using the :attr:`ZoneInfo.key` attribute (see "
"the note on usage in the attribute documentation)::"
msgstr ""

#: library/zoneinfo.rst:280
msgid ""
"For objects constructed from a file without specifying a ``key`` parameter, "
"``str`` falls back to calling :func:`repr`. ``ZoneInfo``'s ``repr`` is "
"implementation-defined and not necessarily stable between versions, but it "
"is guaranteed not to be a valid ``ZoneInfo`` key."
msgstr ""

#: library/zoneinfo.rst:288
msgid "Pickle serialization"
msgstr ""

#: library/zoneinfo.rst:290
msgid ""
"Rather than serializing all transition data, ``ZoneInfo`` objects are "
"serialized by key, and ``ZoneInfo`` objects constructed from files (even "
"those with a value for ``key`` specified) cannot be pickled."
msgstr ""

#: library/zoneinfo.rst:294
msgid "The behavior of a ``ZoneInfo`` file depends on how it was constructed:"
msgstr ""

#: library/zoneinfo.rst:296
msgid ""
"``ZoneInfo(key)``: When constructed with the primary constructor, a "
"``ZoneInfo`` object is serialized by key, and when deserialized, the "
"deserializing process uses the primary and thus it is expected that these "
"are expected to be the same object as other references to the same time "
"zone.  For example, if ``europe_berlin_pkl`` is a string containing a pickle "
"constructed from ``ZoneInfo(\"Europe/Berlin\")``, one would expect the "
"following behavior:"
msgstr ""

#: library/zoneinfo.rst:311
msgid ""
"``ZoneInfo.no_cache(key)``: When constructed from the cache-bypassing "
"constructor, the ``ZoneInfo`` object is also serialized by key, but when "
"deserialized, the deserializing process uses the cache bypassing "
"constructor. If ``europe_berlin_pkl_nc`` is a string containing a pickle "
"constructed from ``ZoneInfo.no_cache(\"Europe/Berlin\")``, one would expect "
"the following behavior:"
msgstr ""

#: library/zoneinfo.rst:325
msgid ""
"``ZoneInfo.from_file(fobj, /, key=None)``: When constructed from a file, the "
"``ZoneInfo`` object raises an exception on pickling. If an end user wants to "
"pickle a ``ZoneInfo`` constructed from a file, it is recommended that they "
"use a wrapper type or a custom serialization function: either serializing by "
"key or storing the contents of the file object and serializing that."
msgstr ""

#: library/zoneinfo.rst:331
msgid ""
"This method of serialization requires that the time zone data for the "
"required key be available on both the serializing and deserializing side, "
"similar to the way that references to classes and functions are expected to "
"exist in both the serializing and deserializing environments. It also means "
"that no guarantees are made about the consistency of results when unpickling "
"a ``ZoneInfo`` pickled in an environment with a different version of the "
"time zone data."
msgstr ""

#: library/zoneinfo.rst:339
msgid "Functions"
msgstr "Fonctions"

#: library/zoneinfo.rst:343
msgid ""
"Get a set containing all the valid keys for IANA time zones available "
"anywhere on the time zone path. This is recalculated on every call to the "
"function."
msgstr ""

#: library/zoneinfo.rst:347
msgid ""
"This function only includes canonical zone names and does not include "
"\"special\" zones such as those under the ``posix/`` and ``right/`` "
"directories, or the ``posixrules`` zone."
msgstr ""

#: library/zoneinfo.rst:353
msgid ""
"This function may open a large number of files, as the best way to determine "
"if a file on the time zone path is a valid time zone is to read the \"magic "
"string\" at the beginning."
msgstr ""

#: library/zoneinfo.rst:359
msgid ""
"These values are not designed to be exposed to end-users; for user facing "
"elements, applications should use something like CLDR (the Unicode Common "
"Locale Data Repository) to get more user-friendly strings. See also the "
"cautionary note on :attr:`ZoneInfo.key`."
msgstr ""

#: library/zoneinfo.rst:366
msgid ""
"Sets or resets the time zone search path (:data:`TZPATH`) for the module. "
"When called with no arguments, :data:`TZPATH` is set to the default value."
msgstr ""

#: library/zoneinfo.rst:369
msgid ""
"Calling ``reset_tzpath`` will not invalidate the :class:`ZoneInfo` cache, "
"and so calls to the primary ``ZoneInfo`` constructor will only use the new "
"``TZPATH`` in the case of a cache miss."
msgstr ""

#: library/zoneinfo.rst:373
msgid ""
"The ``to`` parameter must be a :term:`sequence` of strings or :class:`os."
"PathLike` and not a string, all of which must be absolute paths. :exc:"
"`ValueError` will be raised if something other than an absolute path is "
"passed."
msgstr ""

#: library/zoneinfo.rst:379
msgid "Globals"
msgstr ""

#: library/zoneinfo.rst:383
msgid ""
"A read-only sequence representing the time zone search path -- when "
"constructing a ``ZoneInfo`` from a key, the key is joined to each entry in "
"the ``TZPATH``, and the first file found is used."
msgstr ""

#: library/zoneinfo.rst:387
msgid ""
"``TZPATH`` may contain only absolute paths, never relative paths, regardless "
"of how it is configured."
msgstr ""

#: library/zoneinfo.rst:390
msgid ""
"The object that ``zoneinfo.TZPATH`` points to may change in response to a "
"call to :func:`reset_tzpath`, so it is recommended to use ``zoneinfo."
"TZPATH`` rather than importing ``TZPATH`` from ``zoneinfo`` or assigning a "
"long-lived variable to ``zoneinfo.TZPATH``."
msgstr ""

#: library/zoneinfo.rst:395
msgid ""
"For more information on configuring the time zone search path, see :ref:"
"`zoneinfo_data_configuration`."
msgstr ""

#: library/zoneinfo.rst:399
msgid "Exceptions and warnings"
msgstr ""

#: library/zoneinfo.rst:403
msgid ""
"Raised when construction of a :class:`ZoneInfo` object fails because the "
"specified key could not be found on the system. This is a subclass of :exc:"
"`KeyError`."
msgstr ""

#: library/zoneinfo.rst:409
msgid ""
"Raised when :envvar:`PYTHONTZPATH` contains an invalid component that will "
"be filtered out, such as a relative path."
msgstr ""
