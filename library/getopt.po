# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: library/getopt.rst:2
msgid ":mod:`getopt` --- C-style parser for command line options"
msgstr ""
":mod:`getopt` – Analyseur de style C pour les options de ligne de commande"

#: library/getopt.rst:8
msgid "**Source code:** :source:`Lib/getopt.py`"
msgstr "**Code source :** :source:`Lib/getopt.py`"

#: library/getopt.rst:12
msgid ""
"The :mod:`getopt` module is a parser for command line options whose API is "
"designed to be familiar to users of the C :c:func:`getopt` function. Users "
"who are unfamiliar with the C :c:func:`getopt` function or who would like to "
"write less code and get better help and error messages should consider using "
"the :mod:`argparse` module instead."
msgstr ""
"Le module :mod:`getopt` est un analyseur pour les options de ligne de "
"commande dont l’API est conçue pour être familière aux utilisateurs de la "
"fonction C :c:func:`getopt`. Les utilisateurs qui ne connaissent pas la "
"fonction :c:func:`getopt` ou qui aimeraient écrire moins de code, obtenir "
"une meilleure aide et de meilleurs messages d’erreur devraient utiliser le "
"module :mod:`argparse`."

#: library/getopt.rst:20
msgid ""
"This module helps scripts to parse the command line arguments in ``sys."
"argv``. It supports the same conventions as the Unix :c:func:`getopt` "
"function (including the special meanings of arguments of the form '``-``' "
"and '``--``').  Long options similar to those supported by GNU software may "
"be used as well via an optional third argument."
msgstr ""
"Ce module aide les scripts à analyser les arguments de ligne de commande "
"contenus dans ``sys.argv``. Il prend en charge les mêmes conventions que la "
"fonction UNIX :c:func:`getopt` (y compris les significations spéciales des "
"arguments de la forme ``-`` et ``--``). De longues options similaires à "
"celles prises en charge par le logiciel GNU peuvent également être utilisées "
"via un troisième argument facultatif."

#: library/getopt.rst:26
msgid "This module provides two functions and an exception:"
msgstr "Ce module fournit deux fonctions et une exception :"

#: library/getopt.rst:32
msgid ""
"Parses command line options and parameter list.  *args* is the argument list "
"to be parsed, without the leading reference to the running program. "
"Typically, this means ``sys.argv[1:]``. *shortopts* is the string of option "
"letters that the script wants to recognize, with options that require an "
"argument followed by a colon (``':'``; i.e., the same format that Unix :c:"
"func:`getopt` uses)."
msgstr ""
"Analyse les options de ligne de commande et la liste des paramètres. *args* "
"est la liste d’arguments à analyser, sans la référence principale au "
"programme en cours d’exécution. En général, cela signifie ``sys.argv[1:]`` "
"(donc que le premier argument contenant le nom du programme n’est pas dans "
"la liste). *shortopts* est la chaîne de lettres d’options que le script doit "
"reconnaître, avec des options qui requièrent un argument suivi d’un signe "
"deux-points (``:``, donc le même format que la version Unix de :c:func:"
"`getopt` utilise)."

#: library/getopt.rst:40
msgid ""
"Unlike GNU :c:func:`getopt`, after a non-option argument, all further "
"arguments are considered also non-options. This is similar to the way non-"
"GNU Unix systems work."
msgstr ""
"Contrairement au :c:func:`getopt` GNU, après un argument n'appartenant pas à "
"une option, aucun argument ne sera considéré comme appartenant à une option. "
"Ceci est similaire à la façon dont les systèmes UNIX non-GNU fonctionnent."

#: library/getopt.rst:44
msgid ""
"*longopts*, if specified, must be a list of strings with the names of the "
"long options which should be supported.  The leading ``'--'`` characters "
"should not be included in the option name.  Long options which require an "
"argument should be followed by an equal sign (``'='``).  Optional arguments "
"are not supported.  To accept only long options, *shortopts* should be an "
"empty string.  Long options on the command line can be recognized so long as "
"they provide a prefix of the option name that matches exactly one of the "
"accepted options.  For example, if *longopts* is ``['foo', 'frob']``, the "
"option ``--fo`` will match as ``--foo``, but ``--f`` will not match "
"uniquely, so :exc:`GetoptError` will be raised."
msgstr ""
"*longopts*, si spécifié, doit être une liste de chaînes avec les noms des "
"options longues qui doivent être prises en charge. Le premier ``'--'`` ne "
"dois pas figurer dans le nom de l’option. Les options longues qui requièrent "
"un argument doivent être suivies d’un signe égal (``'='``). Les arguments "
"facultatifs ne sont pas pris en charge. Pour accepter uniquement les options "
"longues, *shortopts* doit être une chaîne vide. Les options longues sur la "
"ligne de commande peuvent être reconnues tant qu’elles fournissent un "
"préfixe du nom de l’option qui correspond exactement à l’une des options "
"acceptées. Par exemple, si *longopts* est ``['foo', 'frob']``, l’option ``--"
"fo`` correspondra à ``--foo``, mais ``--f`` ne correspondra pas de façon "
"unique, donc :exc:`GetoptError` sera levé."

#: library/getopt.rst:55
msgid ""
"The return value consists of two elements: the first is a list of ``(option, "
"value)`` pairs; the second is the list of program arguments left after the "
"option list was stripped (this is a trailing slice of *args*).  Each option-"
"and-value pair returned has the option as its first element, prefixed with a "
"hyphen for short options (e.g., ``'-x'``) or two hyphens for long options (e."
"g., ``'--long-option'``), and the option argument as its second element, or "
"an empty string if the option has no argument.  The options occur in the "
"list in the same order in which they were found, thus allowing multiple "
"occurrences.  Long and short options may be mixed."
msgstr ""
"La valeur de retour se compose de deux éléments : le premier est une liste "
"de paires ``(option, value)``, la deuxième est la liste des arguments de "
"programme laissés après que la liste d’options est été dépouillée (il s’agit "
"d’une tranche de fin de *args*). Chaque paire option-valeur retournée a "
"l’option comme premier élément, préfixée avec un trait d'union pour les "
"options courtes (par exemple, ``'-x'``) ou deux tirets pour les options "
"longues (par exemple, ``'--long-option'``), et l’argument option comme "
"deuxième élément, ou une chaîne vide si le option n’a aucun argument. Les "
"options se trouvent dans la liste dans l’ordre dans lequel elles ont été "
"trouvées, permettant ainsi plusieurs occurrences. Les options longues et "
"courtes peuvent être mélangées."

#: library/getopt.rst:68
msgid ""
"This function works like :func:`getopt`, except that GNU style scanning mode "
"is used by default. This means that option and non-option arguments may be "
"intermixed. The :func:`getopt` function stops processing options as soon as "
"a non-option argument is encountered."
msgstr ""
"Cette fonction fonctionne comme :func:`getopt`, sauf que le mode de *scan* "
"GNU est utilisé par défaut. Cela signifie que les arguments option et non-"
"option peuvent être **intermixés**. La fonction :func:`getopt` arrête le "
"traitement des options dès qu’un argument de non-option est rencontré."

#: library/getopt.rst:73
msgid ""
"If the first character of the option string is ``'+'``, or if the "
"environment variable :envvar:`POSIXLY_CORRECT` is set, then option "
"processing stops as soon as a non-option argument is encountered."
msgstr ""
"Si le premier caractère de la chaîne d’options est ``+``, ou si la variable "
"d’environnement :envvar:`POSIXLY_CORRECT` est définie, le traitement des "
"options s’arrête dès qu’un argument non-option est rencontré."

#: library/getopt.rst:80
msgid ""
"This is raised when an unrecognized option is found in the argument list or "
"when an option requiring an argument is given none. The argument to the "
"exception is a string indicating the cause of the error.  For long options, "
"an argument given to an option which does not require one will also cause "
"this exception to be raised.  The attributes :attr:`msg` and :attr:`opt` "
"give the error message and related option; if there is no specific option to "
"which the exception relates, :attr:`opt` is an empty string."
msgstr ""
"Cette exception est levée lorsqu’une option non reconnue est trouvée dans la "
"liste d’arguments ou lorsqu’une option nécessitant un argument n’en a pas "
"reçu. L’argument de l’exception est une chaîne de caractères indiquant la "
"cause de l’erreur. Pour les options longues, un argument donné à une option "
"qui n’en exige pas un entraîne également le levage de cette exception. Les "
"attributs :attr:`msg` et :attr:`opt` donnent le message d’erreur et l’option "
"connexe. S’il n’existe aucune option spécifique à laquelle l’exception se "
"rapporte, :attr:`opt` est une chaîne vide."

#: library/getopt.rst:91
msgid "Alias for :exc:`GetoptError`; for backward compatibility."
msgstr "Alias pour :exc:`GetoptError` ; pour la rétrocompatibilité."

#: library/getopt.rst:93
msgid "An example using only Unix style options:"
msgstr "Un exemple utilisant uniquement les options de style UNIX :"

#: library/getopt.rst:105
msgid "Using long option names is equally easy:"
msgstr "L’utilisation de noms d’options longs est tout aussi simple :"

#: library/getopt.rst:118
msgid "In a script, typical usage is something like this::"
msgstr "Dans un script, l’utilisation typique ressemble à ceci ::"

#: library/getopt.rst:147
msgid ""
"Note that an equivalent command line interface could be produced with less "
"code and more informative help and error messages by using the :mod:"
"`argparse` module::"
msgstr ""
"Notez qu’une interface de ligne de commande équivalente peut être produite "
"avec moins de code et des messages d’erreur et d’aide plus informatifs à "
"l’aide du module :mod:`argparse` module ::"

#: library/getopt.rst:162
msgid "Module :mod:`argparse`"
msgstr "Module :mod:`argparse`"

#: library/getopt.rst:163
msgid "Alternative command line option and argument parsing library."
msgstr ""
"Option de ligne de commande alternative et bibliothèque d’analyse "
"d’arguments."
