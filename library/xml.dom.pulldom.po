# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-01 00:16+0100\n"
"PO-Revision-Date: 2024-03-23 16:23+0100\n"
"Last-Translator: Christophe Nanteuil <christophe.nanteuil@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: library/xml.dom.pulldom.rst:2
#, fuzzy
msgid ":mod:`!xml.dom.pulldom` --- Support for building partial DOM trees"
msgstr ""
":mod:`xml.dom.pulldom` — gestion de la construction partielle des arbres DOM"

#: library/xml.dom.pulldom.rst:9
msgid "**Source code:** :source:`Lib/xml/dom/pulldom.py`"
msgstr "**Code source :** :source:`Lib/xml/dom/pulldom.py`"

#: library/xml.dom.pulldom.rst:13
msgid ""
"The :mod:`xml.dom.pulldom` module provides a \"pull parser\" which can also "
"be asked to produce DOM-accessible fragments of the document where "
"necessary. The basic concept involves pulling \"events\" from a stream of "
"incoming XML and processing them. In contrast to SAX which also employs an "
"event-driven processing model together with callbacks, the user of a pull "
"parser is responsible for explicitly pulling events from the stream, looping "
"over those events until either processing is finished or an error condition "
"occurs."
msgstr ""
"Le module :mod:`xml.dom.pulldom` fournit un « analyseur à flux tiré » auquel "
"on peut également demander de produire des fragments du document accessibles "
"via le DOM si nécessaire. Le concept de base consiste à extraire des "
"« événements » d'un flux XML entrant et à les traiter. Contrairement à *SAX* "
"qui utilise également un modèle de traitement basé sur les événements avec "
"des rappels, l'utilisateur d'un analyseur à flux tiré est responsable de "
"l'extraction explicite des événements du flux, en parcourant ces événements "
"en boucle jusqu'à ce que le traitement soit terminé ou qu'une condition "
"d'erreur se produise."

# suit un :
#: library/xml.dom.pulldom.rst:24
msgid ""
"The :mod:`xml.dom.pulldom` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"le module :mod:`xml.dom.pulldom` n'est pas sécurisé contre les données "
"construites de façon malveillante. Si vous avez besoin d'analyser des "
"données non sécurisées ou non authentifiées, référez-vous à :ref:`xml-"
"vulnerabilities`."

# suit un :
#: library/xml.dom.pulldom.rst:30
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security by default. To enable processing of external entities, "
"pass a custom parser instance in::"
msgstr ""
"l'analyseur *SAX* ne traite plus les entités externes générales par défaut "
"pour augmenter la sécurité par défaut. Pour activer le traitement des "
"entités externes, transmettez une instance d'analyseur personnalisée à ::"

#: library/xml.dom.pulldom.rst:43
msgid "Example::"
msgstr "Exemple ::"

#: library/xml.dom.pulldom.rst:54
msgid "``event`` is a constant and can be one of:"
msgstr "``event`` est une constante parmi les éléments suivants :"

#: library/xml.dom.pulldom.rst:56
msgid ":data:`START_ELEMENT`"
msgstr ":data:`START_ELEMENT`"

#: library/xml.dom.pulldom.rst:57
msgid ":data:`END_ELEMENT`"
msgstr ":data:`END_ELEMENT`"

#: library/xml.dom.pulldom.rst:58
msgid ":data:`COMMENT`"
msgstr ":data:`COMMENT`"

#: library/xml.dom.pulldom.rst:59
msgid ":data:`START_DOCUMENT`"
msgstr ":data:`START_DOCUMENT`"

#: library/xml.dom.pulldom.rst:60
msgid ":data:`END_DOCUMENT`"
msgstr ":data:`END_DOCUMENT`"

#: library/xml.dom.pulldom.rst:61
msgid ":data:`CHARACTERS`"
msgstr ":data:`CHARACTERS`"

#: library/xml.dom.pulldom.rst:62
msgid ":data:`PROCESSING_INSTRUCTION`"
msgstr ":data:`PROCESSING_INSTRUCTION`"

#: library/xml.dom.pulldom.rst:63
msgid ":data:`IGNORABLE_WHITESPACE`"
msgstr ":data:`IGNORABLE_WHITESPACE`"

#: library/xml.dom.pulldom.rst:65
msgid ""
"``node`` is an object of type :class:`xml.dom.minidom.Document`, :class:`xml."
"dom.minidom.Element` or :class:`xml.dom.minidom.Text`."
msgstr ""
"``node`` est un objet de type :class:`xml.dom.minidom.Document`, :class:`xml."
"dom.minidom.Element` ou :class:`xml.dom.minidom.Text`."

#: library/xml.dom.pulldom.rst:68
msgid ""
"Since the document is treated as a \"flat\" stream of events, the document "
"\"tree\" is implicitly traversed and the desired elements are found "
"regardless of their depth in the tree. In other words, one does not need to "
"consider hierarchical issues such as recursive searching of the document "
"nodes, although if the context of elements were important, one would either "
"need to maintain some context-related state (i.e. remembering where one is "
"in the document at any given point) or to make use of the :func:"
"`DOMEventStream.expandNode` method and switch to DOM-related processing."
msgstr ""
"Puisque le document est traité comme un flux « plat » d’événements, "
"« l’arborescence » du document est implicitement parcourue et les éléments "
"souhaités sont trouvés quelle que soit leur profondeur dans l’arborescence. "
"En d'autres termes, il n'est pas nécessaire de prendre en compte les "
"problèmes hiérarchiques tels que la recherche récursive des nœuds du "
"document, même dans le cas où le contexte des éléments est important, et où "
"il faudrait soit maintenir un état lié au contexte (c'est-à-dire se souvenir "
"où l'on se trouve dans le document à un moment donné), soit utiliser la "
"méthode :func:`DOMEventStream.expandNode` et passer au traitement lié du DOM."

#: library/xml.dom.pulldom.rst:85
msgid "Subclass of :class:`xml.sax.handler.ContentHandler`."
msgstr "Sous-classe de :class:`xml.sax.handler.ContentHandler`."

#: library/xml.dom.pulldom.rst:90
msgid ""
"Return a :class:`DOMEventStream` from the given input. *stream_or_string* "
"may be either a file name, or a file-like object. *parser*, if given, must "
"be an :class:`~xml.sax.xmlreader.XMLReader` object. This function will "
"change the document handler of the parser and activate namespace support; "
"other parser configuration (like setting an entity resolver) must have been "
"done in advance."
msgstr ""
"Renvoie un :class:`DOMEventStream` à partir de l'entrée donnée. "
"*stream_or_string* peut être soit un nom de fichier, soit un objet simili-"
"fichier. *parser*, s'il est donné, doit être un objet :class:`~xml.sax."
"xmlreader.XMLReader`. Cette fonction modifie le gestionnaire de documents de "
"l'analyseur et active la prise en charge des espaces de noms ; les autres "
"configurations de l'analyseur (comme la définition d'un résolveur d'entité) "
"doivent avoir été effectuées à l'avance."

#: library/xml.dom.pulldom.rst:97
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""
"Si vous avez du XML dans une chaîne, vous pouvez utiliser la fonction :func:"
"`parseString` à la place :"

#: library/xml.dom.pulldom.rst:101
msgid ""
"Return a :class:`DOMEventStream` that represents the (Unicode) *string*."
msgstr "Renvoie un :class:`DOMEventStream` qui représente *string* (Unicode)."

#: library/xml.dom.pulldom.rst:105
msgid "Default value for the *bufsize* parameter to :func:`parse`."
msgstr "Valeur par défaut du paramètre *bufsize* de :func:`parse`."

#: library/xml.dom.pulldom.rst:107
msgid ""
"The value of this variable can be changed before calling :func:`parse` and "
"the new value will take effect."
msgstr ""
"La valeur de cette variable peut être modifiée avant d'appeler :func:`parse` "
"et la nouvelle valeur prendra effet."

#: library/xml.dom.pulldom.rst:113
msgid "DOMEventStream Objects"
msgstr "Objets *DOMEventStream*"

# suit un :
#: library/xml.dom.pulldom.rst:117
#, fuzzy
msgid "Support for :meth:`~object.__getitem__` method has been removed."
msgstr "la méthode :meth:`__getitem__` n'est plus prise en charge."

#: library/xml.dom.pulldom.rst:122
msgid ""
"Return a tuple containing *event* and the current *node* as :class:`xml.dom."
"minidom.Document` if event equals :data:`START_DOCUMENT`, :class:`xml.dom."
"minidom.Element` if event equals :data:`START_ELEMENT` or :data:"
"`END_ELEMENT` or :class:`xml.dom.minidom.Text` if event equals :data:"
"`CHARACTERS`. The current node does not contain information about its "
"children, unless :func:`expandNode` is called."
msgstr ""
"Renvoie un *n*-uplet contenant *event* et le *node* actuel sous la forme "
"d'un :class:`xml.dom.minidom.Document` si l'événement est égal à :data:"
"`START_DOCUMENT`, un :class:`xml.dom.minidom.Element` si l'événement est "
"égal à :data:`START_ELEMENT` ou :data:`END_ELEMENT`, ou un :class:`xml.dom."
"minidom.Text` si l'événement est égal à :data:`CHARACTERS`. Le nœud actuel "
"ne contient pas d'informations sur ses enfants, sauf si :func:`expandNode` "
"est appelé."

#: library/xml.dom.pulldom.rst:132
msgid "Expands all children of *node* into *node*. Example::"
msgstr "Développe tous les enfants de *node* dans *node*. Par exemple ::"
