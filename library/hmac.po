# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-28 15:29+0200\n"
"PO-Revision-Date: 2020-04-27 22:24+0200\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: Mathieu Dupuy <deronnax@gmail.com>\n"
"X-Generator: Poedit 2.2.3\n"

#: ../Doc/library/hmac.rst:2
msgid ":mod:`hmac` --- Keyed-Hashing for Message Authentication"
msgstr ""
":mod:`hmac` — Authentification de messages par hachage en combinaison avec "
"une clé secrète"

#: ../Doc/library/hmac.rst:10
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr "**Code source :** :source:`Lib/hmac.py`"

#: ../Doc/library/hmac.rst:14
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr ""
"Ce module implémente l'algorithme HMAC tel que décrit par la :rfc:`2104`."

#: ../Doc/library/hmac.rst:19
msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use.  It may be any name suitable to :func:`hashlib.new`. Despite "
"its argument position, it is required."
msgstr ""
"Renvoie un nouvel objet HMAC.  *key* est un objet *byte* ou *bytearray* "
"représentant la clé secrète.  Si *msg* est présent, un appel à "
"``update(msg)`` est effectué. *digestmod* permet de choisir l’algorithme à "
"utiliser par l’objet HMAC, il accepte un nom de fonction de hachage (peut "
"être tout ce qui convient à :func:`hashlib.new`), un constructeur de "
"fonction de hachage ou un module implémentant la PEP 247. Bien qu’il soit "
"après *msg*, *digestmod* est un paramètre obligatoire."

#: ../Doc/library/hmac.rst:25
msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""
"Le paramètre *key* peut être un *byte* ou un objet *bytearray*. Le paramètre "
"*msg* peut être de n'importe quel type pris en charge par :mod:`hashlib`. Le "
"paramètre *digestmod* peut être le nom d'un algorithme de hachage."

#: ../Doc/library/hmac.rst:33
msgid ""
"MD5 as implicit default digest for *digestmod* is deprecated. The digestmod "
"parameter is now required.  Pass it as a keyword argument to avoid "
"awkwardness when you do not have an initial msg."
msgstr ""
"MD5 en tant qu’algorithme cryptographique par défaut implicite pour "
"*digestmod* est obsolète. Le paramètre *digestmod* est maintenant requis.  "
"Passez-le en argument nommé pour éviter la bizarrerie que ça donnerait quand "
"vous n'avez pas un *msg* initial."

#: ../Doc/library/hmac.rst:38
msgid ""
"Return digest of *msg* for given secret *key* and *digest*. The function is "
"equivalent to ``HMAC(key, msg, digest).digest()``, but uses an optimized C "
"or inline implementation, which is faster for messages that fit into memory. "
"The parameters *key*, *msg*, and *digest* have the same meaning as in :func:"
"`~hmac.new`."
msgstr ""
"Renvoie le code d'authentification de *msg*, pour la clé secrète *key* et à "
"l'algorithme *digest* donné. La fonction est équivalente à ``HMAC(key, msg, "
"digest).digest()``, mais elle utilise une implémentation optimisée en C ou "
"*inline*, qui est plus rapide pour les messages dont la taille leur permet "
"de tenir en mémoire vive. Les paramètres *key*, *msg* et *digest* ont la "
"même signification que pour :func:`~hmac.new`."

#: ../Doc/library/hmac.rst:44
msgid ""
"CPython implementation detail, the optimized C implementation is only used "
"when *digest* is a string and name of a digest algorithm, which is supported "
"by OpenSSL."
msgstr ""
"Détail d'implémentation CPython, l'implémentation C optimisée n'est utilisée "
"que lorsque le *digest* est une chaîne de caractères et le nom d'un "
"algorithme de hachage implémenté dans OpenSSL."

#: ../Doc/library/hmac.rst:51
msgid "An HMAC object has the following methods:"
msgstr "Un objet HMAC a les méthodes suivantes :"

#: ../Doc/library/hmac.rst:55
msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); m."
"update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""
"Met à jour l'objet HMAC avec *msg*. Des appels répétés sont équivalents à un "
"seul appel avec la concaténation de tous les arguments : ``m.update(a); m."
"update(b)`` est équivalent à ``m.update(a + b)``."

#: ../Doc/library/hmac.rst:59
msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr ""
"Le paramètre *msg* peut être de n'importe quel type géré par :mod:`hashlib`."

#: ../Doc/library/hmac.rst:65
msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest "
"given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""
"Renvoie le condensat des octets passés à la méthode :meth:`update` jusque "
"là. L'objet *bytes* renvoyé sera de la même longueur que la *digest_size* de "
"la fonction de hachage donnée au constructeur. Il peut contenir des octets "
"qui ne sont pas dans la table ASCII, y compris des octets NUL."

#: ../Doc/library/hmac.rst:72
msgid ""
"When comparing the output of :meth:`digest` to an externally-supplied digest "
"during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"Si vous devez vérifier la sortie de :meth:`digest` avec un condensat obtenu "
"par ailleurs par un service extérieur durant une routine de vérification, il "
"est recommandé d'utiliser la fonction :func:`compare_digest` au lieu de "
"l'opérateur ``==`` afin de réduire la vulnérabilité aux attaques temporelles."

#: ../Doc/library/hmac.rst:80
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""
"Comme :meth:`digest` sauf que ce condensat est renvoyé en tant que chaîne de "
"caractères de taille doublée contenant seulement des chiffres hexadécimaux. "
"Cela permet d’échanger le résultat sans problèmes par e-mail ou dans "
"d'autres environnements ne gérant pas les données binaires."

#: ../Doc/library/hmac.rst:86
msgid ""
"When comparing the output of :meth:`hexdigest` to an externally-supplied "
"digest during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"Si l'on compare la sortie de :meth:`hexdigest` avec celle d'un condensat "
"connu obtenu par un service extérieur durant une routine de vérification, il "
"est recommandé d'utiliser la fonction :func:`compare_digest` au lieu de "
"l'opérateur ``==`` afin de réduire la vulnérabilité aux attaques basées sur "
"les temps de réponse."

#: ../Doc/library/hmac.rst:94
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""
"Renvoie une copie (un clone) de l'objet HMAC. C'est utile pour calculer de "
"manière efficace les empreintes cryptographiques de chaînes de caractères "
"qui ont en commun une sous-chaîne initiale."

#: ../Doc/library/hmac.rst:98
msgid "A hash object has the following attributes:"
msgstr ""
"Un objet *code d'authentification de message* (HMAC) possède les attributs "
"suivants :"

#: ../Doc/library/hmac.rst:102
msgid "The size of the resulting HMAC digest in bytes."
msgstr ""
"La taille du code d'authentification (c.-à-d. de l'empreinte "
"cryptographique) en octets."

#: ../Doc/library/hmac.rst:106
msgid "The internal block size of the hash algorithm in bytes."
msgstr "La taille interne d'un bloc de l'algorithme de hachage en octets."

#: ../Doc/library/hmac.rst:112
msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr ""
"Le nom canonique de ce HMAC, toujours en lettres minuscules, par exemple "
"``hmac-md5``."

#: ../Doc/library/hmac.rst:117
msgid "This module also provides the following helper function:"
msgstr "Ce module fournit également la fonction utilitaire suivante :"

#: ../Doc/library/hmac.rst:121
msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making "
"it appropriate for cryptography.  *a* and *b* must both be of the same type: "
"either :class:`str` (ASCII only, as e.g. returned by :meth:`HMAC."
"hexdigest`), or a :term:`bytes-like object`."
msgstr ""
"Renvoie ``a == b``. Cette fonction a été conçue pour prévenir les attaques "
"temporelles en évitant l'implémentation de courts-circuits basés sur le "
"contenu, ce qui la rend appropriée pour de la cryptographie. *a* et *b* "
"doivent être du même type : soit :class:`str` (caractères ASCII seulement, "
"comme retourné par :meth:`HMAC.hexdigest` par exemple), ou :term:`bytes-like "
"object`."

#: ../Doc/library/hmac.rst:129
msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of "
"*a* and *b*—but not their values."
msgstr ""
"Si *a* et *b* sont de longueurs différentes ou si une erreur se produit, une "
"attaque temporelle pourrait en théorie obtenir des informations sur les "
"types et longueurs de *a* et de *b*, mais pas sur leurs valeurs."

#: ../Doc/library/hmac.rst:138
msgid "Module :mod:`hashlib`"
msgstr "Module :mod:`hashlib`"

#: ../Doc/library/hmac.rst:139
msgid "The Python module providing secure hash functions."
msgstr "Le module Python fournissant des fonctions de hachage sécurisé."
