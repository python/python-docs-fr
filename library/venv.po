# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 17:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ""

#: ../Doc/library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr ""

#: ../Doc/library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight \"virtual "
"environments\" with their own site directories, optionally isolated from "
"system site directories.  Each virtual environment has its own Python binary "
"(which matches the version of the binary that was used to create this "
"environment) and can have its own independent set of installed Python "
"packages in its site directories."
msgstr ""

#: ../Doc/library/venv.rst:25
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr ""

#: ../Doc/library/venv.rst:29
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"
msgstr ""
"`Guide Utilisateur de l'Empaquetage Python : Créer et utiliser des "
"environnements virtuels <https://packaging.python.org/installing/#creating-"
"virtual-environments>`__"

#: ../Doc/library/venv.rst:33
msgid ""
"The ``pyvenv`` script has been deprecated as of Python 3.6 in favor of using "
"``python3 -m venv`` to help prevent any potential confusion as to which "
"Python interpreter a virtual environment will be based on."
msgstr ""

#: ../Doc/library/venv.rst:39
msgid "Creating virtual environments"
msgstr "Création d'environnements virtuels"

#: ../Doc/using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr ""

#: ../Doc/using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation from which the "
"command was run.  It also creates a ``bin`` (or ``Scripts`` on Windows) "
"subdirectory containing a copy of the ``python`` binary (or binaries, in the "
"case of Windows).  It also creates an (initially empty) ``lib/pythonX.Y/site-"
"packages`` subdirectory (on Windows, this is ``Lib\\site-packages``). If an "
"existing directory is specified, it will be re-used."
msgstr ""

#: ../Doc/using/venv-create.inc:15
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is `deprecated in Python 3.6 <https://docs.python."
"org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""
"``pyvenv`` était l'outil recommandé pour créer des environnements sous "
"Python 3.3 et 3.4, et est `obsolète depuis Python 3.6 <https://docs.python."
"org/dev/whatsnew/3.6.html#deprecated-features>`_."

#: ../Doc/using/venv-create.inc:20
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr ""
"L'utilisation de ``venv``  est maintenant recommandée pour créer vos "
"environnements virtuels."

#: ../Doc/using/venv-create.inc:25
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr ""

#: ../Doc/using/venv-create.inc:29
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""

#: ../Doc/using/venv-create.inc:34
msgid "The command, if run with ``-h``, will show the available options::"
msgstr ""

#: ../Doc/using/venv-create.inc:64
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr ""

#: ../Doc/using/venv-create.inc:68
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""

#: ../Doc/using/venv-create.inc:72
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""

#: ../Doc/using/venv-create.inc:76
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""

#: ../Doc/using/venv-create.inc:79
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr ""

#: ../Doc/using/venv-create.inc:83
msgid ""
"Once a virtual environment has been created, it can be \"activated\" using a "
"script in the virtual environment's binary directory. The invocation of the "
"script is platform-specific:"
msgstr ""

#: ../Doc/using/venv-create.inc:88
msgid "Platform"
msgstr "Plateforme"

#: ../Doc/using/venv-create.inc:88
msgid "Shell"
msgstr ""

#: ../Doc/using/venv-create.inc:88
msgid "Command to activate virtual environment"
msgstr "Commande pour activer l'environnement virtuel"

#: ../Doc/using/venv-create.inc:90
msgid "Posix"
msgstr "Posix"

#: ../Doc/using/venv-create.inc:90
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../Doc/using/venv-create.inc:90
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../Doc/using/venv-create.inc:92
msgid "fish"
msgstr "fish"

#: ../Doc/using/venv-create.inc:92
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../Doc/using/venv-create.inc:94
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../Doc/using/venv-create.inc:94
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../Doc/using/venv-create.inc:96
msgid "Windows"
msgstr "Windows"

#: ../Doc/using/venv-create.inc:96
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../Doc/using/venv-create.inc:96
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr ""

#: ../Doc/using/venv-create.inc:98
msgid "PowerShell"
msgstr "PowerShell"

#: ../Doc/using/venv-create.inc:98
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr ""

#: ../Doc/using/venv-create.inc:101
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the virtual environment's binary directory to your path, so that "
"\"python\" invokes the virtual environment's Python interpreter and you can "
"run installed scripts without having to use their full path. However, all "
"scripts installed in a virtual environment should be runnable without "
"activating it, and run with the virtual environment's Python automatically."
msgstr ""

#: ../Doc/using/venv-create.inc:108
msgid ""
"You can deactivate a virtual environment by typing \"deactivate\" in your "
"shell. The exact mechanism is platform-specific: for example, the Bash "
"activation script defines a \"deactivate\" function, whereas on Windows "
"there are separate scripts called ``deactivate.bat`` and ``Deactivate.ps1`` "
"which are installed when the virtual environment is created."
msgstr ""

#: ../Doc/using/venv-create.inc:114
msgid "``fish`` and ``csh`` activation scripts."
msgstr ""

#: ../Doc/library/venv.rst:46
msgid ""
"A virtual environment is a Python environment such that the Python "
"interpreter, libraries and scripts installed into it are isolated from those "
"installed in other virtual environments, and (by default) any libraries "
"installed in a \"system\" Python, i.e., one which is installed as part of "
"your operating system."
msgstr ""

#: ../Doc/library/venv.rst:52
msgid ""
"A virtual environment is a directory tree which contains Python executable "
"files and other files which indicate that it is a virtual environment."
msgstr ""

#: ../Doc/library/venv.rst:55
msgid ""
"Common installation tools such as ``Setuptools`` and ``pip`` work as "
"expected with virtual environments. In other words, when a virtual "
"environment is active, they install Python packages into the virtual "
"environment without needing to be told to do so explicitly."
msgstr ""

#: ../Doc/library/venv.rst:60
msgid ""
"When a virtual environment is active (i.e., the virtual environment's Python "
"interpreter is running), the attributes :attr:`sys.prefix` and :attr:`sys."
"exec_prefix` point to the base directory of the virtual environment, "
"whereas :attr:`sys.base_prefix` and :attr:`sys.base_exec_prefix` point to "
"the non-virtual environment Python installation which was used to create the "
"virtual environment. If a virtual environment is not active, then :attr:`sys."
"prefix` is the same as :attr:`sys.base_prefix` and :attr:`sys.exec_prefix` "
"is the same as :attr:`sys.base_exec_prefix` (they all point to a non-virtual "
"environment Python installation)."
msgstr ""

#: ../Doc/library/venv.rst:71
msgid ""
"When a virtual environment is active, any options that change the "
"installation path will be ignored from all distutils configuration files to "
"prevent projects being inadvertently installed outside of the virtual "
"environment."
msgstr ""

#: ../Doc/library/venv.rst:76
msgid ""
"When working in a command shell, users can make a virtual environment active "
"by running an ``activate`` script in the virtual environment's executables "
"directory (the precise filename is shell-dependent), which prepends the "
"virtual environment's directory for executables to the ``PATH`` environment "
"variable for the running shell. There should be no need in other "
"circumstances to activate a virtual environment—scripts installed into "
"virtual environments have a \"shebang\" line which points to the virtual "
"environment's Python interpreter. This means that the script will run with "
"that interpreter regardless of the value of ``PATH``. On Windows, \"shebang"
"\" line processing is supported if you have the Python Launcher for Windows "
"installed (this was added to Python in 3.3 - see :pep:`397` for more "
"details). Thus, double-clicking an installed script in a Windows Explorer "
"window should run the script with the correct interpreter without there "
"needing to be any reference to its virtual environment in ``PATH``."
msgstr ""

#: ../Doc/library/venv.rst:95
msgid "API"
msgstr ""

#: ../Doc/library/venv.rst:99
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the :class:"
"`EnvBuilder` class."
msgstr ""

#: ../Doc/library/venv.rst:107
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ""

#: ../Doc/library/venv.rst:110
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""

#: ../Doc/library/venv.rst:113
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any "
"existing target directory, before creating the environment."
msgstr ""

#: ../Doc/library/venv.rst:116
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the "
"Python binary (and any necessary DLLs or other binaries, e.g. ``pythonw."
"exe``), rather than copying."
msgstr ""

#: ../Doc/library/venv.rst:120
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""

#: ../Doc/library/venv.rst:124
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""

#: ../Doc/library/venv.rst:128
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be "
"used)."
msgstr ""

#: ../Doc/library/venv.rst:132 ../Doc/library/venv.rst:240
msgid "Added the ``with_pip`` parameter"
msgstr ""

#: ../Doc/library/venv.rst:135
msgid "Added the ``prompt`` parameter"
msgstr ""

#: ../Doc/library/venv.rst:139
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided ``EnvBuilder`` class as a base class."
msgstr ""

#: ../Doc/library/venv.rst:142
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr ""

#: ../Doc/library/venv.rst:146
msgid ""
"This method takes as required argument the path (absolute or relative to the "
"current directory) of the target directory which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""

#: ../Doc/library/venv.rst:152
msgid ""
"The ``create`` method of the ``EnvBuilder`` class illustrates the hooks "
"available for subclass customization::"
msgstr ""

#: ../Doc/library/venv.rst:167
msgid ""
"Each of the methods :meth:`ensure_directories`, :meth:"
"`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` and :"
"meth:`post_setup` can be overridden."
msgstr ""

#: ../Doc/library/venv.rst:173
msgid ""
"Creates the environment directory and all necessary directories, and returns "
"a context object.  This is just a holder for attributes (such as paths), for "
"use by the other methods. The directories are allowed to exist already, as "
"long as either ``clear`` or ``upgrade`` were specified to allow operating on "
"an existing environment directory."
msgstr ""

#: ../Doc/library/venv.rst:181
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr ""

#: ../Doc/library/venv.rst:185
msgid ""
"Creates a copy of the Python executable (and, under Windows, DLLs) in the "
"environment. On a POSIX system, if a specific executable ``python3.x`` was "
"used, symlinks to ``python`` and ``python3`` will be created pointing to "
"that executable, unless files with those names already exist."
msgstr ""

#: ../Doc/library/venv.rst:193
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr ""

#: ../Doc/library/venv.rst:198
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr ""

#: ../Doc/library/venv.rst:202
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""

#: ../Doc/library/venv.rst:208
msgid ""
"*path* is the path to a directory that should contain subdirectories \"common"
"\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""

#: ../Doc/library/venv.rst:214
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr ""

#: ../Doc/library/venv.rst:217
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr ""

#: ../Doc/library/venv.rst:220
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr ""

#: ../Doc/library/venv.rst:223
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either "
"``bin`` or ``Scripts``)."
msgstr ""

#: ../Doc/library/venv.rst:226
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr ""

#: ../Doc/library/venv.rst:229
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr ""

#: ../Doc/library/venv.rst:232
msgid "There is also a module-level convenience function:"
msgstr ""

#: ../Doc/library/venv.rst:237
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""

#: ../Doc/library/venv.rst:244
msgid "An example of extending ``EnvBuilder``"
msgstr ""

#: ../Doc/library/venv.rst:246
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing "
"a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""

#: ../Doc/library/venv.rst:465
msgid ""
"This script is also available for download `online <https://gist.github.com/"
"vsajip/4673395>`_."
msgstr ""
