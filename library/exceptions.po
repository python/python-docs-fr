# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: 2022-11-21 21:57+0100\n"
"Last-Translator: Yannick Gingras <ygingras@ygingras.net>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.1\n"

#: library/exceptions.rst:4
msgid "Built-in Exceptions"
msgstr "Exceptions natives"

#: library/exceptions.rst:10
msgid ""
"In Python, all exceptions must be instances of a class that derives from :"
"class:`BaseException`.  In a :keyword:`try` statement with an :keyword:"
"`except` clause that mentions a particular class, that clause also handles "
"any exception classes derived from that class (but not exception classes "
"from which *it* is derived).  Two exception classes that are not related via "
"subclassing are never equivalent, even if they have the same name."
msgstr ""
"En python, une exception est une instance d'une classe héritée de :class:"
"`BaseException`. Dans un bloc :keyword:`try`, la clause  :keyword:`except` "
"traite non seulement la classe d'exception qu'elle mentionne, mais aussi "
"toutes les classes dérivées de cette classe (contrairement à ses classes "
"mères).  Deux classes qui ne sont pas liées par héritage ne sont jamais "
"équivalentes, même si elles ont le même nom."

#: library/exceptions.rst:19
#, fuzzy
msgid ""
"The built-in exceptions listed in this chapter can be generated by the "
"interpreter or built-in functions.  Except where mentioned, they have an "
"\"associated value\" indicating the detailed cause of the error.  This may "
"be a string or a tuple of several items of information (e.g., an error code "
"and a string explaining the code).  The associated value is usually passed "
"as arguments to the exception class's constructor."
msgstr ""
"Les exceptions natives présentes ci-dessous peuvent être levées par "
"l'interpréteur ou par les fonctions natives. Sauf mention contraire, une "
"\"valeur associée\" indique la cause de l'erreur. Cela peut être une chaîne "
"ou un *n*-uplet contenant plusieurs éléments d'information (e.g., un code "
"d'erreur ou un message explicatif). Cette valeur associée est généralement "
"donnée en argument du constructeur de la classe."

#: library/exceptions.rst:26
msgid ""
"User code can raise built-in exceptions.  This can be used to test an "
"exception handler or to report an error condition \"just like\" the "
"situation in which the interpreter raises the same exception; but beware "
"that there is nothing to prevent user code from raising an inappropriate "
"error."
msgstr ""
"Du code utilisateur peut lever des exceptions natives. Cela peut être "
"utilisé pour tester un gestionnaire d'exception ou pour rapporter une "
"condition d'erreur \"comme si\" c'était l'interpréteur qui levait cette "
"exception ; mais attention car rien n'empêche du code utilisateur de lever "
"une erreur inappropriée."

#: library/exceptions.rst:31
msgid ""
"The built-in exception classes can be subclassed to define new exceptions; "
"programmers are encouraged to derive new exceptions from the :exc:"
"`Exception` class or one of its subclasses, and not from :exc:"
"`BaseException`.  More information on defining exceptions is available in "
"the Python Tutorial under :ref:`tut-userexceptions`."
msgstr ""
"Les classes d'exception natives peuvent être héritées pour définir de "
"nouvelles exceptions ; les programmeurs sont encouragés à faire dériver les "
"nouvelles exceptions de la classe :exc:`Exception` ou d'une de ses sous-"
"classes, et non de :exc:`BaseException`. Plus d'informations sur la "
"définition des exceptions sont disponibles dans le Tutoriel Python au "
"chapitre :ref:`tut-userexceptions`."

#: library/exceptions.rst:39
msgid "Exception context"
msgstr "Contexte des exceptions"

#: library/exceptions.rst:46
msgid ""
"Three attributes on exception objects provide information about the context "
"in which the exception was raised:"
msgstr ""

#: library/exceptions.rst:53
#, fuzzy
msgid ""
"When raising a new exception while another exception is already being "
"handled, the new exception's :attr:`!__context__` attribute is automatically "
"set to the handled exception.  An exception may be handled when an :keyword:"
"`except` or :keyword:`finally` clause, or a :keyword:`with` statement, is "
"used."
msgstr ""
"Quand une exception est levée pendant qu'une autre exception est déjà en "
"traitement, l'attribut :attr:`__context__` de la nouvelle exception est "
"automatiquement affecté à l'exception qui est en cours de traitement. Une "
"exception peut être traitée quand une clause :keyword:`except` ou :keyword:"
"`finally`, ou une instruction :keyword:`with` est utilisée."

#: library/exceptions.rst:59
msgid ""
"This implicit exception context can be supplemented with an explicit cause "
"by using :keyword:`!from` with :keyword:`raise`::"
msgstr ""
"Ce contexte implicite d'exception peut être complété par une cause explicite "
"en utilisant :keyword:`!from` avec :keyword:`raise` ::"

#: library/exceptions.rst:63
msgid "raise new_exc from original_exc"
msgstr ""

#: library/exceptions.rst:65
#, fuzzy
msgid ""
"The expression following :keyword:`from<raise>` must be an exception or "
"``None``. It will be set as :attr:`!__cause__` on the raised exception. "
"Setting :attr:`!__cause__` also implicitly sets the :attr:`!"
"__suppress_context__` attribute to ``True``, so that using ``raise new_exc "
"from None`` effectively replaces the old exception with the new one for "
"display purposes (e.g. converting :exc:`KeyError` to :exc:`AttributeError`), "
"while leaving the old exception available in :attr:`!__context__` for "
"introspection when debugging."
msgstr ""
"L'expression suivant :keyword:`from<raise>` doit être une exception ou "
"``None``. Elle sera assignée en tant que :attr:`__cause__` dans l'exception "
"levée. Changer :attr:`__cause__` change aussi implicitement l'attribut :attr:"
"`__suppress_context__` à ``True``, de sorte que l'utilisation de ``raise "
"new_exc from None`` remplace bien l'ancienne exception avec la nouvelle à "
"des fins d'affichage (par exemple, convertir :exc:`KeyError` en :exc:"
"`AttributeError`), tout en laissant l'ancienne exception disponible dans :"
"attr:`__context__` pour introspection lors du débogage."

#: library/exceptions.rst:74
#, fuzzy
msgid ""
"The default traceback display code shows these chained exceptions in "
"addition to the traceback for the exception itself. An explicitly chained "
"exception in :attr:`!__cause__` is always shown when present. An implicitly "
"chained exception in :attr:`!__context__` is shown only if :attr:`!"
"__cause__` is :const:`None` and :attr:`!__suppress_context__` is false."
msgstr ""
"Le code d'affichage par défaut de la trace d'appels montre ces exceptions "
"chaînées en plus de la trace de l'exception elle-même. Si elle est présente, "
"une exception chaînée explicitement dans :attr:`__cause__` est toujours "
"affichée. Une exception implicitement chaînée dans :attr:`__context__` n'est "
"affichée que si :attr:`__cause__` est :const:`None` et :attr:"
"`__suppress_context__` est faux."

#: library/exceptions.rst:80
msgid ""
"In either case, the exception itself is always shown after any chained "
"exceptions so that the final line of the traceback always shows the last "
"exception that was raised."
msgstr ""
"Dans les deux cas, l'exception elle-même est toujours affichée après toutes "
"les exceptions enchaînées, de sorte que la dernière ligne de la trace "
"d'appels montre toujours la dernière exception qui a été levée."

#: library/exceptions.rst:86
msgid "Inheriting from built-in exceptions"
msgstr "Hériter des exceptions natives"

#: library/exceptions.rst:88
msgid ""
"User code can create subclasses that inherit from an exception type. It's "
"recommended to only subclass one exception type at a time to avoid any "
"possible conflicts between how the bases handle the ``args`` attribute, as "
"well as due to possible memory layout incompatibilities."
msgstr ""
"Le code de l'utilisateur peut créer des sous-classes qui dérivent d'un type "
"d'exception. Il est recommandé de ne dériver que d'un seul type d'exception "
"à la fois pour éviter des conflits possibles dans la façon dont les classes "
"mères traitent l'argument ``args`` ainsi que des incompatibilités "
"potentielles avec l'utilisation de la mémoire."

#: library/exceptions.rst:95
msgid ""
"Most built-in exceptions are implemented in C for efficiency, see: :source:"
"`Objects/exceptions.c`.  Some have custom memory layouts which makes it "
"impossible to create a subclass that inherits from multiple exception types. "
"The memory layout of a type is an implementation detail and might change "
"between Python versions, leading to new conflicts in the future.  Therefore, "
"it's recommended to avoid subclassing multiple exception types altogether."
msgstr ""
"La majorité des exceptions natives sont implémentées en C pour des raisons "
"d'efficacité, voir :source:`Objects/exceptions.c`. L'architecture interne de "
"certaines est telle que cela rend impossible la création de sous-classes qui "
"dérivent de plusieurs types d'exceptions. L'agencement de la mémoire est un "
"détail d'implémentation qui est sujet à changement d'une version de Python à "
"l'autre, ce qui peut poser conflit dans le futur. Il est donc déconseillé de "
"dériver de plusieurs types d'exceptions."

#: library/exceptions.rst:105
msgid "Base classes"
msgstr "Classes mères"

#: library/exceptions.rst:107
msgid ""
"The following exceptions are used mostly as base classes for other "
"exceptions."
msgstr ""
"Les exceptions suivantes sont utilisées principalement en tant que classes "
"mères pour d'autres exceptions."

#: library/exceptions.rst:111
msgid ""
"The base class for all built-in exceptions.  It is not meant to be directly "
"inherited by user-defined classes (for that, use :exc:`Exception`).  If :"
"func:`str` is called on an instance of this class, the representation of the "
"argument(s) to the instance are returned, or the empty string when there "
"were no arguments."
msgstr ""
"La classe mère pour toutes les exceptions natives. Elle n'est pas vouée à "
"être héritée directement par des classes utilisateur (pour cela, utilisez :"
"exc:`Exception`). Si :func:`str` est appelée sur une instance de cette "
"classe, la représentation du ou des argument(s) de l'instance est retournée, "
"ou la chaîne vide s'il n'y avait pas d'arguments."

#: library/exceptions.rst:119
msgid ""
"The tuple of arguments given to the exception constructor.  Some built-in "
"exceptions (like :exc:`OSError`) expect a certain number of arguments and "
"assign a special meaning to the elements of this tuple, while others are "
"usually called only with a single string giving an error message."
msgstr ""
"Le *n*-uplet d'arguments donné au constructeur d'exception. Certaines "
"exceptions natives (comme :exc:`OSError`) attendent un certain nombre "
"d'arguments et attribuent une signification spéciale aux éléments de ce *n*-"
"uplet, alors que d'autres ne sont généralement appelées qu'avec une seule "
"chaîne de caractères rendant un message d'erreur."

#: library/exceptions.rst:126
msgid ""
"This method sets *tb* as the new traceback for the exception and returns the "
"exception object.  It was more commonly used before the exception chaining "
"features of :pep:`3134` became available.  The following example shows how "
"we can convert an instance of ``SomeException`` into an instance of "
"``OtherException`` while preserving the traceback.  Once raised, the current "
"frame is pushed onto the traceback of the ``OtherException``, as would have "
"happened to the traceback of the original ``SomeException`` had we allowed "
"it to propagate to the caller. ::"
msgstr ""
"Cette méthode affecte *tb* comme la nouvelle trace d'appels de l'exception "
"et renvoie l'objet exception. Elle était utilisée de façon plus courante "
"avant que la fonctionnalité de chaînage des exceptions de la :pep:`3134` "
"devienne disponible. L'exemple suivant démontre comment convertir une "
"instance de ``SomeException`` en une instance de ``OtherException`` tout en "
"préservant la pile d'appels. Une fois l'exception levée, le cadre courant "
"est empilé sur la trace d'appels de ``OtherException``, comme cela se serait "
"produit pour la trace d'appels de ``SomeException`` si on l'avait laissée se "
"propager jusqu'à l'appelant ::"

#: library/exceptions.rst:135
msgid ""
"try:\n"
"    ...\n"
"except SomeException:\n"
"    tb = sys.exception().__traceback__\n"
"    raise OtherException(...).with_traceback(tb)"
msgstr ""

#: library/exceptions.rst:143
msgid ""
"A writable field that holds the :ref:`traceback object <traceback-objects>` "
"associated with this exception. See also: :ref:`raise`."
msgstr ""

#: library/exceptions.rst:149
msgid ""
"Add the string ``note`` to the exception's notes which appear in the "
"standard traceback after the exception string. A :exc:`TypeError` is raised "
"if ``note`` is not a string."
msgstr ""

#: library/exceptions.rst:157
msgid ""
"A list of the notes of this exception, which were added with :meth:"
"`add_note`. This attribute is created when :meth:`add_note` is called."
msgstr ""

#: library/exceptions.rst:165
msgid ""
"All built-in, non-system-exiting exceptions are derived from this class.  "
"All user-defined exceptions should also be derived from this class."
msgstr ""
"Toutes les exceptions natives, qui n'entraînent pas une sortie du système "
"dérivent de cette classe. Toutes les exceptions définies par l'utilisateur "
"devraient également être dérivées de cette classe."

#: library/exceptions.rst:171
msgid ""
"The base class for those built-in exceptions that are raised for various "
"arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."
msgstr ""
"La classe mère pour les exceptions natives qui sont levées pour diverses "
"erreurs arithmétiques : :exc:`OverflowError`, :exc:`ZeroDivisionError`, :exc:"
"`FloatingPointError`."

#: library/exceptions.rst:178
msgid ""
"Raised when a :ref:`buffer <bufferobjects>` related operation cannot be "
"performed."
msgstr ""
"Levée lorsqu'une opération liée à un :ref:`tampon <bufferobjects>` ne peut "
"pas être exécutée."

#: library/exceptions.rst:184
msgid ""
"The base class for the exceptions that are raised when a key or index used "
"on a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  "
"This can be raised directly by :func:`codecs.lookup`."
msgstr ""
"La classe mère pour les exceptions qui sont levées lorsqu'une clé ou un "
"index utilisé sur un tableau de correspondances ou une séquence est "
"invalide : :exc:`IndexError`, :exc:`KeyError`. Peut être levée directement "
"par :func:`codecs.lookup`."

#: library/exceptions.rst:190
msgid "Concrete exceptions"
msgstr "Exceptions concrètes"

#: library/exceptions.rst:192
msgid "The following exceptions are the exceptions that are usually raised."
msgstr "Les exceptions suivantes sont celles qui sont habituellement levées."

#: library/exceptions.rst:198
msgid "Raised when an :keyword:`assert` statement fails."
msgstr "Levée lorsqu'une instruction :keyword:`assert` échoue."

#: library/exceptions.rst:203
msgid ""
"Raised when an attribute reference (see :ref:`attribute-references`) or "
"assignment fails.  (When an object does not support attribute references or "
"attribute assignments at all, :exc:`TypeError` is raised.)"
msgstr ""
"Levée lorsqu'une référence ou une assignation d'attribut (voir :ref:"
"`attribute-references`) échoue. (Lorsqu'un objet ne supporte pas du tout la "
"référence ou l'assignation d'attribut, :exc:`TypeError`  est levé.)"

#: library/exceptions.rst:207
msgid ""
"The :attr:`name` and :attr:`obj` attributes can be set using keyword-only "
"arguments to the constructor. When set they represent the name of the "
"attribute that was attempted to be accessed and the object that was accessed "
"for said attribute, respectively."
msgstr ""
"Les attributs :attr:`name` et :attr:`obj` peuvent être définis uniquement à "
"l'aide d'arguments nommés passés au constructeur. Lorsqu'ils sont définis, "
"ils représentent respectivement le nom de l'attribut pour lequel il y a eu "
"une tentative d'accès et l'objet qui a été accédé pour cet attribut."

#: library/exceptions.rst:212
msgid "Added the :attr:`name` and :attr:`obj` attributes."
msgstr "Ajout des attributs :attr:`name` et :attr:`obj`."

#: library/exceptions.rst:217
msgid ""
"Raised when the :func:`input` function hits an end-of-file condition (EOF) "
"without reading any data. (N.B.: the :meth:`io.IOBase.read` and :meth:`io."
"IOBase.readline` methods return an empty string when they hit EOF.)"
msgstr ""
"Levée lorsque la fonction :func:`input` atteint une condition de fin de "
"fichier (EOF) sans lire aucune donnée. (N.B. : les méthodes :meth:`io.IOBase."
"read` et :meth:`io.IOBase.readline` retournent une chaîne vide lorsqu'elles "
"atteignent EOF.)"

#: library/exceptions.rst:224
msgid "Not currently used."
msgstr "N’est pas utilisé pour le moment."

#: library/exceptions.rst:229
msgid ""
"Raised when a :term:`generator` or :term:`coroutine` is closed; see :meth:"
"`generator.close` and :meth:`coroutine.close`.  It directly inherits from :"
"exc:`BaseException` instead of :exc:`Exception` since it is technically not "
"an error."
msgstr ""
"Levée lorsqu'un :term:`generator` ou une :term:`coroutine` est fermé, voir :"
"meth:`generator.close` et :meth:`coroutine.close`. Elle hérite directement "
"de :exc:`BaseException` au lieu de :exc:`Exception` puisqu'il ne s'agit pas "
"techniquement d'une erreur."

#: library/exceptions.rst:237
msgid ""
"Raised when the :keyword:`import` statement has troubles trying to load a "
"module.  Also raised when the \"from list\" in ``from ... import`` has a "
"name that cannot be found."
msgstr ""
"Levée lorsque l'instruction :keyword:`import` a des problèmes pour essayer "
"de charger un module. Également levée lorsque Python ne trouve pas un nom "
"dans ``from ... import``."

#: library/exceptions.rst:241
msgid ""
"The optional *name* and *path* keyword-only arguments set the corresponding "
"attributes:"
msgstr ""

#: library/exceptions.rst:246
#, fuzzy
msgid "The name of the module that was attempted to be imported."
msgstr "Le nom de l'encodage qui a provoqué l'erreur."

#: library/exceptions.rst:250
msgid "The path to any file which triggered the exception."
msgstr ""

#: library/exceptions.rst:252
msgid "Added the :attr:`name` and :attr:`path` attributes."
msgstr "Ajout des attributs :attr:`name` et :attr:`path`."

#: library/exceptions.rst:257
msgid ""
"A subclass of :exc:`ImportError` which is raised by :keyword:`import` when a "
"module could not be located.  It is also raised when ``None`` is found in :"
"data:`sys.modules`."
msgstr ""
"Une sous-classe de :exc:`ImportError` qui est levée par :keyword:`import` "
"lorsqu'un module n'a pas pu être localisé. Elle est généralement levée quand "
"``None`` est trouvé dans :data:`sys.modules`."

#: library/exceptions.rst:266
msgid ""
"Raised when a sequence subscript is out of range.  (Slice indices are "
"silently truncated to fall in the allowed range; if an index is not an "
"integer, :exc:`TypeError` is raised.)"
msgstr ""
"Levée lorsqu'un indice de séquence est hors de la plage. (Les indices de "
"tranches (*slices*) sont tronqués silencieusement pour tomber dans la plage "
"autorisée ; si un indice n'est pas un entier, :exc:`TypeError` est levée.)"

#: library/exceptions.rst:275
msgid ""
"Raised when a mapping (dictionary) key is not found in the set of existing "
"keys."
msgstr ""
"Levée lorsqu'une clef (de dictionnaire) n'est pas trouvée dans l'ensemble "
"des clefs existantes."

#: library/exceptions.rst:282
msgid ""
"Raised when the user hits the interrupt key (normally :kbd:`Control-C` or :"
"kbd:`Delete`).  During execution, a check for interrupts is made regularly. "
"The exception inherits from :exc:`BaseException` so as to not be "
"accidentally caught by code that catches :exc:`Exception` and thus prevent "
"the interpreter from exiting."
msgstr ""
"Levée lorsque l'utilisateur appuie sur la touche d'interruption "
"(normalement :kbd:`Control-C` or :kbd:`Delete`). Pendant l'exécution, un "
"contrôle des interruptions est effectué régulièrement. L'exception hérite "
"de :exc:`BaseException` afin de ne pas être accidentellement interceptée par "
"du code qui intercepte :exc:`Exception` et ainsi empêcher l'interpréteur de "
"quitter."

#: library/exceptions.rst:290
msgid ""
"Catching a :exc:`KeyboardInterrupt` requires special consideration. Because "
"it can be raised at unpredictable points, it may, in some circumstances, "
"leave the running program in an inconsistent state. It is generally best to "
"allow :exc:`KeyboardInterrupt` to end the program as quickly as possible or "
"avoid raising it entirely. (See :ref:`handlers-and-exceptions`.)"
msgstr ""
"Attraper une :exc:`KeyboardInterrupt` demande une considération "
"particulière. Comme elle peut être levée à des moments imprévisibles, elle "
"peut dans certains cas laisser le programme en cours d'exécution dans un "
"état incohérent. Il est généralement préférable de laisser :exc:"
"`KeyboardInterrupt` arrêter le programme aussi rapidement que possible ou "
"d'éviter catégoriquement de la lever (voir :ref:`handlers-and-exceptions`)."

#: library/exceptions.rst:300
msgid ""
"Raised when an operation runs out of memory but the situation may still be "
"rescued (by deleting some objects).  The associated value is a string "
"indicating what kind of (internal) operation ran out of memory. Note that "
"because of the underlying memory management architecture (C's :c:func:"
"`malloc` function), the interpreter may not always be able to completely "
"recover from this situation; it nevertheless raises an exception so that a "
"stack traceback can be printed, in case a run-away program was the cause."
msgstr ""
"Levée lorsqu'une opération est à court de mémoire mais que la situation peut "
"encore être rattrapée (en supprimant certains objets). La valeur associée "
"est une chaîne de caractères indiquant quel type d'opération (interne) est à "
"court de mémoire. À noter qu'en raison de l'architecture interne de gestion "
"de la mémoire (la fonction :c:func:`malloc` du C), l'interpréteur peut ne "
"pas toujours être capable de rattraper cette situation ; il lève néanmoins "
"une exception pour qu'une pile d'appels puisse être affichée, dans le cas où "
"un programme en cours d'exécution en était la cause."

#: library/exceptions.rst:311
msgid ""
"Raised when a local or global name is not found.  This applies only to "
"unqualified names.  The associated value is an error message that includes "
"the name that could not be found."
msgstr ""
"Levée lorsqu'un nom local ou global n'est pas trouvé. Ceci ne s'applique "
"qu'aux noms non qualifiés. La valeur associée est un message d'erreur qui "
"inclut le nom qui n'a pas pu être trouvé."

#: library/exceptions.rst:315
msgid ""
"The :attr:`name` attribute can be set using a keyword-only argument to the "
"constructor. When set it represent the name of the variable that was "
"attempted to be accessed."
msgstr ""
"L'attribut :attr:`name` doit être défini uniquement à l'aide d'un argument "
"nommé passé au constructeur. Lorsqu'il est défini, il représente le nom de "
"la variable pour laquelle il y a eu une tentative d'accès."

#: library/exceptions.rst:319
msgid "Added the :attr:`name` attribute."
msgstr "Ajout de l'attribut :attr:`name`."

#: library/exceptions.rst:325
msgid ""
"This exception is derived from :exc:`RuntimeError`.  In user defined base "
"classes, abstract methods should raise this exception when they require "
"derived classes to override the method, or while the class is being "
"developed to indicate that the real implementation still needs to be added."
msgstr ""
"Cette exception est dérivée de :exc:`RuntimeError`. Dans les classes mères "
"définies par l'utilisateur, les méthodes abstraites devraient lever cette "
"exception lorsqu'elles nécessitent des classes dérivées pour remplacer la "
"méthode, ou lorsque la classe est en cours de développement pour indiquer "
"que l'implémentation concrète doit encore être ajoutée."

#: library/exceptions.rst:332
msgid ""
"It should not be used to indicate that an operator or method is not meant to "
"be supported at all -- in that case either leave the operator / method "
"undefined or, if a subclass, set it to :data:`None`."
msgstr ""
"Elle ne devrait pas être utilisée pour indiquer qu'un opérateur ou qu'une "
"méthode n'est pas destiné à être pris en charge du tout – dans ce cas, "
"évitez de définir l'opérateur ou la méthode, ou s'il s'agit d'une sous-"
"classe, assignez-le à :data:`None`."

#: library/exceptions.rst:338
#, fuzzy
msgid ""
"``NotImplementedError`` and :data:`NotImplemented` are not interchangeable, "
"even though they have similar names and purposes.  See :data:`!"
"NotImplemented` for details on when to use it."
msgstr ""
"``NotImplementedError`` et ``NotImplemented`` ne sont pas interchangeables, "
"même s'ils ont des noms et des objectifs similaires. Voir :data:"
"`NotImplemented` pour des détails sur la façon de les utiliser."

#: library/exceptions.rst:347
msgid ""
"This exception is raised when a system function returns a system-related "
"error, including I/O failures such as \"file not found\" or \"disk full\" "
"(not for illegal argument types or other incidental errors)."
msgstr ""
"Cette exception est levée lorsqu'une fonction système retourne une erreur "
"liée au système, incluant les erreurs entrées-sorties telles que \"fichier "
"non trouvé\" ou \"disque plein\" (pas pour les types d'arguments illégaux ou "
"d'autres erreurs accidentelles)."

#: library/exceptions.rst:351
msgid ""
"The second form of the constructor sets the corresponding attributes, "
"described below.  The attributes default to :const:`None` if not specified.  "
"For backwards compatibility, if three arguments are passed, the :attr:"
"`~BaseException.args` attribute contains only a 2-tuple of the first two "
"constructor arguments."
msgstr ""
"La deuxième forme du constructeur définit les attributs correspondants, "
"décrits ci-dessous. Les attributs par défaut sont :const:`None` si non "
"spécifiés. Pour la rétrocompatibilité, si trois arguments sont passés, "
"l'attribut :attr:`~BaseException.args` contient seulement une paire avec les "
"valeurs des deux premiers arguments du constructeur."

#: library/exceptions.rst:357
msgid ""
"The constructor often actually returns a subclass of :exc:`OSError`, as "
"described in `OS exceptions`_ below.  The particular subclass depends on the "
"final :attr:`.errno` value.  This behaviour only occurs when constructing :"
"exc:`OSError` directly or via an alias, and is not inherited when "
"subclassing."
msgstr ""
"Le constructeur retourne souvent une sous-classe d':exc:`OSError`, comme "
"décrit dans `OS exceptions`_ ci-dessous. La sous-classe particulière dépend "
"de la valeur finale d':attr:`.errno`. Ce comportement ne se produit que lors "
"de la construction d':exc:`OSError` directement ou via un alias, et n'est "
"pas hérité lors du sous-classement."

#: library/exceptions.rst:365
msgid "A numeric error code from the C variable :c:data:`errno`."
msgstr "Code d'erreur numérique de la variable C :c:data:`errno`."

#: library/exceptions.rst:369
msgid ""
"Under Windows, this gives you the native Windows error code.  The :attr:`."
"errno` attribute is then an approximate translation, in POSIX terms, of that "
"native error code."
msgstr ""
"Sous Windows, cela donne le code d'erreur Windows natif. L'attribut :attr:`."
"errno` est alors une traduction approximative, en termes POSIX, de ce code "
"d'erreur natif."

#: library/exceptions.rst:373
msgid ""
"Under Windows, if the *winerror* constructor argument is an integer, the :"
"attr:`.errno` attribute is determined from the Windows error code, and the "
"*errno* argument is ignored.  On other platforms, the *winerror* argument is "
"ignored, and the :attr:`winerror` attribute does not exist."
msgstr ""
"Sous Windows, si l'argument du constructeur *winerror* est un entier, "
"l'attribut :attr:`.errno` est déterminé à partir du code d'erreur Windows, "
"et l'argument *errno* est ignoré. Sur d'autres plateformes, l'argument "
"*winerror* est ignoré, et l'attribut :attr:`winerror` n'existe pas."

#: library/exceptions.rst:381
msgid ""
"The corresponding error message, as provided by the operating system.  It is "
"formatted by the C functions :c:func:`perror` under POSIX, and :c:func:"
"`FormatMessage` under Windows."
msgstr ""
"Le message d'erreur correspondant, tel que fourni par le système "
"d'exploitation. Il est formaté par les fonctions C :c:func:`perror` sous "
"POSIX, et :c:func:`FormatMessage` sous Windows."

#: library/exceptions.rst:389
msgid ""
"For exceptions that involve a file system path (such as :func:`open` or :"
"func:`os.unlink`), :attr:`filename` is the file name passed to the function. "
"For functions that involve two file system paths (such as :func:`os."
"rename`), :attr:`filename2` corresponds to the second file name passed to "
"the function."
msgstr ""
"Pour les exceptions qui font référence à un chemin d'accès au système de "
"fichiers (comme :func:`open` ou :func:`os.unlink`), :attr:`filename` est le "
"nom du fichier transmis à la fonction. Pour les fonctions qui font référence "
"à deux chemins d'accès au système de fichiers (comme :func:`os.rename`), :"
"attr:`filename2` correspond au deuxième nom de fichier passé à la fonction."

#: library/exceptions.rst:396
msgid ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` and :exc:`mmap.error` have been merged into :exc:"
"`OSError`, and the constructor may return a subclass."
msgstr ""
":exc:`EnvironmentError`, :exc:`IOError`, :exc:`WindowsError`, :exc:`socket."
"error`, :exc:`select.error` et :exc:`mmap.error` ont fusionnées en :exc:"
"`OSError`, et le constructeur peut renvoyer une sous-classe."

#: library/exceptions.rst:402
msgid ""
"The :attr:`filename` attribute is now the original file name passed to the "
"function, instead of the name encoded to or decoded from the :term:"
"`filesystem encoding and error handler`. Also, the *filename2* constructor "
"argument and attribute was added."
msgstr ""
"L'attribut :attr:`filename` est maintenant le nom du fichier originel passé "
"à la fonction, au lieu du nom encodé ou décodé à partir du :term:"
"`gestionnaire d'encodage et d'erreur du système de fichiers <filesystem "
"encoding and error handler>`. De plus, l'argument du constructeur et "
"attribut *filename2* a été ajouté."

#: library/exceptions.rst:411
#, fuzzy
msgid ""
"Raised when the result of an arithmetic operation is too large to be "
"represented.  This cannot occur for integers (which would rather raise :exc:"
"`MemoryError` than give up).  However, for historical reasons, OverflowError "
"is sometimes raised for integers that are outside a required range.   "
"Because of the lack of standardization of floating-point exception handling "
"in C, most floating-point operations are not checked."
msgstr ""
"Levée lorsque le résultat d'une opération arithmétique est trop grand pour "
"être représenté. Cela ne peut pas se produire pour les entiers (qui "
"préfèrent lever :exc:`MemoryError` plutôt que d'abandonner). Cependant, pour "
"des raisons historiques, ``OverflowError`` est parfois levée pour des "
"entiers qui sont en dehors d'une plage requise. En raison de l'absence de "
"normalisation de la gestion des exceptions de virgule flottante en C, la "
"plupart des opérations en virgule flottante ne sont pas vérifiées."

#: library/exceptions.rst:421
#, fuzzy
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when an "
"operation is blocked during interpreter shutdown also known as :term:`Python "
"finalization <interpreter shutdown>`."
msgstr ""
"Cette exception est dérivée de :exc:`RuntimeError`. Elle est levée lorsque "
"l'interpréteur détecte que la profondeur de récursivité maximale (voir :func:"
"`sys.getrecursionlimit`) est dépassée."

#: library/exceptions.rst:425
msgid ""
"Examples of operations which can be blocked with a :exc:"
"`PythonFinalizationError` during the Python finalization:"
msgstr ""

#: library/exceptions.rst:428
msgid "Creating a new Python thread."
msgstr ""

#: library/exceptions.rst:429
msgid ":func:`os.fork`."
msgstr ""

#: library/exceptions.rst:431
msgid "See also the :func:`sys.is_finalizing` function."
msgstr ""

#: library/exceptions.rst:443
msgid "Previously, a plain :exc:`RuntimeError` was raised."
msgstr "Auparavant, une simple :exc:`RuntimeError` était levée."

#: library/exceptions.rst:439
msgid ""
"This exception is derived from :exc:`RuntimeError`.  It is raised when the "
"interpreter detects that the maximum recursion depth (see :func:`sys."
"getrecursionlimit`) is exceeded."
msgstr ""
"Cette exception est dérivée de :exc:`RuntimeError`. Elle est levée lorsque "
"l'interpréteur détecte que la profondeur de récursivité maximale (voir :func:"
"`sys.getrecursionlimit`) est dépassée."

#: library/exceptions.rst:449
msgid ""
"This exception is raised when a weak reference proxy, created by the :func:"
"`weakref.proxy` function, is used to access an attribute of the referent "
"after it has been garbage collected. For more information on weak "
"references, see the :mod:`weakref` module."
msgstr ""
"Cette exception est levée lorsqu'un pointeur faible d'un objet proxy, créé "
"par la fonction :func:`weakref.proxy`, est utilisé pour accéder à un "
"attribut du référent après qu'il ait été récupéré par le ramasse-miettes. "
"Pour plus d'informations sur les pointeurs faibles, voir le module :mod:"
"`weakref`."

#: library/exceptions.rst:457
msgid ""
"Raised when an error is detected that doesn't fall in any of the other "
"categories.  The associated value is a string indicating what precisely went "
"wrong."
msgstr ""
"Levée lorsqu'une erreur qui n'appartient à aucune des autres catégories est "
"détectée. La valeur associée est une chaîne de caractères indiquant "
"précisément ce qui s'est mal passé."

#: library/exceptions.rst:464
msgid ""
"Raised by built-in function :func:`next` and an :term:`iterator`\\'s :meth:"
"`~iterator.__next__` method to signal that there are no further items "
"produced by the iterator."
msgstr ""
"Levée par la fonction native :func:`next` et la méthode :meth:`~iterator."
"__next__` d'un :term:`iterator` (itérateur) pour signaler qu'il n'y a pas "
"d'autres éléments produits par l'itérateur."

#: library/exceptions.rst:470
#, fuzzy
msgid ""
"The exception object has a single attribute :attr:`!value`, which is given "
"as an argument when constructing the exception, and defaults to :const:"
"`None`."
msgstr ""
"L'objet exception a un unique attribut :attr:`value`, qui est donné en "
"argument lors de la construction de l'exception, et vaut :const:`None` par "
"défaut."

#: library/exceptions.rst:474
msgid ""
"When a :term:`generator` or :term:`coroutine` function returns, a new :exc:"
"`StopIteration` instance is raised, and the value returned by the function "
"is used as the :attr:`value` parameter to the constructor of the exception."
msgstr ""
"Lorsqu'une fonction de type :term:`generator` ou :term:`coroutine` retourne "
"une valeur, une nouvelle instance de :exc:`StopIteration` est levée, et la "
"valeur retournée par la fonction est passée au paramètre :attr:`value` du "
"constructeur de l'exception."

#: library/exceptions.rst:479
msgid ""
"If a generator code directly or indirectly raises :exc:`StopIteration`, it "
"is converted into a :exc:`RuntimeError` (retaining the :exc:`StopIteration` "
"as the new exception's cause)."
msgstr ""
"Si le code d'un générateur lève, directement ou indirectement, une :exc:"
"`StopIteration`, elle est convertie en :exc:`RuntimeError` (en conservant :"
"exc:`StopIteration` comme cause de la nouvelle exception)."

#: library/exceptions.rst:483
msgid ""
"Added ``value`` attribute and the ability for generator functions to use it "
"to return a value."
msgstr ""
"Ajout de l'attribut ``value`` et de la possibilité pour les fonctions de "
"générateur de l'utiliser pour retourner une valeur."

#: library/exceptions.rst:487
msgid ""
"Introduced the RuntimeError transformation via ``from __future__ import "
"generator_stop``, see :pep:`479`."
msgstr ""
"Introduit la transformation des erreurs ``RuntimeError`` via ``from "
"__future__ import generator_stop``, cf. :pep:`479`."

#: library/exceptions.rst:491
msgid ""
"Enable :pep:`479` for all code by default: a :exc:`StopIteration` error "
"raised in a generator is transformed into a :exc:`RuntimeError`."
msgstr ""
"Active :pep:`479` pour tout le code par défaut : quand une erreur :exc:"
"`StopIteration` est levée dans un générateur elle est transformée en une :"
"exc:`RuntimeError`."

#: library/exceptions.rst:497
#, fuzzy
msgid ""
"Must be raised by :meth:`~object.__anext__` method of an :term:`asynchronous "
"iterator` object to stop the iteration."
msgstr ""
"Doit être levée par la méthode :meth:`__anext__` d'un objet :term:"
"`asynchronous iterator` pour arrêter l'itération."

#: library/exceptions.rst:504
msgid ""
"Raised when the parser encounters a syntax error.  This may occur in an :"
"keyword:`import` statement, in a call to the built-in functions :func:"
"`compile`, :func:`exec`, or :func:`eval`, or when reading the initial script "
"or standard input (also interactively)."
msgstr ""
"Levée lorsque l'analyseur syntaxique rencontre une erreur de syntaxe. Cela "
"peut se produire dans une instruction :keyword:`import`, dans un appel aux "
"fonctions natives :func:`compile`, :func:`exec` ou :func:`eval`, ou lors de "
"la lecture du script initial ou de l'entrée standard (également de manière "
"interactive)."

#: library/exceptions.rst:510
msgid ""
"The :func:`str` of the exception instance returns only the error message. "
"Details is a tuple whose members are also available as separate attributes."
msgstr ""
"La conversion en chaîne avec :func:`str` de l'instance de l'exception ne "
"renvoie que le message d'erreur. L'argument ``details`` est un *n*-uplet "
"dont les membres sont disponibles en tant qu'attributs séparés."

#: library/exceptions.rst:515
msgid "The name of the file the syntax error occurred in."
msgstr "Le nom du fichier dans lequel l'erreur de syntaxe a été rencontrée."

#: library/exceptions.rst:519
msgid ""
"Which line number in the file the error occurred in. This is 1-indexed: the "
"first line in the file has a ``lineno`` of 1."
msgstr ""
"Le numéro de la ligne dans le fichier où l'erreur s'est produite. L'indiçage "
"commence à 1 : ``lineno`` vaut 1 pour la première ligne du fichier."

#: library/exceptions.rst:524
msgid ""
"The column in the line where the error occurred. This is 1-indexed: the "
"first character in the line has an ``offset`` of 1."
msgstr ""
"La colonne dans la ligne où l'erreur s'est produite. L'indiçage commence à "
"1 : ``offset`` vaut 1 pour le premier caractère de la ligne."

#: library/exceptions.rst:529
msgid "The source code text involved in the error."
msgstr "Le texte du code source impliqué dans l'erreur."

#: library/exceptions.rst:533
msgid ""
"Which line number in the file the error occurred ends in. This is 1-indexed: "
"the first line in the file has a ``lineno`` of 1."
msgstr ""
"Le numéro de la dernière ligne produisant l'erreur. L'indiçage commence à "
"1 : ``lineno`` vaut 1 pour la première ligne du fichier."

#: library/exceptions.rst:538
msgid ""
"The column in the end line where the error occurred finishes. This is 1-"
"indexed: the first character in the line has an ``offset`` of 1."
msgstr ""
"Le numéro de la dernière colonne (de la dernière ligne) produisant l'erreur. "
"L'indiçage commence à 1 : ``offset`` vaut 1 pour le premier caractère de la "
"ligne."

#: library/exceptions.rst:541
msgid ""
"For errors in f-string fields, the message is prefixed by \"f-string: \" and "
"the offsets are offsets in a text constructed from the replacement "
"expression.  For example, compiling f'Bad {a b} field' results in this args "
"attribute: ('f-string: ...', ('', 1, 2, '(a b)\\n', 1, 5))."
msgstr ""
"Pour les erreurs dans les chaînes de formatage *f-strings*, le message "
"commence par « f-string: » et les champs *offset* sont les décalages dans un "
"texte construit à partir de l’expression de remplacement. Par exemple, "
"compiler ``f'Bad {a b} field'`` produit cet attribut *args* : ``('f-"
"string: ...', ('', 1, 2, '(a b)\\n', 1, 5)).``"

#: library/exceptions.rst:546
msgid "Added the :attr:`end_lineno` and :attr:`end_offset` attributes."
msgstr "Ajout des attributs :attr:`end_lineno` et :attr:`end_offset`."

#: library/exceptions.rst:551
msgid ""
"Base class for syntax errors related to incorrect indentation.  This is a "
"subclass of :exc:`SyntaxError`."
msgstr ""
"Classe mère pour les erreurs de syntaxe liées à une indentation incorrecte. "
"C'est une sous-classe de :exc:`SyntaxError`."

#: library/exceptions.rst:557
msgid ""
"Raised when indentation contains an inconsistent use of tabs and spaces. "
"This is a subclass of :exc:`IndentationError`."
msgstr ""
"Levée lorsqu'une indentation contient une utilisation incohérente des "
"tabulations et des espaces. C'est une sous-classe de :exc:`IndentationError`."

#: library/exceptions.rst:563
msgid ""
"Raised when the interpreter finds an internal error, but the situation does "
"not look so serious to cause it to abandon all hope. The associated value is "
"a string indicating what went wrong (in low-level terms)."
msgstr ""
"Levée lorsque l'interpréteur trouve une erreur interne, mais que la "
"situation ne semble pas si grave au point de lui faire abandonner tout "
"espoir. La valeur associée est une chaîne de caractères indiquant l'erreur "
"qui est survenue (en termes bas niveau)."

#: library/exceptions.rst:567
msgid ""
"You should report this to the author or maintainer of your Python "
"interpreter. Be sure to report the version of the Python interpreter (``sys."
"version``; it is also printed at the start of an interactive Python "
"session), the exact error message (the exception's associated value) and if "
"possible the source of the program that triggered the error."
msgstr ""
"Vous devriez le signaler à l'auteur ou au responsable de votre interpréteur "
"Python. Assurez-vous de signaler la version de l'interpréteur (``sys."
"version`` ; elle est également affichée au lancement d'une session "
"interactive), le message d'erreur exact (la valeur associée à l'exception) "
"et si possible le code source du programme qui a déclenché l'erreur."

#: library/exceptions.rst:576
msgid ""
"This exception is raised by the :func:`sys.exit` function.  It inherits "
"from :exc:`BaseException` instead of :exc:`Exception` so that it is not "
"accidentally caught by code that catches :exc:`Exception`.  This allows the "
"exception to properly propagate up and cause the interpreter to exit.  When "
"it is not handled, the Python interpreter exits; no stack traceback is "
"printed.  The constructor accepts the same optional argument passed to :func:"
"`sys.exit`. If the value is an integer, it specifies the system exit status "
"(passed to C's :c:func:`exit` function); if it is ``None``, the exit status "
"is zero; if it has another type (such as a string), the object's value is "
"printed and the exit status is one."
msgstr ""
"Cette exception est levée par la fonction :func:`sys.exit`. Elle hérite de :"
"exc:`BaseException` au lieu d':exc:`Exception` pour ne pas qu'elle soit "
"interceptée accidentellement par du code qui intercepte :exc:`Exception`. "
"Cela permet à l'exception de se propager correctement et de faire quitter "
"l'interpréteur. Lorsqu'elle n'est pas gérée, l'interpréteur Python quitte ; "
"aucune trace d'appels n'est affichée. Le constructeur accepte le même "
"argument optionnel passé à :func:`sys.exit`. Si la valeur est un entier, "
"elle spécifie l'état de sortie du système (passé à la fonction C :c:func:"
"`exit`) ; si elle est ``None``, l'état de sortie est zéro ; si elle a un "
"autre type (comme une chaîne de caractères), la valeur de l'objet est "
"affichée et l'état de sortie est un."

#: library/exceptions.rst:587
msgid ""
"A call to :func:`sys.exit` is translated into an exception so that clean-up "
"handlers (:keyword:`finally` clauses of :keyword:`try` statements) can be "
"executed, and so that a debugger can execute a script without running the "
"risk of losing control.  The :func:`os._exit` function can be used if it is "
"absolutely positively necessary to exit immediately (for example, in the "
"child process after a call to :func:`os.fork`)."
msgstr ""
"Un appel à :func:`sys.exit` est traduit en une exception pour que les "
"gestionnaires de nettoyage (les clauses :keyword:`finally` des instructions :"
"keyword:`try`) puissent être exécutés, et pour qu'un débogueur puisse "
"exécuter un script sans courir le risque de perdre le contrôle. La fonction :"
"func:`os._exit` peut être utilisée s'il est absolument nécessaire de sortir "
"immédiatement (par exemple, dans le processus enfant après un appel à :func:"
"`os.fork`)."

#: library/exceptions.rst:596
msgid ""
"The exit status or error message that is passed to the constructor. "
"(Defaults to ``None``.)"
msgstr ""
"L'état de sortie ou le message d'erreur passé au constructeur. (``None`` par "
"défaut.)"

#: library/exceptions.rst:602
msgid ""
"Raised when an operation or function is applied to an object of "
"inappropriate type.  The associated value is a string giving details about "
"the type mismatch."
msgstr ""
"Levée lorsqu'une opération ou fonction est appliquée à un objet d'un type "
"inapproprié. La valeur associée est une chaîne de caractères donnant des "
"détails sur le type d'inadéquation."

#: library/exceptions.rst:605
msgid ""
"This exception may be raised by user code to indicate that an attempted "
"operation on an object is not supported, and is not meant to be. If an "
"object is meant to support a given operation but has not yet provided an "
"implementation, :exc:`NotImplementedError` is the proper exception to raise."
msgstr ""
"Cette exception peut être levée par du code utilisateur pour indiquer qu'une "
"tentative d'opération sur un objet n'est pas prise en charge, et n'est pas "
"censée l'être. Si un objet est destiné à prendre en charge une opération "
"donnée mais n'a pas encore fourni une implémentation, lever :exc:"
"`NotImplementedError` est plus approprié."

#: library/exceptions.rst:610
msgid ""
"Passing arguments of the wrong type (e.g. passing a :class:`list` when an :"
"class:`int` is expected) should result in a :exc:`TypeError`, but passing "
"arguments with the wrong value (e.g. a number outside expected boundaries) "
"should result in a :exc:`ValueError`."
msgstr ""
"Le passage d'arguments du mauvais type (e.g. passer une :class:`list` quand "
"un :class:`int` est attendu) devrait résulter en un :exc:`TypeError`, mais "
"le passage d'arguments avec la mauvaise valeur (e.g. un nombre en dehors des "
"limites attendues) devrait résulter en une :exc:`ValueError`."

#: library/exceptions.rst:617
msgid ""
"Raised when a reference is made to a local variable in a function or method, "
"but no value has been bound to that variable.  This is a subclass of :exc:"
"`NameError`."
msgstr ""
"Levée lorsqu'une référence est faite à une variable locale dans une fonction "
"ou une méthode, mais qu'aucune valeur n'a été liée à cette variable. C'est "
"une sous-classe de :exc:`NameError`."

#: library/exceptions.rst:624
msgid ""
"Raised when a Unicode-related encoding or decoding error occurs.  It is a "
"subclass of :exc:`ValueError`."
msgstr ""
"Levée lorsqu'une erreur d'encodage ou de décodage liée à Unicode se produit. "
"C'est une sous-classe de :exc:`ValueError`."

#: library/exceptions.rst:627
msgid ""
":exc:`UnicodeError` has attributes that describe the encoding or decoding "
"error.  For example, ``err.object[err.start:err.end]`` gives the particular "
"invalid input that the codec failed on."
msgstr ""
":exc:`UnicodeError` a des attributs qui décrivent l'erreur d'encodage ou de "
"décodage. Par exemple, ``err.object[err.start:err.end]`` donne l'entrée "
"particulière invalide sur laquelle le codec a échoué."

#: library/exceptions.rst:633
msgid "The name of the encoding that raised the error."
msgstr "Le nom de l'encodage qui a provoqué l'erreur."

#: library/exceptions.rst:637
msgid "A string describing the specific codec error."
msgstr "Une chaîne de caractères décrivant l'erreur de codec spécifique."

#: library/exceptions.rst:641
msgid "The object the codec was attempting to encode or decode."
msgstr "L'objet que le codec essayait d'encoder ou de décoder."

#: library/exceptions.rst:645
msgid "The first index of invalid data in :attr:`object`."
msgstr "Le premier index des données invalides dans :attr:`object`."

#: library/exceptions.rst:649
msgid "The index after the last invalid data in :attr:`object`."
msgstr "L'index après la dernière donnée invalide dans :attr:`object`."

#: library/exceptions.rst:654
msgid ""
"Raised when a Unicode-related error occurs during encoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Levée lorsqu'une erreur liée à Unicode se produit durant l'encodage. C'est "
"une sous-classe d':exc:`UnicodeError`."

#: library/exceptions.rst:660
msgid ""
"Raised when a Unicode-related error occurs during decoding.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Levée lorsqu'une erreur liée à Unicode se produit durant le décodage. C'est "
"une sous-classe d':exc:`UnicodeError`."

#: library/exceptions.rst:666
msgid ""
"Raised when a Unicode-related error occurs during translating.  It is a "
"subclass of :exc:`UnicodeError`."
msgstr ""
"Levée lorsqu'une erreur liée à Unicode se produit durant la traduction. "
"C'est une sous-classe d':exc:`UnicodeError`."

#: library/exceptions.rst:672
msgid ""
"Raised when an operation or function receives an argument that has the right "
"type but an inappropriate value, and the situation is not described by a "
"more precise exception such as :exc:`IndexError`."
msgstr ""
"Levée lorsqu'une opération ou fonction native reçoit un argument qui possède "
"le bon type mais une valeur inappropriée, et que la situation n'est pas "
"décrite par une exception plus précise telle que :exc:`IndexError`."

#: library/exceptions.rst:679
msgid ""
"Raised when the second argument of a division or modulo operation is zero.  "
"The associated value is a string indicating the type of the operands and the "
"operation."
msgstr ""
"Levée lorsque le second argument d'une opération de division ou d'un modulo "
"est zéro. La valeur associée est une chaîne indiquant le type des opérandes "
"et de l'opération."

#: library/exceptions.rst:684
msgid ""
"The following exceptions are kept for compatibility with previous versions; "
"starting from Python 3.3, they are aliases of :exc:`OSError`."
msgstr ""
"Les exceptions suivantes sont conservées pour la compatibilité avec les "
"anciennes versions ; depuis Python 3.3, ce sont des alias d':exc:`OSError`."

#: library/exceptions.rst:693
msgid "Only available on Windows."
msgstr "Seulement disponible sous Windows."

#: library/exceptions.rst:697
msgid "OS exceptions"
msgstr "Exceptions système"

#: library/exceptions.rst:699
msgid ""
"The following exceptions are subclasses of :exc:`OSError`, they get raised "
"depending on the system error code."
msgstr ""
"Les exceptions suivantes sont des sous-classes d':exc:`OSError`, elles sont "
"levées en fonction du code d'erreur système."

#: library/exceptions.rst:704
#, fuzzy
msgid ""
"Raised when an operation would block on an object (e.g. socket) set for non-"
"blocking operation. Corresponds to :c:data:`errno` :py:const:`~errno."
"EAGAIN`, :py:const:`~errno.EALREADY`, :py:const:`~errno.EWOULDBLOCK` and :py:"
"const:`~errno.EINPROGRESS`."
msgstr ""
"Levée lorsqu'une opération bloque sur un objet (par exemple un connecteur) "
"configuré pour une opération non-bloquante. Correspond à :c:data:`errno` :py:"
"data:`~errno.EAGAIN`, :py:data:`~errno.EALREADY`, :py:data:`~errno."
"EWOULDBLOCK` et :py:data:`~errno.EINPROGRESS`."

#: library/exceptions.rst:709
msgid ""
"In addition to those of :exc:`OSError`, :exc:`BlockingIOError` can have one "
"more attribute:"
msgstr ""
"En plus de ceux de :exc:`OSError`, :exc:`BlockingIOError` peut avoir un "
"attribut de plus :"

#: library/exceptions.rst:714
msgid ""
"An integer containing the number of characters written to the stream before "
"it blocked.  This attribute is available when using the buffered I/O classes "
"from the :mod:`io` module."
msgstr ""
"Un nombre entier contenant le nombre de caractères écrits dans le flux avant "
"qu'il ne soit bloqué. Cet attribut est disponible lors de l'utilisation des "
"classes tampon entrées-sorties du module :mod:`io`."

#: library/exceptions.rst:720
#, fuzzy
msgid ""
"Raised when an operation on a child process failed. Corresponds to :c:data:"
"`errno` :py:const:`~errno.ECHILD`."
msgstr ""
"Levée lorsqu'une opération sur un processus enfant a échoué. Correspond à :c:"
"data:`errno` :py:data:`~errno.ECHILD`."

#: library/exceptions.rst:725
msgid "A base class for connection-related issues."
msgstr "Classe mère pour les problèmes de connexion."

#: library/exceptions.rst:727
msgid ""
"Subclasses are :exc:`BrokenPipeError`, :exc:`ConnectionAbortedError`, :exc:"
"`ConnectionRefusedError` and :exc:`ConnectionResetError`."
msgstr ""
"Les sous-classes sont :exc:`BrokenPipeError`, :exc:"
"`ConnectionAbortedError`, :exc:`ConnectionRefusedError` et :exc:"
"`ConnectionResetError`."

#: library/exceptions.rst:732
#, fuzzy
msgid ""
"A subclass of :exc:`ConnectionError`, raised when trying to write on a pipe "
"while the other end has been closed, or trying to write on a socket which "
"has been shutdown for writing. Corresponds to :c:data:`errno` :py:const:"
"`~errno.EPIPE` and :py:const:`~errno.ESHUTDOWN`."
msgstr ""
"Une sous-classe de :exc:`ConnectionError`, levé en essayant d'écrire sur un "
"*pipe* alors que l'autre extrémité a été fermée, ou en essayant d'écrire sur "
"un connecteur (*socket* en anglais) qui a été fermé pour l'écriture. "
"Correspond à :c:data:`errno` :py:data:`~errno.EPIPE` et :py:data:`~errno."
"ESHUTDOWN`."

#: library/exceptions.rst:739
#, fuzzy
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"aborted by the peer. Corresponds to :c:data:`errno` :py:const:`~errno."
"ECONNABORTED`."
msgstr ""
"Une sous-classe de :exc:`ConnectionError`, levée lorsqu'une tentative de "
"connexion est interrompue par le pair. Correspond à :c:data:`errno` :py:data:"
"`~errno.ECONNABORTED`."

#: library/exceptions.rst:745
#, fuzzy
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection attempt is "
"refused by the peer. Corresponds to :c:data:`errno` :py:const:`~errno."
"ECONNREFUSED`."
msgstr ""
"Une sous-classe de :exc:`ConnectionError`, levée lorsqu'une tentative de "
"connexion est refusée par le pair. Correspond à :c:data:`errno` :py:data:"
"`~errno.ECONNREFUSED`."

#: library/exceptions.rst:751
#, fuzzy
msgid ""
"A subclass of :exc:`ConnectionError`, raised when a connection is reset by "
"the peer. Corresponds to :c:data:`errno` :py:const:`~errno.ECONNRESET`."
msgstr ""
"Une sous-classe de :exc:`ConnectionError`, levée lorsqu'une connexion est "
"réinitialisée par le pair. Correspond à :c:data:`errno` :py:data:`~errno."
"ECONNRESET`."

#: library/exceptions.rst:757
#, fuzzy
msgid ""
"Raised when trying to create a file or directory which already exists. "
"Corresponds to :c:data:`errno` :py:const:`~errno.EEXIST`."
msgstr ""
"Levée pendant la tentative de création d'un fichier ou d'un répertoire qui "
"existe déjà. Correspond à :c:data:`errno` :py:data:`~errno.EEXIST`."

#: library/exceptions.rst:762
#, fuzzy
msgid ""
"Raised when a file or directory is requested but doesn't exist. Corresponds "
"to :c:data:`errno` :py:const:`~errno.ENOENT`."
msgstr ""
"Levée lorsqu'un fichier ou répertoire est demandé mais n'existe pas. "
"Correspond à :c:data:`errno` :py:data:`~errno.ENOENT`."

#: library/exceptions.rst:767
#, fuzzy
msgid ""
"Raised when a system call is interrupted by an incoming signal. Corresponds "
"to :c:data:`errno` :py:const:`~errno.EINTR`."
msgstr ""
"Levée lorsqu'un appel système est interrompu par un signal entrant. "
"Correspond à :c:data:`errno` :py:data:`~errno.EINTR`."

#: library/exceptions.rst:770
msgid ""
"Python now retries system calls when a syscall is interrupted by a signal, "
"except if the signal handler raises an exception (see :pep:`475` for the "
"rationale), instead of raising :exc:`InterruptedError`."
msgstr ""
"Python relance maintenant les appels système lorsqu'ils sont interrompus par "
"un signal, sauf si le gestionnaire de signal lève une exception (voir :pep:"
"`475` pour les raisons), au lieu de lever :exc:`InterruptedError`."

#: library/exceptions.rst:777
#, fuzzy
msgid ""
"Raised when a file operation (such as :func:`os.remove`) is requested on a "
"directory. Corresponds to :c:data:`errno` :py:const:`~errno.EISDIR`."
msgstr ""
"Levée lorsqu'une opération sur un fichier (comme :func:`os.remove`) est "
"demandée sur un répertoire. Correspond à :c:data:`errno` :py:data:`~errno."
"EISDIR`."

#: library/exceptions.rst:783
#, fuzzy
msgid ""
"Raised when a directory operation (such as :func:`os.listdir`) is requested "
"on something which is not a directory.  On most POSIX platforms, it may also "
"be raised if an operation attempts to open or traverse a non-directory file "
"as if it were a directory. Corresponds to :c:data:`errno` :py:const:`~errno."
"ENOTDIR`."
msgstr ""
"Levée lorsqu'une opération sur un répertoire (comme :func:`os.listdir`) est "
"demandée sur autre chose qu'un répertoire. Sur la majorité des plateformes "
"*POSIX*, elle est aussi levée quand une opération tente d'ouvrir ou de "
"traverser un fichier qui n'est pas un répertoire comme s'il en était un. "
"Correspond à :c:data:`errno` :py:data:`~errno.ENOTDIR`."

#: library/exceptions.rst:791
#, fuzzy
msgid ""
"Raised when trying to run an operation without the adequate access rights - "
"for example filesystem permissions. Corresponds to :c:data:`errno` :py:const:"
"`~errno.EACCES`, :py:const:`~errno.EPERM`, and :py:const:`~errno."
"ENOTCAPABLE`."
msgstr ""
"Levée lorsqu'on essaye d'exécuter une opération sans les droits d'accès "
"adéquats — par exemple les permissions du système de fichiers. Correspond à :"
"c:data:`errno` :py:data:`~errno.EACCES` et :py:data:`~errno.EPERM`."

#: library/exceptions.rst:796
msgid ""
"WASI's :py:const:`~errno.ENOTCAPABLE` is now mapped to :exc:"
"`PermissionError`."
msgstr ""

#: library/exceptions.rst:802
#, fuzzy
msgid ""
"Raised when a given process doesn't exist. Corresponds to :c:data:`errno` :"
"py:const:`~errno.ESRCH`."
msgstr ""
"Levée lorsqu'un processus donné n'existe pas. Correspond à :c:data:`errno` :"
"py:data:`~errno.ESRCH`."

#: library/exceptions.rst:807
#, fuzzy
msgid ""
"Raised when a system function timed out at the system level. Corresponds to :"
"c:data:`errno` :py:const:`~errno.ETIMEDOUT`."
msgstr ""
"Levée lorsqu'une fonction système a expiré au niveau système. Correspond à :"
"c:data:`errno` :py:data:`~errno.ETIMEDOUT`."

#: library/exceptions.rst:810
msgid "All the above :exc:`OSError` subclasses were added."
msgstr "Toutes les sous-classes d':exc:`OSError` ci-dessus ont été ajoutées."

#: library/exceptions.rst:816
msgid ":pep:`3151` - Reworking the OS and IO exception hierarchy"
msgstr ":pep:`3151` -- Refonte de la hiérarchie des exceptions système et IO"

#: library/exceptions.rst:822
msgid "Warnings"
msgstr "Avertissements"

#: library/exceptions.rst:824
msgid ""
"The following exceptions are used as warning categories; see the :ref:"
"`warning-categories` documentation for more details."
msgstr ""
"Les exceptions suivantes sont utilisées comme catégories d'avertissement ; "
"voir :mod:`warning-categories` pour plus d'informations."

#: library/exceptions.rst:829
msgid "Base class for warning categories."
msgstr "Classe mère pour les catégories d'avertissement."

#: library/exceptions.rst:834
msgid "Base class for warnings generated by user code."
msgstr "Classe mère pour les avertissements générés par du code utilisateur."

#: library/exceptions.rst:839
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for other Python developers."
msgstr ""
"Classe mère pour les avertissements sur les fonctionnalités obsolètes, "
"lorsque ces avertissements sont destinés aux autres développeurs Python."

#: library/exceptions.rst:842
msgid ""
"Ignored by the default warning filters, except in the ``__main__`` module (:"
"pep:`565`). Enabling the :ref:`Python Development Mode <devmode>` shows this "
"warning."
msgstr ""
"Ignoré par les filtres d'avertissements par défaut, sauf dans le module "
"``__main__`` (:pep:`565`). Activer le :ref:`mode de développement de Python "
"<devmode>` affiche cet avertissement."

#: library/exceptions.rst:862
msgid "The deprecation policy is described in :pep:`387`."
msgstr "La politique relative à l'obsolescence est décrite dans la :pep:`387`."

#: library/exceptions.rst:851
msgid ""
"Base class for warnings about features which are obsolete and expected to be "
"deprecated in the future, but are not deprecated at the moment."
msgstr ""
"Classe mère pour les avertissements d'obsolescence programmée. Ils indiquent "
"que la fonctionnalité peut encore être utilisée actuellement, mais qu'elle "
"sera supprimée dans le futur."

#: library/exceptions.rst:855
msgid ""
"This class is rarely used as emitting a warning about a possible upcoming "
"deprecation is unusual, and :exc:`DeprecationWarning` is preferred for "
"already active deprecations."
msgstr ""
"Cette classe est rarement utilisée car émettre un avertissement à propos "
"d’une obsolescence à venir est inhabituel, et :exc:`DeprecationWarning` est "
"préféré pour les obsolescences actuelles."

#: library/exceptions.rst:885 library/exceptions.rst:912
msgid ""
"Ignored by the default warning filters. Enabling the :ref:`Python "
"Development Mode <devmode>` shows this warning."
msgstr ""
"Ignoré par les filtres d'avertissements par défaut. Activer le :ref:`mode de "
"développement de Python <devmode>` affiche cet avertissement."

#: library/exceptions.rst:867
msgid "Base class for warnings about dubious syntax."
msgstr "Classe mère pour les avertissements sur de la syntaxe douteuse."

#: library/exceptions.rst:872
msgid "Base class for warnings about dubious runtime behavior."
msgstr ""
"Classe mère pour les avertissements sur les comportements d'exécution "
"douteux."

#: library/exceptions.rst:877
msgid ""
"Base class for warnings about deprecated features when those warnings are "
"intended for end users of applications that are written in Python."
msgstr ""
"Classe mère pour les avertissements à propos de fonctionnalités qui seront "
"obsolètes dans le futur quand ces avertissements destinés aux utilisateurs "
"finaux des applications écrites en Python."

#: library/exceptions.rst:883
msgid "Base class for warnings about probable mistakes in module imports."
msgstr ""
"Classe mère pour les avertissements sur des erreurs probables dans les "
"importations de modules."

#: library/exceptions.rst:891
msgid "Base class for warnings related to Unicode."
msgstr "Classe mère pour les avertissements liés à l'Unicode."

#: library/exceptions.rst:896
msgid "Base class for warnings related to encodings."
msgstr "Classe mère pour les avertissements liés à l'encodage des chaînes."

#: library/exceptions.rst:898
msgid "See :ref:`io-encoding-warning` for details."
msgstr "Voir :ref:`io-encoding-warning` pour plus d'informations."

#: library/exceptions.rst:905
msgid ""
"Base class for warnings related to :class:`bytes` and :class:`bytearray`."
msgstr ""
"Classe mère pour les avertissements liés à :class:`bytes` et :class:"
"`bytearray`."

#: library/exceptions.rst:910
msgid "Base class for warnings related to resource usage."
msgstr ""
"Classe mère pour les avertissements liés à l'utilisation des ressources."

#: library/exceptions.rst:921
#, fuzzy
msgid "Exception groups"
msgstr "Hiérarchie des exceptions"

#: library/exceptions.rst:923
msgid ""
"The following are used when it is necessary to raise multiple unrelated "
"exceptions. They are part of the exception hierarchy so they can be handled "
"with :keyword:`except` like all other exceptions. In addition, they are "
"recognised by :keyword:`except*<except_star>`, which matches their subgroups "
"based on the types of the contained exceptions."
msgstr ""

#: library/exceptions.rst:932
msgid ""
"Both of these exception types wrap the exceptions in the sequence ``excs``. "
"The ``msg`` parameter must be a string. The difference between the two "
"classes is that :exc:`BaseExceptionGroup` extends :exc:`BaseException` and "
"it can wrap any exception, while :exc:`ExceptionGroup` extends :exc:"
"`Exception` and it can only wrap subclasses of :exc:`Exception`. This design "
"is so that ``except Exception`` catches an :exc:`ExceptionGroup` but not :"
"exc:`BaseExceptionGroup`."
msgstr ""

#: library/exceptions.rst:940
msgid ""
"The :exc:`BaseExceptionGroup` constructor returns an :exc:`ExceptionGroup` "
"rather than a :exc:`BaseExceptionGroup` if all contained exceptions are :exc:"
"`Exception` instances, so it can be used to make the selection automatic. "
"The :exc:`ExceptionGroup` constructor, on the other hand, raises a :exc:"
"`TypeError` if any contained exception is not an :exc:`Exception` subclass."
msgstr ""

#: library/exceptions.rst:949
msgid "The ``msg`` argument to the constructor. This is a read-only attribute."
msgstr ""

#: library/exceptions.rst:953
msgid ""
"A tuple of the exceptions in the ``excs`` sequence given to the constructor. "
"This is a read-only attribute."
msgstr ""

#: library/exceptions.rst:958
msgid ""
"Returns an exception group that contains only the exceptions from the "
"current group that match *condition*, or ``None`` if the result is empty."
msgstr ""

#: library/exceptions.rst:961
msgid ""
"The condition can be an exception type or tuple of exception types, in which "
"case each exception is checked for a match using the same check that is used "
"in an ``except`` clause.  The condition can also be a callable (other than a "
"type object) that accepts an exception as its single argument and returns "
"true for the exceptions that should be in the subgroup."
msgstr ""

#: library/exceptions.rst:967
msgid ""
"The nesting structure of the current exception is preserved in the result, "
"as are the values of its :attr:`message`, :attr:`~BaseException."
"__traceback__`, :attr:`~BaseException.__cause__`, :attr:`~BaseException."
"__context__` and :attr:`~BaseException.__notes__` fields. Empty nested "
"groups are omitted from the result."
msgstr ""

#: library/exceptions.rst:974
msgid ""
"The condition is checked for all exceptions in the nested exception group, "
"including the top-level and any nested exception groups. If the condition is "
"true for such an exception group, it is included in the result in full."
msgstr ""

#: library/exceptions.rst:978
msgid "``condition`` can be any callable which is not a type object."
msgstr ""

#: library/exceptions.rst:983
msgid ""
"Like :meth:`subgroup`, but returns the pair ``(match, rest)`` where "
"``match`` is ``subgroup(condition)`` and ``rest`` is the remaining non-"
"matching part."
msgstr ""

#: library/exceptions.rst:989
msgid ""
"Returns an exception group with the same :attr:`message`, but which wraps "
"the exceptions in ``excs``."
msgstr ""

#: library/exceptions.rst:992
msgid ""
"This method is used by :meth:`subgroup` and :meth:`split`, which are used in "
"various contexts to break up an exception group. A subclass needs to "
"override it in order to make :meth:`subgroup` and :meth:`split` return "
"instances of the subclass rather than :exc:`ExceptionGroup`."
msgstr ""

#: library/exceptions.rst:998
msgid ""
":meth:`subgroup` and :meth:`split` copy the :attr:`~BaseException."
"__traceback__`, :attr:`~BaseException.__cause__`, :attr:`~BaseException."
"__context__` and :attr:`~BaseException.__notes__` fields from the original "
"exception group to the one returned by :meth:`derive`, so these fields do "
"not need to be updated by :meth:`derive`."
msgstr ""

#: library/exceptions.rst:1005
msgid ""
">>> class MyGroup(ExceptionGroup):\n"
"...     def derive(self, excs):\n"
"...         return MyGroup(self.message, excs)\n"
"...\n"
">>> e = MyGroup(\"eg\", [ValueError(1), TypeError(2)])\n"
">>> e.add_note(\"a note\")\n"
">>> e.__context__ = Exception(\"context\")\n"
">>> e.__cause__ = Exception(\"cause\")\n"
">>> try:\n"
"...    raise e\n"
"... except Exception as e:\n"
"...    exc = e\n"
"...\n"
">>> match, rest = exc.split(ValueError)\n"
">>> exc, exc.__context__, exc.__cause__, exc.__notes__\n"
"(MyGroup('eg', [ValueError(1), TypeError(2)]), Exception('context'), "
"Exception('cause'), ['a note'])\n"
">>> match, match.__context__, match.__cause__, match.__notes__\n"
"(MyGroup('eg', [ValueError(1)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> rest, rest.__context__, rest.__cause__, rest.__notes__\n"
"(MyGroup('eg', [TypeError(2)]), Exception('context'), Exception('cause'), "
"['a note'])\n"
">>> exc.__traceback__ is match.__traceback__ is rest.__traceback__\n"
"True"
msgstr ""

#: library/exceptions.rst:1031
msgid ""
"Note that :exc:`BaseExceptionGroup` defines :meth:`~object.__new__`, so "
"subclasses that need a different constructor signature need to override that "
"rather than :meth:`~object.__init__`. For example, the following defines an "
"exception group subclass which accepts an exit_code and and constructs the "
"group's message from it. ::"
msgstr ""

#: library/exceptions.rst:1037
msgid ""
"class Errors(ExceptionGroup):\n"
"   def __new__(cls, errors, exit_code):\n"
"      self = super().__new__(Errors, f\"exit code: {exit_code}\", errors)\n"
"      self.exit_code = exit_code\n"
"      return self\n"
"\n"
"   def derive(self, excs):\n"
"      return Errors(excs, self.exit_code)"
msgstr ""

#: library/exceptions.rst:1046
msgid ""
"Like :exc:`ExceptionGroup`, any subclass of :exc:`BaseExceptionGroup` which "
"is also a subclass of :exc:`Exception` can only wrap instances of :exc:"
"`Exception`."
msgstr ""

#: library/exceptions.rst:1054
msgid "Exception hierarchy"
msgstr "Hiérarchie des exceptions"

#: library/exceptions.rst:1056
msgid "The class hierarchy for built-in exceptions is:"
msgstr "La hiérarchie de classes pour les exceptions natives est la suivante :"

#: library/exceptions.rst:1058
msgid ""
"BaseException\n"
" ├── BaseExceptionGroup\n"
" ├── GeneratorExit\n"
" ├── KeyboardInterrupt\n"
" ├── SystemExit\n"
" └── Exception\n"
"      ├── ArithmeticError\n"
"      │    ├── FloatingPointError\n"
"      │    ├── OverflowError\n"
"      │    └── ZeroDivisionError\n"
"      ├── AssertionError\n"
"      ├── AttributeError\n"
"      ├── BufferError\n"
"      ├── EOFError\n"
"      ├── ExceptionGroup [BaseExceptionGroup]\n"
"      ├── ImportError\n"
"      │    └── ModuleNotFoundError\n"
"      ├── LookupError\n"
"      │    ├── IndexError\n"
"      │    └── KeyError\n"
"      ├── MemoryError\n"
"      ├── NameError\n"
"      │    └── UnboundLocalError\n"
"      ├── OSError\n"
"      │    ├── BlockingIOError\n"
"      │    ├── ChildProcessError\n"
"      │    ├── ConnectionError\n"
"      │    │    ├── BrokenPipeError\n"
"      │    │    ├── ConnectionAbortedError\n"
"      │    │    ├── ConnectionRefusedError\n"
"      │    │    └── ConnectionResetError\n"
"      │    ├── FileExistsError\n"
"      │    ├── FileNotFoundError\n"
"      │    ├── InterruptedError\n"
"      │    ├── IsADirectoryError\n"
"      │    ├── NotADirectoryError\n"
"      │    ├── PermissionError\n"
"      │    ├── ProcessLookupError\n"
"      │    └── TimeoutError\n"
"      ├── ReferenceError\n"
"      ├── RuntimeError\n"
"      │    ├── NotImplementedError\n"
"      │    ├── PythonFinalizationError\n"
"      │    └── RecursionError\n"
"      ├── StopAsyncIteration\n"
"      ├── StopIteration\n"
"      ├── SyntaxError\n"
"      │    └── IndentationError\n"
"      │         └── TabError\n"
"      ├── SystemError\n"
"      ├── TypeError\n"
"      ├── ValueError\n"
"      │    └── UnicodeError\n"
"      │         ├── UnicodeDecodeError\n"
"      │         ├── UnicodeEncodeError\n"
"      │         └── UnicodeTranslateError\n"
"      └── Warning\n"
"           ├── BytesWarning\n"
"           ├── DeprecationWarning\n"
"           ├── EncodingWarning\n"
"           ├── FutureWarning\n"
"           ├── ImportWarning\n"
"           ├── PendingDeprecationWarning\n"
"           ├── ResourceWarning\n"
"           ├── RuntimeWarning\n"
"           ├── SyntaxWarning\n"
"           ├── UnicodeWarning\n"
"           └── UserWarning\n"
msgstr ""

#: library/exceptions.rst:17 library/exceptions.rst:196
msgid "statement"
msgstr "instruction"

#: library/exceptions.rst:6
msgid "try"
msgstr "try"

#: library/exceptions.rst:6
#, fuzzy
msgid "except"
msgstr "Exceptions système"

#: library/exceptions.rst:17
msgid "raise"
msgstr "raise"

#: library/exceptions.rst:41
#, fuzzy
msgid "exception"
msgstr "Exceptions système"

#: library/exceptions.rst:41
#, fuzzy
msgid "chaining"
msgstr "Avertissements"

#: library/exceptions.rst:41
msgid "__cause__ (exception attribute)"
msgstr "``__cause__`` (attribut d’exception)"

#: library/exceptions.rst:41
msgid "__context__ (exception attribute)"
msgstr "``__context__`` (attribut d’exception)"

#: library/exceptions.rst:41
msgid "__suppress_context__ (exception attribute)"
msgstr ""

#: library/exceptions.rst:196
msgid "assert"
msgstr "assert"

#: library/exceptions.rst:345
msgid "module"
msgstr "module"

#: library/exceptions.rst:345
msgid "errno"
msgstr ""

#~ msgid ""
#~ "The :attr:`name` and :attr:`path` attributes can be set using keyword-"
#~ "only arguments to the constructor. When set they represent the name of "
#~ "the module that was attempted to be imported and the path to any file "
#~ "which triggered the exception, respectively."
#~ msgstr ""
#~ "Les attributs :attr:`name` et :attr:`path` peuvent être définis "
#~ "uniquement à l'aide d'arguments nommés passés au constructeur. Lorsqu'ils "
#~ "sont définis, ils représentent respectivement le nom du module qui a été "
#~ "tenté d'être importé et le chemin d'accès au fichier qui a déclenché "
#~ "l'exception."

#~ msgid ""
#~ "When raising (or re-raising) an exception in an :keyword:`except` or :"
#~ "keyword:`finally` clause :attr:`__context__` is automatically set to the "
#~ "last exception caught; if the new exception is not handled the traceback "
#~ "that is eventually displayed will include the originating exception(s) "
#~ "and the final exception."
#~ msgstr ""
#~ "En levant (ou levant à nouveau) une exception dans une clause :keyword:"
#~ "`except` ou :keyword:`finally`, :attr:`__context__` est automatiquement "
#~ "assigné à la dernière exception interceptée ; si la nouvelle exception "
#~ "n'est pas gérée, la trace d'appels affichée inclut la ou les exception(s) "
#~ "d'origine et l'exception finale."

#~ msgid ""
#~ "This method sets *tb* as the new traceback for the exception and returns "
#~ "the exception object.  It is usually used in exception handling code like "
#~ "this::"
#~ msgstr ""
#~ "Cette méthode définit *tb* en tant que nouvelle trace d'appels pour "
#~ "l'exception et retourne l'objet exception. Elle est généralement utilisée "
#~ "dans du code de gestion d'exceptions comme ceci ::"

#~ msgid ""
#~ "Instances of this class have attributes :attr:`filename`, :attr:"
#~ "`lineno`, :attr:`offset` and :attr:`text` for easier access to the "
#~ "details.  :func:`str` of the exception instance returns only the message."
#~ msgstr ""
#~ "Les instances de cette classe ont des attributs :attr:`filename`, :attr:"
#~ "`lineno`, :attr:`offset` et :attr:`text` pour accéder plus facilement aux "
#~ "détails. La représentation :func:`str` de l'instance de l'exception "
#~ "retourne seulement le message."

#~ msgid ""
#~ "Base class for warnings related to resource usage. Ignored by the default "
#~ "warning filters."
#~ msgstr ""
#~ "Classe de base pour les avertissements liés à l'utilisation de "
#~ "ressources. Ignorée par les filtres d’avertissements par défaut."
