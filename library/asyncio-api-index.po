# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-29 16:06+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: library/asyncio-api-index.rst:6
msgid "High-level API Index"
msgstr ""

#: library/asyncio-api-index.rst:8
msgid "This page lists all high-level async/await enabled asyncio APIs."
msgstr ""

#: library/asyncio-api-index.rst:12
msgid "Tasks"
msgstr "TÃ¢ches"

#: library/asyncio-api-index.rst:14
msgid ""
"Utilities to run asyncio programs, create Tasks, and await on multiple "
"things with timeouts."
msgstr ""

#: library/asyncio-api-index.rst:21
#, fuzzy
msgid ":func:`run`"
msgstr ":func:`round`"

#: library/asyncio-api-index.rst:22
msgid "Create event loop, run a coroutine, close the loop."
msgstr ""

#: library/asyncio-api-index.rst:24
msgid ":func:`create_task`"
msgstr ""

#: library/asyncio-api-index.rst:25
msgid "Start an asyncio Task."
msgstr ""

#: library/asyncio-api-index.rst:27
msgid "``await`` :func:`sleep`"
msgstr ""

#: library/asyncio-api-index.rst:28
msgid "Sleep for a number of seconds."
msgstr ""

#: library/asyncio-api-index.rst:30
msgid "``await`` :func:`gather`"
msgstr ""

#: library/asyncio-api-index.rst:31
msgid "Schedule and wait for things concurrently."
msgstr ""

#: library/asyncio-api-index.rst:33
msgid "``await`` :func:`wait_for`"
msgstr ""

#: library/asyncio-api-index.rst:34
msgid "Run with a timeout."
msgstr ""

#: library/asyncio-api-index.rst:36
msgid "``await`` :func:`shield`"
msgstr ""

#: library/asyncio-api-index.rst:37
msgid "Shield from cancellation."
msgstr ""

#: library/asyncio-api-index.rst:39
msgid "``await`` :func:`wait`"
msgstr ""

#: library/asyncio-api-index.rst:40
msgid "Monitor for completion."
msgstr ""

#: library/asyncio-api-index.rst:42
msgid ":func:`current_task`"
msgstr ""

#: library/asyncio-api-index.rst:43
msgid "Return the current Task."
msgstr ""

#: library/asyncio-api-index.rst:45
msgid ":func:`all_tasks`"
msgstr ""

#: library/asyncio-api-index.rst:46
msgid "Return all tasks for an event loop."
msgstr ""

#: library/asyncio-api-index.rst:48
msgid ":class:`Task`"
msgstr ""

#: library/asyncio-api-index.rst:49
msgid "Task object."
msgstr ""

#: library/asyncio-api-index.rst:51
msgid ":func:`run_coroutine_threadsafe`"
msgstr ""

#: library/asyncio-api-index.rst:52
msgid "Schedule a coroutine from another OS thread."
msgstr ""

#: library/asyncio-api-index.rst:54
msgid "``for in`` :func:`as_completed`"
msgstr ""

#: library/asyncio-api-index.rst:55
msgid "Monitor for completion with a ``for`` loop."
msgstr ""

#: library/asyncio-api-index.rst:59 library/asyncio-api-index.rst:95
#: library/asyncio-api-index.rst:119 library/asyncio-api-index.rst:155
#: library/asyncio-api-index.rst:188 library/asyncio-api-index.rst:213
msgid "Examples"
msgstr "Exemples"

#: library/asyncio-api-index.rst:60
msgid ""
":ref:`Using asyncio.gather() to run things in parallel "
"<asyncio_example_gather>`."
msgstr ""

#: library/asyncio-api-index.rst:63
msgid ""
":ref:`Using asyncio.wait_for() to enforce a timeout "
"<asyncio_example_waitfor>`."
msgstr ""

#: library/asyncio-api-index.rst:66
msgid ":ref:`Cancellation <asyncio_example_task_cancel>`."
msgstr ""

#: library/asyncio-api-index.rst:68
msgid ":ref:`Using asyncio.sleep() <asyncio_example_sleep>`."
msgstr ""

#: library/asyncio-api-index.rst:70
msgid "See also the main :ref:`Tasks documentation page <coroutine>`."
msgstr ""

#: library/asyncio-api-index.rst:74
msgid "Queues"
msgstr ""

#: library/asyncio-api-index.rst:76
msgid ""
"Queues should be used to distribute work amongst multiple asyncio Tasks, "
"implement connection pools, and pub/sub patterns."
msgstr ""

#: library/asyncio-api-index.rst:84
msgid ":class:`Queue`"
msgstr ":class:`Queue`"

#: library/asyncio-api-index.rst:85
msgid "A FIFO queue."
msgstr ""

#: library/asyncio-api-index.rst:87
msgid ":class:`PriorityQueue`"
msgstr ":class:`PriorityQueue`"

#: library/asyncio-api-index.rst:88
msgid "A priority queue."
msgstr ""

#: library/asyncio-api-index.rst:90
msgid ":class:`LifoQueue`"
msgstr ":class:`LifoQueue`"

#: library/asyncio-api-index.rst:91
msgid "A LIFO queue."
msgstr ""

#: library/asyncio-api-index.rst:96
msgid ""
":ref:`Using asyncio.Queue to distribute workload between several Tasks "
"<asyncio_example_queue_dist>`."
msgstr ""

#: library/asyncio-api-index.rst:99
msgid "See also the :ref:`Queues documentation page <asyncio-queues>`."
msgstr ""

#: library/asyncio-api-index.rst:103
msgid "Subprocesses"
msgstr "Sous-processus"

#: library/asyncio-api-index.rst:105
msgid "Utilities to spawn subprocesses and run shell commands."
msgstr ""

#: library/asyncio-api-index.rst:111
msgid "``await`` :func:`create_subprocess_exec`"
msgstr ""

#: library/asyncio-api-index.rst:112
msgid "Create a subprocess."
msgstr ""

#: library/asyncio-api-index.rst:114
msgid "``await`` :func:`create_subprocess_shell`"
msgstr ""

#: library/asyncio-api-index.rst:115
msgid "Run a shell command."
msgstr ""

#: library/asyncio-api-index.rst:120
msgid ":ref:`Executing a shell command <asyncio_example_subprocess_shell>`."
msgstr ""

#: library/asyncio-api-index.rst:122
msgid "See also the :ref:`subprocess APIs <asyncio-subprocess>` documentation."
msgstr ""

#: library/asyncio-api-index.rst:127
msgid "Streams"
msgstr "Streams"

#: library/asyncio-api-index.rst:129
msgid "High-level APIs to work with network IO."
msgstr ""

#: library/asyncio-api-index.rst:135
msgid "``await`` :func:`open_connection`"
msgstr ""

#: library/asyncio-api-index.rst:136
msgid "Establish a TCP connection."
msgstr ""

#: library/asyncio-api-index.rst:138
msgid "``await`` :func:`open_unix_connection`"
msgstr ""

#: library/asyncio-api-index.rst:139
msgid "Establish a Unix socket connection."
msgstr ""

#: library/asyncio-api-index.rst:141
msgid "``await`` :func:`start_server`"
msgstr ""

#: library/asyncio-api-index.rst:142
msgid "Start a TCP server."
msgstr ""

#: library/asyncio-api-index.rst:144
msgid "``await`` :func:`start_unix_server`"
msgstr ""

#: library/asyncio-api-index.rst:145
msgid "Start a Unix socket server."
msgstr ""

#: library/asyncio-api-index.rst:147
msgid ":class:`StreamReader`"
msgstr ""

#: library/asyncio-api-index.rst:148
msgid "High-level async/await object to receive network data."
msgstr ""

#: library/asyncio-api-index.rst:150
msgid ":class:`StreamWriter`"
msgstr ""

#: library/asyncio-api-index.rst:151
msgid "High-level async/await object to send network data."
msgstr ""

#: library/asyncio-api-index.rst:156
msgid ":ref:`Example TCP client <asyncio_example_stream>`."
msgstr ""

#: library/asyncio-api-index.rst:158
msgid "See also the :ref:`streams APIs <asyncio-streams>` documentation."
msgstr ""

#: library/asyncio-api-index.rst:163
msgid "Synchronization"
msgstr ""

#: library/asyncio-api-index.rst:165
msgid "Threading-like synchronization primitives that can be used in Tasks."
msgstr ""

#: library/asyncio-api-index.rst:171
msgid ":class:`Lock`"
msgstr ":class:`Lock`"

#: library/asyncio-api-index.rst:172
msgid "A mutex lock."
msgstr ""

#: library/asyncio-api-index.rst:174
msgid ":class:`Event`"
msgstr ":class:`Event`"

#: library/asyncio-api-index.rst:175
msgid "An event object."
msgstr ""

#: library/asyncio-api-index.rst:177
msgid ":class:`Condition`"
msgstr ":class:`Condition`"

#: library/asyncio-api-index.rst:178
msgid "A condition object."
msgstr ""

#: library/asyncio-api-index.rst:180
msgid ":class:`Semaphore`"
msgstr ":class:`Semaphore`"

#: library/asyncio-api-index.rst:181
msgid "A semaphore."
msgstr ""

#: library/asyncio-api-index.rst:183
msgid ":class:`BoundedSemaphore`"
msgstr ":class:`BoundedSemaphore`"

#: library/asyncio-api-index.rst:184
msgid "A bounded semaphore."
msgstr ""

#: library/asyncio-api-index.rst:189
msgid ":ref:`Using asyncio.Event <asyncio_example_sync_event>`."
msgstr ""

#: library/asyncio-api-index.rst:191
msgid ""
"See also the documentation of asyncio :ref:`synchronization primitives "
"<asyncio-sync>`."
msgstr ""

#: library/asyncio-api-index.rst:196
msgid "Exceptions"
msgstr "Exceptions"

#: library/asyncio-api-index.rst:203
msgid ":exc:`asyncio.TimeoutError`"
msgstr ""

#: library/asyncio-api-index.rst:204
msgid ""
"Raised on timeout by functions like :func:`wait_for`. Keep in mind that "
"``asyncio.TimeoutError`` is **unrelated** to the built-in :exc:"
"`TimeoutError` exception."
msgstr ""

#: library/asyncio-api-index.rst:208
msgid ":exc:`asyncio.CancelledError`"
msgstr ""

#: library/asyncio-api-index.rst:209
msgid "Raised when a Task is cancelled. See also :meth:`Task.cancel`."
msgstr ""

#: library/asyncio-api-index.rst:214
msgid ""
":ref:`Handling CancelledError to run code on cancellation request "
"<asyncio_example_task_cancel>`."
msgstr ""

#: library/asyncio-api-index.rst:217
msgid ""
"See also the full list of :ref:`asyncio-specific exceptions <asyncio-"
"exceptions>`."
msgstr ""
