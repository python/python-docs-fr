# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/chunk.rst:2
msgid ":mod:`chunk` --- Read IFF chunked data"
msgstr ""

#: ../Doc/library/chunk.rst:10
#, fuzzy
msgid "**Source code:** :source:`Lib/chunk.py`"
msgstr "**Code sourceÂ :** :source:`Lib/uu.py`"

#: ../Doc/library/chunk.rst:21
msgid ""
"This module provides an interface for reading files that use EA IFF 85 "
"chunks. [#]_  This format is used in at least the Audio Interchange File "
"Format (AIFF/AIFF-C) and the Real Media File Format (RMFF).  The WAVE audio "
"file format is closely related and can also be read using this module."
msgstr ""

#: ../Doc/library/chunk.rst:26
msgid "A chunk has the following structure:"
msgstr ""

#: ../Doc/library/chunk.rst:29
msgid "Offset"
msgstr ""

#: ../Doc/library/chunk.rst:29
msgid "Length"
msgstr ""

#: ../Doc/library/chunk.rst:29
msgid "Contents"
msgstr "Sommaire"

#: ../Doc/library/chunk.rst:31
msgid "0"
msgstr "0"

#: ../Doc/library/chunk.rst:31 ../Doc/library/chunk.rst:33
msgid "4"
msgstr "4"

#: ../Doc/library/chunk.rst:31
msgid "Chunk ID"
msgstr ""

#: ../Doc/library/chunk.rst:33
msgid "Size of chunk in big-endian byte order, not including the header"
msgstr ""

#: ../Doc/library/chunk.rst:37
msgid "8"
msgstr "8"

#: ../Doc/library/chunk.rst:37
msgid "*n*"
msgstr "*n*"

#: ../Doc/library/chunk.rst:37
msgid "Data bytes, where *n* is the size given in the preceding field"
msgstr ""

#: ../Doc/library/chunk.rst:41
msgid "8 + *n*"
msgstr "8 + *n*"

#: ../Doc/library/chunk.rst:41
msgid "0 or 1"
msgstr "0 or 1"

#: ../Doc/library/chunk.rst:41
msgid "Pad byte needed if *n* is odd and chunk alignment is used"
msgstr ""

#: ../Doc/library/chunk.rst:45
msgid "The ID is a 4-byte string which identifies the type of chunk."
msgstr ""

#: ../Doc/library/chunk.rst:47
msgid ""
"The size field (a 32-bit value, encoded using big-endian byte order) gives "
"the size of the chunk data, not including the 8-byte header."
msgstr ""

#: ../Doc/library/chunk.rst:50
msgid ""
"Usually an IFF-type file consists of one or more chunks.  The proposed usage "
"of the :class:`Chunk` class defined here is to instantiate an instance at "
"the start of each chunk and read from the instance until it reaches the end, "
"after which a new instance can be instantiated. At the end of the file, "
"creating a new instance will fail with an :exc:`EOFError` exception."
msgstr ""

#: ../Doc/library/chunk.rst:59
msgid ""
"Class which represents a chunk.  The *file* argument is expected to be a "
"file-like object.  An instance of this class is specifically allowed.  The "
"only method that is needed is :meth:`~io.IOBase.read`.  If the methods :meth:"
"`~io.IOBase.seek` and :meth:`~io.IOBase.tell` are present and don't raise an "
"exception, they are also used. If these methods are present and raise an "
"exception, they are expected to not have altered the object.  If the "
"optional argument *align* is true, chunks are assumed to be aligned on 2-"
"byte boundaries.  If *align* is false, no alignment is assumed.  The default "
"value is true.  If the optional argument *bigendian* is false, the chunk "
"size is assumed to be in little-endian order. This is needed for WAVE audio "
"files. The default value is true.  If the optional argument *inclheader* is "
"true, the size given in the chunk header includes the size of the header.  "
"The default value is false."
msgstr ""

#: ../Doc/library/chunk.rst:73
msgid "A :class:`Chunk` object supports the following methods:"
msgstr ""

#: ../Doc/library/chunk.rst:78
msgid ""
"Returns the name (ID) of the chunk.  This is the first 4 bytes of the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:84
msgid "Returns the size of the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:89
msgid ""
"Close and skip to the end of the chunk.  This does not close the underlying "
"file."
msgstr ""

#: ../Doc/library/chunk.rst:92
msgid ""
"The remaining methods will raise :exc:`OSError` if called after the :meth:"
"`close` method has been called.  Before Python 3.3, they used to raise :exc:"
"`IOError`, now an alias of :exc:`OSError`."
msgstr ""

#: ../Doc/library/chunk.rst:99
msgid "Returns ``False``."
msgstr ""

#: ../Doc/library/chunk.rst:104
msgid ""
"Set the chunk's current position.  The *whence* argument is optional and "
"defaults to ``0`` (absolute file positioning); other values are ``1`` (seek "
"relative to the current position) and ``2`` (seek relative to the file's "
"end).  There is no return value. If the underlying file does not allow seek, "
"only forward seeks are allowed."
msgstr ""

#: ../Doc/library/chunk.rst:113
msgid "Return the current position into the chunk."
msgstr ""

#: ../Doc/library/chunk.rst:118
msgid ""
"Read at most *size* bytes from the chunk (less if the read hits the end of "
"the chunk before obtaining *size* bytes).  If the *size* argument is "
"negative or omitted, read all data until the end of the chunk.  An empty "
"bytes object is returned when the end of the chunk is encountered "
"immediately."
msgstr ""

#: ../Doc/library/chunk.rst:127
msgid ""
"Skip to the end of the chunk.  All further calls to :meth:`read` for the "
"chunk will return ``b''``.  If you are not interested in the contents of the "
"chunk, this method should be called so that the file points to the start of "
"the next chunk."
msgstr ""

#: ../Doc/library/chunk.rst:134
msgid "Footnotes"
msgstr "Notes"

#: ../Doc/library/chunk.rst:135
msgid ""
"\"EA IFF 85\" Standard for Interchange Format Files, Jerry Morrison, "
"Electronic Arts, January 1985."
msgstr ""
