# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 21:40+0100\n"
"PO-Revision-Date: 2024-10-29 22:15+0100\n"
"Last-Translator: Christophe Nanteuil <christophe.nanteuil@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: library/email.contentmanager.rst:2
#, fuzzy
msgid ":mod:`!email.contentmanager`: Managing MIME Content"
msgstr ":mod:`email.contentmanager` : gestion du contenu MIME"

#: library/email.contentmanager.rst:10
msgid "**Source code:** :source:`Lib/email/contentmanager.py`"
msgstr "**Code source :** :source:`Lib/email/contentmanager.py`"

#: library/email.contentmanager.rst:14
msgid "[1]_"
msgstr "[1]_"

#: library/email.contentmanager.rst:19
msgid ""
"Base class for content managers.  Provides the standard registry mechanisms "
"to register converters between MIME content and other representations, as "
"well as the ``get_content`` and ``set_content`` dispatch methods."
msgstr ""
"Classe mère pour les gestionnaires de contenu. Fournit les mécanismes de "
"registre standard pour enregistrer les convertisseurs entre le contenu MIME "
"et d'autres représentations, ainsi que les méthodes de répartition "
"``get_content`` et ``set_content``."

#: library/email.contentmanager.rst:26
msgid ""
"Look up a handler function based on the ``mimetype`` of *msg* (see next "
"paragraph), call it, passing through all arguments, and return the result of "
"the call.  The expectation is that the handler will extract the payload from "
"*msg* and return an object that encodes information about the extracted data."
msgstr ""
"Recherche une fonction de gestion en se basant sur le ``mimetype`` de *msg* "
"(voir le paragraphe suivant), l'appelle en lui passant tous les arguments et "
"renvoie le résultat de l'appel. Le gestionnaire doit extraire la charge "
"utile de *msg* et renvoyer un objet qui encode les informations relatives "
"aux données extraites."

#: library/email.contentmanager.rst:32
msgid ""
"To find the handler, look for the following keys in the registry, stopping "
"with the first one found:"
msgstr ""
"Pour trouver le gestionnaire, recherche les clés suivantes dans le registre, "
"en s'arrêtant à la première trouvée :"

#: library/email.contentmanager.rst:35
msgid "the string representing the full MIME type (``maintype/subtype``)"
msgstr "une chaîne représentant le type MIME complet (``maintype/subtype``) ;"

#: library/email.contentmanager.rst:36
msgid "the string representing the ``maintype``"
msgstr "une chaîne représentant le ``maintype`` ;"

#: library/email.contentmanager.rst:37
msgid "the empty string"
msgstr "une chaîne vide."

#: library/email.contentmanager.rst:39
msgid ""
"If none of these keys produce a handler, raise a :exc:`KeyError` for the "
"full MIME type."
msgstr ""
"Si aucune de ces clés ne produit de gestionnaire, lève une :exc:`KeyError` "
"pour le type MIME complet."

#: library/email.contentmanager.rst:45
msgid ""
"If the ``maintype`` is ``multipart``, raise a :exc:`TypeError`; otherwise "
"look up a handler function based on the type of *obj* (see next paragraph), "
"call :meth:`~email.message.EmailMessage.clear_content` on the *msg*, and "
"call the handler function, passing through all arguments.  The expectation "
"is that the handler will transform and store *obj* into *msg*, possibly "
"making other changes to *msg* as well, such as adding various MIME headers "
"to encode information needed to interpret the stored data."
msgstr ""
"Si le ``maintype`` est ``multipart``, lève une :exc:`TypeError` ; sinon "
"recherche une fonction de gestion en se basant sur le type de *obj* (voir le "
"paragraphe suivant), appelle :meth:`~email.message.EmailMessage."
"clear_content` sur le *msg* et appelle la fonction de gestion en lui passant "
"tous les arguments. Le gestionnaire doit transformer et stocker *obj* en "
"*msg*, apportant éventuellement d'autres modifications à *msg* également, "
"comme l'ajout de divers en-têtes MIME pour coder les informations "
"nécessaires à l'interprétation des données stockées."

#: library/email.contentmanager.rst:54
msgid ""
"To find the handler, obtain the type of *obj* (``typ = type(obj)``), and "
"look for the following keys in the registry, stopping with the first one "
"found:"
msgstr ""
"Pour trouver le gestionnaire, récupère le type de *obj* (``typ = "
"type(obj)``) et recherche les clés suivantes dans le registre, en s'arrêtant "
"à la première trouvée :"

#: library/email.contentmanager.rst:58
msgid "the type itself (``typ``)"
msgstr "le type lui-même (``typ``) ;"

#: library/email.contentmanager.rst:59
msgid ""
"the type's fully qualified name (``typ.__module__ + '.' + typ."
"__qualname__``)."
msgstr "le nom complet du type (``typ.__module__ + '.' + typ.__qualname__``) ;"

#: library/email.contentmanager.rst:61
#, fuzzy
msgid "the type's :attr:`qualname <type.__qualname__>` (``typ.__qualname__``)"
msgstr "le nom qualifié du type (``typ.__qualname__``) ;"

#: library/email.contentmanager.rst:62
#, fuzzy
msgid "the type's :attr:`name <type.__name__>` (``typ.__name__``)."
msgstr "le nom du type (``typ.__name__``)."

#: library/email.contentmanager.rst:64
#, fuzzy
msgid ""
"If none of the above match, repeat all of the checks above for each of the "
"types in the :term:`MRO` (:attr:`typ.__mro__ <type.__mro__>`). Finally, if "
"no other key yields a handler, check for a handler for the key ``None``.  If "
"there is no handler for ``None``, raise a :exc:`KeyError` for the fully "
"qualified name of the type."
msgstr ""
"Si aucune de ces clés ne correspond, répète toutes les vérifications ci-"
"dessus pour chacun des types en suivant le :term:`MRO` (``typ.__mro__``). "
"Enfin, si aucune clé ne produit de gestionnaire, recherche un gestionnaire "
"pour la clé ``None``. S'il n'y a pas de gestionnaire pour ``None``, lève "
"une :exc:`KeyError` pour le nom complet du type."

#: library/email.contentmanager.rst:71
msgid ""
"Also add a :mailheader:`MIME-Version` header if one is not present (see "
"also :class:`.MIMEPart`)."
msgstr ""
"Ajoute également un en-tête :mailheader:`MIME-Version` s'il n'y en a pas "
"(voir aussi :class:`.MIMEPart`)."

#: library/email.contentmanager.rst:77
msgid ""
"Record the function *handler* as the handler for *key*.  For the possible "
"values of *key*, see :meth:`get_content`."
msgstr ""
"Enregistre la fonction *handler* comme gestionnaire pour *key*. Pour les "
"valeurs possibles de *key*, voir :meth:`get_content`."

#: library/email.contentmanager.rst:83
msgid ""
"Record *handler* as the function to call when an object of a type matching "
"*typekey* is passed to :meth:`set_content`.  For the possible values of "
"*typekey*, see :meth:`set_content`."
msgstr ""
"Enregistre *handler* comme fonction à appeler lorsqu'un objet d'un type "
"correspondant à *typekey* est passé à :meth:`set_content`. Pour les valeurs "
"possibles de *typekey*, voir :meth:`set_content`."

#: library/email.contentmanager.rst:89
msgid "Content Manager Instances"
msgstr "Instances de gestionnaires de contenus"

#: library/email.contentmanager.rst:91
msgid ""
"Currently the email package provides only one concrete content manager, :"
"data:`raw_data_manager`, although more may be added in the future. :data:"
"`raw_data_manager` is the :attr:`~email.policy.EmailPolicy.content_manager` "
"provided by :attr:`~email.policy.EmailPolicy` and its derivatives."
msgstr ""
"Actuellement, le paquet *email* ne fournit qu'un seul gestionnaire de "
"contenu concret, :data:`raw_data_manager`, bien que d'autres puissent être "
"ajoutés à l'avenir. :data:`raw_data_manager` est le :attr:`~email.policy."
"EmailPolicy.content_manager` fourni par :attr:`~email.policy.EmailPolicy` et "
"ses dérivés."

#: library/email.contentmanager.rst:100
msgid ""
"This content manager provides only a minimum interface beyond that provided "
"by :class:`~email.message.Message` itself:  it deals only with text, raw "
"byte strings, and :class:`~email.message.Message` objects.  Nevertheless, it "
"provides significant advantages compared to the base API: ``get_content`` on "
"a text part will return a unicode string without the application needing to "
"manually decode it, ``set_content`` provides a rich set of options for "
"controlling the headers added to a part and controlling the content transfer "
"encoding, and it enables the use of the various ``add_`` methods, thereby "
"simplifying the creation of multipart messages."
msgstr ""
"Ce gestionnaire de contenu ne fournit qu'une interface minimale au-delà de "
"celle fournie par :class:`~email.message.Message` lui-même : il  prend "
"seulement en charge le texte, les chaînes d'octets brutes et les objets :"
"class:`~email.message.Message`. Néanmoins, il offre des avantages "
"significatifs par rapport à l'API de base : ``get_content`` sur une partie "
"de texte renvoie une chaîne Unicode sans que l'application ait besoin de la "
"décoder manuellement, ``set_content`` fournit de nombreuses options pour "
"contrôler les en-têtes ajoutés à une partie et l'encodage du transfert de "
"contenu, et il permet l'utilisation des différentes méthodes ``add_``, ce "
"qui simplifie la création de messages en plusieurs parties."

#: library/email.contentmanager.rst:112
msgid ""
"Return the payload of the part as either a string (for ``text`` parts), an :"
"class:`~email.message.EmailMessage` object (for ``message/rfc822`` parts), "
"or a ``bytes`` object (for all other non-multipart types).  Raise a :exc:"
"`KeyError` if called on a ``multipart``.  If the part is a ``text`` part and "
"*errors* is specified, use it as the error handler when decoding the payload "
"to unicode.  The default error handler is ``replace``."
msgstr ""
"Renvoie la charge utile de la partie sous la forme d'une chaîne (pour les "
"parties ``text``), d'un objet :class:`~email.message.EmailMessage` (pour les "
"parties ``message/rfc822``) ou d'un objet ``bytes`` (pour tous les autres "
"types à l'exception de *multipart*). Lève une :exc:`KeyError` si cette "
"méthode est appelée sur un ``multipart``. S'il s'agit d'une partie ``text`` "
"et que *errors* est spécifié, ce paramètre est utilisé comme gestionnaire "
"d'erreurs lors du décodage de la charge utile en Unicode. Le gestionnaire "
"d'erreurs par défaut est ``replace``."

#: library/email.contentmanager.rst:131
msgid "Add headers and payload to *msg*:"
msgstr "Ajoute des en-têtes et une charge utile à *msg* :"

#: library/email.contentmanager.rst:133
msgid ""
"Add a :mailheader:`Content-Type` header with a ``maintype/subtype`` value."
msgstr ""
"Ajoute un en-tête :mailheader:`Content-Type` avec une valeur ``maintype/"
"subtype``."

#: library/email.contentmanager.rst:136
msgid ""
"For ``str``, set the MIME ``maintype`` to ``text``, and set the subtype to "
"*subtype* if it is specified, or ``plain`` if it is not."
msgstr ""
"Pour ``str``, définit le ``maintype`` MIME à ``text`` et définit le sous-"
"type à *subtype* s'il est spécifié, ou à ``plain`` s'il ne l'est pas."

#: library/email.contentmanager.rst:138
msgid ""
"For ``bytes``, use the specified *maintype* and *subtype*, or raise a :exc:"
"`TypeError` if they are not specified."
msgstr ""
"Pour ``bytes``, utilise les *maintype* et *subtype* spécifiés, ou lève une :"
"exc:`TypeError` s'ils ne sont pas spécifiés."

#: library/email.contentmanager.rst:140
msgid ""
"For :class:`~email.message.EmailMessage` objects, set the maintype to "
"``message``, and set the subtype to *subtype* if it is specified or "
"``rfc822`` if it is not.  If *subtype* is ``partial``, raise an error "
"(``bytes`` objects must be used to construct ``message/partial`` parts)."
msgstr ""
"Pour les objets :class:`~email.message.EmailMessage`, définit le type "
"principal (*maintype*) à ``message`` et définit le sous-type à *subtype* "
"s'il est spécifié ou à ``rfc822`` s'il ne l'est pas. Si *subtype* est "
"``partial``, lève une erreur (les objets ``bytes`` doivent être utilisés "
"pour construire les parties ``message/partial``)."

#: library/email.contentmanager.rst:146
msgid ""
"If *charset* is provided (which is valid only for ``str``), encode the "
"string to bytes using the specified character set.  The default is "
"``utf-8``.  If the specified *charset* is a known alias for a standard MIME "
"charset name, use the standard charset instead."
msgstr ""
"Si *charset* est fourni (qui n'est valide que pour ``str``), encode la "
"chaîne en octets en utilisant le jeu de caractères spécifié. La valeur par "
"défaut est ``utf-8``. Si le *charset* spécifié est un alias connu pour un "
"nom de jeu de caractères MIME standard, utilise plutôt le jeu de caractères "
"standard."

#: library/email.contentmanager.rst:151
msgid ""
"If *cte* is set, encode the payload using the specified content transfer "
"encoding, and set the :mailheader:`Content-Transfer-Encoding` header to that "
"value.  Possible values for *cte* are ``quoted-printable``, ``base64``, "
"``7bit``, ``8bit``, and ``binary``.  If the input cannot be encoded in the "
"specified encoding (for example, specifying a *cte* of ``7bit`` for an input "
"that contains non-ASCII values), raise a :exc:`ValueError`."
msgstr ""
"Si *cte* est défini, encode la charge utile à l'aide de l'encodage de "
"transfert de contenu spécifié et définit l'en-tête :mailheader:`Content-"
"Transfer-Encoding` à cette valeur. Les valeurs possibles pour *cte* sont "
"``quoted-printable``, ``base64``, ``7bit``, ``8bit`` et ``binary``. Si "
"l'entrée ne peut pas être encodée dans l'encodage spécifié (par exemple, en "
"spécifiant un *cte* de ``7bit`` pour une entrée qui contient des valeurs non-"
"ASCII), lève une :exc:`ValueError`."

#: library/email.contentmanager.rst:159
msgid ""
"For ``str`` objects, if *cte* is not set use heuristics to determine the "
"most compact encoding."
msgstr ""
"Pour les objets ``str``, si *cte* n'est pas défini, utilise une heuristique "
"pour déterminer l'encodage le plus compact."

#: library/email.contentmanager.rst:161
msgid ""
"For :class:`~email.message.EmailMessage`, per :rfc:`2046`, raise an error if "
"a *cte* of ``quoted-printable`` or ``base64`` is requested for *subtype* "
"``rfc822``, and for any *cte* other than ``7bit`` for *subtype* ``external-"
"body``.  For ``message/rfc822``, use ``8bit`` if *cte* is not specified.  "
"For all other values of *subtype*, use ``7bit``."
msgstr ""
"Pour :class:`~email.message.EmailMessage`, selon la :rfc:`2046`, pour le "
"*subtype* ``rfc822``, lève une erreur pour un *cte* valant ``quoted-"
"printable`` ou ``base64``. Pour le *subtype* ``external-body``, lève une "
"erreur pour tout *cte* autre que ``7bit``. Pour ``message/rfc822``, la "
"valeur par défaut de *cte* est ``8bit``. Pour toutes les autres valeurs de "
"*sous-type*, la valeur par défaut de *cte* est ``7bit``."

# suit un :
#: library/email.contentmanager.rst:168
msgid ""
"A *cte* of ``binary`` does not actually work correctly yet. The "
"``EmailMessage`` object as modified by ``set_content`` is correct, but :"
"class:`~email.generator.BytesGenerator` does not serialize it correctly."
msgstr ""
"la valeur ``binary`` pour *cte* ne fonctionne pas encore correctement. "
"L'objet ``EmailMessage`` tel que modifié par ``set_content`` est correct, "
"mais :class:`~email.generator.BytesGenerator` ne le sérialise pas "
"correctement."

#: library/email.contentmanager.rst:173
msgid ""
"If *disposition* is set, use it as the value of the :mailheader:`Content-"
"Disposition` header.  If not specified, and *filename* is specified, add the "
"header with the value ``attachment``. If *disposition* is not specified and "
"*filename* is also not specified, do not add the header.  The only valid "
"values for *disposition* are ``attachment`` and ``inline``."
msgstr ""
"Si *disposition* est spécifié, utilise cette valeur pour l'en-tête :"
"mailheader:`Content-Disposition`. S'il n'est pas spécifié et que *filename* "
"est spécifié, utilise la valeur ``attachment`` pour l'en-tête. Si ni "
"*disposition* ni *filename* ne sont spécifiés, n'ajoute pas cet en-tête. Les "
"seules valeurs valides pour *disposition* sont ``attachment`` et ``inline``."

#: library/email.contentmanager.rst:180
msgid ""
"If *filename* is specified, use it as the value of the ``filename`` "
"parameter of the :mailheader:`Content-Disposition` header."
msgstr ""
"Si *filename* est spécifié, utilise cette valeur pour le paramètre "
"``filename`` de l'en-tête :mailheader:`Content-Disposition`."

#: library/email.contentmanager.rst:183
msgid ""
"If *cid* is specified, add a :mailheader:`Content-ID` header with *cid* as "
"its value."
msgstr ""
"Si *cid* est spécifié, ajoute un en-tête :mailheader:`Content-ID` avec cette "
"valeur."

#: library/email.contentmanager.rst:186
msgid ""
"If *params* is specified, iterate its ``items`` method and use the resulting "
"``(key, value)`` pairs to set additional parameters on the :mailheader:"
"`Content-Type` header."
msgstr ""
"Si *params* est spécifié, itère sur sa méthode ``items`` et utilise les "
"paires ``(clé, valeur)`` résultantes pour définir des paramètres "
"supplémentaires dans l'en-tête :mailheader:`Content-Type`."

#: library/email.contentmanager.rst:190
msgid ""
"If *headers* is specified and is a list of strings of the form ``headername: "
"headervalue`` or a list of ``header`` objects (distinguished from strings by "
"having a ``name`` attribute), add the headers to *msg*."
msgstr ""
"Si *headers* est spécifié et est une liste de chaînes de la forme "
"``headername: headervalue`` ou une liste d'objets ``header`` (distingués des "
"chaînes par l'attribut ``name``), ajoute ces en-têtes à *msg*."

#: library/email.contentmanager.rst:197
msgid "Footnotes"
msgstr "Notes"

#: library/email.contentmanager.rst:198
msgid ""
"Originally added in 3.4 as a :term:`provisional module <provisional package>`"
msgstr ""
"Initialement ajouté dans 3.4 en tant que :term:`paquet provisoire "
"<provisional package>`."
