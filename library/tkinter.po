# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-21 16:37+0200\n"
"PO-Revision-Date: 2019-12-13 23:41+0100\n"
"Last-Translator: pierre choffe <choffepierre@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.6\n"

#: library/tkinter.rst:2
msgid ":mod:`tkinter` --- Python interface to Tcl/Tk"
msgstr ":mod:`tkinter` — Interface Python pour Tcl/Tk"

#: library/tkinter.rst:9
msgid "**Source code:** :source:`Lib/tkinter/__init__.py`"
msgstr "**Code source :** :source:`Lib/tkinter/__init__.py`"

#: library/tkinter.rst:13
#, fuzzy
msgid ""
"The :mod:`tkinter` package (\"Tk interface\") is the standard Python "
"interface to the Tcl/Tk GUI toolkit.  Both Tk and :mod:`tkinter` are "
"available on most Unix platforms, including macOS, as well as on Windows "
"systems."
msgstr ""
"Le paquet :mod:`tkinter` (« interface Tk ») est l'interface Python standard "
"de la boîte à outils d'IUG Tk.  Tk et :mod:`tkinter` sont disponibles sur la "
"plupart des plates-formes Unix, ainsi que sur les systèmes Windows (Tk lui-"
"même ne fait pas partie de Python ; il est maintenu par ActiveState)."

#: library/tkinter.rst:17
msgid ""
"Running ``python -m tkinter`` from the command line should open a window "
"demonstrating a simple Tk interface, letting you know that :mod:`tkinter` is "
"properly installed on your system, and also showing what version of Tcl/Tk "
"is installed, so you can read the Tcl/Tk documentation specific to that "
"version."
msgstr ""
"Exécuter ``python -m tkinter`` depuis la ligne de commande ouvre une fenêtre "
"de démonstration d'une interface Tk simple, vous indiquant que :mod:"
"`tkinter` est correctement installé sur votre système et indiquant également "
"quelle version de Tcl/Tk est installée ; vous pouvez donc lire la "
"documentation Tcl/Tk spécifique à cette version."

#: library/tkinter.rst:22
msgid ""
"Tkinter supports a range of Tcl/Tk versions, built either with or without "
"thread support. The official Python binary release bundles Tcl/Tk 8.6 "
"threaded. See the source code for the :mod:`_tkinter` module for more "
"information about supported versions."
msgstr ""

#: library/tkinter.rst:27
msgid ""
"Tkinter is not a thin wrapper, but adds a fair amount of its own logic to "
"make the experience more pythonic. This documentation will concentrate on "
"these additions and changes, and refer to the official Tcl/Tk documentation "
"for details that are unchanged."
msgstr ""

#: library/tkinter.rst:34
msgid ""
"Tcl/Tk 8.5 (2007) introduced a modern set of themed user interface "
"components along with a new API to use them. Both old and new APIs are still "
"available. Most documentation you will find online still uses the old API "
"and can be woefully outdated."
msgstr ""

#: library/tkinter.rst:43
#, fuzzy
msgid "`TkDocs <http://tkdocs.com/>`_"
msgstr "`TKDocs <http://www.tkdocs.com/>`_"

#: library/tkinter.rst:42
msgid ""
"Extensive tutorial on creating user interfaces with Tkinter.  Explains key "
"concepts, and illustrates recommended approaches using the modern API."
msgstr ""

#: library/tkinter.rst:46
msgid ""
"`Tkinter 8.5 reference: a GUI for Python <https://www.tkdocs.com/shipman/>`_"
msgstr ""

#: library/tkinter.rst:46
msgid ""
"Reference documentation for Tkinter 8.5 detailing available classes, "
"methods, and options."
msgstr ""

#: library/tkinter.rst:48
msgid "Tcl/Tk Resources:"
msgstr ""

#: library/tkinter.rst:51
msgid "`Tk commands <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"
msgstr "`Commandes Tk <https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm>`_"

#: library/tkinter.rst:51
msgid ""
"Comprehensive reference to each of the underlying Tcl/Tk commands used by "
"Tkinter."
msgstr ""

#: library/tkinter.rst:54
#, fuzzy
msgid "`Tcl/Tk Home Page <https://www.tcl.tk>`_"
msgstr "`Pages de manuel récentes de Tcl/Tk <https://www.tcl.tk/doc/>`_"

#: library/tkinter.rst:54
msgid "Additional documentation, and links to Tcl/Tk core development."
msgstr ""

#: library/tkinter.rst:56
msgid "Books:"
msgstr ""

#: library/tkinter.rst:59
#, fuzzy
msgid ""
"`Modern Tkinter for Busy Python Developers <https://tkdocs.com/book.html>`_"
msgstr ""
"`Modern Tkinter for Busy Python Developers <https://www.amazon.com/Modern-"
"Tkinter-Python-Developers-ebook/dp/B0071QDNLO/>`_"

#: library/tkinter.rst:59
msgid "By Mark Roseman. (ISBN 978-1999149567)"
msgstr ""

#: library/tkinter.rst:62
#, fuzzy
msgid ""
"`Python and Tkinter Programming <https://www.packtpub.com/product/python-gui-"
"programming-with-tkinter/9781788835886>`_"
msgstr ""
"`Python and Tkinter Programming <https://www.manning.com/books/python-and-"
"tkinter-programming>`_"

#: library/tkinter.rst:62
msgid "By Alan Moore. (ISBN 978-1788835886)"
msgstr ""

#: library/tkinter.rst:65
msgid "`Programming Python <http://learning-python.com/about-pp4e.html>`_"
msgstr "`Programming Python <http://learning-python.com/about-pp4e.html>`_"

#: library/tkinter.rst:65
#, fuzzy
msgid "By Mark Lutz; has excellent coverage of Tkinter. (ISBN 978-0596158101)"
msgstr "Livre de Mark Lutz, qui couvre excellemment bien Tkinter."

#: library/tkinter.rst:67
#, fuzzy
msgid ""
"`Tcl and the Tk Toolkit (2nd edition)  <https://www.amazon.com/exec/obidos/"
"ASIN/032133633X>`_"
msgstr ""
"`Tcl and the Tk Toolkit <https://www.amazon.com/exec/obidos/"
"ASIN/020163337X>`_"

#: library/tkinter.rst:68
msgid ""
"By John Ousterhout, inventor of Tcl/Tk, and Ken Jones; does not cover "
"Tkinter. (ISBN 978-0321336330)"
msgstr ""

#: library/tkinter.rst:72
msgid "Architecture"
msgstr ""

#: library/tkinter.rst:74
msgid ""
"Tcl/Tk is not a single library but rather consists of a few distinct "
"modules, each with separate functionality and its own official "
"documentation. Python's binary releases also ship an add-on module together "
"with it."
msgstr ""

#: library/tkinter.rst:90
msgid "Tcl"
msgstr ""

#: library/tkinter.rst:80
msgid ""
"Tcl is a dynamic interpreted programming language, just like Python. Though "
"it can be used on its own as a general-purpose programming language, it is "
"most commonly embedded into C applications as a scripting engine or an "
"interface to the Tk toolkit. The Tcl library has a C interface to create and "
"manage one or more instances of a Tcl interpreter, run Tcl commands and "
"scripts in those instances, and add custom commands implemented in either "
"Tcl or C. Each interpreter has an event queue, and there are facilities to "
"send events to it and process them. Unlike Python, Tcl's execution model is "
"designed around cooperative multitasking, and Tkinter bridges this "
"difference (see `Threading model`_ for details)."
msgstr ""

#: library/tkinter.rst:908
msgid "Tk"
msgstr "Tk"

#: library/tkinter.rst:93
msgid ""
"Tk is a `Tcl package <http://wiki.tcl.tk/37432>`_ implemented in C that adds "
"custom commands to create and manipulate GUI widgets. Each :class:`Tk` "
"object embeds its own Tcl interpreter instance with Tk loaded into it. Tk's "
"widgets are very customizable, though at the cost of a dated appearance. Tk "
"uses Tcl's event queue to generate and process GUI events."
msgstr ""

#: library/tkinter.rst:103
#, fuzzy
msgid "Ttk"
msgstr "Tk"

#: library/tkinter.rst:100
msgid ""
"Themed Tk (Ttk) is a newer family of Tk widgets that provide a much better "
"appearance on different platforms than many of the classic Tk widgets. Ttk "
"is distributed as part of Tk, starting with Tk version 8.5. Python bindings "
"are provided in a separate module, :mod:`tkinter.ttk`."
msgstr ""

#: library/tkinter.rst:105
msgid ""
"Internally, Tk and Ttk use facilities of the underlying operating system, i."
"e., Xlib on Unix/X11, Cocoa on macOS, GDI on Windows."
msgstr ""

#: library/tkinter.rst:108
msgid ""
"When your Python application uses a class in Tkinter, e.g., to create a "
"widget, the :mod:`tkinter` module first assembles a Tcl/Tk command string. "
"It passes that Tcl command string to an internal :mod:`_tkinter` binary "
"module, which then calls the Tcl interpreter to evaluate it. The Tcl "
"interpreter will then call into the Tk and/or Ttk packages, which will in "
"turn make calls to Xlib, Cocoa, or GDI."
msgstr ""

#: library/tkinter.rst:116
msgid "Tkinter Modules"
msgstr "Modules Tkinter"

#: library/tkinter.rst:118
msgid ""
"Support for Tkinter is spread across several modules. Most applications will "
"need the main :mod:`tkinter` module, as well as the :mod:`tkinter.ttk` "
"module, which provides the modern themed widget set and API::"
msgstr ""

#: library/tkinter.rst:129
#, fuzzy
msgid ""
"Construct a toplevel Tk widget, which is usually the main window of an "
"application, and initialize a Tcl interpreter for this widget.  Each "
"instance has its own associated Tcl interpreter."
msgstr ""
"La classe :class:`Tk` est instanciée sans argument. Cela crée un widget de "
"haut niveau de Tk qui est généralement la fenêtre principale d'une "
"application. Chaque instance a son propre interpréteur Tcl associé."

#: library/tkinter.rst:133
msgid ""
"The :class:`Tk` class is typically instantiated using all default values. "
"However, the following keyword arguments are currently recognized:"
msgstr ""

#: library/tkinter.rst:137
msgid "*screenName*"
msgstr ""

#: library/tkinter.rst:137
msgid ""
"When given (as a string), sets the :envvar:`DISPLAY` environment variable. "
"(X11 only)"
msgstr ""

#: library/tkinter.rst:140
msgid "*baseName*"
msgstr ""

#: library/tkinter.rst:140
msgid ""
"Name of the profile file.  By default, *baseName* is derived from the "
"program name (``sys.argv[0]``)."
msgstr ""

#: library/tkinter.rst:143
#, fuzzy
msgid "*className*"
msgstr "*classCommand*"

#: library/tkinter.rst:143
msgid ""
"Name of the widget class.  Used as a profile file and also as the name with "
"which Tcl is invoked (*argv0* in *interp*)."
msgstr ""

#: library/tkinter.rst:146
msgid "*useTk*"
msgstr ""

#: library/tkinter.rst:146
msgid ""
"If ``True``, initialize the Tk subsystem.  The :func:`tkinter.Tcl() <Tcl>` "
"function sets this to ``False``."
msgstr ""

#: library/tkinter.rst:149
msgid "*sync*"
msgstr ""

#: library/tkinter.rst:149
msgid ""
"If ``True``, execute all X server commands synchronously, so that errors are "
"reported immediately.  Can be used for debugging. (X11 only)"
msgstr ""

#: library/tkinter.rst:159
msgid "*use*"
msgstr ""

#: library/tkinter.rst:152
msgid ""
"Specifies the *id* of the window in which to embed the application, instead "
"of it being created as an independent toplevel window. *id* must be "
"specified in the same way as the value for the -use option for toplevel "
"widgets (that is, it has a form like that returned by :meth:`winfo_id`)."
msgstr ""

#: library/tkinter.rst:158
msgid ""
"Note that on some platforms this will only work correctly if *id* refers to "
"a Tk frame or toplevel that has its -container option enabled."
msgstr ""

#: library/tkinter.rst:161
msgid ""
":class:`Tk` reads and interprets profile files, named :file:`.{className}."
"tcl` and :file:`.{baseName}.tcl`, into the Tcl interpreter and calls :func:"
"`exec` on the contents of :file:`.{className}.py` and :file:`.{baseName}."
"py`.  The path for the profile files is the :envvar:`HOME` environment "
"variable or, if that isn't defined, then :attr:`os.curdir`."
msgstr ""

#: library/tkinter.rst:170
msgid ""
"The Tk application object created by instantiating :class:`Tk`.  This "
"provides access to the Tcl interpreter.  Each widget that is attached the "
"same instance of :class:`Tk` has the same value for its :attr:`tk` attribute."
msgstr ""

#: library/tkinter.rst:177
msgid ""
"The widget object that contains this widget.  For :class:`Tk`, the *master* "
"is :const:`None` because it is the main window.  The terms *master* and "
"*parent* are similar and sometimes used interchangeably as argument names; "
"however, calling :meth:`winfo_parent` returns a string of the widget name "
"whereas :attr:`master` returns the object. *parent*/*child* reflects the "
"tree-like relationship while *master*/*slave* reflects the container "
"structure."
msgstr ""

#: library/tkinter.rst:187
msgid ""
"The immediate descendants of this widget as a :class:`dict` with the child "
"widget names as the keys and the child instance objects as the values."
msgstr ""

#: library/tkinter.rst:194
msgid ""
"The :func:`Tcl` function is a factory function which creates an object much "
"like that created by the :class:`Tk` class, except that it does not "
"initialize the Tk subsystem.  This is most often useful when driving the Tcl "
"interpreter in an environment where one doesn't want to create extraneous "
"toplevel windows, or where one cannot (such as Unix/Linux systems without an "
"X server).  An object created by the :func:`Tcl` object can have a Toplevel "
"window created (and the Tk subsystem initialized) by calling its :meth:"
"`loadtk` method."
msgstr ""
"La fonction :func:`Tcl` est une fonction fabrique qui crée un objet "
"similaire à celui créé par la classe :class:`Tk`, sauf qu'elle n'initialise "
"pas le sous-système Tk.  Ceci est le plus souvent utile lorsque vous pilotez "
"l'interpréteur Tcl dans un environnement où vous ne voulez pas créer des "
"fenêtres de haut niveau supplémentaires, ou alors si c'est impossible (comme "
"les systèmes Unix/Linux sans un serveur X).  Un objet créé par :func:`Tcl` "
"peut avoir une fenêtre de haut niveau créée (et le sous-système Tk "
"initialisé) en appelant sa méthode :meth:`loadtk`."

#: library/tkinter.rst:203
#, fuzzy
msgid "The modules that provide Tk support include:"
msgstr "Parmi les modules qui savent gérer Tk, nous pouvons citer :"

#: library/tkinter.rst:206
#, fuzzy
msgid ":mod:`tkinter`"
msgstr ":mod:`tkinter.dnd`"

#: library/tkinter.rst:206
#, fuzzy
msgid "Main Tkinter module."
msgstr "Modules Tkinter"

#: library/tkinter.rst:209
msgid ":mod:`tkinter.colorchooser`"
msgstr ":mod:`tkinter.colorchooser`"

#: library/tkinter.rst:209
msgid "Dialog to let the user choose a color."
msgstr "Boîte de dialogue permettant à l'utilisateur de choisir une couleur."

#: library/tkinter.rst:212
msgid ":mod:`tkinter.commondialog`"
msgstr ":mod:`tkinter.commondialog`"

#: library/tkinter.rst:212
msgid "Base class for the dialogs defined in the other modules listed here."
msgstr ""
"Classe de base pour les boîtes de dialogue définies dans les autres modules "
"listés ici."

#: library/tkinter.rst:215
msgid ":mod:`tkinter.filedialog`"
msgstr ":mod:`tkinter.filedialog`"

#: library/tkinter.rst:215
msgid "Common dialogs to allow the user to specify a file to open or save."
msgstr ""
"Boîtes de dialogue standard permettant à l'utilisateur de spécifier un "
"fichier à ouvrir ou à enregistrer."

#: library/tkinter.rst:218
msgid ":mod:`tkinter.font`"
msgstr ":mod:`tkinter.font`"

#: library/tkinter.rst:218
msgid "Utilities to help work with fonts."
msgstr "Utilitaires pour gérer les polices de caractères."

#: library/tkinter.rst:221
msgid ":mod:`tkinter.messagebox`"
msgstr ":mod:`tkinter.messagebox`"

#: library/tkinter.rst:221
msgid "Access to standard Tk dialog boxes."
msgstr "Accès aux boîtes de dialogue Tk standard."

#: library/tkinter.rst:224
msgid ":mod:`tkinter.scrolledtext`"
msgstr ":mod:`tkinter.scrolledtext`"

#: library/tkinter.rst:224
msgid "Text widget with a vertical scroll bar built in."
msgstr ""
"Outil d'affichage de texte avec une barre de défilement verticale intégrée."

#: library/tkinter.rst:227
msgid ":mod:`tkinter.simpledialog`"
msgstr ":mod:`tkinter.simpledialog`"

#: library/tkinter.rst:227
msgid "Basic dialogs and convenience functions."
msgstr "Boîtes de dialogue simples et fonctions utilitaires."

#: library/tkinter.rst:231
#, fuzzy
msgid ":mod:`tkinter.ttk`"
msgstr ":mod:`tkinter.font`"

#: library/tkinter.rst:230
msgid ""
"Themed widget set introduced in Tk 8.5, providing modern alternatives for "
"many of the classic widgets in the main :mod:`tkinter` module."
msgstr ""

#: library/tkinter.rst:233
msgid "Additional modules:"
msgstr ""

#: library/tkinter.rst:240
#, fuzzy
msgid ":mod:`_tkinter`"
msgstr ":mod:`tkinter.dnd`"

#: library/tkinter.rst:236
#, fuzzy
msgid ""
"A binary module that contains the low-level interface to Tcl/Tk. It is "
"automatically imported by the main :mod:`tkinter` module, and should never "
"be used directly by application programmers. It is usually a shared library "
"(or DLL), but might in some cases be statically linked with the Python "
"interpreter."
msgstr ""
"La plupart du temps, :mod:`tkinter` est tout ce dont vous avez vraiment "
"besoin mais un certain nombre de modules supplémentaires sont également "
"disponibles.  L'interface Tk est située dans un module binaire nommé :mod:"
"`_tkinter`. Ce module contient l'interface de bas niveau vers Tk et ne doit "
"jamais être utilisé directement par les développeurs. Il s'agit généralement "
"d'une bibliothèque partagée (ou DLL) mais elle peut, dans certains cas, être "
"liée statiquement à l'interpréteur Python."

#: library/tkinter.rst:244
#, fuzzy
msgid ":mod:`idlelib`"
msgstr ":mod:`turtle`"

#: library/tkinter.rst:243
msgid ""
"Python's Integrated Development and Learning Environment (IDLE). Based on :"
"mod:`tkinter`."
msgstr ""

#: library/tkinter.rst:249
#, fuzzy
msgid ":mod:`tkinter.constants`"
msgstr ":mod:`tkinter.font`"

#: library/tkinter.rst:247
msgid ""
"Symbolic constants that can be used in place of strings when passing various "
"parameters to Tkinter calls. Automatically imported by the main :mod:"
"`tkinter` module."
msgstr ""

#: library/tkinter.rst:253
msgid ":mod:`tkinter.dnd`"
msgstr ":mod:`tkinter.dnd`"

#: library/tkinter.rst:252
#, fuzzy
msgid ""
"(experimental) Drag-and-drop support for :mod:`tkinter`. This will become "
"deprecated when it is replaced with the Tk DND."
msgstr ""
"Support du glisser-déposer pour :mod:`tkinter`. Il s'agit d'une méthode "
"expérimentale qui ne sera plus maintenue lorsqu'elle sera remplacée par Tk "
"DND."

#: library/tkinter.rst:257
#, fuzzy
msgid ":mod:`tkinter.tix`"
msgstr ":mod:`tkinter.font`"

#: library/tkinter.rst:256
msgid ""
"(deprecated) An older third-party Tcl/Tk package that adds several new "
"widgets. Better alternatives for most can be found in :mod:`tkinter.ttk`."
msgstr ""

#: library/tkinter.rst:261
msgid ":mod:`turtle`"
msgstr ":mod:`turtle`"

#: library/tkinter.rst:260
msgid "Turtle graphics in a Tk window."
msgstr "Tortue graphique dans une fenêtre Tk."

#: library/tkinter.rst:264
msgid "Tkinter Life Preserver"
msgstr "Guide de survie Tkinter"

#: library/tkinter.rst:266
msgid ""
"This section is not designed to be an exhaustive tutorial on either Tk or "
"Tkinter.  For that, refer to one of the external resources noted earlier. "
"Instead, this section provides a very quick orientation to what a Tkinter "
"application looks like, identifies foundational Tk concepts, and explains "
"how the Tkinter wrapper is structured."
msgstr ""

#: library/tkinter.rst:272
msgid ""
"The remainder of this section will help you to identify the classes, "
"methods, and options you'll need in your Tkinter application, and where to "
"find more detailed documentation on them, including in the official Tcl/Tk "
"reference manual."
msgstr ""

#: library/tkinter.rst:279
#, fuzzy
msgid "A Hello World Program"
msgstr "Un simple programme *Hello World*"

#: library/tkinter.rst:281
msgid ""
"We'll start by walking through a \"Hello World\" application in Tkinter. "
"This isn't the smallest one we could write, but has enough to illustrate "
"some key concepts you'll need to know."
msgstr ""

#: library/tkinter.rst:297
msgid ""
"After the imports, the next line creates an instance of the :class:`Tk` "
"class, which initializes Tk and creates its associated Tcl interpreter. It "
"also creates a toplevel window, known as the root window, which serves as "
"the main window of the application."
msgstr ""

#: library/tkinter.rst:302
msgid ""
"The following line creates a frame widget, which in this case will contain a "
"label and a button we'll create next. The frame is fit inside the root "
"window."
msgstr ""

#: library/tkinter.rst:306
msgid ""
"The next line creates a label widget holding a static text string. The :meth:"
"`grid` method is used to specify the relative layout (position) of the label "
"within its containing frame widget, similar to how tables in HTML work."
msgstr ""

#: library/tkinter.rst:310
msgid ""
"A button widget is then created, and placed to the right of the label. When "
"pressed, it will call the :meth:`destroy` method of the root window."
msgstr ""

#: library/tkinter.rst:313
msgid ""
"Finally, the :meth:`mainloop` method puts everything on the display, and "
"responds to user input until the program terminates."
msgstr ""

#: library/tkinter.rst:319
msgid "Important Tk Concepts"
msgstr ""

#: library/tkinter.rst:321
msgid "Even this simple program illustrates the following key Tk concepts:"
msgstr ""

#: library/tkinter.rst:326
#, fuzzy
msgid "widgets"
msgstr "widget"

#: library/tkinter.rst:324
msgid ""
"A Tkinter user interface is made up of individual *widgets*. Each widget is "
"represented as a Python object, instantiated from classes like :class:`ttk."
"Frame`, :class:`ttk.Label`, and :class:`ttk.Button`."
msgstr ""

#: library/tkinter.rst:332
msgid "widget hierarchy"
msgstr ""

#: library/tkinter.rst:329
msgid ""
"Widgets are arranged in a *hierarchy*. The label and button were contained "
"within a frame, which in turn was contained within the root window. When "
"creating each *child* widget, its *parent* widget is passed as the first "
"argument to the widget constructor."
msgstr ""

#: library/tkinter.rst:337
msgid "configuration options"
msgstr ""

#: library/tkinter.rst:335
msgid ""
"Widgets have *configuration options*, which modify their appearance and "
"behavior, such as the text to display in a label or button. Different "
"classes of widgets will have different sets of options."
msgstr ""

#: library/tkinter.rst:342
msgid "geometry management"
msgstr ""

#: library/tkinter.rst:340
msgid ""
"Widgets aren't automatically added to the user interface when they are "
"created. A *geometry manager* like ``grid`` controls where in the user "
"interface they are placed."
msgstr ""

#: library/tkinter.rst:348
msgid "event loop"
msgstr ""

#: library/tkinter.rst:345
msgid ""
"Tkinter reacts to user input, changes from your program, and even refreshes "
"the display only when actively running an *event loop*. If your program "
"isn't running the event loop, your user interface won't update."
msgstr ""

#: library/tkinter.rst:351
msgid "Understanding How Tkinter Wraps Tcl/Tk"
msgstr ""

#: library/tkinter.rst:353
msgid ""
"When your application uses Tkinter's classes and methods, internally Tkinter "
"is assembling strings representing Tcl/Tk commands, and executing those "
"commands in the Tcl interpreter attached to your applicaton's :class:`Tk` "
"instance."
msgstr ""

#: library/tkinter.rst:358
msgid ""
"Whether it's trying to navigate reference documentation, trying to find the "
"right method or option, adapting some existing code, or debugging your "
"Tkinter application, there are times that it will be useful to understand "
"what those underlying Tcl/Tk commands look like."
msgstr ""

#: library/tkinter.rst:363
msgid ""
"To illustrate, here is the Tcl/Tk equivalent of the main part of the Tkinter "
"script above."
msgstr ""

#: library/tkinter.rst:374
msgid ""
"Tcl's syntax is similar to many shell languages, where the first word is the "
"command to be executed, with arguments to that command following it, "
"separated by spaces. Without getting into too many details, notice the "
"following:"
msgstr ""

#: library/tkinter.rst:378
msgid ""
"The commands used to create widgets (like ``ttk::frame``) correspond to "
"widget classes in Tkinter."
msgstr ""

#: library/tkinter.rst:381
msgid ""
"Tcl widget options (like ``-text``) correspond to keyword arguments in "
"Tkinter."
msgstr ""

#: library/tkinter.rst:384
msgid ""
"Widgets are referred to by a *pathname* in Tcl (like ``.frm.btn``), whereas "
"Tkinter doesn't use names but object references."
msgstr ""

#: library/tkinter.rst:387
msgid ""
"A widget's place in the widget hierarchy is encoded in its (hierarchical) "
"pathname, which uses a ``.`` (dot) as a path separator. The pathname for the "
"root window is just ``.`` (dot). In Tkinter, the hierarchy is defined not by "
"pathname but by specifying the parent widget when creating each child widget."
msgstr ""

#: library/tkinter.rst:393
msgid ""
"Operations which are implemented as separate *commands* in Tcl (like "
"``grid`` or ``destroy``) are represented as *methods* on Tkinter widget "
"objects. As you'll see shortly, at other times Tcl uses what appear to be "
"method calls on widget objects, which more closely mirror what would is used "
"in Tkinter."
msgstr ""

#: library/tkinter.rst:401
msgid "How do I...? What option does...?"
msgstr ""

#: library/tkinter.rst:403
msgid ""
"If you're not sure how to do something in Tkinter, and you can't immediately "
"find it in the tutorial or reference documentation you're using, there are a "
"few strategies that can be helpful."
msgstr ""

#: library/tkinter.rst:407
msgid ""
"First, remember that the details of how individual widgets work may vary "
"across different versions of both Tkinter and Tcl/Tk. If you're searching "
"documentation, make sure it corresponds to the Python and Tcl/Tk versions "
"installed on your system."
msgstr ""

#: library/tkinter.rst:412
msgid ""
"When searching for how to use an API, it helps to know the exact name of the "
"class, option, or method that you're using. Introspection, either in an "
"interactive Python shell or with :func:`print`, can help you identify what "
"you need."
msgstr ""

#: library/tkinter.rst:417
msgid ""
"To find out what configuration options are available on any widget, call "
"its :meth:`configure` method, which returns a dictionary containing a "
"variety of information about each object, including its default and current "
"values. Use :meth:`keys` to get just the names of each option."
msgstr ""

#: library/tkinter.rst:427
msgid ""
"As most widgets have many configuration options in common, it can be useful "
"to find out which are specific to a particular widget class. Comparing the "
"list of options to that of a simpler widget, like a frame, is one way to do "
"that."
msgstr ""

#: library/tkinter.rst:436
msgid ""
"Similarly, you can find the available methods for a widget object using the "
"standard :func:`dir` function. If you try it, you'll see there are over 200 "
"common widget methods, so again identifying those specific to a widget class "
"is helpful."
msgstr ""

#: library/tkinter.rst:448
msgid "Navigating the Tcl/Tk Reference Manual"
msgstr ""

#: library/tkinter.rst:450
msgid ""
"As noted, the official `Tk commands <https://www.tcl.tk/man/tcl8.6/TkCmd/"
"contents.htm>`_ reference manual (man pages) is often the most accurate "
"description of what specific operations on widgets do. Even when you know "
"the name of the option or method that you need, you may still have a few "
"places to look."
msgstr ""

#: library/tkinter.rst:455
msgid ""
"While all operations in Tkinter are implemented as method calls on widget "
"objects, you've seen that many Tcl/Tk operations appear as commands that "
"take a widget pathname as its first parameter, followed by optional "
"parameters, e.g."
msgstr ""

#: library/tkinter.rst:465
msgid ""
"Others, however, look more like methods called on a widget object (in fact, "
"when you create a widget in Tcl/Tk, it creates a Tcl command with the name "
"of the widget pathname, with the first parameter to that command being the "
"name of a method to call)."
msgstr ""

#: library/tkinter.rst:476
msgid ""
"In the official Tcl/Tk reference documentation, you'll find most operations "
"that look like method calls on the man page for a specific widget (e.g., "
"you'll find the :meth:`invoke` method on the `ttk::button <https://www.tcl."
"tk/man/tcl8.6/TkCmd/ttk_button.htm>`_ man page), while functions that take a "
"widget as a parameter often have their own man page (e.g., `grid <https://"
"www.tcl.tk/man/tcl8.6/TkCmd/grid.htm>`_)."
msgstr ""

#: library/tkinter.rst:484
msgid ""
"You'll find many common options and methods in the `options <https://www.tcl."
"tk/man/tcl8.6/TkCmd/options.htm>`_ or `ttk::widget <https://www.tcl.tk/man/"
"tcl8.6/TkCmd/ttk_widget.htm>`_ man pages, while others are found in the man "
"page for a specific widget class."
msgstr ""

#: library/tkinter.rst:489
msgid ""
"You'll also find that many Tkinter methods have compound names, e.g., :func:"
"`winfo_x`, :func:`winfo_height`, :func:`winfo_viewable`. You'd find "
"documentation for all of these in the `winfo <https://www.tcl.tk/man/tcl8.6/"
"TkCmd/winfo.htm>`_ man page."
msgstr ""

#: library/tkinter.rst:495
msgid ""
"Somewhat confusingly, there are also methods on all Tkinter widgets that "
"don't actually operate on the widget, but operate at a global scope, "
"independent of any widget. Examples are methods for accessing the clipboard "
"or the system bell. (They happen to be implemented as methods in the base :"
"class:`Widget` class that all Tkinter widgets inherit from)."
msgstr ""

#: library/tkinter.rst:504
msgid "Threading model"
msgstr ""

#: library/tkinter.rst:506
msgid ""
"Python and Tcl/Tk have very different threading models, which :mod:`tkinter` "
"tries to bridge. If you use threads, you may need to be aware of this."
msgstr ""

#: library/tkinter.rst:509
msgid ""
"A Python interpreter may have many threads associated with it. In Tcl, "
"multiple threads can be created, but each thread has a separate Tcl "
"interpreter instance associated with it. Threads can also create more than "
"one interpreter instance, though each interpreter instance can be used only "
"by the one thread that created it."
msgstr ""

#: library/tkinter.rst:514
msgid ""
"Each :class:`Tk` object created by :mod:`tkinter` contains a Tcl "
"interpreter. It also keeps track of which thread created that interpreter. "
"Calls to :mod:`tkinter` can be made from any Python thread. Internally, if a "
"call comes from a thread other than the one that created the :class:`Tk` "
"object, an event is posted to the interpreter's event queue, and when "
"executed, the result is returned to the calling Python thread."
msgstr ""

#: library/tkinter.rst:521
msgid ""
"Tcl/Tk applications are normally event-driven, meaning that after "
"initialization, the interpreter runs an event loop (i.e. :func:`Tk."
"mainloop`) and responds to events. Because it is single-threaded, event "
"handlers must respond quickly, otherwise they will block other events from "
"being processed. To avoid this, any long-running computations should not run "
"in an event handler, but are either broken into smaller pieces using timers, "
"or run in another thread. This is different from many GUI toolkits where the "
"GUI runs in a completely separate thread from all application code including "
"event handlers."
msgstr ""

#: library/tkinter.rst:530
msgid ""
"If the Tcl interpreter is not running the event loop and processing events, "
"any :mod:`tkinter` calls made from threads other than the one running the "
"Tcl interpreter will fail."
msgstr ""

#: library/tkinter.rst:534
msgid "A number of special cases exist:"
msgstr ""

#: library/tkinter.rst:536
msgid ""
"Tcl/Tk libraries can be built so they are not thread-aware. In this case, :"
"mod:`tkinter` calls the library from the originating Python thread, even if "
"this is different than the thread that created the Tcl interpreter. A global "
"lock ensures only one call occurs at a time."
msgstr ""

#: library/tkinter.rst:541
msgid ""
"While :mod:`tkinter` allows you to create more than one instance of a :class:"
"`Tk` object (with its own interpreter), all interpreters that are part of "
"the same thread share a common event queue, which gets ugly fast. In "
"practice, don't create more than one instance of :class:`Tk` at a time. "
"Otherwise, it's best to create them in separate threads and ensure you're "
"running a thread-aware Tcl/Tk build."
msgstr ""

#: library/tkinter.rst:547
msgid ""
"Blocking event handlers are not the only way to prevent the Tcl interpreter "
"from reentering the event loop. It is even possible to run multiple nested "
"event loops or abandon the event loop entirely. If you're doing anything "
"tricky when it comes to events or threads, be aware of these possibilities."
msgstr ""

#: library/tkinter.rst:552
msgid ""
"There are a few select :mod:`tkinter` functions that presently work only "
"when called from the thread that created the Tcl interpreter."
msgstr ""

#: library/tkinter.rst:557
msgid "Handy Reference"
msgstr "Guide pratique"

#: library/tkinter.rst:563
msgid "Setting Options"
msgstr "Définition des options"

#: library/tkinter.rst:565
msgid ""
"Options control things like the color and border width of a widget. Options "
"can be set in three ways:"
msgstr ""
"Les options contrôlent des paramètres tels que la couleur et la largeur de "
"la bordure d'un objet graphique. Les options peuvent être réglées de trois "
"façons :"

#: library/tkinter.rst:571
msgid "At object creation time, using keyword arguments"
msgstr "Lors de la création de l'objet, à l'aide d'arguments par mots-clés"

#: library/tkinter.rst:577
msgid "After object creation, treating the option name like a dictionary index"
msgstr ""
"Après la création de l'objet, en manipulant le nom de l'option comme une "
"entrée de dictionnaire"

#: library/tkinter.rst:582
msgid ""
"Use the config() method to update multiple attrs subsequent to object "
"creation"
msgstr ""
"Utilisez la méthode ``config()`` pour mettre à jour plusieurs attributs "
"après la création de l'objet"

#: library/tkinter.rst:584
msgid ""
"For a complete explanation of a given option and its behavior, see the Tk "
"man pages for the widget in question."
msgstr ""
"Pour l'explication complète d'une option donnée et de son comportement, voir "
"les pages de manuel Tk de l'objet graphique en question."

#: library/tkinter.rst:587
msgid ""
"Note that the man pages list \"STANDARD OPTIONS\" and \"WIDGET SPECIFIC "
"OPTIONS\" for each widget.  The former is a list of options that are common "
"to many widgets, the latter are the options that are idiosyncratic to that "
"particular widget.  The Standard Options are documented on the :manpage:"
"`options(3)` man page."
msgstr ""
"Notez que les pages de manuel listent « OPTIONS STANDARD » et « OPTIONS "
"SPÉCIFIQUES D'OBJETS GRAPHIQUES » pour chaque objet graphique.  La première "
"est une liste d'options communes à de nombreux objets graphiques, la seconde "
"est une liste d'options propres à cet objet graphique particulier.  Les "
"options standard sont documentées sur la page de manuel :manpage:"
"`options(3)`."

#: library/tkinter.rst:593
msgid ""
"No distinction between standard and widget-specific options is made in this "
"document.  Some options don't apply to some kinds of widgets. Whether a "
"given widget responds to a particular option depends on the class of the "
"widget; buttons have a ``command`` option, labels do not."
msgstr ""
"Aucune distinction n'est faite dans ce document entre les options standard "
"et les options spécifiques à un objet graphique.  Certaines options ne "
"s'appliquent pas à certains types d'objets graphiques. La réaction d'un "
"objet graphique donné à une option particulière dépend de la classe de "
"l'objet graphique ; les boutons possèdent une option ``command``, pas les "
"étiquettes."

#: library/tkinter.rst:598
msgid ""
"The options supported by a given widget are listed in that widget's man "
"page, or can be queried at runtime by calling the :meth:`config` method "
"without arguments, or by calling the :meth:`keys` method on that widget.  "
"The return value of these calls is a dictionary whose key is the name of the "
"option as a string (for example, ``'relief'``) and whose values are 5-tuples."
msgstr ""
"Les options gérées par un objet graphique donné sont listées dans la page de "
"manuel de cet objet graphique, ou peuvent être interrogées à l'exécution en "
"appelant la méthode :meth:`config` sans argument, ou en appelant la méthode :"
"meth:`keys` sur cet objet graphique.  La valeur de retour de ces appels est "
"un dictionnaire dont la clé est le nom de l'option sous forme de chaîne (par "
"exemple, ``'relief'``) et dont les valeurs sont des *5-uplets*."

#: library/tkinter.rst:604
msgid ""
"Some options, like ``bg`` are synonyms for common options with long names "
"(``bg`` is shorthand for \"background\"). Passing the ``config()`` method "
"the name of a shorthand option will return a 2-tuple, not 5-tuple. The 2-"
"tuple passed back will contain the name of the synonym and the \"real\" "
"option (such as ``('bg', 'background')``)."
msgstr ""
"Certaines options, comme ``bg``, sont des synonymes d'options communes qui "
"ont des noms longs (``bg`` est une abréviation pour ``background`` « arrière-"
"plan »). Passer le nom abrégé d'une option à la méthode ``config()`` renvoie "
"un couple, pas un quintuplet. Le couple renvoyé contient le nom abrégé et le "
"nom *réel* de l'option, par exemple  ``('bg','background')``."

#: library/tkinter.rst:611
msgid "Index"
msgstr "Index"

#: library/tkinter.rst:611
msgid "Meaning"
msgstr "Signification"

#: library/tkinter.rst:611
msgid "Example"
msgstr "Exemple"

#: library/tkinter.rst:613
msgid "0"
msgstr "0"

#: library/tkinter.rst:613
msgid "option name"
msgstr "nom des options"

#: library/tkinter.rst:615
msgid "``'relief'``"
msgstr "``'relief'``"

#: library/tkinter.rst:615
msgid "1"
msgstr "1"

#: library/tkinter.rst:615
msgid "option name for database lookup"
msgstr "nom de l'option pour la recherche dans la base de données"

#: library/tkinter.rst:617
msgid "2"
msgstr "2"

#: library/tkinter.rst:617
msgid "option class for database lookup"
msgstr "classe de l'option pour la recherche dans la base de données"

#: library/tkinter.rst:617
msgid "``'Relief'``"
msgstr "``'Relief'``"

#: library/tkinter.rst:620
msgid "3"
msgstr "3"

#: library/tkinter.rst:620
msgid "default value"
msgstr "valeur par défaut"

#: library/tkinter.rst:620
msgid "``'raised'``"
msgstr "``'raised'``"

#: library/tkinter.rst:622
msgid "4"
msgstr "4"

#: library/tkinter.rst:622
msgid "current value"
msgstr "valeur actuelle"

#: library/tkinter.rst:622
msgid "``'groove'``"
msgstr "``'groove'``"

#: library/tkinter.rst:625
msgid "Example::"
msgstr "Exemple ::"

#: library/tkinter.rst:630
msgid ""
"Of course, the dictionary printed will include all the options available and "
"their values.  This is meant only as an example."
msgstr ""
"Bien sûr, le dictionnaire affiché contient toutes les options disponibles et "
"leurs valeurs.  Ceci n'est donné qu'à titre d'exemple."

#: library/tkinter.rst:635
msgid "The Packer"
msgstr "L'empaqueteur"

#: library/tkinter.rst:639
#, fuzzy
msgid ""
"The packer is one of Tk's geometry-management mechanisms.    Geometry "
"managers are used to specify the relative positioning of widgets within "
"their container - their mutual *master*.  In contrast to the more cumbersome "
"*placer* (which is used less commonly, and we do not cover here), the packer "
"takes qualitative relationship specification - *above*, *to the left of*, "
"*filling*, etc - and works everything out to determine the exact placement "
"coordinates for you."
msgstr ""
"L'empaqueteur est l'un des mécanismes de Tk pour la gestion de la "
"disposition des éléments sur l'écran.    Les gestionnaires de géométrie sont "
"utilisés pour spécifier le positionnement relatif du positionnement des "
"objets graphiques dans leur conteneur — leur *constructeur* mutuel.  "
"Contrairement au plus encombrant *placeur* (qui est utilisé moins souvent, "
"et nous n'en parlons pas ici), l'empaqueteur prend les spécifications "
"qualitatives de relation — *above*, *to the left of*, *filling*, etc — et "
"calcule tout pour déterminer les coordonnées exactes du placement pour vous."

#: library/tkinter.rst:646
msgid ""
"The size of any *master* widget is determined by the size of the \"slave "
"widgets\" inside.  The packer is used to control where slave widgets appear "
"inside the master into which they are packed.  You can pack widgets into "
"frames, and frames into other frames, in order to achieve the kind of layout "
"you desire. Additionally, the arrangement is dynamically adjusted to "
"accommodate incremental changes to the configuration, once it is packed."
msgstr ""
"La taille d'un objet graphique *constructeur* est déterminée par la taille "
"des « objets graphiques hérités » à l'intérieur.  L'empaqueteur est utilisé "
"pour contrôler l'endroit où les objets graphiques hérités apparaissent à "
"l'intérieur du constructeur dans lequel ils sont empaquetés.  Vous pouvez "
"regrouper des objets graphiques dans des cadres, et des cadres dans d'autres "
"cadres, afin d'obtenir le type de mise en page souhaité. De plus, "
"l'arrangement est ajusté dynamiquement pour s'adapter aux changements "
"incrémentiels de la configuration, une fois qu'elle est empaquetées."

#: library/tkinter.rst:653
msgid ""
"Note that widgets do not appear until they have had their geometry specified "
"with a geometry manager.  It's a common early mistake to leave out the "
"geometry specification, and then be surprised when the widget is created but "
"nothing appears.  A widget will appear only after it has had, for example, "
"the packer's :meth:`pack` method applied to it."
msgstr ""
"Notez que les objets graphiques n'apparaissent pas tant que leur disposition "
"n'a pas été spécifiée avec un gestionnaire de géométrie.  C'est une erreur "
"de débutant courante de ne pas tenir compte de la spécification de la "
"géométrie, puis d'être surpris lorsque l'objet graphique est créé mais que "
"rien n'apparaît.  Un objet graphique n'apparaît qu'après que, par exemple, "
"la méthode :meth:`pack` de l'empaqueteur lui ait été appliquée."

#: library/tkinter.rst:659
msgid ""
"The pack() method can be called with keyword-option/value pairs that control "
"where the widget is to appear within its container, and how it is to behave "
"when the main application window is resized.  Here are some examples::"
msgstr ""
"La méthode `pack()` peut être appelée avec des paires mot-clé-option/valeur "
"qui contrôlent où l'objet graphique doit apparaître dans son conteneur et "
"comment il doit se comporter lorsque la fenêtre principale de l'application "
"est redimensionnée.  En voici quelques exemples ::"

#: library/tkinter.rst:669
msgid "Packer Options"
msgstr "Options de l'empaqueteur"

#: library/tkinter.rst:671
msgid ""
"For more extensive information on the packer and the options that it can "
"take, see the man pages and page 183 of John Ousterhout's book."
msgstr ""
"Pour de plus amples informations sur l'empaqueteur et les options qu'il peut "
"prendre, voir les pages de manuel et la page 183 du livre de John Ousterhout."

#: library/tkinter.rst:795
msgid "anchor"
msgstr "*anchor*"

#: library/tkinter.rst:675
msgid ""
"Anchor type.  Denotes where the packer is to place each slave in its parcel."
msgstr ""
"Type d'ancrage.  Indique l'endroit où l'empaqueteur doit placer chaque "
"enfant dans son espace."

#: library/tkinter.rst:678
msgid "expand"
msgstr "*expand*"

#: library/tkinter.rst:678
msgid "Boolean, ``0`` or ``1``."
msgstr "Booléen, ``0`` ou ``1``."

#: library/tkinter.rst:681
msgid "fill"
msgstr "*fill*"

#: library/tkinter.rst:681
msgid "Legal values: ``'x'``, ``'y'``, ``'both'``, ``'none'``."
msgstr "Valeurs acceptées : ``'x'``, ``'y'``, ``'both'``, ``'none'``."

#: library/tkinter.rst:684
msgid "ipadx and ipady"
msgstr "*ipadx* et *ipady*"

#: library/tkinter.rst:684
msgid ""
"A distance - designating internal padding on each side of the slave widget."
msgstr ""
"Une distance — désignant l'écart interne de chaque côté de l'objet graphique "
"hérité."

#: library/tkinter.rst:687
msgid "padx and pady"
msgstr "*padx* et *pady*"

#: library/tkinter.rst:687
msgid ""
"A distance - designating external padding on each side of the slave widget."
msgstr ""
"Une distance — désignant l'écart externe de chaque côté de l'objet graphique "
"hérité."

#: library/tkinter.rst:691
msgid "side"
msgstr "*side*"

#: library/tkinter.rst:690
msgid "Legal values are: ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."
msgstr "Valeurs acceptées : ``'left'``, ``'right'``, ``'top'``, ``'bottom'``."

#: library/tkinter.rst:694
msgid "Coupling Widget Variables"
msgstr "Association des variables de l'objet graphique"

#: library/tkinter.rst:696
msgid ""
"The current-value setting of some widgets (like text entry widgets) can be "
"connected directly to application variables by using special options.  These "
"options are ``variable``, ``textvariable``, ``onvalue``, ``offvalue``, and "
"``value``.  This connection works both ways: if the variable changes for any "
"reason, the widget it's connected to will be updated to reflect the new "
"value."
msgstr ""
"L'assignation d'une valeur à certains objets graphiques (comme les objets "
"graphique de saisie de texte) peut être liée directement aux variables de "
"votre application à l'aide d'options spéciales.  Ces options sont "
"``variable``, ``textvariable``, ``onvalue``, ``offvalue`` et ``value``.  Ce "
"lien fonctionne dans les deux sens : si la variable change pour une raison "
"ou pour une autre, l'objet graphique auquel elle est connectée est mis à "
"jour pour refléter la nouvelle valeur."

#: library/tkinter.rst:702
msgid ""
"Unfortunately, in the current implementation of :mod:`tkinter` it is not "
"possible to hand over an arbitrary Python variable to a widget through a "
"``variable`` or ``textvariable`` option.  The only kinds of variables for "
"which this works are variables that are subclassed from a class called "
"Variable, defined in :mod:`tkinter`."
msgstr ""
"Malheureusement, dans l'implémentation actuelle de :mod:`tkinter` il n'est "
"pas possible de passer une variable Python arbitraire à un objet graphique "
"via une option ``variable`` ou ``textvariable``.  Les seuls types de "
"variables pour lesquels cela fonctionne sont les variables qui sont sous-"
"classées à partir d'une classe appelée `Variable`, définie dans :mod:"
"`tkinter`."

#: library/tkinter.rst:708
msgid ""
"There are many useful subclasses of Variable already defined: :class:"
"`StringVar`, :class:`IntVar`, :class:`DoubleVar`, and :class:`BooleanVar`.  "
"To read the current value of such a variable, call the :meth:`get` method on "
"it, and to change its value you call the :meth:`!set` method.  If you follow "
"this protocol, the widget will always track the value of the variable, with "
"no further intervention on your part."
msgstr ""
"Il existe de nombreuses sous-classes utiles de ``Variable`` déjà définies : :"
"class:`StringVar`, :class:`IntVar`, :class:`DoubleVar` et :class:"
"`BooleanVar`.  Pour lire la valeur courante d'une telle variable, appelez la "
"méthode :meth:`get` dessus et, pour changer sa valeur, appelez la méthode :"
"meth:`!set`.  Si vous suivez ce protocole, l'objet graphique suivra toujours "
"la valeur de la variable, sans autre intervention de votre part."

#: library/tkinter.rst:895
msgid "For example::"
msgstr "Par exemple ::"

#: library/tkinter.rst:748
msgid "The Window Manager"
msgstr "Le gestionnaire de fenêtres"

#: library/tkinter.rst:752
msgid ""
"In Tk, there is a utility command, ``wm``, for interacting with the window "
"manager.  Options to the ``wm`` command allow you to control things like "
"titles, placement, icon bitmaps, and the like.  In :mod:`tkinter`, these "
"commands have been implemented as methods on the :class:`Wm` class.  "
"Toplevel widgets are subclassed from the :class:`Wm` class, and so can call "
"the :class:`Wm` methods directly."
msgstr ""
"Dans Tk, il y a une commande pratique, ``wm``, pour interagir avec le "
"gestionnaire de fenêtres.  Les options de la commande ``wm`` vous permettent "
"de contrôler les titres, le placement, les icônes en mode *bitmap* et encore "
"d'autres choses du même genre.  Dans :mod:`tkinter`, ces commandes ont été "
"implémentées en tant que méthodes sur la classe :class:`Wm`.  Les objets "
"graphiques de haut niveau sont sous-classés à partir de la classe :class:"
"`Wm`, ils peuvent donc appeler directement les méthodes de :class:`Wm`."

#: library/tkinter.rst:759
msgid ""
"To get at the toplevel window that contains a given widget, you can often "
"just refer to the widget's master.  Of course if the widget has been packed "
"inside of a frame, the master won't represent a toplevel window.  To get at "
"the toplevel window that contains an arbitrary widget, you can call the :"
"meth:`_root` method. This method begins with an underscore to denote the "
"fact that this function is part of the implementation, and not an interface "
"to Tk functionality."
msgstr ""
"Pour accéder à la fenêtre du plus haut niveau qui contient un objet "
"graphique donné, vous pouvez souvent simplement vous référer au parent de "
"cet objet graphique.  Bien sûr, si l'objet graphique a été empaqueté à "
"l'intérieur d'un cadre, le parent ne représentera pas la fenêtre de plus "
"haut niveau.  Pour accéder à la fenêtre du plus haut niveau qui contient un "
"objet graphique arbitraire, vous pouvez appeler la méthode :meth:`_root`. "
"Cette méthode commence par un soulignement pour indiquer que cette fonction "
"fait partie de l'implémentation, et non d'une interface avec la "
"fonctionnalité Tk."

#: library/tkinter.rst:766
msgid "Here are some examples of typical usage::"
msgstr "Voici quelques exemples d'utilisation courante ::"

#: library/tkinter.rst:789
msgid "Tk Option Data Types"
msgstr "Types de données des options Tk"

#: library/tkinter.rst:794
msgid ""
"Legal values are points of the compass: ``\"n\"``, ``\"ne\"``, ``\"e\"``, "
"``\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"``, and also "
"``\"center\"``."
msgstr ""
"Les valeurs acceptées sont des points cardinaux : ``\"n\"``, ``\"ne\"``, "
"``\"e\"``, ``\"se\"``, ``\"s\"``, ``\"sw\"``, ``\"w\"``, ``\"nw\"`` et "
"``\"center\"``."

#: library/tkinter.rst:801
msgid "bitmap"
msgstr "*bitmap*"

#: library/tkinter.rst:798
msgid ""
"There are eight built-in, named bitmaps: ``'error'``, ``'gray25'``, "
"``'gray50'``, ``'hourglass'``, ``'info'``, ``'questhead'``, ``'question'``, "
"``'warning'``.  To specify an X bitmap filename, give the full path to the "
"file, preceded with an ``@``, as in ``\"@/usr/contrib/bitmap/gumby.bit\"``."
msgstr ""
"Il y a huit bitmaps intégrés nommés : ``\"error\"``, ``\"gray25\"``, "
"``\"gray50\"``, ``\"hourglass\"``, ``\"info\"``, ``\"questhead\"``, "
"``\"question\"``, ``\"warning\"``.  Pour spécifier un nom de fichier bitmap "
"X, indiquez le chemin complet du fichier, précédé de ``@``, comme dans ``\"@/"
"usr/contrib/bitmap/gumby.bit\"``."

#: library/tkinter.rst:804
msgid "boolean"
msgstr "*boolean*"

#: library/tkinter.rst:804
msgid "You can pass integers 0 or 1 or the strings ``\"yes\"`` or ``\"no\"``."
msgstr ""
"Vous pouvez lui donner les entiers 0 ou 1 ou les chaînes de caractères "
"``\"yes\"`` ou ``\"no\"``."

#: library/tkinter.rst:811
msgid "callback"
msgstr "*callback*"

#: library/tkinter.rst:807
msgid "This is any Python function that takes no arguments.  For example::"
msgstr ""
"N'importe quelle fonction Python qui ne prend pas d'argument.  Par exemple ::"

#: library/tkinter.rst:817
msgid "color"
msgstr "*color*"

#: library/tkinter.rst:814
#, fuzzy
msgid ""
"Colors can be given as the names of X colors in the rgb.txt file, or as "
"strings representing RGB values in 4 bit: ``\"#RGB\"``, 8 bit: "
"``\"#RRGGBB\"``, 12 bit: ``\"#RRRGGGBBB\"``, or 16 bit: "
"``\"#RRRRGGGGBBBB\"`` ranges, where R,G,B here represent any legal hex "
"digit.  See page 160 of Ousterhout's book for details."
msgstr ""
"Les couleurs peuvent être données sous forme de noms de couleurs Xorg dans "
"le fichier *rgb.txt*, ou sous forme de chaînes représentant les valeurs RVB "
"en 4 bits : ``\"#RGB\"``, 8 bits : ``\"#RRVVBB\"``, 12 bits : "
"``\"#RRRVVVBBB\"``, ou 16 bits ``\"#RRRRVVVVBBBB\"``, où R,V,B représente "
"ici tout chiffre hexadécimal valide.  Voir page 160 du livre d'Ousterhout "
"pour plus de détails."

#: library/tkinter.rst:823
msgid "cursor"
msgstr "*cursor*"

#: library/tkinter.rst:820
msgid ""
"The standard X cursor names from :file:`cursorfont.h` can be used, without "
"the ``XC_`` prefix.  For example to get a hand cursor (:const:`XC_hand2`), "
"use the string ``\"hand2\"``.  You can also specify a bitmap and mask file "
"of your own. See page 179 of Ousterhout's book."
msgstr ""
"Les noms de curseurs Xorg standard que l'on trouve dans :file:`cursorfont.h` "
"peuvent être utilisés, sans le préfixe ``XC_``.  Par exemple pour obtenir un "
"curseur en forme de main (:const:`XC_hand2`), utilisez la chaîne "
"``\"hand2\"``.  Vous pouvez également spécifier votre propre bitmap et "
"fichier masque. Voir page 179 du livre d'Ousterhout."

#: library/tkinter.rst:830
msgid "distance"
msgstr "*distance*"

#: library/tkinter.rst:826
msgid ""
"Screen distances can be specified in either pixels or absolute distances. "
"Pixels are given as numbers and absolute distances as strings, with the "
"trailing character denoting units: ``c`` for centimetres, ``i`` for inches, "
"``m`` for millimetres, ``p`` for printer's points.  For example, 3.5 inches "
"is expressed as ``\"3.5i\"``."
msgstr ""
"Les distances à l'écran peuvent être spécifiées en pixels ou en distances "
"absolues. Les pixels sont donnés sous forme de nombres et les distances "
"absolues sous forme de chaînes de caractères, le dernier caractère indiquant "
"les unités : ``c`` pour les centimètres, ``i`` pour les pouces (*inches* en "
"anglais), ``m`` pour les millimètres, ``p`` pour les points d'impression.  "
"Par exemple, 3,5 pouces est noté ``\"3.5i\"``."

#: library/tkinter.rst:835
msgid "font"
msgstr "*font*"

#: library/tkinter.rst:833
msgid ""
"Tk uses a list font name format, such as ``{courier 10 bold}``. Font sizes "
"with positive numbers are measured in points; sizes with negative numbers "
"are measured in pixels."
msgstr ""
"*Tk* utilise un format de nom de police sous forme de liste, tel que "
"``{courier 10 bold}``. Les tailles de polices avec des nombres positifs sont "
"mesurées en points ; les tailles avec des nombres négatifs sont mesurées en "
"pixels."

#: library/tkinter.rst:840
msgid "geometry"
msgstr "*geometry*"

#: library/tkinter.rst:838
msgid ""
"This is a string of the form ``widthxheight``, where width and height are "
"measured in pixels for most widgets (in characters for widgets displaying "
"text). For example: ``fred[\"geometry\"] = \"200x100\"``."
msgstr ""
"Il s'agit d'une chaîne de caractères de la forme ``largeurxhauteur``, où la "
"largeur et la hauteur sont mesurées en pixels pour la plupart des objets "
"graphiques (en caractères pour les objets graphiques affichant du texte). "
"Par exemple : ``fred[\"geometry\"] = \"200x100\"``."

#: library/tkinter.rst:844
msgid "justify"
msgstr "*justify*"

#: library/tkinter.rst:843
msgid ""
"Legal values are the strings: ``\"left\"``, ``\"center\"``, ``\"right\"``, "
"and ``\"fill\"``."
msgstr ""
"Les valeurs acceptées sont les chaînes de caractères : ``\"left\"``, "
"``\"center\"``, ``\"right\"`` et ``\"fill\"``."

#: library/tkinter.rst:849
msgid "region"
msgstr "*region*"

#: library/tkinter.rst:847
msgid ""
"This is a string with four space-delimited elements, each of which is a "
"legal distance (see above).  For example: ``\"2 3 4 5\"`` and ``\"3i 2i 4.5i "
"2i\"`` and ``\"3c 2c 4c 10.43c\"``  are all legal regions."
msgstr ""
"c'est une chaîne de caractères avec quatre éléments séparés par des espaces, "
"chacun d'eux étant une distance valide (voir ci-dessus).  Par exemple : "
"``\"2 3 4 5\"``, ``\" 3i 2i 4.5i 2i\"`` et ``\"3c 2c 4c 10.43c\"`` sont "
"toutes des régions valides."

#: library/tkinter.rst:853
msgid "relief"
msgstr "*relief*"

#: library/tkinter.rst:852
msgid ""
"Determines what the border style of a widget will be.  Legal values are: "
"``\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, and "
"``\"ridge\"``."
msgstr ""
"Détermine le style de bordure d'un objet graphique.  Les valeurs valides "
"sont : ``\"raised\"``, ``\"sunken\"``, ``\"flat\"``, ``\"groove\"``, et "
"``\"ridge\"``."

#: library/tkinter.rst:857
msgid "scrollcommand"
msgstr "*scrollcommand*"

#: library/tkinter.rst:856
msgid ""
"This is almost always the :meth:`!set` method of some scrollbar widget, but "
"can be any widget method that takes a single argument."
msgstr ""
"C'est presque toujours la méthode :meth:`!set` d'un objet graphique de "
"défilement, mais peut être n'importe quelle méthode d'objet graphique qui "
"prend un seul argument."

#: library/tkinter.rst:860
#, fuzzy
msgid "wrap"
msgstr "*wrap*"

#: library/tkinter.rst:860
msgid "Must be one of: ``\"none\"``, ``\"char\"``, or ``\"word\"``."
msgstr "Doit être l'un d'eux : ``\"none\"``, ``\"char\"``, ou ``\"word\"``."

#: library/tkinter.rst:865
msgid "Bindings and Events"
msgstr "Liaisons et événements"

#: library/tkinter.rst:871
msgid ""
"The bind method from the widget command allows you to watch for certain "
"events and to have a callback function trigger when that event type occurs.  "
"The form of the bind method is::"
msgstr ""
"La méthode ``bind`` de la commande d'objet graphique vous permet de "
"surveiller certains événements et d'avoir un déclencheur de fonction de "
"rappel lorsque ce type d'événement se produit.  La forme de la méthode de "
"liaison est la suivante ::"

#: library/tkinter.rst:877
msgid "where:"
msgstr "où :"

#: library/tkinter.rst:882
msgid "sequence"
msgstr "*sequence*"

#: library/tkinter.rst:880
#, fuzzy
msgid ""
"is a string that denotes the target kind of event.  (See the :manpage:"
"`bind(3tk)` man page, and page 201 of John Ousterhout's book, :title-"
"reference:`Tcl and the Tk Toolkit (2nd edition)`, for details)."
msgstr ""
"est une chaîne de caractères qui indique le type d'événement cible.  (Voir "
"la page du manuel de *bind* et la page 201 du livre de John Ousterhout pour "
"plus de détails)."

#: library/tkinter.rst:887
msgid "func"
msgstr "*func*"

#: library/tkinter.rst:885
msgid ""
"is a Python function, taking one argument, to be invoked when the event "
"occurs. An Event instance will be passed as the argument. (Functions "
"deployed this way are commonly known as *callbacks*.)"
msgstr ""
"est une fonction Python, prenant un argument, à invoquer lorsque l'événement "
"se produit. Une instance d’évènement sera passée en argument. (Les fonctions "
"déployées de cette façon sont communément appelées *callbacks* ou "
"« fonctions de rappel » en français)."

#: library/tkinter.rst:893
msgid "add"
msgstr "*add*"

#: library/tkinter.rst:890
msgid ""
"is optional, either ``''`` or ``'+'``.  Passing an empty string denotes that "
"this binding is to replace any other bindings that this event is associated "
"with.  Passing a ``'+'`` means that this function is to be added to the list "
"of functions bound to this event type."
msgstr ""
"est facultative, soit ``''`` ou ``'+'``.  L'envoi d'une chaîne de caractères "
"vide indique que cette liaison doit remplacer toute autre liaison à laquelle "
"cet événement est associé.  L'envoi de ``\"+\"`` signifie que cette fonction "
"doit être ajoutée à la liste des fonctions liées à ce type d'événement."

#: library/tkinter.rst:902
msgid ""
"Notice how the widget field of the event is being accessed in the "
"``turn_red()`` callback.  This field contains the widget that caught the X "
"event.  The following table lists the other event fields you can access, and "
"how they are denoted in Tk, which can be useful when referring to the Tk man "
"pages."
msgstr ""
"Remarquez comment on accède au champ *objet graphique* de l'événement dans "
"la fonction de rappel ``turn_red()``.  Ce champ contient l'objet graphique "
"qui a capturé l'événement Xorg.  Le tableau suivant répertorie les autres "
"champs d'événements auxquels vous pouvez accéder, et comment ils sont nommés "
"dans Tk, ce qui peut être utile lorsque vous vous référez aux pages de "
"manuel Tk."

#: library/tkinter.rst:908
msgid "Tkinter Event Field"
msgstr "Champ *évènement* de Tkinter"

#: library/tkinter.rst:910
msgid "%f"
msgstr "%f"

#: library/tkinter.rst:910
msgid "focus"
msgstr "focus"

#: library/tkinter.rst:910
msgid "%A"
msgstr "%A"

#: library/tkinter.rst:910
msgid "char"
msgstr "char"

#: library/tkinter.rst:912
msgid "%h"
msgstr "%h"

#: library/tkinter.rst:912
msgid "height"
msgstr "hauteur"

#: library/tkinter.rst:912
msgid "%E"
msgstr "%E"

#: library/tkinter.rst:912
msgid "send_event"
msgstr "send_event"

#: library/tkinter.rst:914
msgid "%k"
msgstr "%k"

#: library/tkinter.rst:914
msgid "keycode"
msgstr "keycode"

#: library/tkinter.rst:914
msgid "%K"
msgstr "%K"

#: library/tkinter.rst:914
msgid "keysym"
msgstr "keysym"

#: library/tkinter.rst:916
msgid "%s"
msgstr "%s"

#: library/tkinter.rst:916
msgid "state"
msgstr "state"

#: library/tkinter.rst:916
msgid "%N"
msgstr "%N"

#: library/tkinter.rst:916
msgid "keysym_num"
msgstr "keysym_num"

#: library/tkinter.rst:918
msgid "%t"
msgstr "%t"

#: library/tkinter.rst:918
msgid "time"
msgstr "time"

#: library/tkinter.rst:918
msgid "%T"
msgstr "%T"

#: library/tkinter.rst:918
msgid "type"
msgstr "type"

#: library/tkinter.rst:920
msgid "%w"
msgstr "%w"

#: library/tkinter.rst:920
msgid "width"
msgstr "width"

#: library/tkinter.rst:920
msgid "%W"
msgstr "%W"

#: library/tkinter.rst:920
msgid "widget"
msgstr "widget"

#: library/tkinter.rst:922
msgid "%x"
msgstr "%x"

#: library/tkinter.rst:922
msgid "x"
msgstr "x"

#: library/tkinter.rst:922
msgid "%X"
msgstr "%X"

#: library/tkinter.rst:922
msgid "x_root"
msgstr "x_root"

#: library/tkinter.rst:924
msgid "%y"
msgstr "%y"

#: library/tkinter.rst:924
msgid "y"
msgstr "y"

#: library/tkinter.rst:924
msgid "%Y"
msgstr "%Y"

#: library/tkinter.rst:924
msgid "y_root"
msgstr "y_root"

#: library/tkinter.rst:929
msgid "The index Parameter"
msgstr "Le paramètre index"

#: library/tkinter.rst:931
msgid ""
"A number of widgets require \"index\" parameters to be passed.  These are "
"used to point at a specific place in a Text widget, or to particular "
"characters in an Entry widget, or to particular menu items in a Menu widget."
msgstr ""
"Un certain nombre d'objets graphiques nécessitent le passage de paramètres "
"« indicés ».  Ils sont utilisés pour pointer vers un endroit spécifique dans "
"un objet graphique de type *Texte*, ou vers des caractères particuliers dans "
"un objet graphique de type *Entrée*, ou vers des éléments de menu "
"particuliers dans un objet graphique de type *Menu*."

#: library/tkinter.rst:938
msgid "Entry widget indexes (index, view index, etc.)"
msgstr ""
"Index des objets graphique de type *Entrée* (``index``, ``view index``, etc.)"

#: library/tkinter.rst:936
msgid ""
"Entry widgets have options that refer to character positions in the text "
"being displayed.  You can use these :mod:`tkinter` functions to access these "
"special points in text widgets:"
msgstr ""
"Les objets graphiques de type *Entrée* ont des options qui se réfèrent à la "
"position des caractères dans le texte affiché.  Vous pouvez utiliser ces "
"fonctions :mod:`tkinter` pour accéder à ces points spéciaux dans les objets "
"graphiques texte :"

#: library/tkinter.rst:942
msgid "Text widget indexes"
msgstr "Index des objets graphiques texte"

#: library/tkinter.rst:941
msgid ""
"The index notation for Text widgets is very rich and is best described in "
"the Tk man pages."
msgstr ""
"La notation de l'index des objets graphiques de type *Texte* est très riche "
"et mieux décrite dans les pages du manuel Tk."

#: library/tkinter.rst:967
msgid "Menu indexes (menu.invoke(), menu.entryconfig(), etc.)"
msgstr "Index menu (`menu.invoke()`, `menu.entryconfig()`, etc.)"

#: library/tkinter.rst:945
msgid ""
"Some options and methods for menus manipulate specific menu entries. Anytime "
"a menu index is needed for an option or a parameter, you may pass in:"
msgstr ""
"Certaines options et méthodes pour manipuler les menus nécessitent des "
"éléments de spécifiques. Chaque fois qu'un index de menu est nécessaire pour "
"une option ou un paramètre, vous pouvez utiliser :"

#: library/tkinter.rst:948
msgid ""
"an integer which refers to the numeric position of the entry in the widget, "
"counted from the top, starting with 0;"
msgstr ""
"un entier qui fait référence à la position numérique de l'entrée dans "
"l'objet graphique, comptée à partir du haut, en commençant par 0 ;"

#: library/tkinter.rst:951
msgid ""
"the string ``\"active\"``, which refers to the menu position that is "
"currently under the cursor;"
msgstr ""
"la chaîne de caractères ``\"active\"``, qui fait référence à la position du "
"menu qui se trouve actuellement sous le curseur ;"

#: library/tkinter.rst:954
msgid "the string ``\"last\"`` which refers to the last menu item;"
msgstr ""
"la chaîne de caractères ``\"last\"`` qui fait référence au dernier élément "
"du menu ;"

#: library/tkinter.rst:956
msgid ""
"An integer preceded by ``@``, as in ``@6``, where the integer is interpreted "
"as a y pixel coordinate in the menu's coordinate system;"
msgstr ""
"un entier précédé de ``@``, comme dans ``@6``, où l'entier est interprété "
"comme une coordonnée y de pixels dans le système de coordonnées du menu ;"

#: library/tkinter.rst:959
msgid ""
"the string ``\"none\"``, which indicates no menu entry at all, most often "
"used with menu.activate() to deactivate all entries, and finally,"
msgstr ""
"la chaîne de caractères ``\"none\"``, qui n'indique aucune entrée du menu, "
"le plus souvent utilisée avec ``menu.activate()`` pour désactiver toutes les "
"entrées, et enfin,"

#: library/tkinter.rst:962
msgid ""
"a text string that is pattern matched against the label of the menu entry, "
"as scanned from the top of the menu to the bottom.  Note that this index "
"type is considered after all the others, which means that matches for menu "
"items labelled ``last``, ``active``, or ``none`` may be interpreted as the "
"above literals, instead."
msgstr ""
"une chaîne de texte dont le motif correspond à l'étiquette de l'entrée de "
"menu, telle qu'elle est balayée du haut vers le bas du menu.  Notez que ce "
"type d'index est considéré après tous les autres, ce qui signifie que les "
"correspondances pour les éléments de menu étiquetés ``last``, ``active`` ou "
"``none`` peuvent être interprétés comme les littéraux ci-dessus, plutôt."

#: library/tkinter.rst:970
msgid "Images"
msgstr "Images"

#: library/tkinter.rst:972
msgid ""
"Images of different formats can be created through the corresponding "
"subclass of :class:`tkinter.Image`:"
msgstr ""
"Des images de différents formats peuvent être créées à travers la sous-"
"classe correspondante de :class:`tkinter.Image` :"

#: library/tkinter.rst:975
msgid ":class:`BitmapImage` for images in XBM format."
msgstr ":class:`BitmapImage` pour les images au format *XBM*."

#: library/tkinter.rst:977
msgid ""
":class:`PhotoImage` for images in PGM, PPM, GIF and PNG formats. The latter "
"is supported starting with Tk 8.6."
msgstr ""
":class:`PhotoImage` pour les images aux formats *PGM*, *PPM*, *GIF* et "
"*PNG*. Ce dernier est géré à partir de Tk 8.6."

#: library/tkinter.rst:980
msgid ""
"Either type of image is created through either the ``file`` or the ``data`` "
"option (other options are available as well)."
msgstr ""
"L'un ou l'autre type d'image est créé par l'option ``file`` ou ``data`` "
"(d'autres options sont également disponibles)."

#: library/tkinter.rst:983
msgid ""
"The image object can then be used wherever an ``image`` option is supported "
"by some widget (e.g. labels, buttons, menus). In these cases, Tk will not "
"keep a reference to the image. When the last Python reference to the image "
"object is deleted, the image data is deleted as well, and Tk will display an "
"empty box wherever the image was used."
msgstr ""
"L'objet image peut alors être utilisé partout où un objet graphique sait "
"gérer une option ``image`` (par ex. étiquettes, boutons, menus). Dans ces "
"cas, Tk ne conserve pas de référence à l'image. Lorsque la dernière "
"référence Python à l'objet image est supprimée, les données de l'image sont "
"également supprimées, et Tk affiche une boite vide à l'endroit où l'image "
"était utilisée."

#: library/tkinter.rst:991
msgid ""
"The `Pillow <http://python-pillow.org/>`_ package adds support for formats "
"such as BMP, JPEG, TIFF, and WebP, among others."
msgstr ""
"Le paquet `Pillow <http://python-pillow.org/>`_ ajoute la prise en charge de "
"formats tels que *BMP*, *JPEG*, *TIFF* et *WebP*, entre autres."

#: library/tkinter.rst:997
msgid "File Handlers"
msgstr "Gestionnaires de fichiers"

#: library/tkinter.rst:999
msgid ""
"Tk allows you to register and unregister a callback function which will be "
"called from the Tk mainloop when I/O is possible on a file descriptor. Only "
"one handler may be registered per file descriptor. Example code::"
msgstr ""
"*Tk* vous permet d'enregistrer et de *désenregistrer* une fonction de rappel "
"qui est appelée depuis la boucle principale de Tk lorsque des entrées-"
"sorties sont possibles sur un descripteur de fichier. Un seul gestionnaire "
"peut être enregistré par descripteur de fichier. Exemple de code ::"

#: library/tkinter.rst:1010
msgid "This feature is not available on Windows."
msgstr "Cette fonction n'est pas disponible sous Windows."

#: library/tkinter.rst:1012
msgid ""
"Since you don't know how many bytes are available for reading, you may not "
"want to use the :class:`~io.BufferedIOBase` or :class:`~io.TextIOBase` :meth:"
"`~io.BufferedIOBase.read` or :meth:`~io.IOBase.readline` methods, since "
"these will insist on reading a predefined number of bytes. For sockets, the :"
"meth:`~socket.socket.recv` or :meth:`~socket.socket.recvfrom` methods will "
"work fine; for other files, use raw reads or ``os.read(file.fileno(), "
"maxbytecount)``."
msgstr ""
"Dans la mesure où vous ne savez pas combien d'octets sont disponibles en "
"lecture, il ne faut pas utiliser les méthodes :class:`~io.BufferedIOBase` "
"ou :class:`~io.TextIOBase` :meth:`~io.BufferedIOBase.read` ou :meth:`~io."
"IOBase.readline`, car elles requièrent d'indiquer le nombre de *bytes* à "
"lire. Pour les connecteurs, les méthodes :meth:`~socket.socket.socket.recv` "
"ou :meth:`~socket.socket.recvfrom` fonctionnent bien ; pour les autres "
"fichiers, utilisez des lectures brutes ou ``os.read(file.fileno(), "
"maxbytecount)``."

#: library/tkinter.rst:1023
msgid ""
"Registers the file handler callback function *func*. The *file* argument may "
"either be an object with a :meth:`~io.IOBase.fileno` method (such as a file "
"or socket object), or an integer file descriptor. The *mask* argument is an "
"ORed combination of any of the three constants below. The callback is called "
"as follows::"
msgstr ""
"Enregistre la fonction de rappel du gestionnaire de fichiers *func*. "
"L'argument ``file`` peut être soit un objet avec une méthode :meth:`~io."
"IOBase.fileno` (comme un objet fichier ou connecteur), soit un descripteur "
"de fichier de type entier. L'argument ``mask`` est une combinaison *OU* de "
"l'une des trois constantes ci-dessous. La fonction de rappel s'utilise comme "
"suit ::"

#: library/tkinter.rst:1034
msgid "Unregisters a file handler."
msgstr "Désenregistre un gestionnaire de fichiers."

#: library/tkinter.rst:1041
msgid "Constants used in the *mask* arguments."
msgstr "Constantes utilisées dans les arguments ``mask``."

#~ msgid "Tkinter documentation:"
#~ msgstr "Documentation de Tkinter :"

#~ msgid "`Python Tkinter Resources <https://wiki.python.org/moin/TkInter>`_"
#~ msgstr "`Python Tkinter Resources <https://wiki.python.org/moin/TkInter>`_"

#~ msgid ""
#~ "The Python Tkinter Topic Guide provides a great deal of information on "
#~ "using Tk from Python and links to other sources of information on Tk."
#~ msgstr ""
#~ "Le *Python Tkinter Topic Guide* fournit beaucoup d'informations sur "
#~ "l'utilisation de Tk à partir de Python et des liens vers d'autres sources "
#~ "d'information sur Tk."

#~ msgid ""
#~ "Extensive tutorial plus friendlier widget pages for some of the widgets."
#~ msgstr ""
#~ "Tutoriel complet plus convivial pour certains des objets graphiques."

#~ msgid "On-line reference material."
#~ msgstr "Documents de référence en ligne."

#~ msgid "`Tkinter docs from effbot <http://effbot.org/tkinterbook/>`_"
#~ msgstr "`Documents Tkinter sur effbot <http://effbot.org/tkinterbook/>`_"

#~ msgid "Online reference for tkinter supported by effbot.org."
#~ msgstr "Référence en ligne pour *tkinter* réalisée par *effbot.org*."

#~ msgid ""
#~ "Book by Mark Roseman about building attractive and modern graphical user "
#~ "interfaces with Python and Tkinter."
#~ msgstr ""
#~ "Livre de Mark Roseman sur la construction d'interfaces graphiques "
#~ "esthétiques et modernes avec Python et Tkinter."

#~ msgid "Book by John Grayson (ISBN 1-884777-81-3)."
#~ msgstr "Livre de John Grayson (ISBN 1-884777-81-3)."

#~ msgid "Tcl/Tk documentation:"
#~ msgstr "Documentation de Tcl/Tk :"

#~ msgid ""
#~ "Most commands are available as :mod:`tkinter` or :mod:`tkinter.ttk` "
#~ "classes. Change '8.6' to match the version of your Tcl/Tk installation."
#~ msgstr ""
#~ "La plupart des commandes sont disponibles sous forme de classes :mod:"
#~ "`tkinter` ou :mod:`tkinter.ttk`. Modifiez '8.6' pour correspondre à votre "
#~ "version installée de Tcl/Tk."

#~ msgid "Recent Tcl/Tk manuals on www.tcl.tk."
#~ msgstr "Manuels récents de Tcl/Tk sur *www.tcl.tk*."

#~ msgid "`ActiveState Tcl Home Page <https://tcl.tk>`_"
#~ msgstr "`Page d'accueil Tcl <https://tcl.tk>`_ chez ActiveState"

#~ msgid "The Tk/Tcl development is largely taking place at ActiveState."
#~ msgstr ""
#~ "Le développement de Tk/Tcl se déroule en grande partie au sein "
#~ "d'ActiveState."

#~ msgid "Book by John Ousterhout, the inventor of Tcl."
#~ msgstr "Livre de John Ousterhout, l'inventeur de Tcl."

#~ msgid "`Practical Programming in Tcl and Tk <http://www.beedub.com/book/>`_"
#~ msgstr ""
#~ "`Practical Programming in Tcl and Tk <http://www.beedub.com/book/>`_"

#~ msgid "Brent Welch's encyclopedic book."
#~ msgstr "Le livre encyclopédique de Brent Welch."

#~ msgid ""
#~ "In addition to the Tk interface module, :mod:`tkinter` includes a number "
#~ "of Python modules, :mod:`tkinter.constants` being one of the most "
#~ "important. Importing :mod:`tkinter` will automatically import :mod:"
#~ "`tkinter.constants`, so, usually, to use Tkinter all you need is a simple "
#~ "import statement::"
#~ msgstr ""
#~ "En plus du module d'interface Tk, :mod:`tkinter` inclut un certain nombre "
#~ "de modules Python, :mod:`tkinter.constants` étant l'un des plus "
#~ "importants. Importer :mod:`tkinter` charge automatiquement :mod:`tkinter."
#~ "constants` donc, habituellement, pour utiliser Tkinter, tout ce dont vous "
#~ "avez besoin est une simple commande d'importation ::"

#~ msgid "Or, more often::"
#~ msgstr "Ou, plus souvent ::"

#~ msgid ""
#~ "This section is not designed to be an exhaustive tutorial on either Tk or "
#~ "Tkinter.  Rather, it is intended as a stop gap, providing some "
#~ "introductory orientation on the system."
#~ msgstr ""
#~ "Cette section n'est pas conçue pour être un tutoriel exhaustif de Tk ou "
#~ "Tkinter.  Il s'agit plutôt d'un guide d'introduction au système."

#~ msgid "Credits:"
#~ msgstr "Crédits :"

#~ msgid "Tk was written by John Ousterhout while at Berkeley."
#~ msgstr "*Tk* a été écrit par John Ousterhout de Berkeley."

#~ msgid "Tkinter was written by Steen Lumholt and Guido van Rossum."
#~ msgstr "*Tkinter* a été écrit par Steen Lumholt et Guido van Rossum."

#~ msgid ""
#~ "This Life Preserver was written by Matt Conway at the University of "
#~ "Virginia."
#~ msgstr ""
#~ "Ce guide de survie a été écrit par Matt Conway de l'Université de "
#~ "Virginie."

#~ msgid ""
#~ "The HTML rendering, and some liberal editing, was produced from a "
#~ "FrameMaker version by Ken Manheimer."
#~ msgstr ""
#~ "Le rendu HTML, avec quelques modifications, a été réalisé à partir d'une "
#~ "version FrameMaker par Ken Manheimer."

#~ msgid ""
#~ "Fredrik Lundh elaborated and revised the class interface descriptions, to "
#~ "get them current with Tk 4.2."
#~ msgstr ""
#~ "Fredrik Lundh a élaboré et mis à jour les descriptions de l'interface des "
#~ "classes, en cohérence avec Tk 4.2."

#~ msgid ""
#~ "Mike Clarkson converted the documentation to LaTeX, and compiled the  "
#~ "User Interface chapter of the reference manual."
#~ msgstr ""
#~ "Mike Clarkson a converti la documentation en LaTeX et a compilé le "
#~ "chapitre *Interface utilisateur* du manuel de référence."

#~ msgid "How To Use This Section"
#~ msgstr "Mode d'emploi"

#~ msgid ""
#~ "This section is designed in two parts: the first half (roughly) covers "
#~ "background material, while the second half can be taken to the keyboard "
#~ "as a handy reference."
#~ msgstr ""
#~ "Cette section est divisée en deux parties : la première moitié (à peu "
#~ "près) couvre la partie théorique, tandis que la seconde moitié peut être "
#~ "utilisée comme guide pratique."

#~ msgid ""
#~ "When trying to answer questions of the form \"how do I do blah\", it is "
#~ "often best to find out how to do \"blah\" in straight Tk, and then "
#~ "convert this back into the corresponding :mod:`tkinter` call. Python "
#~ "programmers can often guess at the correct Python command by looking at "
#~ "the Tk documentation. This means that in order to use Tkinter, you will "
#~ "have to know a little bit about Tk. This document can't fulfill that "
#~ "role, so the best we can do is point you to the best documentation that "
#~ "exists. Here are some hints:"
#~ msgstr ""
#~ "Lorsque l'on essaie de répondre à des questions sur la manière de  faire "
#~ "« ceci ou cela », il est souvent préférable de trouver comment le faire "
#~ "en Tk, puis de le convertir en fonction correspondante :mod:`tkinter`. "
#~ "Les programmeurs Python peuvent souvent deviner la commande Python "
#~ "correcte en consultant la documentation Tk. Cela signifie que pour "
#~ "utiliser Tkinter, vous devez en savoir un peu plus sur Tk. Ce document ne "
#~ "peut pas remplir ce rôle, alors le mieux que nous puissions faire est de "
#~ "vous indiquer la meilleure documentation qui existe. Voici quelques "
#~ "conseils :"

#~ msgid ""
#~ "The authors strongly suggest getting a copy of the Tk man pages. "
#~ "Specifically, the man pages in the ``manN`` directory are most useful. "
#~ "The ``man3`` man pages describe the C interface to the Tk library and "
#~ "thus are not especially helpful for script writers."
#~ msgstr ""
#~ "Les auteurs conseillent fortement d'obtenir une copie des pages de manuel "
#~ "de Tk. En particulier, les pages de manuel dans le répertoire ``manN`` "
#~ "sont les plus utiles. Les pages de manuel ``man3`` décrivent l'interface "
#~ "C de la bibliothèque Tk et ne sont donc pas particulièrement utiles aux "
#~ "développeurs de scripts."

#~ msgid ""
#~ "Addison-Wesley publishes a book called Tcl and the Tk Toolkit by John "
#~ "Ousterhout (ISBN 0-201-63337-X) which is a good introduction to Tcl and "
#~ "Tk for the novice.  The book is not exhaustive, and for many details it "
#~ "defers to the man pages."
#~ msgstr ""
#~ "Addison-Wesley a publié un livre intitulé *Tcl and the Tk Toolkit* de "
#~ "John Ousterhout (ISBN 0-201-63337-X) qui est une bonne introduction à Tcl "
#~ "et Tk pour débutants.  Le livre n'est pas exhaustif et, pour beaucoup de "
#~ "détails, il renvoie aux pages du manuel."

#~ msgid ""
#~ ":file:`tkinter/__init__.py` is a last resort for most, but can be a good "
#~ "place to go when nothing else makes sense."
#~ msgstr ""
#~ ":file:`tkinter/__init__.py` est souvent un dernier recours, mais peut "
#~ "être un bon endroit où aller quand rien d'autre ne fait sens."

#~ msgid "A (Very) Quick Look at Tcl/Tk"
#~ msgstr "Un (très) rapide aperçu de Tcl/Tk"

#~ msgid ""
#~ "The class hierarchy looks complicated, but in actual practice, "
#~ "application programmers almost always refer to the classes at the very "
#~ "bottom of the hierarchy."
#~ msgstr ""
#~ "La hiérarchie de classes semble compliquée mais, dans la pratique, les "
#~ "développeurs d'applications se réfèrent presque toujours aux classes "
#~ "situées tout en bas de la hiérarchie."

#~ msgid "Notes:"
#~ msgstr "Notes :"

#~ msgid ""
#~ "These classes are provided for the purposes of organizing certain "
#~ "functions under one namespace. They aren't meant to be instantiated "
#~ "independently."
#~ msgstr ""
#~ "Ces classes sont fournies dans le but d'organiser certaines fonctions "
#~ "sous un seul espace de nommage. Elles n'ont pas vocation à être "
#~ "instanciées indépendamment."

#~ msgid ""
#~ "The :class:`Tk` class is meant to be instantiated only once in an "
#~ "application. Application programmers need not instantiate one explicitly, "
#~ "the system creates one whenever any of the other classes are instantiated."
#~ msgstr ""
#~ "La classe :class:`Tk` est destinée à être instanciée une seule fois dans "
#~ "une application. Les développeurs d'applications n'ont pas besoin d'en "
#~ "instancier une explicitement, Le système en crée une au besoin quand une "
#~ "des autres classes est instanciée."

#~ msgid ""
#~ "The :class:`Widget` class is not meant to be instantiated, it is meant "
#~ "only for subclassing to make \"real\" widgets (in C++, this is called an "
#~ "'abstract class')."
#~ msgstr ""
#~ "La classe :class:`Widget` n'est pas destinée à être instanciée, elle est "
#~ "destinée uniquement au sous-classement pour faire de « vrais » objets "
#~ "graphiques (en C++, on appelle cela une « classe abstraite »)."

#~ msgid ""
#~ "To make use of this reference material, there will be times when you will "
#~ "need to know how to read short passages of Tk and how to identify the "
#~ "various parts of a Tk command.   (See section :ref:`tkinter-basic-"
#~ "mapping` for the :mod:`tkinter` equivalents of what's below.)"
#~ msgstr ""
#~ "Pour comprendre cette documentation, il y aura des moments où vous aurez "
#~ "besoin de savoir comment lire de courts passages de Tk et comment "
#~ "identifier les différentes parties d'une commande Tk.   (Voir la section :"
#~ "ref:`tkinter-basic-mapping` pour les équivalents :mod:`tkinter` de ce qui "
#~ "suit)."

#~ msgid ""
#~ "Tk scripts are Tcl programs.  Like all Tcl programs, Tk scripts are just "
#~ "lists of tokens separated by spaces.  A Tk widget is just its *class*, "
#~ "the *options* that help configure it, and the *actions* that make it do "
#~ "useful things."
#~ msgstr ""
#~ "Les scripts Tk sont des programmes Tcl.  Comme tous les programmes Tcl, "
#~ "les scripts Tk ne sont que des listes de commandes séparées par des "
#~ "espaces.  Un objet graphique Tk n'est constitué que de sa *classe*, des "
#~ "*options* qui l'aident à se configurer et des *actions* qui lui font "
#~ "faire des choses utiles."

#~ msgid "To make a widget in Tk, the command is always of the form::"
#~ msgstr ""
#~ "Pour créer un objet graphique en Tk, la commande est toujours de la "
#~ "forme ::"

#~ msgid "denotes which kind of widget to make (a button, a label, a menu...)"
#~ msgstr ""
#~ "indique le type d'objet graphique à réaliser (un bouton, une étiquette, "
#~ "un menu…)"

#~ msgid "*newPathname*"
#~ msgstr "*newPathname*"

#~ msgid ""
#~ "is the new name for this widget.  All names in Tk must be unique.  To "
#~ "help enforce this, widgets in Tk are named with *pathnames*, just like "
#~ "files in a file system.  The top level widget, the *root*, is called ``."
#~ "`` (period) and children are delimited by more periods.  For example, ``."
#~ "myApp.controlPanel.okButton`` might be the name of a widget."
#~ msgstr ""
#~ "est le nouveau nom pour cet objet graphique.  Tous les noms dans Tk "
#~ "doivent être uniques.  Pour vous aider à respecter cette règle, les "
#~ "objets graphiques dans Tk sont nommés avec des *noms d'accès*, tout comme "
#~ "les fichiers dans le système de fichiers.  L'objet graphique de niveau "
#~ "supérieur, la racine (*root* en anglais), s'appelle ``.`` (point) et les "
#~ "enfants sont délimités par plusieurs points.  Par exemple, ``.myApp."
#~ "controlPanel.okButton`` pourrait être le nom d'un objet graphique."

#~ msgid "*options*"
#~ msgstr "*options*"

#~ msgid ""
#~ "configure the widget's appearance and in some cases, its behavior.  The "
#~ "options come in the form of a list of flags and values. Flags are "
#~ "preceded by a '-', like Unix shell command flags, and values are put in "
#~ "quotes if they are more than one word."
#~ msgstr ""
#~ "configure l'apparence de l'objet graphique et, dans certains cas, son "
#~ "comportement.  Les options se présentent sous la forme d'une liste de "
#~ "paramètres et de valeurs. Les paramètres sont précédés d'un « - », comme "
#~ "les paramètres d'une ligne de commande du shell Unix, et les valeurs sont "
#~ "mises entre guillemets si elles font plus d'un mot."

#~ msgid ""
#~ "Once created, the pathname to the widget becomes a new command.  This new "
#~ "*widget command* is the programmer's handle for getting the new widget to "
#~ "perform some *action*.  In C, you'd express this as someAction(fred, "
#~ "someOptions), in C++, you would express this as fred."
#~ "someAction(someOptions), and in Tk, you say::"
#~ msgstr ""
#~ "Une fois créé, le chemin d'accès à l'objet graphique devient une nouvelle "
#~ "commande.  Cette nouvelle *commande d'objet graphique* est l'interface du "
#~ "programmeur pour que le nouvel objet graphique effectue une *action*.  En "
#~ "C, cela prend la forme ``someAction(fred, someOptions)``, en C++, cela "
#~ "prend la forme `fred.someAction(someOptions)` et, en Tk, vous dites ::"

#~ msgid "Note that the object name, ``.fred``, starts with a dot."
#~ msgstr "Notez que le nom de l'objet, ``.fred``, commence par un point."

#~ msgid ""
#~ "As you'd expect, the legal values for *someAction* will depend on the "
#~ "widget's class: ``.fred disable`` works if fred is a button (fred gets "
#~ "greyed out), but does not work if fred is a label (disabling of labels is "
#~ "not supported in Tk)."
#~ msgstr ""
#~ "Comme vous pouvez vous y attendre, les valeurs autorisées pour "
#~ "*someAction* dépendent de la classe de l'objet graphique : ``.fred "
#~ "disable`` fonctionne si ``fred`` est un bouton (``fred`` devient grisé), "
#~ "mais ne fonctionne pas si ``fred`` est une étiquette (la désactivation "
#~ "des étiquettes n'existe pas dans Tk)."

#~ msgid ""
#~ "The legal values of *someOptions* is action dependent.  Some actions, "
#~ "like ``disable``, require no arguments, others, like a text-entry box's "
#~ "``delete`` command, would need arguments to specify what range of text to "
#~ "delete."
#~ msgstr ""
#~ "Les valeurs possibles de *someOptions* dépendent de l'action.  Certaines "
#~ "actions, comme ``disable``, ne nécessitent aucun argument ; d'autres, "
#~ "comme la commande ``delete`` d'une zone de saisie, nécessitent des "
#~ "arguments pour spécifier l'étendue du texte à supprimer."

#~ msgid "Mapping Basic Tk into Tkinter"
#~ msgstr "Correspondance entre *Basic Tk* et *Tkinter*"

#~ msgid "Class commands in Tk correspond to class constructors in Tkinter. ::"
#~ msgstr ""
#~ "Les commandes de classes dans Tk correspondent aux constructeurs de "
#~ "classes dans Tkinter. ::"

#~ msgid ""
#~ "The master of an object is implicit in the new name given to it at "
#~ "creation time.  In Tkinter, masters are specified explicitly. ::"
#~ msgstr ""
#~ "Le constructeur d'un objet est implicite dans le nouveau nom qui lui est "
#~ "donné lors de la création.  Dans Tkinter, les constructeurs sont "
#~ "spécifiés explicitement. ::"

#~ msgid ""
#~ "The configuration options in Tk are given in lists of hyphened tags "
#~ "followed by values.  In Tkinter, options are specified as keyword-"
#~ "arguments in the instance constructor, and keyword-args for configure "
#~ "calls or as instance indices, in dictionary style, for established "
#~ "instances.  See section :ref:`tkinter-setting-options` on setting "
#~ "options. ::"
#~ msgstr ""
#~ "Les options de configuration dans Tk sont données dans des listes de "
#~ "paramètres séparés par des traits d'union suivies de leurs valeurs.  Dans "
#~ "Tkinter, les options sont spécifiées sous forme d'arguments par mots-clés "
#~ "dans le constructeur d'instance, et d'arguments par mots-clés pour "
#~ "configurer les appels ou sous forme d'une entrée, dans le style "
#~ "dictionnaire, d'instance pour les instances établies.  Voir la section :"
#~ "ref:`tkinter-setting-options` pour la façon de définir les options. ::"

#~ msgid ""
#~ "In Tk, to perform an action on a widget, use the widget name as a "
#~ "command, and follow it with an action name, possibly with arguments "
#~ "(options).  In Tkinter, you call methods on the class instance to invoke "
#~ "actions on the widget.  The actions (methods) that a given widget can "
#~ "perform are listed in :file:`tkinter/__init__.py`. ::"
#~ msgstr ""
#~ "Dans Tk, pour effectuer une action sur un objet graphique, utilisez le "
#~ "nom de l'objet graphique comme une commande et faites-le suivre d'un nom "
#~ "d'action, éventuellement avec des arguments (options).  Dans Tkinter, "
#~ "vous appelez des méthodes sur l'instance de classe pour invoquer des "
#~ "actions sur l'objet graphique.  Les actions (méthodes) qu'un objet "
#~ "graphique donné peut effectuer sont listées dans :file:`tkinter/__init__."
#~ "py`. ::"

#~ msgid ""
#~ "To give a widget to the packer (geometry manager), you call pack with "
#~ "optional arguments.  In Tkinter, the Pack class holds all this "
#~ "functionality, and the various forms of the pack command are implemented "
#~ "as methods.  All widgets in :mod:`tkinter` are subclassed from the "
#~ "Packer, and so inherit all the packing methods. See the :mod:`tkinter."
#~ "tix` module documentation for additional information on the Form geometry "
#~ "manager. ::"
#~ msgstr ""
#~ "Pour donner un objet graphique à l'empaqueteur (ce qui gère la "
#~ "disposition à l'écran), appelez ``pack`` avec des arguments optionnels.  "
#~ "Dans Tkinter, la classe ``Pack`` contient toutes ces fonctionnalités et "
#~ "les différentes formes de la commande ``pack`` sont implémentées comme "
#~ "méthodes.  Tous les objets graphiques de :mod:`tkinter` sont sous-classés "
#~ "depuis l'empaqueteur et donc héritent de toutes les méthodes "
#~ "d'empaquetage. Voir la documentation du module :mod:`tkinter.tix` pour "
#~ "plus d'informations sur le gestionnaire de disposition des formulaires. ::"

#~ msgid "How Tk and Tkinter are Related"
#~ msgstr "Relations entre Tk et Tkinter"

#~ msgid "From the top down:"
#~ msgstr "De haut en bas :"

#~ msgid "Your App Here (Python)"
#~ msgstr "Votre application (Python)"

#~ msgid "A Python application makes a :mod:`tkinter` call."
#~ msgstr "Une application Python fait un appel :mod:`tkinter`."

#~ msgid "tkinter (Python Package)"
#~ msgstr "*tkinter* (paquet Python)"

#~ msgid ""
#~ "This call (say, for example, creating a button widget), is implemented in "
#~ "the :mod:`tkinter` package, which is written in Python.  This Python "
#~ "function will parse the commands and the arguments and convert them into "
#~ "a form that makes them look as if they had come from a Tk script instead "
#~ "of a Python script."
#~ msgstr ""
#~ "Cet appel (par exemple, la création d'un objet graphique de type bouton) "
#~ "est implémenté dans le paquet :mod:`tkinter`, qui est écrit en Python.  "
#~ "Cette fonction Python analyse les commandes et les arguments et les "
#~ "convertit en une forme qui les fait ressembler à un script Tk au lieu "
#~ "d'un script Python."

#~ msgid "_tkinter (C)"
#~ msgstr "_tkinter (C)"

#~ msgid ""
#~ "These commands and their arguments will be passed to a C function in the :"
#~ "mod:`_tkinter` - note the underscore - extension module."
#~ msgstr ""
#~ "Ces commandes et leurs arguments sont passés à une fonction C dans le "
#~ "module d'extension :mod:`_tkinter` — notez le tiret bas."

#~ msgid "Tk Widgets (C and Tcl)"
#~ msgstr "Objets graphiques Tk (C et Tcl)"

#~ msgid ""
#~ "This C function is able to make calls into other C modules, including the "
#~ "C functions that make up the Tk library.  Tk is implemented in C and some "
#~ "Tcl. The Tcl part of the Tk widgets is used to bind certain default "
#~ "behaviors to widgets, and is executed once at the point where the Python :"
#~ "mod:`tkinter` package is imported. (The user never sees this stage)."
#~ msgstr ""
#~ "Cette fonction C est capable d'effectuer des appels vers d'autres modules "
#~ "C, y compris les fonctions C qui composent la bibliothèque Tk.  Tk est "
#~ "implémenté en C et un peu en Tcl. La partie Tcl des objets graphiques Tk "
#~ "est utilisée pour lier certains comportements par défaut aux objets "
#~ "graphiques, et est exécutée une fois au moment où le paquet Python :mod:"
#~ "`tkinter` est importé (cette étape est transparente pour l'utilisateur)."

#~ msgid "Tk (C)"
#~ msgstr "Tk (C)"

#~ msgid "The Tk part of the Tk Widgets implement the final mapping to ..."
#~ msgstr ""
#~ "La partie Tk des objets graphiques Tk implémente la correspondance finale "
#~ "avec …"

#~ msgid "Xlib (C)"
#~ msgstr "Xlib (C)"

#~ msgid "the Xlib library to draw graphics on the screen."
#~ msgstr ""
#~ "la bibliothèque *Xlib* pour dessiner des éléments graphiques à l'écran."

#~ msgid ""
#~ "`Tkinter 8.5 reference: a GUI for Python <https://web.archive.org/"
#~ "web/20190524140835/https://infohost.nmt.edu/tcc/help/pubs/tkinter/web/"
#~ "index.html>`_"
#~ msgstr ""
#~ "`Référence Tkinter 8.5 : un GUI pour Python <https://web.archive.org/"
#~ "web/20190524140835/https://infohost.nmt.edu/tcc/help/pubs/tkinter/web/"
#~ "index.html>`_"
