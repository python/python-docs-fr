# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: 2024-01-18 22:28+0100\n"
"Last-Translator: Christophe Nanteuil <christophe.nanteuil@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#: library/email.generator.rst:2
#, fuzzy
msgid ":mod:`!email.generator`: Generating MIME documents"
msgstr ":mod:`email.generator` : génération de documents MIME"

#: library/email.generator.rst:7
msgid "**Source code:** :source:`Lib/email/generator.py`"
msgstr "**Code source :** :source:`Lib/email/igenerator.py`"

#: library/email.generator.rst:11
#, fuzzy
msgid ""
"One of the most common tasks is to generate the flat (serialized) version of "
"the email message represented by a message object structure.  You will need "
"to do this if you want to send your message via :meth:`smtplib.SMTP."
"sendmail`, or print the message on the console.  Taking a message object "
"structure and producing a serialized representation is the job of the "
"generator classes."
msgstr ""
"L'une des tâches les plus courantes consiste à générer la version plate "
"(sérialisée) du message électronique représenté par une structure d'objet "
"message. Vous devez le faire si vous voulez envoyer votre message via :meth:"
"`smtplib.SMTP.sendmail` ou le module :mod:`nntplib`, ou afficher le message "
"sur la console. Prendre une structure d'objet message et produire une "
"représentation sérialisée est le travail des classes génératrices."

#: library/email.generator.rst:18
msgid ""
"As with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email in "
"a standards-compliant way, should handle MIME and non-MIME email messages "
"just fine, and is designed so that the bytes-oriented parsing and generation "
"operations are inverses, assuming the same non-transforming :mod:`~email."
"policy` is used for both.  That is, parsing the serialized byte stream via "
"the :class:`~email.parser.BytesParser` class and then regenerating the "
"serialized byte stream using :class:`BytesGenerator` should produce output "
"identical to the input [#]_.  (On the other hand, using the generator on an :"
"class:`~email.message.EmailMessage` constructed by program may result in "
"changes to the :class:`~email.message.EmailMessage` object as defaults are "
"filled in.)"
msgstr ""
"Comme avec le module :mod:`email.parser`, vous n'êtes pas limité aux "
"fonctionnalités du générateur fourni ; vous pourriez en écrire un à partir "
"de zéro vous-même. Cependant, le générateur fourni sait comment générer la "
"plupart des e-mails d'une manière conforme aux normes, est conçu pour gérer "
"correctement les e-mails MIME et non MIME, et pour que les opérations (sur "
"des suites d'octets) d'analyse et de génération soient inverses, en "
"supposant que la même :mod:`~email.policy` est utilisée pour les deux. "
"Autrement dit, l'analyse du flux d'octets sérialisé via la classe :class:"
"`~email.parser.BytesParser` puis la régénération du flux d'octets sérialisé "
"à l'aide de :class:`BytesGenerator` devrait produire une sortie identique à "
"l'entrée [#]_ (d'un autre côté, l'utilisation du générateur sur un :class:"
"`~email.message.EmailMessage` construit par programme peut entraîner des "
"modifications de l'objet :class:`~email.message.EmailMessage` car les "
"valeurs par défaut sont renseignées)."

#: library/email.generator.rst:32
msgid ""
"The :class:`Generator` class can be used to flatten a message into a text "
"(as opposed to binary) serialized representation, but since Unicode cannot "
"represent binary data directly, the message is of necessity transformed into "
"something that contains only ASCII characters, using the standard email RFC "
"Content Transfer Encoding techniques for encoding email messages for "
"transport over channels that are not \"8 bit clean\"."
msgstr ""
"La classe :class:`Generator` peut être utilisée pour aplatir un message dans "
"une représentation sérialisée textuelle (par opposition à binaire), mais "
"comme Unicode ne peut pas représenter directement des données binaires, le "
"message est nécessairement transformé en quelque chose qui ne contient que "
"des caractères ASCII, en utilisant les techniques standard de codage de "
"transfert de contenu RFC pour le codage des messages électroniques pour le "
"transport sur des canaux qui ne sont pas « complétement 8 bits »."

#: library/email.generator.rst:39
msgid ""
"To accommodate reproducible processing of SMIME-signed messages :class:"
"`Generator` disables header folding for message parts of type ``multipart/"
"signed`` and all subparts."
msgstr ""
"Pour s'adapter au traitement reproductible des messages signés SMIME :class:"
"`Generator` ne raccourcit pas les en-têtes pour les parties de message de "
"type ``multipart/signed`` et toutes les sous-parties."

#: library/email.generator.rst:47
msgid ""
"Return a :class:`BytesGenerator` object that will write any message provided "
"to the :meth:`flatten` method, or any surrogateescape encoded text provided "
"to the :meth:`write` method, to the :term:`file-like object` *outfp*. "
"*outfp* must support a ``write`` method that accepts binary data."
msgstr ""
"Renvoie un objet :class:`BytesGenerator` qui écrit tout message fourni à la "
"méthode :meth:`flatten`, ou tout texte encodé par *surrogateescape* fourni à "
"la méthode :meth:`write`, dans le :term:`objet simili-fichier <file-like "
"object>` *outfp*. *outfp* doit disposer d'une méthode ``write`` qui accepte "
"les données binaires."

#: library/email.generator.rst:153
msgid ""
"If optional *mangle_from_* is ``True``, put a ``>`` character in front of "
"any line in the body that starts with the exact string ``\"From \"``, that "
"is ``From`` followed by a space at the beginning of a line.  *mangle_from_* "
"defaults to the value of the :attr:`~email.policy.Policy.mangle_from_` "
"setting of the *policy* (which is ``True`` for the :data:`~email.policy."
"compat32` policy and ``False`` for all others). *mangle_from_* is intended "
"for use when messages are stored in Unix mbox format (see :mod:`mailbox` and "
"`WHY THE CONTENT-LENGTH FORMAT IS BAD <https://www.jwz.org/doc/content-"
"length.html>`_)."
msgstr ""
"Si l'option *mangle_from_* est ``True``, place un caractère ``>`` devant "
"toute ligne du corps commençant par la chaîne exacte ``\"From \"``, c'est-à-"
"dire une ligne commençant par ``From`` suivi par une espace. *mangle_from_* "
"prend par défaut la valeur du paramètre :attr:`~email.policy.Policy."
"mangle_from_` de la *policy* (qui est ``True`` pour la politique :data:"
"`~email.policy.compat32` et ``False`` pour tous les autres). *mangle_from_* "
"est destiné à être utilisé lorsque les messages sont stockés au format Unix "
"*mbox* (voir :mod:`mailbox` et `WHY THE CONTENT-LENGTH FORMAT IS BAD "
"<https://www.jwz.org/doc/content-length.html>`_)."

#: library/email.generator.rst:163
msgid ""
"If *maxheaderlen* is not ``None``, refold any header lines that are longer "
"than *maxheaderlen*, or if ``0``, do not rewrap any headers.  If "
"*manheaderlen* is ``None`` (the default), wrap headers and other message "
"lines according to the *policy* settings."
msgstr ""
"Si *maxheaderlen* n'est pas ``None``, raccourcit toutes les lignes d'en-tête "
"qui sont plus longues que *maxheaderlen*, ou si ``0``, ne raccourcit aucun "
"en-tête. Si *manheaderlen* est ``None`` (valeur par défaut), formate les en-"
"têtes et autres lignes de message en fonction des paramètres de *policy*."

#: library/email.generator.rst:168
msgid ""
"If *policy* is specified, use that policy to control message generation.  If "
"*policy* is ``None`` (the default), use the policy associated with the :"
"class:`~email.message.Message` or :class:`~email.message.EmailMessage` "
"object passed to ``flatten`` to control the message generation.  See :mod:"
"`email.policy` for details on what *policy* controls."
msgstr ""
"Si *policy* est spécifiée, utilise cette politique pour contrôler la "
"génération des messages. Si *policy* est ``None`` (par défaut), utilise la "
"politique associée à l'objet :class:`~email.message.Message` ou :class:"
"`~email.message.EmailMessage` passée à ``flatten`` pour contrôler la "
"génération des messages. Voir :mod:`email.policy` pour plus de détails sur "
"ce que *policy* contrôle."

# suit un :
#: library/email.generator.rst:174
msgid "Added the *policy* keyword."
msgstr "ajout du mot-clé *policy*."

# suit un :
#: library/email.generator.rst:176
msgid ""
"The default behavior of the *mangle_from_* and *maxheaderlen* parameters is "
"to follow the policy."
msgstr ""
"le comportement par défaut des paramètres *mangle_from_* et *maxheaderlen* "
"est de suivre la politique."

#: library/email.generator.rst:83
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`BytesGenerator` instance "
"was created."
msgstr ""
"Affiche la représentation textuelle de la structure de l'objet message dont "
"la racine est *msg* dans le fichier de sortie spécifié lors de la création "
"de l'instance :class:`BytesGenerator`."

#: library/email.generator.rst:87
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit`` (the default), copy any headers in the original parsed message that "
"have not been modified to the output with any bytes with the high bit set "
"reproduced as in the original, and preserve the non-ASCII :mailheader:"
"`Content-Transfer-Encoding` of any body parts that have them. If "
"``cte_type`` is ``7bit``, convert the bytes with the high bit set as needed "
"using an ASCII-compatible :mailheader:`Content-Transfer-Encoding`. That is, "
"transform parts with non-ASCII :mailheader:`Content-Transfer-Encoding` (:"
"mailheader:`Content-Transfer-Encoding: 8bit`) to an ASCII compatible :"
"mailheader:`Content-Transfer-Encoding`, and encode RFC-invalid non-ASCII "
"bytes in headers using the MIME ``unknown-8bit`` character set, thus "
"rendering them RFC-compliant."
msgstr ""
"Si l'option :attr:`~email.policy.Policy.cte_type` de :mod:`~email.policy` "
"est ``8bit`` (valeur par défaut), copie tous les en-têtes du message analysé "
"d'origine qui n'ont pas été modifiés en sortie avec tous les octets dont le "
"bit de poids fort identique à l'original, et conserve le :mailheader:"
"`Content-Transfer-Encoding` non-ASCII de toutes les parties du corps qui en "
"ont. Si ``cte_type`` est ``7bit``, convertit les octets avec le bit de poids "
"fort défini selon les besoins en utilisant un :mailheader:`Content-Transfer-"
"Encoding` compatible ASCII. Autrement dit, transforme les parties non ASCII :"
"mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-Transfer-"
"Encoding: 8bit`) en un :mailheader:`Content-Transfer-Encoding` compatible "
"ASCII, et encode les octets non ASCII non valides de la RFC dans les en-"
"têtes utilisant le jeu de caractères MIME ``unknown-8bit``, les rendant "
"ainsi conformes à la RFC."

#: library/email.generator.rst:104 library/email.generator.rst:197
msgid ""
"If *unixfrom* is ``True``, print the envelope header delimiter used by the "
"Unix mailbox format (see :mod:`mailbox`) before the first of the :rfc:`5322` "
"headers of the root message object.  If the root object has no envelope "
"header, craft a standard one.  The default is ``False``. Note that for "
"subparts, no envelope header is ever printed."
msgstr ""
"Si *unixfrom* est ``True``, affiche le délimiteur d'en-tête d'enveloppe "
"utilisé par le format de boîte aux lettres Unix (voir :mod:`mailbox`) avant "
"le premier des en-têtes :rfc:`5322` de l'objet message racine. Si l'objet "
"racine n'a pas d'en-tête d'enveloppe, en crée un standard. La valeur par "
"défaut est ``False``. Notez que pour les sous-parties, aucun en-tête "
"d'enveloppe n'est jamais imprimé."

#: library/email.generator.rst:110 library/email.generator.rst:203
msgid ""
"If *linesep* is not ``None``, use it as the separator character between all "
"the lines of the flattened message.  If *linesep* is ``None`` (the default), "
"use the value specified in the *policy*."
msgstr ""
"Si *linesep* n'est pas ``None``, l'utilise comme caractère de séparation "
"entre toutes les lignes du message aplati. Si *linesep* est ``None`` (valeur "
"par défaut), utilise la valeur spécifiée dans la *policy*."

#: library/email.generator.rst:119
msgid ""
"Return an independent clone of this :class:`BytesGenerator` instance with "
"the exact same option settings, and *fp* as the new *outfp*."
msgstr ""
"Renvoie un clone indépendant de cette instance :class:`BytesGenerator` avec "
"exactement les mêmes paramètres d'option, et *fp* comme nouveau *outfp*."

#: library/email.generator.rst:125
msgid ""
"Encode *s* using the ``ASCII`` codec and the ``surrogateescape`` error "
"handler, and pass it to the *write* method of the *outfp* passed to the :"
"class:`BytesGenerator`'s constructor."
msgstr ""
"Encode *s* en utilisant le codec ``ASCII`` et le gestionnaire d'erreurs "
"``surrogateescape``, et le passe à la méthode *write* du *outfp* passé au "
"constructeur de :class:`BytesGenerator`."

#: library/email.generator.rst:130
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_bytes` and ``bytes(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__bytes__`), which simplify the generation "
"of a serialized binary representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Par commodité, :class:`~email.message.EmailMessage` fournit les méthodes :"
"meth:`~email.message.EmailMessage.as_bytes` et ``bytes(aMessage)`` (alias :"
"meth:`~email.message .EmailMessage.__bytes__`), qui simplifient la "
"génération d'une représentation binaire sérialisée d'un objet message. Pour "
"plus de détails, voir :mod:`email.message`."

#: library/email.generator.rst:137
msgid ""
"Because strings cannot represent binary data, the :class:`Generator` class "
"must convert any binary data in any message it flattens to an ASCII "
"compatible format, by converting them to an ASCII compatible :mailheader:"
"`Content-Transfer_Encoding`.  Using the terminology of the email RFCs, you "
"can think of this as :class:`Generator` serializing to an I/O stream that is "
"not \"8 bit clean\".  In other words, most applications will want to be "
"using :class:`BytesGenerator`, and not :class:`Generator`."
msgstr ""
"Comme les chaînes ne peuvent pas représenter des données binaires, la "
"classe :class:`Generator` doit convertir toutes les données binaires de tout "
"message qu'elle aplatit en un format compatible ASCII, en les convertissant "
"en un :mailheader:`Content-Transfer_Encoding` compatible ASCII. En utilisant "
"la terminologie des RFC des e-mails, vous pouvez considérer cela comme un :"
"class:`Generator` sérialisant vers un flux d'entrées-sorties qui n'est pas "
"« complètement 8 bits ». En d'autres termes, la plupart des applications "
"voudront utiliser :class:`BytesGenerator` et pas :class:`Generator`."

#: library/email.generator.rst:148
msgid ""
"Return a :class:`Generator` object that will write any message provided to "
"the :meth:`flatten` method, or any text provided to the :meth:`write` "
"method, to the :term:`file-like object` *outfp*.  *outfp* must support a "
"``write`` method that accepts string data."
msgstr ""
"Renvoie un objet :class:`Generator` qui écrit tout message fourni à la "
"méthode :meth:`flatten`, ou tout texte fourni à la méthode :meth:`write`, "
"dans l':term:`objet simili-fichier <file-like object>` *outfp*. *outfp* doit "
"prendre en charge une méthode ``write`` qui accepte les données de type "
"chaîne."

#: library/email.generator.rst:182
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`Generator` instance was "
"created."
msgstr ""
"Affiche la représentation textuelle de la structure de l'objet message dont "
"la racine est *msg* dans le fichier de sortie spécifié lors de la création "
"de l'instance :class:`Generator`."

#: library/email.generator.rst:186
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit``, generate the message as if the option were set to ``7bit``. (This "
"is required because strings cannot represent non-ASCII bytes.) Convert any "
"bytes with the high bit set as needed using an ASCII-compatible :mailheader:"
"`Content-Transfer-Encoding`.  That is, transform parts with non-ASCII :"
"mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-Transfer-"
"Encoding: 8bit`) to an ASCII compatible :mailheader:`Content-Transfer-"
"Encoding`, and encode RFC-invalid non-ASCII bytes in headers using the MIME "
"``unknown-8bit`` character set, thus rendering them RFC-compliant."
msgstr ""
"Si l'option :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` est "
"``8bit``, génère le message comme si l'option était définie sur ``7bit`` "
"(c'est nécessaire car les chaînes ne peuvent pas représenter des octets non "
"ASCII). Convertit tous les octets avec le bit de poids fort défini selon les "
"besoins à l'aide d'un :mailheader:`Content-Transfer-Encoding` compatible "
"ASCII. Autrement dit, transforme les parties non ASCII :mailheader:`Content-"
"Transfer-Encoding` (:mailheader:`Content-Transfer-Encoding: 8bit`) en un :"
"mailheader:`Content-Transfer-Encoding` compatible ASCII, et encode les "
"octets non ASCII non valides RFC dans les en-têtes utilisant le jeu de "
"caractères MIME ``unknown-8bit``, les rendant ainsi conformes à la RFC."

# suit un :
#: library/email.generator.rst:209
msgid ""
"Added support for re-encoding ``8bit`` message bodies, and the *linesep* "
"argument."
msgstr ""
"ajout de la prise en charge du ré-encodage des corps de message ``8bit`` et "
"de l'argument *linesep*."

#: library/email.generator.rst:216
msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options, and *fp* as the new *outfp*."
msgstr ""
"Renvoie un clone indépendant de cette instance :class:`Generator` avec "
"exactement les mêmes options, et avec *fp* comme nouveau *outfp*."

#: library/email.generator.rst:222
msgid ""
"Write *s* to the *write* method of the *outfp* passed to the :class:"
"`Generator`'s constructor.  This provides just enough file-like API for :"
"class:`Generator` instances to be used in the :func:`print` function."
msgstr ""
"Écrit *s* dans la méthode *write* de *outfp* passé au constructeur de :class:"
"`Generator`. Cela fournit une API ressemblant suffisamment au type fichier "
"pour les instances de :class:`Generator` utilisées dans la fonction :func:"
"`print`."

#: library/email.generator.rst:228
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_string` and ``str(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__str__`), which simplify the generation "
"of a formatted string representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Par commodité, :class:`~email.message.EmailMessage` fournit les méthodes :"
"meth:`~email.message.EmailMessage.as_string` et ``str(aMessage)`` (alias :"
"meth:`~email.message .EmailMessage.__str__`), qui simplifient la génération "
"d'une représentation sous forme de chaîne formatée d'un objet message. Pour "
"plus de détails, voir :mod:`email.message`."

#: library/email.generator.rst:235
msgid ""
"The :mod:`email.generator` module also provides a derived class, :class:"
"`DecodedGenerator`, which is like the :class:`Generator` base class, except "
"that non-\\ :mimetype:`text` parts are not serialized, but are instead "
"represented in the output stream by a string derived from a template filled "
"in with information about the part."
msgstr ""
"Le module :mod:`email.generator` fournit également une classe dérivée, :"
"class:`DecodedGenerator`, qui ressemble à la classe de base :class:"
"`Generator`, sauf que les parties non-\\ :mimetype:`text` ne sont pas "
"sérialisées, mais sont plutôt représentées dans le flux de sortie par une "
"chaîne dérivée d'un modèle rempli d'informations sur la partie concernée."

#: library/email.generator.rst:244
msgid ""
"Act like :class:`Generator`, except that for any subpart of the message "
"passed to :meth:`Generator.flatten`, if the subpart is of main type :"
"mimetype:`text`, print the decoded payload of the subpart, and if the main "
"type is not :mimetype:`text`, instead of printing it fill in the string "
"*fmt* using information from the part and print the resulting filled-in "
"string."
msgstr ""
"Agit comme :class:`Generator`, sauf que pour toute sous-partie du message "
"transmise à :meth:`Generator.flatten`, si la sous-partie est de type "
"principal :mimetype:`text`, affiche la charge utile décodée de la sous-"
"partie, et si le type principal n'est pas :mimetype:`text`, au lieu de "
"l'afficher, remplit la chaîne *fmt* en utilisant les informations de la "
"partie et affiche la chaîne remplie résultante."

#: library/email.generator.rst:251
msgid ""
"To fill in *fmt*, execute ``fmt % part_info``, where ``part_info`` is a "
"dictionary composed of the following keys and values:"
msgstr ""
"Pour remplir *fmt*, exécute ``fmt % part_info``, où ``part_info`` est un "
"dictionnaire composé des clés et valeurs suivantes :"

#: library/email.generator.rst:254
msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr "``type`` – Type MIME complet de la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:256
msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr ""
"``maintype`` – Type MIME principal de la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:258
msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr "``subtype`` – Sous-type MIME de la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:260
msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr "``filename`` – Nom de fichier de la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:262
msgid ""
"``description`` -- Description associated with the non-\\ :mimetype:`text` "
"part"
msgstr ""
"``description`` – Description associée à la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:264
msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` part"
msgstr ""
"``encoding`` – Encodage du contenu de la partie non-\\ :mimetype:`text`"

#: library/email.generator.rst:266
msgid "If *fmt* is ``None``, use the following default *fmt*:"
msgstr "Si *fmt* est ``None``, utilise le *fmt* par défaut suivant :"

#: library/email.generator.rst:268
msgid ""
"\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""
msgstr ""
"\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""

#: library/email.generator.rst:270
msgid ""
"Optional *_mangle_from_* and *maxheaderlen* are as with the :class:"
"`Generator` base class."
msgstr ""
"*_mangle_from_* et *maxheaderlen* sont optionnels et fonctionnent comme avec "
"la classe mère :class:`Generator`."

#: library/email.generator.rst:275
msgid "Footnotes"
msgstr "Notes"

#: library/email.generator.rst:276
#, fuzzy
msgid ""
"This statement assumes that you use the appropriate setting for "
"``unixfrom``, and that there are no :mod:`email.policy` settings calling for "
"automatic adjustments (for example, :attr:`~email.policy.EmailPolicy."
"refold_source` must be ``none``, which is *not* the default).  It is also "
"not 100% true, since if the message does not conform to the RFC standards "
"occasionally information about the exact original text is lost during "
"parsing error recovery.  It is a goal to fix these latter edge cases when "
"possible."
msgstr ""
"Cette déclaration suppose que vous utilisez le paramètre approprié pour "
"``unixfrom`` et qu'il n'y a pas de paramètres :mod:`policy` entraînant des "
"ajustements automatiques (par exemple, :attr:`~email.policy.Policy."
"refold_source` doit être ``none``, ce qui n'est *pas* la valeur par défaut). "
"Ce n'est pas non plus vrai à 100 %, car si le message n'est pas conforme aux "
"normes RFC, des informations sur le texte original sont parfois perdues lors "
"de la récupération d'erreur d'analyse. L'objectif est de résoudre ces "
"derniers cas extrêmes lorsque c'est possible."
