# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-04 11:33+0200\n"
"PO-Revision-Date: 2019-05-23 21:39+0200\n"
"Last-Translator: Jules Lasne <jules.lasne@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.1\n"

#: ../Doc/library/http.cookies.rst:2
msgid ":mod:`http.cookies` --- HTTP state management"
msgstr ":mod:`http.cookies` — gestion d'état pour HTTP"

#: ../Doc/library/http.cookies.rst:10
msgid "**Source code:** :source:`Lib/http/cookies.py`"
msgstr "**Code source :** :source:`Lib/http/cookies.py`"

#: ../Doc/library/http.cookies.rst:14
msgid ""
"The :mod:`http.cookies` module defines classes for abstracting the concept "
"of cookies, an HTTP state management mechanism. It supports both simple "
"string-only cookies, and provides an abstraction for having any serializable "
"data-type as cookie value."
msgstr ""
"Le module :mod:`http.cookies` définit des classes abstrayant le concept de "
"témoin web (cookie), un mécanisme de gestion d'état pour HTTP. Il fournit "
"une abstraction gérant des données textuelles et tout type de données "
"sérialisable comme valeur de témoin."

#: ../Doc/library/http.cookies.rst:19
msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x doesn't follow the character rules outlined in those specs and "
"also many current day browsers and servers have relaxed parsing rules when "
"comes to Cookie handling.  As a result, the parsing rules used are a bit "
"less strict."
msgstr ""
"Auparavant, le module appliquait strictement les règles d'analyse décrites "
"dans les spécifications :rfc:`2109` et :rfc:`2068`. Entre temps, il a été "
"découvert que Internet Explorer 3.0 ne suit pas les règles liées aux "
"caractères précisées dans ces spécifications. De plus, plusieurs navigateurs "
"et serveurs dans leur versions récentes ont assoupli les règles d'analyse "
"quant à la gestion des témoins. En conséquence, les règles d'analyse "
"utilisées sont un peu moins strictes que les spécifications initiales."

#: ../Doc/library/http.cookies.rst:25
msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~:`` denote the set of valid characters allowed by this "
"module in Cookie name (as :attr:`~Morsel.key`)."
msgstr ""
"Les jeux de caractères :data:`string.ascii_letters`, :data:`string.digits` "
"et ``!#$%&'*+-.^_`|~:`` définissent l'ensemble des caractères autorisés par "
"ce module pour le nom du témoin (comme :attr:`~Morsel.key`)."

#: ../Doc/library/http.cookies.rst:29
msgid "Allowed ':' as a valid Cookie name character."
msgstr "Ajouté « : » comme caractère autorisé pour les noms de témoin."

#: ../Doc/library/http.cookies.rst:35
msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""
"Quand un témoin invalide est rencontré, l'exception :exc:`CookieError` est "
"levée. Si les données du témoin proviennent d'un navigateur il faut "
"impérativement gérer les données invalides en attrapant :exc:`CookieError`."

#: ../Doc/library/http.cookies.rst:42
msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""
"Exception levée pour cause d'incompatibilité avec la :rfc:`2109`. Exemples : "
"attributs incorrects, en-tête ``Set-Cookie`` incorrect, etc."

#: ../Doc/library/http.cookies.rst:48
msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""
"Cette classe définit un dictionnaire dont les clés sont des chaines de "
"caractères et dont les valeurs sont des instances de :class:`Morsel`. Notez "
"qu'à l'assignation d'une valeur à une clé, la valeur est transformée en :"
"class:`Morsel` contenant la clé et la valeur."

#: ../Doc/library/http.cookies.rst:52
msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr ""
"Si l'argument *input* est donné, il est passé à la méthode :meth:`load`."

#: ../Doc/library/http.cookies.rst:57
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:"
"`value_decode` and :meth:`value_encode`. SimpleCookie supports strings as "
"cookie values. When setting the value, SimpleCookie calls the builtin :func:"
"`str()` to convert the value to a string. Values received from HTTP are kept "
"as strings."
msgstr ""
"Cette classe dérive de :class:`BaseCookie`. Elle surcharge les méthodes :"
"meth:`value_decode` et :meth:`value_encode`. **SimpleCookie** gère les "
"chaines de caractères pour spécifier des valeurs de cookies. Lorsque la "
"valeur est définie, **SimpleCookie** appelle la fonction native :func:"
"`str()` pour convertir la valeur en chaine de caractères. Les valeurs reçues "
"par HTTP sont gardées comme chaines."

#: ../Doc/library/http.cookies.rst:66
msgid "Module :mod:`http.cookiejar`"
msgstr "Module :mod:`http.cookiejar`"

#: ../Doc/library/http.cookies.rst:65
msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`http.cookiejar` and :mod:"
"`http.cookies` modules do not depend on each other."
msgstr ""
"Gestion de témoins HTTP pour *clients* web.  Les modules :mod:`http."
"cookiejar` et :mod:`http.cookies` ne dépendent pas l'un de l'autre."

#: ../Doc/library/http.cookies.rst:68
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - HTTP State Management Mechanism"

#: ../Doc/library/http.cookies.rst:69
msgid "This is the state management specification implemented by this module."
msgstr "Spécification de gestion d'états implantée par ce module."

#: ../Doc/library/http.cookies.rst:75
msgid "Cookie Objects"
msgstr "Objets *Cookie*"

#: ../Doc/library/http.cookies.rst:80
msgid ""
"Return a tuple ``(real_value, coded_value)`` from a string representation. "
"``real_value`` can be any type. This method does no decoding in :class:"
"`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Renvoie une paire ``(real_value, coded_value)`` depuis une représentation de "
"chaine. ``real_value`` peut être de n’importe quel type. Cette méthode ne "
"décode rien dans :class:`BaseCookie` – elle existe pour être surchargée."

#: ../Doc/library/http.cookies.rst:87
msgid ""
"Return a tuple ``(real_value, coded_value)``. *val* can be any type, but "
"``coded_value`` will always be converted to a string. This method does no "
"encoding in :class:`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Renvoie une paire ``(real_value, coded_value)``. *val* peut être de "
"n’importe quel type, mais ``coded_value`` est toujours converti en chaine de "
"caractères. Cette méthode n’encode pas dans :class:`BaseCookie` – elle "
"existe pour être surchargée."

#: ../Doc/library/http.cookies.rst:92
msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""
"Généralement, les méthodes :meth:`value_encode` et :meth:`value_decode` "
"doivent être inverses l'une de l'autre, c'est-à-dire qu'en envoyant la "
"sortie de l'un dans l'entrée de l'autre la valeur finale doit être égale à "
"la valeur initiale."

#: ../Doc/library/http.cookies.rst:98
msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`output` method. *sep* "
"is used to join the headers together, and is by default the combination "
"``'\\r\\n'`` (CRLF)."
msgstr ""
"Renvoie une représentation textuelle compatible avec les en-têtes HTTP. "
"*attrs et *header* sont envoyés à la méthode :meth:`output` de chaque "
"classe :class:`Morsel`. *sep* est le séparateur à utiliser pour joindre les "
"valeurs d'en-têtes. Sa valeur par défaut est ``'\\r\\n'`` (CRLF)."

#: ../Doc/library/http.cookies.rst:106
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""
"Renvoie un extrait de code JavaScript qui, lorsque exécuté par un navigateur "
"qui supporte le JavaScript, va fonctionner de la même manière que si les en-"
"têtes HTTP avaient été envoyés."

#: ../Doc/library/http.cookies.rst:109 ../Doc/library/http.cookies.rst:205
#: ../Doc/library/http.cookies.rst:213
msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr "*attrs* a la même signification que dans la méthode :meth:`output`."

#: ../Doc/library/http.cookies.rst:114
msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""
"Si *rawdata* est une chaine de caractères, l'analyser comme étant un "
"``HTTP_COOKIE`` et ajouter les valeurs trouvées en tant que :class:`Morsel`"
"\\ s. S'il s'agit d'un dictionnaire, cela est équivalent à ::"

#: ../Doc/library/http.cookies.rst:124
msgid "Morsel Objects"
msgstr "Objets *Morsel*"

#: ../Doc/library/http.cookies.rst:129
msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr ""
"Abstraction de paire clé / valeur, accompagnée d'attributs provenant de la "
"spécification :rfc:`2109`."

#: ../Doc/library/http.cookies.rst:131
msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are"
msgstr ""
"Les objets *Morsel* sont des objets compatibles dictionnaire, dont "
"l'ensemble des clés est fixe et égal aux attributs :rfc:`2109` valides, qui "
"sont"

#: ../Doc/library/http.cookies.rst:134
msgid "``expires``"
msgstr "``expires``"

#: ../Doc/library/http.cookies.rst:135
msgid "``path``"
msgstr "``path``"

#: ../Doc/library/http.cookies.rst:136
msgid "``comment``"
msgstr "``comment``"

#: ../Doc/library/http.cookies.rst:137
msgid "``domain``"
msgstr "``domain``"

#: ../Doc/library/http.cookies.rst:138
msgid "``max-age``"
msgstr "``max-age``"

#: ../Doc/library/http.cookies.rst:139
msgid "``secure``"
msgstr "``secure``"

#: ../Doc/library/http.cookies.rst:140
msgid "``version``"
msgstr "``version``"

#: ../Doc/library/http.cookies.rst:141
msgid "``httponly``"
msgstr "``httponly``"

#: ../Doc/library/http.cookies.rst:142
msgid "``samesite``"
msgstr ""

#: ../Doc/library/http.cookies.rst:144
msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transferred "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""
"L'attribut :attr:`httponly` spécifie que le témoin transféré dans les "
"requêtes HTTP n'est pas accessible par le biais de JavaScript. Il s'agit "
"d'une contremesure à certaines attaques de scripts inter-sites (*XSS*)."

#: ../Doc/library/http.cookies.rst:148
msgid ""
"The attribute :attr:`samesite` specifies that the browser is not allowed to "
"send the cookie along with cross-site requests. This helps to mitigate CSRF "
"attacks. Valid values for this attribute are \"Strict\" and \"Lax\"."
msgstr ""

#: ../Doc/library/http.cookies.rst:152
msgid "The keys are case-insensitive and their default value is ``''``."
msgstr ""
"Les clés ne sont pas sensibles à la casse, leur valeur par défaut est ``''``."

#: ../Doc/library/http.cookies.rst:154
msgid ""
":meth:`~Morsel.__eq__` now takes :attr:`~Morsel.key` and :attr:`~Morsel."
"value` into account."
msgstr ""
"Dorénavant, :meth:`~Morsel.__eq__` prend en compte :attr:`~Morsel.key` et :"
"attr:`~Morsel.value`."

#: ../Doc/library/http.cookies.rst:158
msgid ""
"Attributes :attr:`~Morsel.key`, :attr:`~Morsel.value` and :attr:`~Morsel."
"coded_value` are read-only.  Use :meth:`~Morsel.set` for setting them."
msgstr ""
"Les attributs  :attr:`~Morsel.key`, :attr:`~Morsel.value` et :attr:`~Morsel."
"coded_value` sont en lecture seule.  Utilisez  :meth:`~Morsel.set` pour les "
"assigner."

#: ../Doc/library/http.cookies.rst:163
msgid "Added support for the :attr:`samesite` attribute."
msgstr ""

#: ../Doc/library/http.cookies.rst:169
msgid "The value of the cookie."
msgstr "La valeur du témoin."

#: ../Doc/library/http.cookies.rst:174
msgid "The encoded value of the cookie --- this is what should be sent."
msgstr "La valeur codée du témoin. C'est celle qui doit être transférée."

#: ../Doc/library/http.cookies.rst:179
msgid "The name of the cookie."
msgstr "Le nom du témoin."

#: ../Doc/library/http.cookies.rst:184
msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr "Assigne les attributs *key*, *value* et *coded_value*."

#: ../Doc/library/http.cookies.rst:189
msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr "Renvoie si *K* est membre des clés d'un :class:`Morsel`."

#: ../Doc/library/http.cookies.rst:194
msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""
"Renvoie une représentation textuelle du *Morsel* compatible avec les en-"
"têtes HTTP. Par défaut, tous les attributs sont inclus, à moins que *attrs* "
"ne soit renseigné. Dans ce cas la valeur doit être une liste d'attributs à "
"utiliser. Par défaut, *header* a la valeur ``\"Set-Cookie:\"``."

#: ../Doc/library/http.cookies.rst:202
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""
"Renvoie un extrait de code JavaScript qui, lorsque exécuté par un navigateur "
"qui supporte le JavaScript, va fonctionner de la même manière que si les en-"
"têtes HTTP avaient été envoyés."

#: ../Doc/library/http.cookies.rst:210
msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr ""
"Renvoie une chaine de caractères représentant le *Morsel*, nettoyé de son "
"contexte HTTP ou JavaScript."

#: ../Doc/library/http.cookies.rst:218
msgid ""
"Update the values in the Morsel dictionary with the values in the dictionary "
"*values*.  Raise an error if any of the keys in the *values* dict is not a "
"valid :rfc:`2109` attribute."
msgstr ""
"Met à jour les valeurs du dictionnaire du *Morsel* avec les valeurs "
"provenant du dictionnaire *values*.  Lève une erreur si une des clés n'est "
"pas un attribut :rfc:`2109` valide."

#: ../Doc/library/http.cookies.rst:222
msgid "an error is raised for invalid keys."
msgstr "une erreur est levée pour les clés invalides."

#: ../Doc/library/http.cookies.rst:228
msgid "Return a shallow copy of the Morsel object."
msgstr "Renvoie une copie superficielle de l'objet *Morsel*."

#: ../Doc/library/http.cookies.rst:230
msgid "return a Morsel object instead of a dict."
msgstr "renvoie un objet *Morsel* au lieu d'un ``dict``."

#: ../Doc/library/http.cookies.rst:236
msgid ""
"Raise an error if key is not a valid :rfc:`2109` attribute, otherwise behave "
"the same as :meth:`dict.setdefault`."
msgstr ""
"Lève une erreur si la clé n'est pas un attribut :rfc:`2109` valide, sinon "
"fonctionne de la même manière que :meth:`dict.setdefault`."

#: ../Doc/library/http.cookies.rst:243
msgid "Example"
msgstr "Exemple"

#: ../Doc/library/http.cookies.rst:245
msgid ""
"The following example demonstrates how to use the :mod:`http.cookies` module."
msgstr ""
"L'exemple suivant montre comment utiliser le module :mod:`http.cookies`."
