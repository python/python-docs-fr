# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-01 00:16+0100\n"
"PO-Revision-Date: 2023-02-17 15:37+0100\n"
"Last-Translator: Jules Lasne <jules.lasne@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#: library/turtle.rst:3
msgid ":mod:`turtle` --- Turtle graphics"
msgstr ":mod:`turtle` — Tortue graphique"

#: library/turtle.rst:10
msgid "**Source code:** :source:`Lib/turtle.py`"
msgstr "**Code Source :** :source:`Lib/turtle.py`"

#: library/turtle.rst:20
msgid "Introduction"
msgstr "Introduction"

#: library/turtle.rst:22
#, fuzzy
msgid ""
"Turtle graphics is an implementation of `the popular geometric drawing tools "
"introduced in Logo <https://en.wikipedia.org/wiki/Turtle_ (robot)>`_, "
"developed by Wally Feurzeig, Seymour Papert and Cynthia Solomon in 1967."
msgstr ""
"Une tortue graphique est une manière bien connue et intuitive pour initier "
"les enfants au monde de la programmation. Un tel module faisait partie "
"initialement du langage de programmation Logo créé par *Wally Feurzig* et "
"*Seymout Papert* en 1967."

#: library/turtle.rst:29
#, fuzzy
msgid "Get started"
msgstr "État de la tortue"

#: library/turtle.rst:31
msgid ""
"Imagine a robotic turtle starting at (0, 0) in the x-y plane.  After an "
"``import turtle``, give it the command ``turtle.forward(15)``, and it moves "
"(on-screen!) 15 pixels in the direction it is facing, drawing a line as it "
"moves.  Give it the command ``turtle.right(25)``, and it rotates in-place 25 "
"degrees clockwise."
msgstr ""
"Imaginez un robot sous forme de tortue partant au centre (0, 0) d'un plan "
"cartésien x-y. Après un ``import turtle``, exécutez la commande ``turtle."
"forward(15)`` et la tortue se déplace (sur l'écran) de 15 pixels en face "
"d'elle, en dessinant une ligne."

#: library/turtle.rst:38
msgid ""
"Turtle can draw intricate shapes using programs that repeat simple moves."
msgstr ""
"La tortue permet de dessiner des formes complexes en utilisant un programme "
"qui répète des actions élémentaires."

#: library/turtle.rst:44
msgid ""
"In Python, turtle graphics provides a representation of a physical "
"\"turtle\" (a little robot with a pen) that draws on a sheet of paper on the "
"floor."
msgstr ""

#: library/turtle.rst:47
msgid ""
"It's an effective and well-proven way for learners to encounter programming "
"concepts and interaction with software, as it provides instant, visible "
"feedback. It also provides convenient access to graphical output in general."
msgstr ""

#: library/turtle.rst:52
msgid ""
"Turtle drawing was originally created as an educational tool, to be used by "
"teachers in the classroom. For the programmer who needs to produce some "
"graphical output it can be a way to do that without the overhead of "
"introducing more complex or external libraries into their work."
msgstr ""

#: library/turtle.rst:61
msgid "Tutorial"
msgstr "Tutoriel"

#: library/turtle.rst:63
msgid ""
"New users should start here. In this tutorial we'll explore some of the "
"basics of turtle drawing."
msgstr ""

#: library/turtle.rst:68
#, fuzzy
msgid "Starting a turtle environment"
msgstr "Paramétrage et mesure"

#: library/turtle.rst:70
msgid "In a Python shell, import all the objects of the ``turtle`` module::"
msgstr ""

#: library/turtle.rst:74
msgid ""
"If you run into a ``No module named '_tkinter'`` error, you'll have to "
"install the :mod:`Tk interface package <tkinter>` on your system."
msgstr ""

#: library/turtle.rst:79
msgid "Basic drawing"
msgstr ""

#: library/turtle.rst:81
msgid "Send the turtle forward 100 steps::"
msgstr ""

#: library/turtle.rst:85
msgid ""
"You should see (most likely, in a new window on your display) a line drawn "
"by the turtle, heading East. Change the direction of the turtle, so that it "
"turns 120 degrees left (anti-clockwise)::"
msgstr ""

#: library/turtle.rst:91
msgid "Let's continue by drawing a triangle::"
msgstr ""

#: library/turtle.rst:97
msgid ""
"Notice how the turtle, represented by an arrow, points in different "
"directions as you steer it."
msgstr ""

#: library/turtle.rst:100
msgid ""
"Experiment with those commands, and also with ``backward()`` and ``right()``."
msgstr ""

#: library/turtle.rst:334 library/turtle.rst:1024
msgid "Pen control"
msgstr "Réglage des stylos"

#: library/turtle.rst:107
msgid ""
"Try changing the color - for example, ``color('blue')`` - and width of the "
"line - for example, ``width(3)`` - and then drawing again."
msgstr ""

#: library/turtle.rst:110
msgid ""
"You can also move the turtle around without drawing, by lifting up the pen: "
"``up()`` before moving. To start drawing again, use ``down()``."
msgstr ""

#: library/turtle.rst:115
#, fuzzy
msgid "The turtle's position"
msgstr "Les mouvements dans le module *Turtle*"

#: library/turtle.rst:117
msgid ""
"Send your turtle back to its starting-point (useful if it has disappeared "
"off-screen)::"
msgstr ""

#: library/turtle.rst:122
msgid ""
"The home position is at the center of the turtle's screen. If you ever need "
"to know them, get the turtle's x-y coordinates with::"
msgstr ""

#: library/turtle.rst:127
msgid "Home is at ``(0, 0)``."
msgstr ""

#: library/turtle.rst:129
msgid ""
"And after a while, it will probably help to clear the window so we can start "
"anew::"
msgstr ""

#: library/turtle.rst:136
msgid "Making algorithmic patterns"
msgstr ""

#: library/turtle.rst:138
msgid "Using loops, it's possible to build up geometric patterns::"
msgstr ""

#: library/turtle.rst:147
msgid "\\ - which of course, are limited only by the imagination!"
msgstr ""

#: library/turtle.rst:149
msgid ""
"Let's draw the star shape at the top of this page. We want red lines, filled "
"in with yellow::"
msgstr ""

#: library/turtle.rst:155
msgid ""
"Just as ``up()`` and ``down()`` determine whether lines will be drawn, "
"filling can be turned on and off::"
msgstr ""

#: library/turtle.rst:160
msgid "Next we'll create a loop::"
msgstr ""

#: library/turtle.rst:168
msgid ""
"``abs(pos()) < 1`` is a good way to know when the turtle is back at its home "
"position."
msgstr ""

#: library/turtle.rst:171
msgid "Finally, complete the filling::"
msgstr ""

#: library/turtle.rst:175
msgid ""
"(Note that filling only actually takes place when you give the "
"``end_fill()`` command.)"
msgstr ""

#: library/turtle.rst:182
msgid "How to..."
msgstr ""

#: library/turtle.rst:184
msgid "This section covers some typical turtle use-cases and approaches."
msgstr ""

#: library/turtle.rst:188
msgid "Get started as quickly as possible"
msgstr ""

#: library/turtle.rst:190
msgid ""
"One of the joys of turtle graphics is the immediate, visual feedback that's "
"available from simple commands - it's an excellent way to introduce children "
"to programming ideas, with a minimum of overhead (not just children, of "
"course)."
msgstr ""

#: library/turtle.rst:195
msgid ""
"The turtle module makes this possible by exposing all its basic "
"functionality as functions, available with ``from turtle import *``. The :"
"ref:`turtle graphics tutorial <turtle-tutorial>` covers this approach."
msgstr ""

#: library/turtle.rst:199
msgid ""
"It's worth noting that many of the turtle commands also have even more terse "
"equivalents, such as ``fd()`` for :func:`forward`. These are especially "
"useful when working with learners for whom typing is not a skill."
msgstr ""

#: library/turtle.rst:205
msgid ""
"You'll need to have the :mod:`Tk interface package <tkinter>` installed on "
"your system for turtle graphics to work. Be warned that this is not always "
"straightforward, so check this in advance if you're planning to use turtle "
"graphics with a learner."
msgstr ""

#: library/turtle.rst:212
msgid "Use the ``turtle`` module namespace"
msgstr ""

#: library/turtle.rst:214
msgid ""
"Using ``from turtle import *`` is convenient - but be warned that it imports "
"a rather large collection of objects, and if you're doing anything but "
"turtle graphics you run the risk of a name conflict (this becomes even more "
"an issue if you're using turtle graphics in a script where other modules "
"might be imported)."
msgstr ""

#: library/turtle.rst:220
msgid ""
"The solution is to use ``import turtle`` - ``fd()`` becomes ``turtle.fd()``, "
"``width()`` becomes ``turtle.width()`` and so on. (If typing \"turtle\" over "
"and over again becomes tedious, use for example ``import turtle as t`` "
"instead.)"
msgstr ""

#: library/turtle.rst:227
#, fuzzy
msgid "Use turtle graphics in a script"
msgstr "Éteins la fenêtre *turtlegraphics*."

#: library/turtle.rst:229
msgid ""
"It's recommended to use the ``turtle`` module namespace as described "
"immediately above, for example::"
msgstr ""

#: library/turtle.rst:241
msgid ""
"Another step is also required though - as soon as the script ends, Python "
"will also close the turtle's window. Add::"
msgstr ""

#: library/turtle.rst:246
msgid ""
"to the end of the script. The script will now wait to be dismissed and will "
"not exit until it is terminated, for example by closing the turtle graphics "
"window."
msgstr ""

#: library/turtle.rst:252
msgid "Use object-oriented turtle graphics"
msgstr ""

#: library/turtle.rst:254
msgid ""
":ref:`Explanation of the object-oriented interface <turtle-explanation>`"
msgstr ""

#: library/turtle.rst:256
msgid ""
"Other than for very basic introductory purposes, or for trying things out as "
"quickly as possible, it's more usual and much more powerful to use the "
"object-oriented approach to turtle graphics. For example, this allows "
"multiple turtles on screen at once."
msgstr ""

#: library/turtle.rst:261
msgid ""
"In this approach, the various turtle commands are methods of objects (mostly "
"of ``Turtle`` objects). You *can* use the object-oriented approach in the "
"shell, but it would be more typical in a Python script."
msgstr ""

#: library/turtle.rst:265
msgid "The example above then becomes::"
msgstr ""

#: library/turtle.rst:279
msgid ""
"Note the last line. ``t.screen`` is an instance of the :class:`Screen` that "
"a Turtle instance exists on; it's created automatically along with the "
"turtle."
msgstr ""

#: library/turtle.rst:283
msgid "The turtle's screen can be customised, for example::"
msgstr ""

#: library/turtle.rst:290
msgid "Turtle graphics reference"
msgstr ""

#: library/turtle.rst:294
msgid ""
"In the following documentation the argument list for functions is given. "
"Methods, of course, have the additional first argument *self* which is "
"omitted here."
msgstr ""
"La liste des paramètres des fonctions est donnée dans cette documentation. "
"Les méthodes ont, évidemment, le paramètre *self* comme premier argument, "
"mais ce dernier n'est pas indiqué ici."

#: library/turtle.rst:300
msgid "Turtle methods"
msgstr "Les méthodes du module *Turtle*"

#: library/turtle.rst:441
msgid "Turtle motion"
msgstr "Les mouvements dans le module *Turtle*"

#: library/turtle.rst:303
msgid "Move and draw"
msgstr "Bouger et dessiner"

#: library/turtle.rst:0
msgid ":func:`forward` | :func:`fd`"
msgstr ":func:`forward` | :func:`fd`"

#: library/turtle.rst:0
msgid ":func:`backward` | :func:`bk` | :func:`back`"
msgstr ":func:`backward` | :func:`bk` | :func:`back`"

#: library/turtle.rst:0
msgid ":func:`right` | :func:`rt`"
msgstr ":func:`right` | :func:`rt`"

#: library/turtle.rst:0
msgid ":func:`left` | :func:`lt`"
msgstr ":func:`left` | :func:`lt`"

#: library/turtle.rst:0
msgid ":func:`goto` | :func:`setpos` | :func:`setposition`"
msgstr ":func:`goto` | :func:`setpos` | :func:`setposition`"

#: library/turtle.rst:0
#, fuzzy
msgid ":func:`teleport`"
msgstr ":func:`tilt`"

#: library/turtle.rst:0
msgid ":func:`setx`"
msgstr ":func:`setx`"

#: library/turtle.rst:0
msgid ":func:`sety`"
msgstr ":func:`sety`"

#: library/turtle.rst:0
msgid ":func:`setheading` | :func:`seth`"
msgstr ":func:`setheading` | :func:`seth`"

#: library/turtle.rst:0
msgid ":func:`home`"
msgstr ":func:`home`"

#: library/turtle.rst:2709
msgid ":func:`circle`"
msgstr ":func:`circle`"

#: library/turtle.rst:0
msgid ":func:`dot`"
msgstr ":func:`dot`"

#: library/turtle.rst:2687
msgid ":func:`stamp`"
msgstr ":func:`stamp`"

#: library/turtle.rst:0
msgid ":func:`clearstamp`"
msgstr ":func:`clearstamp`"

#: library/turtle.rst:0
msgid ":func:`clearstamps`"
msgstr ":func:`clearstamps`"

#: library/turtle.rst:0
msgid ":func:`undo`"
msgstr ":func:`undo`"

#: library/turtle.rst:0
msgid ":func:`speed`"
msgstr ":func:`speed`"

#: library/turtle.rst:873
msgid "Tell Turtle's state"
msgstr "Connaître l'état de la tortue"

#: library/turtle.rst:0
msgid ":func:`position` | :func:`pos`"
msgstr ":func:`position` | :func:`pos`"

#: library/turtle.rst:0
msgid ":func:`towards`"
msgstr ":func:`towards`"

#: library/turtle.rst:0
msgid ":func:`xcor`"
msgstr ":func:`xcor`"

#: library/turtle.rst:0
msgid ":func:`ycor`"
msgstr ":func:`ycor`"

#: library/turtle.rst:0
msgid ":func:`heading`"
msgstr ":func:`heading`"

#: library/turtle.rst:0
msgid ":func:`distance`"
msgstr ":func:`distance`"

#: library/turtle.rst:330
msgid "Setting and measurement"
msgstr "Paramétrage et mesure"

#: library/turtle.rst:0
msgid ":func:`degrees`"
msgstr ":func:`degrees`"

#: library/turtle.rst:0
msgid ":func:`radians`"
msgstr ":func:`radians`"

#: library/turtle.rst:1027
msgid "Drawing state"
msgstr "État des stylos"

#: library/turtle.rst:0
msgid ":func:`pendown` | :func:`pd` | :func:`down`"
msgstr ":func:`pendown` | :func:`pd` | :func:`down`"

#: library/turtle.rst:0
msgid ":func:`penup` | :func:`pu` | :func:`up`"
msgstr ":func:`penup` | :func:`pu` | :func:`up`"

#: library/turtle.rst:0
msgid ":func:`pensize` | :func:`width`"
msgstr ":func:`pensize` | :func:`width`"

#: library/turtle.rst:0
msgid ":func:`pen`"
msgstr ":func:`pen`"

#: library/turtle.rst:0
msgid ":func:`isdown`"
msgstr ":func:`isdown`"

#: library/turtle.rst:1119
msgid "Color control"
msgstr "Réglage des couleurs"

#: library/turtle.rst:0
msgid ":func:`color`"
msgstr ":func:`color`"

#: library/turtle.rst:0
msgid ":func:`pencolor`"
msgstr ":func:`pencolor`"

#: library/turtle.rst:0
msgid ":func:`fillcolor`"
msgstr ":func:`fillcolor`"

#: library/turtle.rst:1251
msgid "Filling"
msgstr "Remplissage"

#: library/turtle.rst:0
msgid ":func:`filling`"
msgstr ":func:`filling`"

#: library/turtle.rst:0
msgid ":func:`begin_fill`"
msgstr ":func:`begin_fill`"

#: library/turtle.rst:0
msgid ":func:`end_fill`"
msgstr ":func:`end_fill`"

#: library/turtle.rst:1298
msgid "More drawing control"
msgstr "Plus des réglages pour le dessin"

#: library/turtle.rst:0
msgid ":func:`reset`"
msgstr ":func:`reset`"

#: library/turtle.rst:0
msgid ":func:`clear`"
msgstr ":func:`clear`"

#: library/turtle.rst:0
msgid ":func:`write`"
msgstr ":func:`write`"

#: library/turtle.rst:1344
msgid "Turtle state"
msgstr "État de la tortue"

#: library/turtle.rst:1347
msgid "Visibility"
msgstr "Visibilité"

#: library/turtle.rst:0
msgid ":func:`showturtle` | :func:`st`"
msgstr ":func:`showturtle` | :func:`st`"

#: library/turtle.rst:0
msgid ":func:`hideturtle` | :func:`ht`"
msgstr ":func:`hideturtle` | :func:`ht`"

#: library/turtle.rst:0
msgid ":func:`isvisible`"
msgstr ":func:`isvisible`"

#: library/turtle.rst:1386
msgid "Appearance"
msgstr "Apparence"

#: library/turtle.rst:0
msgid ":func:`shape`"
msgstr ":func:`shape`"

#: library/turtle.rst:0
msgid ":func:`resizemode`"
msgstr ":func:`resizemode`"

#: library/turtle.rst:0
msgid ":func:`shapesize` | :func:`turtlesize`"
msgstr ":func:`shapesize` | :func:`turtlesize`"

#: library/turtle.rst:0
msgid ":func:`shearfactor`"
msgstr ":func:`shearfactor`"

#: library/turtle.rst:0
msgid ":func:`tiltangle`"
msgstr ":func:`tiltangle`"

#: library/turtle.rst:0
msgid ":func:`tilt`"
msgstr ":func:`tilt`"

#: library/turtle.rst:0
msgid ":func:`shapetransform`"
msgstr ":func:`shapetransform`"

#: library/turtle.rst:0
msgid ":func:`get_shapepoly`"
msgstr ":func:`get_shapepoly`"

#: library/turtle.rst:1569
msgid "Using events"
msgstr "Utilisation des événements"

#: library/turtle.rst:2681
msgid ":func:`onclick`"
msgstr ":func:`onclick`"

#: library/turtle.rst:0
msgid ":func:`onrelease`"
msgstr ":func:`onrelease`"

#: library/turtle.rst:2664
msgid ":func:`ondrag`"
msgstr ":func:`ondrag`"

#: library/turtle.rst:1643
msgid "Special Turtle methods"
msgstr "Méthodes spéciales de la tortue"

#: library/turtle.rst:0
msgid ":func:`begin_poly`"
msgstr ":func:`begin_poly`"

#: library/turtle.rst:0
msgid ":func:`end_poly`"
msgstr ":func:`end_poly`"

#: library/turtle.rst:0
msgid ":func:`get_poly`"
msgstr ":func:`get_poly`"

#: library/turtle.rst:2703
msgid ":func:`clone`"
msgstr ":func:`clone`"

#: library/turtle.rst:0
msgid ":func:`getturtle` | :func:`getpen`"
msgstr ":func:`getturtle` | :func:`getpen`"

#: library/turtle.rst:0
msgid ":func:`getscreen`"
msgstr ":func:`getscreen`"

#: library/turtle.rst:0
msgid ":func:`setundobuffer`"
msgstr ":func:`setundobuffer`"

#: library/turtle.rst:0
msgid ":func:`undobufferentries`"
msgstr ":func:`undobufferentries`"

#: library/turtle.rst:390
msgid "Methods of TurtleScreen/Screen"
msgstr "Méthodes de *TurtleScreen*/*Screen*"

#: library/turtle.rst:1797
msgid "Window control"
msgstr "Réglage de la fenêtre"

#: library/turtle.rst:0
msgid ":func:`bgcolor`"
msgstr ":func:`bgcolor`"

#: library/turtle.rst:0
msgid ":func:`bgpic`"
msgstr ":func:`bgpic`"

#: library/turtle.rst:0
#, fuzzy
msgid ":func:`clearscreen`"
msgstr ":func:`getscreen`"

#: library/turtle.rst:0
#, fuzzy
msgid ":func:`resetscreen`"
msgstr ":func:`getscreen`"

#: library/turtle.rst:0
msgid ":func:`screensize`"
msgstr ":func:`screensize`"

#: library/turtle.rst:0
msgid ":func:`setworldcoordinates`"
msgstr ":func:`setworldcoordinates`"

#: library/turtle.rst:1920
msgid "Animation control"
msgstr "Réglage de l'animation"

#: library/turtle.rst:0
msgid ":func:`delay`"
msgstr ":func:`delay`"

#: library/turtle.rst:0
msgid ":func:`tracer`"
msgstr ":func:`tracer`"

#: library/turtle.rst:0
msgid ":func:`update`"
msgstr ":func:`update`"

#: library/turtle.rst:1973
msgid "Using screen events"
msgstr "Utilisation des événements concernant l'écran"

#: library/turtle.rst:0
msgid ":func:`listen`"
msgstr ":func:`listen`"

#: library/turtle.rst:0
msgid ":func:`onkey` | :func:`onkeyrelease`"
msgstr ":func:`onkey` | :func:`onkeyrelease`"

#: library/turtle.rst:0
msgid ":func:`onkeypress`"
msgstr ":func:`onkeypress`"

#: library/turtle.rst:0
msgid ":func:`onclick` | :func:`onscreenclick`"
msgstr ":func:`onclick` | :func:`onscreenclick`"

#: library/turtle.rst:0
msgid ":func:`ontimer`"
msgstr ":func:`ontimer`"

#: library/turtle.rst:0
msgid ":func:`mainloop` | :func:`done`"
msgstr ":func:`mainloop` | :func:`done`"

#: library/turtle.rst:2118
msgid "Settings and special methods"
msgstr "Paramétrages et méthodes spéciales"

#: library/turtle.rst:0
msgid ":func:`mode`"
msgstr ":func:`mode`"

#: library/turtle.rst:0
msgid ":func:`colormode`"
msgstr ":func:`colormode`"

#: library/turtle.rst:0
msgid ":func:`getcanvas`"
msgstr ":func:`getcanvas`"

#: library/turtle.rst:0
msgid ":func:`getshapes`"
msgstr ":func:`getshapes`"

#: library/turtle.rst:0
msgid ":func:`register_shape` | :func:`addshape`"
msgstr ":func:`register_shape` | :func:`addshape`"

#: library/turtle.rst:0
msgid ":func:`turtles`"
msgstr ":func:`turtles`"

#: library/turtle.rst:0
msgid ":func:`window_height`"
msgstr ":func:`window_height`"

#: library/turtle.rst:0
msgid ":func:`window_width`"
msgstr ":func:`window_width`"

#: library/turtle.rst:2082
msgid "Input methods"
msgstr "Méthodes de saisie"

#: library/turtle.rst:0
msgid ":func:`textinput`"
msgstr ":func:`textinput`"

#: library/turtle.rst:0
msgid ":func:`numinput`"
msgstr ":func:`numinput`"

#: library/turtle.rst:427
msgid "Methods specific to Screen"
msgstr "Méthodes spécifiques de *Screen*"

#: library/turtle.rst:0
msgid ":func:`bye`"
msgstr ":func:`bye`"

#: library/turtle.rst:0
msgid ":func:`exitonclick`"
msgstr ":func:`exitonclick`"

#: library/turtle.rst:0
msgid ":func:`setup`"
msgstr ":func:`setup`"

#: library/turtle.rst:0
msgid ":func:`title`"
msgstr ":func:`title`"

#: library/turtle.rst:435
msgid "Methods of RawTurtle/Turtle and corresponding functions"
msgstr "Méthodes de *RawTurtle*/*Turtle* et leurs fonctions correspondantes"

#: library/turtle.rst:437
msgid ""
"Most of the examples in this section refer to a Turtle instance called "
"``turtle``."
msgstr ""
"La plupart des exemples de cette section se réfèrent à une instance de "
"*Turtle* appelée ``turtle``."

#: library/turtle.rst:0
msgid "Parameters"
msgstr "Paramètres"

#: library/turtle.rst:491 library/turtle.rst:614 library/turtle.rst:660
msgid "a number (integer or float)"
msgstr "un nombre (entier ou flottant)"

#: library/turtle.rst:448
msgid ""
"Move the turtle forward by the specified *distance*, in the direction the "
"turtle is headed."
msgstr ""
"Avance la tortue de la *distance* spécifiée, dans la direction où elle se "
"dirige."

#: library/turtle.rst:710 library/turtle.rst:1485
msgid "a number"
msgstr "un nombre"

#: library/turtle.rst:470
msgid ""
"Move the turtle backward by *distance*, opposite to the direction the turtle "
"is headed.  Do not change the turtle's heading."
msgstr ""
"Déplace la tortue de *distance* vers l'arrière (dans le sens opposé à celui "
"vers lequel elle pointe). Ne change pas le cap de la tortue."

#: library/turtle.rst:493
msgid ""
"Turn turtle right by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Tourne la tortue à droite de *angle* unités (les unités sont par défaut des "
"degrés, mais peuvent être définies via les fonctions :func:`degrees` et :"
"func:`radians`). L'orientation de l'angle dépend du mode de la tortue, voir :"
"func:`mode`."

#: library/turtle.rst:518
msgid ""
"Turn turtle left by *angle* units.  (Units are by default degrees, but can "
"be set via the :func:`degrees` and :func:`radians` functions.)  Angle "
"orientation depends on the turtle mode, see :func:`mode`."
msgstr ""
"Tourne la tortue à gauche d'une valeur de *angle* unités (les unités sont "
"par défaut des degrés, mais peuvent être définies via les fonctions :func:"
"`degrees` et :func:`radians`). L'orientation de l'angle dépend du mode de la "
"tortue, voir :func:`mode`."

#: library/turtle.rst:542
msgid "a number or a pair/vector of numbers"
msgstr "un nombre ou une paire / un vecteur de nombres"

#: library/turtle.rst:576 library/turtle.rst:577
msgid "a number or ``None``"
msgstr "un nombre ou ``None``"

#: library/turtle.rst:545
msgid ""
"If *y* is ``None``, *x* must be a pair of coordinates or a :class:`Vec2D` (e."
"g. as returned by :func:`pos`)."
msgstr ""
"Si *y* est ``None``, *x* doit être une paire de coordonnées, ou bien une "
"instance de :class:`Vec2D` (par exemple, tel que renvoyé par :func:`pos`)."

#: library/turtle.rst:548
msgid ""
"Move turtle to an absolute position.  If the pen is down, draw line.  Do not "
"change the turtle's orientation."
msgstr ""
"Déplace la tortue vers une position absolue. Si le stylo est en bas, trace "
"une ligne. Ne change pas l'orientation de la tortue."

#: library/turtle.rst:578
msgid "a boolean"
msgstr ""

#: library/turtle.rst:580
msgid ""
"Move turtle to an absolute position. Unlike goto(x, y), a line will not be "
"drawn. The turtle's orientation does not change. If currently filling, the "
"polygon(s) teleported from will be filled after leaving, and filling will "
"begin again after teleporting. This can be disabled with fill_gap=True, "
"which makes the imaginary line traveled during teleporting act as a fill "
"barrier like in goto(x, y)."
msgstr ""

#: library/turtle.rst:616
msgid ""
"Set the turtle's first coordinate to *x*, leave second coordinate unchanged."
msgstr ""
"Définit la première coordonnée de la tortue à *x*, en laissant la deuxième "
"coordonnée inchangée."

#: library/turtle.rst:639
msgid ""
"Set the turtle's second coordinate to *y*, leave first coordinate unchanged."
msgstr ""
"Définit la deuxième coordonnée de la tortue à *y*, en laissant la première "
"coordonnée inchangée."

#: library/turtle.rst:662
msgid ""
"Set the orientation of the turtle to *to_angle*.  Here are some common "
"directions in degrees:"
msgstr ""
"Règle l'orientation de la tortue à la valeur ``to_angle``. Voici quelques "
"orientations courantes en degrés :"

#: library/turtle.rst:666
msgid "standard mode"
msgstr "mode standard"

#: library/turtle.rst:666
msgid "logo mode"
msgstr "mode logo"

#: library/turtle.rst:668
msgid "0 - east"
msgstr "0 – Est"

#: library/turtle.rst:668
msgid "0 - north"
msgstr "0 – Nord"

#: library/turtle.rst:669
msgid "90 - north"
msgstr "90 – Nord"

#: library/turtle.rst:669
msgid "90 - east"
msgstr "90 – Est"

#: library/turtle.rst:670
msgid "180 - west"
msgstr "180 – Ouest"

#: library/turtle.rst:670
msgid "180 - south"
msgstr "180 – Sud"

#: library/turtle.rst:671
msgid "270 - south"
msgstr "270 – Sud"

#: library/turtle.rst:671
msgid "270 - west"
msgstr "270 – Ouest"

#: library/turtle.rst:684
msgid ""
"Move turtle to the origin -- coordinates (0,0) -- and set its heading to its "
"start-orientation (which depends on the mode, see :func:`mode`)."
msgstr ""
"Déplace la tortue à l'origine — coordonnées (0,0) — et l'oriente à son cap "
"initial (qui dépend du mode, voir :func:`mode`)."

#: library/turtle.rst:711
msgid "a number (or ``None``)"
msgstr "un nombre (ou ``None``)"

#: library/turtle.rst:805
msgid "an integer (or ``None``)"
msgstr "un entier (ou ``None``)"

#: library/turtle.rst:714
msgid ""
"Draw a circle with given *radius*.  The center is *radius* units left of the "
"turtle; *extent* -- an angle -- determines which part of the circle is "
"drawn.  If *extent* is not given, draw the entire circle.  If *extent* is "
"not a full circle, one endpoint of the arc is the current pen position.  "
"Draw the arc in counterclockwise direction if *radius* is positive, "
"otherwise in clockwise direction.  Finally the direction of the turtle is "
"changed by the amount of *extent*."
msgstr ""
"Dessine un cercle de rayon *radius*. Le centre se trouve à une distance de "
"*radius* à gauche de la tortue ; l'angle *extent* détermine quelle partie du "
"cercle est dessinée. Si *extent* n'est pas fourni, dessine le cercle en "
"entier. Si *extent* ne correspond pas à un cercle entier, la position "
"actuelle du stylo est donnée par l'un des points d'extrémité de l'arc de "
"cercle. Si la valeur de *radius* est positive, dessine l'arc de cercle dans "
"le sens inverse des aiguilles d'une montre, sinon le dessine dans le sens "
"des aiguilles d'une montre. Enfin, la direction de la tortue peut être "
"modifiée en réglant la valeur de *extent*."

#: library/turtle.rst:722
msgid ""
"As the circle is approximated by an inscribed regular polygon, *steps* "
"determines the number of steps to use.  If not given, it will be calculated "
"automatically.  May be used to draw regular polygons."
msgstr ""
"Comme le cercle est approximé par un polygone régulier inscrit, *steps* "
"détermine le nombre de pas à utiliser. Si cette valeur n'est pas donnée, "
"elle sera calculée automatiquement. Elle peut être utilisée pour dessiner "
"des polygones réguliers."

#: library/turtle.rst:748
msgid "an integer >= 1 (if given)"
msgstr "un entier supérieur ou égal à 1 (si fourni)"

#: library/turtle.rst:749
msgid "a colorstring or a numeric color tuple"
msgstr "une chaîne qui désigne une couleur ou un triplet de couleur numérique"

#: library/turtle.rst:751
msgid ""
"Draw a circular dot with diameter *size*, using *color*.  If *size* is not "
"given, the maximum of pensize+4 and 2*pensize is used."
msgstr ""
"Dessine un point circulaire de diamètre *size*, de la couleur *color*. Si le "
"paramètre *size* n'est pas indiqué, utilise la valeur maximum de la taille "
"du stylo plus 4 et de la taille du stylo multiplié par 2."

#: library/turtle.rst:769
msgid ""
"Stamp a copy of the turtle shape onto the canvas at the current turtle "
"position.  Return a stamp_id for that stamp, which can be used to delete it "
"by calling ``clearstamp(stamp_id)``."
msgstr ""
"Tamponne une copie de la forme de la tortue sur le canevas à la position "
"actuelle de la tortue. Renvoie un *stamp_id* pour ce tampon, qui peut être "
"utilisé pour le supprimer en appelant ``clearstamp(stamp_id)``."

#: library/turtle.rst:783
msgid "an integer, must be return value of previous :func:`stamp` call"
msgstr ""
"un entier, doit être la valeur renvoyée par l'appel précédent de :func:"
"`stamp`"

#: library/turtle.rst:786
msgid "Delete stamp with given *stampid*."
msgstr "Supprime le tampon dont le *stampid* est donné."

#: library/turtle.rst:807
msgid ""
"Delete all or first/last *n* of turtle's stamps.  If *n* is ``None``, delete "
"all stamps, if *n* > 0 delete first *n* stamps, else if *n* < 0 delete last "
"*n* stamps."
msgstr ""
"Supprime tous, les *n* premiers ou les *n* derniers tampons de la tortue. Si "
"*n* est ``None``, supprime tous les tampons, si *n* > 0, supprime les *n* "
"premiers tampons et si n < 0, supprime les *n* derniers tampons."

#: library/turtle.rst:823
msgid ""
"Undo (repeatedly) the last turtle action(s).  Number of available undo "
"actions is determined by the size of the undobuffer."
msgstr ""
"Annule la ou les dernières (si répété) actions de la tortue. Le nombre "
"d'annulations disponible est déterminé par la taille de la mémoire tampon "
"d'annulations."

#: library/turtle.rst:838
msgid "an integer in the range 0..10 or a speedstring (see below)"
msgstr ""
"un nombre entier compris dans l’intervalle entre 0 et 10 inclus, ou une "
"chaîne de vitesse (voir ci-dessous)"

#: library/turtle.rst:840
msgid ""
"Set the turtle's speed to an integer value in the range 0..10.  If no "
"argument is given, return current speed."
msgstr ""
"Règle la vitesse de la tortue à une valeur entière comprise entre 0 et 10 "
"inclus. Si aucun argument n'est donné, renvoie la vitesse actuelle."

#: library/turtle.rst:843
msgid ""
"If input is a number greater than 10 or smaller than 0.5, speed is set to "
"0.  Speedstrings are mapped to speedvalues as follows:"
msgstr ""
"Si l'entrée est un nombre supérieur à 10 ou inférieur à 0,5, la vitesse est "
"fixée à 0. Les chaînes de vitesse sont mises en correspondance avec les "
"valeurs de vitesse comme suit :"

#: library/turtle.rst:846
msgid "\"fastest\":  0"
msgstr "``\"fastest\"`` :  0"

#: library/turtle.rst:847
msgid "\"fast\":  10"
msgstr "``\"fast\"`` :  10"

#: library/turtle.rst:848
msgid "\"normal\":  6"
msgstr "``\"normal\"`` :  6"

#: library/turtle.rst:849
msgid "\"slow\":  3"
msgstr "``\"slow\"`` :  3"

#: library/turtle.rst:850
msgid "\"slowest\":  1"
msgstr "``\"slowest\"`` :  1"

#: library/turtle.rst:852
msgid ""
"Speeds from 1 to 10 enforce increasingly faster animation of line drawing "
"and turtle turning."
msgstr ""
"Les vitesses de 1 à 10 permettent une animation de plus en plus rapide du "
"trait du dessin et de la rotation des tortues."

#: library/turtle.rst:855
msgid ""
"Attention: *speed* = 0 means that *no* animation takes place. forward/back "
"makes turtle jump and likewise left/right make the turtle turn instantly."
msgstr ""
"Attention : *speed* = 0 signifie qu'il n'y a *aucune* animation. *forward*/"
"*back* font sauter la tortue et, de même, *left*/*right* font tourner la "
"tortue instantanément."

#: library/turtle.rst:878
msgid ""
"Return the turtle's current location (x,y) (as a :class:`Vec2D` vector)."
msgstr ""
"Renvoie la position actuelle de la tortue (x,y) (en tant qu'un vecteur :"
"class:`Vec2d`)."

#: library/turtle.rst:952
msgid "a number or a pair/vector of numbers or a turtle instance"
msgstr ""
"un nombre, ou une paire / un vecteur de nombres, ou une instance de tortue"

#: library/turtle.rst:953
msgid "a number if *x* is a number, else ``None``"
msgstr "un nombre si *x* est un nombre, sinon ``None``"

#: library/turtle.rst:892
msgid ""
"Return the angle between the line from turtle position to position specified "
"by (x,y), the vector or the other turtle.  This depends on the turtle's "
"start orientation which depends on the mode - \"standard\"/\"world\" or "
"\"logo\"."
msgstr ""
"Renvoie l'angle entre l'orientation d'origine et la ligne formée de la "
"position de la tortue à la position spécifiée par (x,y), le vecteur ou "
"l'autre tortue. L'orientation d'origine dépend du mode — \"standard\"/"
"\"world\" ou \"logo\"."

#: library/turtle.rst:906
msgid "Return the turtle's x coordinate."
msgstr "Renvoie la coordonnée x de la tortue."

#: library/turtle.rst:922
msgid "Return the turtle's y coordinate."
msgstr "Renvoie la coordonnée y de la tortue."

#: library/turtle.rst:938
msgid ""
"Return the turtle's current heading (value depends on the turtle mode, see :"
"func:`mode`)."
msgstr ""
"Renvoie le cap de la tortue (la valeur dépend du mode de la tortue, voir :"
"func:`mode`)."

#: library/turtle.rst:955
msgid ""
"Return the distance from the turtle to (x,y), the given vector, or the given "
"other turtle, in turtle step units."
msgstr ""
"Renvoie la distance entre la tortue et (x,y), le vecteur donné ou l'autre "
"tortue donnée. La valeur est exprimée en unités de pas de tortue."

#: library/turtle.rst:973
msgid "Settings for measurement"
msgstr "Paramètres de mesure"

#: library/turtle.rst:979
msgid ""
"Set angle measurement units, i.e. set number of \"degrees\" for a full "
"circle. Default value is 360 degrees."
msgstr ""
"Définit les unités de mesure des angles, c.-à-d. fixe le nombre de "
"« degrés » pour un cercle complet. La valeur par défaut est de 360 degrés."

#: library/turtle.rst:1002
msgid ""
"Set the angle measurement units to radians.  Equivalent to ``degrees(2*math."
"pi)``."
msgstr ""
"Règle l'unité de mesure des angles sur radians. Équivalent à "
"``degrees(2*math.pi)``."

#: library/turtle.rst:1033
msgid "Pull the pen down -- drawing when moving."
msgstr "Baisse la pointe du stylo — dessine quand il se déplace."

#: library/turtle.rst:1040
msgid "Pull the pen up -- no drawing when moving."
msgstr "Lève la pointe du stylo  — pas de dessin quand il se déplace."

#: library/turtle.rst:1046
msgid "a positive number"
msgstr "un nombre positif"

#: library/turtle.rst:1048
msgid ""
"Set the line thickness to *width* or return it.  If resizemode is set to "
"\"auto\" and turtleshape is a polygon, that polygon is drawn with the same "
"line thickness.  If no argument is given, the current pensize is returned."
msgstr ""
"Règle l'épaisseur de la ligne à *width* ou la renvoie. Si *resizemode* est "
"défini à \"auto\" et que *turtleshape* (la forme de la tortue) est un "
"polygone, le polygone est dessiné avec cette épaisseur. Si aucun argument "
"n'est passé, la taille actuelle du stylo (*pensize*) est renvoyée."

#: library/turtle.rst:1062
msgid "a dictionary with some or all of the below listed keys"
msgstr "un dictionnaire avec certaines ou toutes les clés énumérées ci-dessous"

#: library/turtle.rst:1063
msgid "one or more keyword-arguments with the below listed keys as keywords"
msgstr ""
"un ou plusieurs arguments par mots-clés avec les clés suivantes comme mots-"
"clés"

#: library/turtle.rst:1065
msgid ""
"Return or set the pen's attributes in a \"pen-dictionary\" with the "
"following key/value pairs:"
msgstr ""
"Renvoie ou définit les attributs du stylo dans un ``\"pen-dictionary\"`` "
"avec les paires clés / valeurs suivantes :"

#: library/turtle.rst:1068
msgid "\"shown\": True/False"
msgstr "``\"shown\"`` : ``True`` / ``False``"

#: library/turtle.rst:1069
msgid "\"pendown\": True/False"
msgstr "``\"pendown\"`` : ``True`` / ``False``"

#: library/turtle.rst:1070
msgid "\"pencolor\": color-string or color-tuple"
msgstr ""
"``\"pencolor\"`` : chaîne de caractères ou triplet désignant la couleur du "
"stylo"

#: library/turtle.rst:1071
msgid "\"fillcolor\": color-string or color-tuple"
msgstr ""
"``\"fillcolor\"`` : chaîne de caractères ou triplet pour la couleur de "
"remplissage"

#: library/turtle.rst:1072
msgid "\"pensize\": positive number"
msgstr "``\"pensize\"`` : nombre positif"

#: library/turtle.rst:1073
msgid "\"speed\": number in range 0..10"
msgstr "``\"speed\"`` : nombre compris dans intervalle 0 et 10"

#: library/turtle.rst:1074
msgid "\"resizemode\": \"auto\" or \"user\" or \"noresize\""
msgstr "``\"resizemode\"`` : ``\"auto\"``, ``\"user\"`` ou ``\"noresize\"``"

#: library/turtle.rst:1075
msgid "\"stretchfactor\": (positive number, positive number)"
msgstr "``\"stretchfactor\"`` : (nombre positif, nombre positif)"

#: library/turtle.rst:1076
msgid "\"outline\": positive number"
msgstr "``\"outline\"`` : nombre positif"

#: library/turtle.rst:1077
msgid "\"tilt\": number"
msgstr "``\"tilt\"`` : nombre"

#: library/turtle.rst:1079
msgid ""
"This dictionary can be used as argument for a subsequent call to :func:`pen` "
"to restore the former pen-state.  Moreover one or more of these attributes "
"can be provided as keyword-arguments.  This can be used to set several pen "
"attributes in one statement."
msgstr ""
"Ce dictionnaire peut être utilisé comme argument pour un appel ultérieur à :"
"func:`pen` pour restaurer l'ancien état du stylo. En outre, un ou plus de "
"ces attributs peuvent est passés en tant qu'arguments nommés. Cela peut être "
"utilisé pour définir plusieurs attributs du stylo en une instruction."

#: library/turtle.rst:1105
msgid "Return ``True`` if pen is down, ``False`` if it's up."
msgstr ""
"Renvoie ``True`` si la pointe du stylo est en bas et ``False`` si elle est "
"en haut."

#: library/turtle.rst:1123
msgid "Return or set the pencolor."
msgstr "Renvoie ou règle la couleur du stylo."

#: library/turtle.rst:1174
msgid "Four input formats are allowed:"
msgstr "Quatre formats d'entrée sont autorisés :"

#: library/turtle.rst:1127
msgid "``pencolor()``"
msgstr "``pencolor()``"

#: library/turtle.rst:1128
msgid ""
"Return the current pencolor as color specification string or as a tuple (see "
"example).  May be used as input to another color/pencolor/fillcolor call."
msgstr ""
"Renvoie la couleur du stylo actuelle en tant que chaine de spécification de "
"couleurs ou en tant qu'un *n*-uplet (voir l'exemple). Peut être utilisée "
"comme entrée à un autre appel de *color*/*pencolor*/*fillcolor*."

#: library/turtle.rst:1132
msgid "``pencolor(colorstring)``"
msgstr "``pencolor(colorstring)``"

#: library/turtle.rst:1133
msgid ""
"Set pencolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Définit la couleur du stylo à ``colorstring``, qui est une chaîne de "
"spécification de couleur *Tk*, telle que ``\"red\"``, ``\"yellow\"``, ou "
"``\"#33cc8c\"``."

#: library/turtle.rst:1136
msgid "``pencolor((r, g, b))``"
msgstr "``pencolor((r, g, b))``"

#: library/turtle.rst:1137
msgid ""
"Set pencolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Définit la couleur du stylo à la couleur RGB représentée par le *n*-uplet de "
"*r*, *g* et *b*. Chacun des *r*, *g* et *b* doit être dans l'intervalle ``0.."
"colormode``, où *colormode* est vaut 1.0 ou 255 (voir :func:`colormode`)."

#: library/turtle.rst:1141
msgid "``pencolor(r, g, b)``"
msgstr "``pencolor(r, g, b)``"

#: library/turtle.rst:1142
msgid ""
"Set pencolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Définit la couleur du stylo à la couleur RGB représentée par *r*, *g* et "
"*b*. Chacun des *r*, *g* et *b* doit être dans l'intervalle ``0..colormode``."

#: library/turtle.rst:1145
msgid ""
"If turtleshape is a polygon, the outline of that polygon is drawn with the "
"newly set pencolor."
msgstr ""
"Si la forme de la tortue est un polygone, le contour de ce polygone est "
"dessiné avec la nouvelle couleur du stylo."

#: library/turtle.rst:1172
msgid "Return or set the fillcolor."
msgstr "Renvoie ou règle la couleur de remplissage."

#: library/turtle.rst:1176
msgid "``fillcolor()``"
msgstr "``fillcolor()``"

#: library/turtle.rst:1177
msgid ""
"Return the current fillcolor as color specification string, possibly in "
"tuple format (see example).  May be used as input to another color/pencolor/"
"fillcolor call."
msgstr ""
"Renvoie la couleur de remplissage actuelle (*fillcolor*) en tant que chaine "
"de spécification, possiblement en format *n*-uplet (voir l'exemple). Peut "
"être utilisée en entrée pour un autre appel de *color*/*pencolor*/"
"*fillcolor*."

#: library/turtle.rst:1181
msgid "``fillcolor(colorstring)``"
msgstr "``fillcolor(colorstring)``"

#: library/turtle.rst:1182
msgid ""
"Set fillcolor to *colorstring*, which is a Tk color specification string, "
"such as ``\"red\"``, ``\"yellow\"``, or ``\"#33cc8c\"``."
msgstr ""
"Définit la couleur de remplissage (*fillcolor*) à *colorstring*, qui est une "
"chaine de spécification de couleur *Tk* comme par exemple ``\"red\"``, "
"``\"yellow\"`` ou ``\"#33cc8c\"``."

#: library/turtle.rst:1185
msgid "``fillcolor((r, g, b))``"
msgstr "``fillcolor((r, g, b))``"

#: library/turtle.rst:1186
msgid ""
"Set fillcolor to the RGB color represented by the tuple of *r*, *g*, and "
"*b*.  Each of *r*, *g*, and *b* must be in the range 0..colormode, where "
"colormode is either 1.0 or 255 (see :func:`colormode`)."
msgstr ""
"Définit la couleur du remplissage (*fillcolor*) à la couleur RGB représentée "
"par le *n*-uplet  *r*, *g*, *b*. Chacun des *r*, *g* et *b* doit être dans "
"l'intervalle ``0..colormode`` où *colormode* vaut 1.0 ou 255 (voir :func:"
"`colormode`)."

#: library/turtle.rst:1190
msgid "``fillcolor(r, g, b)``"
msgstr "``fillcolor(r, g, b)``"

#: library/turtle.rst:1191
msgid ""
"Set fillcolor to the RGB color represented by *r*, *g*, and *b*.  Each of "
"*r*, *g*, and *b* must be in the range 0..colormode."
msgstr ""
"Définit la couleur du remplissage(*fillcolor*) à la couleur RGB représentée "
"par *r*, *g* et *b*. Chacun des *r*, *g* et *b* doit être dans l'intervalle "
"``0..colormode``."

#: library/turtle.rst:1194
msgid ""
"If turtleshape is a polygon, the interior of that polygon is drawn with the "
"newly set fillcolor."
msgstr ""
"Si la forme de la tortue est un polygone, l'intérieur de ce polygone sera "
"dessiné avec la nouvelle couleur de remplissage."

#: library/turtle.rst:1215
msgid "Return or set pencolor and fillcolor."
msgstr "Renvoie ou règle la couleur du stylo et la couleur de remplissage."

#: library/turtle.rst:1217
msgid ""
"Several input formats are allowed.  They use 0 to 3 arguments as follows:"
msgstr ""
"Plusieurs formats d'entrée sont autorisés. Ils peuvent avoir de zéro jusqu'à "
"trois arguments, employés comme suit :"

#: library/turtle.rst:1220
msgid "``color()``"
msgstr "``color()``"

#: library/turtle.rst:1221
msgid ""
"Return the current pencolor and the current fillcolor as a pair of color "
"specification strings or tuples as returned by :func:`pencolor` and :func:"
"`fillcolor`."
msgstr ""
"Renvoie la couleur du stylo actuelle et la couleur de remplissage actuelle "
"sous forme de paire, soit de chaines de spécification de couleur, soit de "
"*n*-uplets comme renvoyés par :func:`pencolor` et :func:`fillcolor`."

#: library/turtle.rst:1225
msgid "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"
msgstr "``color(colorstring)``, ``color((r,g,b))``, ``color(r,g,b)``"

#: library/turtle.rst:1226
msgid ""
"Inputs as in :func:`pencolor`, set both, fillcolor and pencolor, to the "
"given value."
msgstr ""
"Les formats d'entrée sont comme dans :func:`pencolor`. Définit à la fois la "
"couleur de remplissage et la couleur du stylo à la valeur passée."

#: library/turtle.rst:1229
msgid ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"
msgstr ""
"``color(colorstring1, colorstring2)``, ``color((r1,g1,b1), (r2,g2,b2))``"

#: library/turtle.rst:1230
msgid ""
"Equivalent to ``pencolor(colorstring1)`` and ``fillcolor(colorstring2)`` and "
"analogously if the other input format is used."
msgstr ""
"Équivalent à ``pencolor(colorstring1)`` et ``fillcolor(colorstring2)`` et de "
"manière analogue si un autre format d'entrée est utilisé."

#: library/turtle.rst:1233
msgid ""
"If turtleshape is a polygon, outline and interior of that polygon is drawn "
"with the newly set colors."
msgstr ""
"Si la forme de la tortue est un polygone, le contour et l'intérieur de ce "
"polygone sont dessinés avec les nouvelles couleurs."

#: library/turtle.rst:1247
msgid "See also: Screen method :func:`colormode`."
msgstr "Voir aussi : la méthode :func:`colormode` de *Screen*."

#: library/turtle.rst:1261
msgid "Return fillstate (``True`` if filling, ``False`` else)."
msgstr ""
"Renvoie l'état de remplissage (``True`` signifie en train de faire un "
"remplissage, ``False`` sinon)."

#: library/turtle.rst:1276
msgid "To be called just before drawing a shape to be filled."
msgstr "À appeler juste avant de dessiner une forme à remplir."

#: library/turtle.rst:1281
msgid "Fill the shape drawn after the last call to :func:`begin_fill`."
msgstr "Remplit la forme dessinée après le dernier appel à :func:`begin_fill`."

#: library/turtle.rst:1283
msgid ""
"Whether or not overlap regions for self-intersecting polygons or multiple "
"shapes are filled depends on the operating system graphics, type of overlap, "
"and number of overlaps.  For example, the Turtle star above may be either "
"all yellow or have some white regions."
msgstr ""
"Le remplissage correct des formes complexes (polygones qui se recoupent, "
"plusieurs formes) dépend des primitives graphiques du système "
"d’exploitation, du type et du nombre des chevauchements. Par exemple, "
"l'étoile (*Turtle star* en anglais) ci-dessus peut être entièrement jaune ou "
"comporter quelques régions blanches."

#: library/turtle.rst:1302
msgid ""
"Delete the turtle's drawings from the screen, re-center the turtle and set "
"variables to the default values."
msgstr ""
"Supprime les dessins de la tortue de l'écran, recentre la tortue et assigne "
"les variables aux valeurs par défaut."

#: library/turtle.rst:1323
msgid ""
"Delete the turtle's drawings from the screen.  Do not move turtle.  State "
"and position of the turtle as well as drawings of other turtles are not "
"affected."
msgstr ""
"Supprime les dessins de la tortue de l'écran. Ne déplace pas la tortue. "
"L'état et la position de la tortue ainsi que les dessins des autres tortues "
"ne sont pas affectés."

#: library/turtle.rst:1329
msgid "object to be written to the TurtleScreen"
msgstr "objet à écrire sur le *TurtleScreen*"

#: library/turtle.rst:1330
msgid "True/False"
msgstr "``True`` / ``False``"

#: library/turtle.rst:1331
msgid "one of the strings \"left\", \"center\" or right\""
msgstr ""
"l'une des chaînes de caractères suivantes : ``\"left\"``, ``\"center\"`` ou "
"``\"right\"``"

#: library/turtle.rst:1332
msgid "a triple (fontname, fontsize, fonttype)"
msgstr "triplet (nom de police, taille de police, type de police)"

#: library/turtle.rst:1334
msgid ""
"Write text - the string representation of *arg* - at the current turtle "
"position according to *align* (\"left\", \"center\" or \"right\") and with "
"the given font.  If *move* is true, the pen is moved to the bottom-right "
"corner of the text.  By default, *move* is ``False``."
msgstr ""
"Écrit du texte - La représentation de la chaîne *arg* - à la position "
"actuelle de la tortue conformément à *align* (\"*left*\", \"*center*\" ou "
"\"*right*\") et en police donnée. Si *move* est ``True``, le stylo est "
"déplacé vers le coin inférieur droit du texte. Par défaut, *move* est "
"``False``."

#: library/turtle.rst:1352
msgid ""
"Make the turtle invisible.  It's a good idea to do this while you're in the "
"middle of doing some complex drawing, because hiding the turtle speeds up "
"the drawing observably."
msgstr ""
"Rend la tortue invisible. C'est recommandé lorsque vous êtes en train de "
"faire un dessin complexe, vous observerez alors une accélération notable."

#: library/turtle.rst:1365
msgid "Make the turtle visible."
msgstr "Rend la tortue visible."

#: library/turtle.rst:1375
msgid "Return ``True`` if the Turtle is shown, ``False`` if it's hidden."
msgstr ""
"Renvoie ``True`` si la tortue est visible, et ``False`` si elle est cachée."

#: library/turtle.rst:1390
msgid "a string which is a valid shapename"
msgstr "une chaîne de caractères qui correspond à un nom de forme valide"

#: library/turtle.rst:1392
msgid ""
"Set turtle shape to shape with given *name* or, if name is not given, return "
"name of current shape.  Shape with *name* must exist in the TurtleScreen's "
"shape dictionary.  Initially there are the following polygon shapes: "
"\"arrow\", \"turtle\", \"circle\", \"square\", \"triangle\", \"classic\".  "
"To learn about how to deal with shapes see Screen method :func:"
"`register_shape`."
msgstr ""
"La tortue prend la forme *name* donnée, ou, si *name* n'est pas donné, "
"renvoie le nom de la forme actuelle. Le nom *name* donné doit exister dans "
"le dictionnaire de formes de *TurtleScreen*. Initialement, il y a les "
"polygones suivants : \"*arrow*\", \"*turtle*\", \"*circle*\", \"*square*\", "
"\"*triangle*\", \"*classic*\". Pour en apprendre plus sur comment gérer les "
"formes, voir la méthode de *Screen* :func:`register_shape`."

#: library/turtle.rst:1410
msgid "one of the strings \"auto\", \"user\", \"noresize\""
msgstr ""
"l'une des chaînes suivantes : ``\"auto\"``, ``\"user\"``, ``\"noresize\"``"

#: library/turtle.rst:1412
msgid ""
"Set resizemode to one of the values: \"auto\", \"user\", \"noresize\".  If "
"*rmode* is not given, return current resizemode.  Different resizemodes have "
"the following effects:"
msgstr ""
"Définit *resizemode* à l'une des valeurs suivantes : \"*auto*\", \"*user*\", "
"\"*noresize*\". Si \"*rmode*\" n'est pas donné, renvoie le *resizemode* "
"actuel. Les différents *resizemode* ont les effets suivants :"

#: library/turtle.rst:1416
msgid ""
"\"auto\": adapts the appearance of the turtle corresponding to the value of "
"pensize."
msgstr ""
"*\"auto\"* : adapte l'apparence de la tortue en fonction de la largeur du "
"stylo (*value of pensize* en anglais)."

#: library/turtle.rst:1417
msgid ""
"\"user\": adapts the appearance of the turtle according to the values of "
"stretchfactor and outlinewidth (outline), which are set by :func:`shapesize`."
msgstr ""
"*\"user\"* : adapte l'apparence de la tortue en fonction des valeurs du "
"paramètre d'étirement et de la largeur des contours, déterminés par :func:"
"`shapesize`."

#: library/turtle.rst:1420
msgid "\"noresize\": no adaption of the turtle's appearance takes place."
msgstr ""
"*\"noresize\"* : il n'y a pas de modification de l'apparence de la tortue."

#: library/turtle.rst:1422
msgid ""
"``resizemode(\"user\")`` is called by :func:`shapesize` when used with "
"arguments."
msgstr ""
"``resizemode(\"user\")`` est appelé par :func:`shapesize` quand utilisé sans "
"arguments."

#: library/turtle.rst:1438 library/turtle.rst:1439
msgid "positive number"
msgstr "nombre positif"

#: library/turtle.rst:1441
#, fuzzy
msgid ""
"Return or set the pen's attributes x/y-stretchfactors and/or outline.  Set "
"resizemode to \"user\".  If and only if resizemode is set to \"user\", the "
"turtle will be displayed stretched according to its stretchfactors: "
"*stretch_wid* is stretchfactor perpendicular to its orientation, "
"*stretch_len* is stretchfactor in direction of its orientation, *outline* "
"determines the width of the shape's outline."
msgstr ""
"Renvoie ou définit les attributs x/y-stretchfactors* et/ou contour du stylo. "
"Définit *resizemode* à \"user\". Si et seulement si *resizemode* est à "
"\"user\", la tortue sera affichée étirée en fonction de ses facteurs "
"d'étirements (*stretchfactors*) : *stretch_wid* est le facteur d'étirement "
"perpendiculaire à son orientation, *stretch_len* est le facteur d'étirement "
"en direction de son orientation, *outlline* détermine la largeur de la "
"bordure de la forme."

#: library/turtle.rst:2101 library/turtle.rst:2103
msgid "number (optional)"
msgstr "un nombre (facultatif)"

#: library/turtle.rst:1466
msgid ""
"Set or return the current shearfactor. Shear the turtleshape according to "
"the given shearfactor shear, which is the tangent of the shear angle. Do "
"*not* change the turtle's heading (direction of movement). If shear is not "
"given: return the current shearfactor, i. e. the tangent of the shear angle, "
"by which lines parallel to the heading of the turtle are sheared."
msgstr ""
"Définit ou renvoie le paramétrage de cisaillement actuel. Déforme la tortue "
"en fonction du paramètre *shear* donné, qui est la tangente de l'angle de "
"cisaillement. Ne change pas le sens de déplacement de la tortue. Si le "
"paramètre *shear* n'est pas indiqué, renvoie la valeur actuelle du "
"cisaillement, c.-à-d. la valeur de la tangente de l'angle de cisaillement, "
"celui par rapport auquel les lignes parallèles à la direction de la tortue "
"sont cisaillées."

#: library/turtle.rst:1487
msgid ""
"Rotate the turtleshape by *angle* from its current tilt-angle, but do *not* "
"change the turtle's heading (direction of movement)."
msgstr ""
"Tourne la forme de la tortue de *angle* depuis son angle d'inclinaison "
"actuel, mais *ne change pas* le cap de la tortue (direction du mouvement)."

#: library/turtle.rst:1527 library/turtle.rst:1529 library/turtle.rst:1530
msgid "a number (optional)"
msgstr "un nombre (facultatif)"

#: library/turtle.rst:1506
msgid ""
"Set or return the current tilt-angle. If angle is given, rotate the "
"turtleshape to point in the direction specified by angle, regardless of its "
"current tilt-angle. Do *not* change the turtle's heading (direction of "
"movement). If angle is not given: return the current tilt-angle, i. e. the "
"angle between the orientation of the turtleshape and the heading of the "
"turtle (its direction of movement)."
msgstr ""
"Définit ou renvoie l'angle d'inclinaison actuel. Si l'angle est donné, la "
"forme de la tortue est tournée pour pointer dans direction spécifiée par "
"l'angle, indépendamment de son angle d'inclinaison actuel. *Ne change pas* "
"le cap de la tortue (direction du mouvement). Si l'angle n'est pas donné, "
"renvoie l'angle d'inclinaison actuel (L'angle entre l'orientation de la "
"forme de la tortue et le cap de la tortue (sa direction de mouvement))."

#: library/turtle.rst:1532
msgid "Set or return the current transformation matrix of the turtle shape."
msgstr ""
"Définit ou renvoie la matrice de transformation actuelle de la forme de la "
"tortue."

#: library/turtle.rst:1534
msgid ""
"If none of the matrix elements are given, return the transformation matrix "
"as a tuple of 4 elements. Otherwise set the given elements and transform the "
"turtleshape according to the matrix consisting of first row t11, t12 and "
"second row t21, t22. The determinant t11 * t22 - t12 * t21 must not be zero, "
"otherwise an error is raised. Modify stretchfactor, shearfactor and "
"tiltangle according to the given matrix."
msgstr ""
"Si aucun élément de la matrice n'est fourni, renvoie la matrice de "
"transformation sous la forme d'un *n*-uplet à 4 éléments. Autrement, définit "
"les éléments donnés et transforme la forme de la tortue conformément à la "
"matrice dont la première ligne est t11, t12 et la deuxième ligne t21, t22. "
"Le déterminant t11 * t22 - t12 * t21 ne doit pas être nul, sinon une erreur "
"est levée. Cela modifie le facteur d'étirement, le facteur de cisaillement "
"et l'angle d'inclinaison en fonction de la matrice donnée."

#: library/turtle.rst:1556
msgid ""
"Return the current shape polygon as tuple of coordinate pairs. This can be "
"used to define a new shape or components of a compound shape."
msgstr ""
"Renvoie la forme actuelle du polygone en *n*-uplet de paires de coordonnées. "
"Vous pouvez l'utiliser afin de définir une nouvelle forme ou en tant que "
"composant pour une forme plus complexe."

#: library/turtle.rst:1596 library/turtle.rst:2025
msgid ""
"a function with two arguments which will be called with the coordinates of "
"the clicked point on the canvas"
msgstr ""
"une fonction à deux arguments qui sera appelée avec les coordonnées du point "
"cliqué sur le canevas"

#: library/turtle.rst:1598 library/turtle.rst:2027
msgid "number of the mouse-button, defaults to 1 (left mouse button)"
msgstr "numéro du bouton de la souris, par défaut 1 (bouton de gauche)"

#: library/turtle.rst:1599 library/turtle.rst:2028
msgid ""
"``True`` or ``False`` -- if ``True``, a new binding will be added, otherwise "
"it will replace a former binding"
msgstr ""
"``True`` ou ``False`` — si ``True``, un nouveau lien est ajouté, sinon il "
"remplace un ancien lien"

#: library/turtle.rst:1580
msgid ""
"Bind *fun* to mouse-click events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed.  Example for the anonymous turtle, i.e. the "
"procedural way:"
msgstr ""
"Crée un lien vers *fun* pour les événements de clics de la souris sur cette "
"tortue. Si *fun* est ``None``, les liens existants sont supprimés. Exemple "
"pour la tortue anonyme, c'est-à-dire la manière procédurale :"

#: library/turtle.rst:1602
msgid ""
"Bind *fun* to mouse-button-release events on this turtle.  If *fun* is "
"``None``, existing bindings are removed."
msgstr ""
"Crée un lien vers *fun* pour les événements de relâchement d'un clic de la "
"souris sur cette tortue. Si *fun* est ``None``, les liens existants sont "
"supprimés."

#: library/turtle.rst:1627
msgid ""
"Bind *fun* to mouse-move events on this turtle.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Crée un lien vers *fun* pour les événements de mouvement de la souris sur "
"cette tortue. Si *fun* est ``None``, les liens existants sont supprimés."

#: library/turtle.rst:1630
msgid ""
"Remark: Every sequence of mouse-move-events on a turtle is preceded by a "
"mouse-click event on that turtle."
msgstr ""
"Remarque : toutes les séquences d'événements de mouvement de la souris sur "
"une tortue sont précédées par un événement de clic de la souris sur cette "
"tortue."

#: library/turtle.rst:1638
msgid ""
"Subsequently, clicking and dragging the Turtle will move it across the "
"screen thereby producing handdrawings (if pen is down)."
msgstr ""
"Par la suite, un cliquer-glisser sur la tortue la fait se déplacer au "
"travers de l'écran, produisant ainsi des dessins « à la main » (si le stylo "
"est posé)."

#: library/turtle.rst:1647
msgid ""
"Start recording the vertices of a polygon.  Current turtle position is first "
"vertex of polygon."
msgstr ""
"Démarre l'enregistrement des sommets d'un polygone. La position actuelle de "
"la tortue est le premier sommet du polygone."

#: library/turtle.rst:1653
msgid ""
"Stop recording the vertices of a polygon.  Current turtle position is last "
"vertex of polygon.  This will be connected with the first vertex."
msgstr ""
"Arrête l'enregistrement des sommets d'un polygone. La position actuelle de "
"la tortue sera le dernier sommet du polygone. Il sera connecté au premier "
"sommet."

#: library/turtle.rst:1659
msgid "Return the last recorded polygon."
msgstr "Renvoie le dernier polygone sauvegardé."

#: library/turtle.rst:1678
msgid ""
"Create and return a clone of the turtle with same position, heading and "
"turtle properties."
msgstr ""
"Crée et renvoie un clone de la tortue avec les mêmes position, cap et "
"propriétés."

#: library/turtle.rst:1691
msgid ""
"Return the Turtle object itself.  Only reasonable use: as a function to "
"return the \"anonymous turtle\":"
msgstr ""
"Renvoie l'objet *Turtle* lui-même. Sa seule utilisation : comme fonction "
"pour renvoyer la \"tortue anonyme\" :"

#: library/turtle.rst:1705
msgid ""
"Return the :class:`TurtleScreen` object the turtle is drawing on. "
"TurtleScreen methods can then be called for that object."
msgstr ""
"Renvoie l'objet :class:`TurtleScreen` sur lequel la tortue dessine. Les "
"méthodes de TurtleScreen peuvent être appelées pour cet objet."

#: library/turtle.rst:1719
msgid "an integer or ``None``"
msgstr "un entier ou ``None``"

#: library/turtle.rst:1721
msgid ""
"Set or disable undobuffer.  If *size* is an integer, an empty undobuffer of "
"given size is installed.  *size* gives the maximum number of turtle actions "
"that can be undone by the :func:`undo` method/function.  If *size* is "
"``None``, the undobuffer is disabled."
msgstr ""
"Définit ou désactive la mémoire d'annulation. Si *size* est un entier, une "
"mémoire d'annulation de la taille donnée est installée. *size* donne le "
"nombre maximum d'actions de la tortue qui peuvent être annulées par la "
"fonction/méthode :func:`undo`. Si *size* est ``None``, la mémoire "
"d'annulation est désactivée."

#: library/turtle.rst:1734
msgid "Return number of entries in the undobuffer."
msgstr "Renvoie le nombre d'entrées dans la mémoire d'annulation."

#: library/turtle.rst:1747
msgid "Compound shapes"
msgstr "Formes composées"

#: library/turtle.rst:1749
msgid ""
"To use compound turtle shapes, which consist of several polygons of "
"different color, you must use the helper class :class:`Shape` explicitly as "
"described below:"
msgstr ""
"Pour utiliser des formes de tortues combinées, qui sont composées de "
"polygones de différentes couleurs, vous devez utiliser la classe utilitaire :"
"class:`Shape` explicitement comme décrit ci-dessous :"

#: library/turtle.rst:1753
msgid "Create an empty Shape object of type \"compound\"."
msgstr "Créez un objet Shape vide de type \"compound\"."

#: library/turtle.rst:1754
#, fuzzy
msgid ""
"Add as many components to this object as desired, using the :meth:`~Shape."
"addcomponent` method."
msgstr ""
"Ajoutez autant de composants que désirés à cet objet, en utilisant la "
"méthode :meth:`addcomponent`."

#: library/turtle.rst:1757
msgid "For example:"
msgstr "Par exemple :"

#: library/turtle.rst:1768
msgid "Now add the Shape to the Screen's shapelist and use it:"
msgstr ""
"Maintenant ajoutez la *Shape* à la liste des formes de *Screen* et utilisez "
"la :"

#: library/turtle.rst:1779
msgid ""
"The :class:`Shape` class is used internally by the :func:`register_shape` "
"method in different ways.  The application programmer has to deal with the "
"Shape class *only* when using compound shapes like shown above!"
msgstr ""
"La classe :class:`Shape` est utilisée en interne par la méthode :func:"
"`register_shape` de différentes façons. Le développeur n'interagit avec la "
"classe Shape *que* lorsqu'il utilise des formes composées comme montré ci-"
"dessus !"

#: library/turtle.rst:1785
msgid "Methods of TurtleScreen/Screen and corresponding functions"
msgstr "Méthodes de TurtleScreen/Screen et leurs fonctions correspondantes"

#: library/turtle.rst:1787
msgid ""
"Most of the examples in this section refer to a TurtleScreen instance called "
"``screen``."
msgstr ""
"La plupart des exemples dans cette section font référence à une instance de "
"TurtleScreen appelée ``screen``."

#: library/turtle.rst:1801
msgid ""
"a color string or three numbers in the range 0..colormode or a 3-tuple of "
"such numbers"
msgstr ""
"chaîne spécifiant une couleur ou trois nombres dans l'intervalle *0.."
"colormode* ou *n*-uplet de ces trois nombres"

#: library/turtle.rst:1805
msgid "Set or return background color of the TurtleScreen."
msgstr ""
"Définit ou renvoie la couleur de fond de l'écran de la tortue "
"(*TurtleScreen* en anglais)."

#: library/turtle.rst:1820
msgid "a string, name of a gif-file or ``\"nopic\"``, or ``None``"
msgstr ""
"une chaîne de caractères, le nom d'un fichier *gif*, ou ``\"nopic\"``, ou "
"``None``"

#: library/turtle.rst:1822
msgid ""
"Set background image or return name of current backgroundimage.  If "
"*picname* is a filename, set the corresponding image as background.  If "
"*picname* is ``\"nopic\"``, delete background image, if present.  If "
"*picname* is ``None``, return the filename of the current backgroundimage. ::"
msgstr ""
"Définit l'image de fond ou renvoie l'image de fond actuelle. Si *picname* "
"est un nom de fichier, cette image et mis en image de fond. Si *picname* est "
"``\"nopic\"``, l'image de fond sera supprimée si présente. SI *picname* est "
"``None``, le nom du fichier de l'image de fond actuelle est renvoyé. ::"

#: library/turtle.rst:1838
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``clearscreen``.  The global function ``clear`` is a different one "
"derived from the Turtle method ``clear``."
msgstr ""
"Cette méthode TurtleScreen est disponible en tant que fonction globale "
"seulement sous le nom ``clearscreen``. La fonction globale ``clear`` est une "
"fonction différente dérivée de la méthode Turtle ``clear``."

#: library/turtle.rst:1845
msgid ""
"Delete all drawings and all turtles from the TurtleScreen.  Reset the now "
"empty TurtleScreen to its initial state: white background, no background "
"image, no event bindings and tracing on."
msgstr ""
"Supprime tous les dessins et toutes les tortues du TurtleScreen. "
"Réinitialise le TurtleScreen maintenant vide à son état initial : fond "
"blanc, pas d'image de fond, pas d'événement liés, et traçage activé."

#: library/turtle.rst:1854
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``resetscreen``.  The global function ``reset`` is another one derived "
"from the Turtle method ``reset``."
msgstr ""
"Cette méthode TurtleScreen est disponible en tant que fonction globale "
"seulement sous le nom ``resetscreen``. La fonction globale ``reset`` est une "
"fonction différente dérivée de la méthode Turtle ``reset``."

#: library/turtle.rst:1861
msgid "Reset all Turtles on the Screen to their initial state."
msgstr "Remet toutes les tortues à l'écran dans leur état initial."

#: library/turtle.rst:1866
msgid "positive integer, new width of canvas in pixels"
msgstr ""
"nombre entier positif, nouvelle largeur du canevas (zone sur laquelle se "
"déplace la tortue), en pixels"

#: library/turtle.rst:1867
msgid "positive integer, new height of canvas in pixels"
msgstr "nombre entier positif, nouvelle hauteur du canevas, en pixels"

#: library/turtle.rst:1868
msgid "colorstring or color-tuple, new background color"
msgstr ""
"chaîne de caractères indiquant la couleur ou triplet de couleurs, nouvelle "
"couleur de fond"

#: library/turtle.rst:1870
msgid ""
"If no arguments are given, return current (canvaswidth, canvasheight).  Else "
"resize the canvas the turtles are drawing on.  Do not alter the drawing "
"window.  To observe hidden parts of the canvas, use the scrollbars. With "
"this method, one can make visible those parts of a drawing which were "
"outside the canvas before."
msgstr ""
"Si aucun arguments ne sont passés, renvoie l'actuel *(canvaswidth, "
"canvasheight)*. Sinon, redimensionne le canevas sur lequel les tortues "
"dessinent. Ne modifiez pas la fenêtre de dessin. Pour observer les parties "
"cachées du canevas, utilisez les barres de défilement. Avec cette méthode, "
"on peut rendre visible les parties d'un dessin qui étaient en dehors du "
"canevas précédemment."

#: library/turtle.rst:1882
msgid "e.g. to search for an erroneously escaped turtle ;-)"
msgstr "par exemple, chercher une tortue échappée de manière erronée"

#: library/turtle.rst:1887
msgid "a number, x-coordinate of lower left corner of canvas"
msgstr "un nombre, coordonnée x du coin inférieur gauche du canevas"

#: library/turtle.rst:1888
msgid "a number, y-coordinate of lower left corner of canvas"
msgstr "un nombre, la coordonnée y du coin inférieur gauche du canevas"

#: library/turtle.rst:1889
msgid "a number, x-coordinate of upper right corner of canvas"
msgstr "un nombre, la coordonnée x du coin supérieur droit du canevas"

#: library/turtle.rst:1890
msgid "a number, y-coordinate of upper right corner of canvas"
msgstr "un nombre, la coordonnée y du coin supérieur droit du canevas"

#: library/turtle.rst:1892
msgid ""
"Set up user-defined coordinate system and switch to mode \"world\" if "
"necessary.  This performs a ``screen.reset()``.  If mode \"world\" is "
"already active, all drawings are redrawn according to the new coordinates."
msgstr ""
"Configure un système de coordonnées défini par l'utilisateur et bascule vers "
"le mode \"world\" si nécessaire. Cela effectuera un ``screen.reset()``. Si "
"le mode \"world\" est déjà actif, tous les dessins sont re-déssinés par "
"rapport aux nouveaux coordonnées."

#: library/turtle.rst:1896
msgid ""
"**ATTENTION**: in user-defined coordinate systems angles may appear "
"distorted."
msgstr ""
"**ATTENTION** : dans les systèmes de coordonnées définis par l'utilisateur, "
"les angles peuvent apparaître déformés."

#: library/turtle.rst:1924
msgid "positive integer"
msgstr "entier positif"

#: library/turtle.rst:1926
msgid ""
"Set or return the drawing *delay* in milliseconds.  (This is approximately "
"the time interval between two consecutive canvas updates.)  The longer the "
"drawing delay, the slower the animation."
msgstr ""
"Définit ou renvoie le délai (*delay*) de dessin en millisecondes. (Cet "
"approximativement le temps passé entre deux mises à jour du canevas.) Plus "
"le délai est long, plus l'animation sera lente."

#: library/turtle.rst:1930
msgid "Optional argument:"
msgstr "Argument facultatif :"

#: library/turtle.rst:1945
msgid "nonnegative integer"
msgstr "entier non-négatif"

#: library/turtle.rst:1947
msgid ""
"Turn turtle animation on/off and set delay for update drawings.  If *n* is "
"given, only each n-th regular screen update is really performed.  (Can be "
"used to accelerate the drawing of complex graphics.)  When called without "
"arguments, returns the currently stored value of n. Second argument sets "
"delay value (see :func:`delay`)."
msgstr ""
"Active/désactive les animations des tortues et définit le délai pour mettre "
"à jour les dessins.Si *n* est passé, seulement les n-ièmes mises à jours "
"régulières de l'écran seront vraiment effectuées. (Peut être utilisé pour "
"accélérer le dessin de graphiques complexes.) Lorsqu'appelé sans arguments, "
"renvoie la valeur actuelle de *n*. Le deuxième argument définit la valeur du "
"délai (voir :func:`delay`)."

#: library/turtle.rst:1967
msgid "Perform a TurtleScreen update. To be used when tracer is turned off."
msgstr ""
"Effectue une mise à jour de *TurtleScreen*. À utiliser lorsque le traceur "
"est désactivé."

#: library/turtle.rst:1969
msgid "See also the RawTurtle/Turtle method :func:`speed`."
msgstr "Voir aussi la méthode :func:`speed` de *RawTurtle*/*Turtle*."

#: library/turtle.rst:1977
msgid ""
"Set focus on TurtleScreen (in order to collect key-events).  Dummy arguments "
"are provided in order to be able to pass :func:`listen` to the onclick "
"method."
msgstr ""
"Donne le focus à *TurtleScreen* (afin de collecter les événements clés). Des "
"arguments factices sont fournis afin de pouvoir passer :func:`listen` à la "
"méthode *onclick*."

#: library/turtle.rst:2004
msgid "a function with no arguments or ``None``"
msgstr "une fonction sans arguments ou ``None``"

#: library/turtle.rst:2005
msgid "a string: key (e.g. \"a\") or key-symbol (e.g. \"space\")"
msgstr ""
"une chaîne : clé (par exemple \"*a*\") ou clé symbole (Par exemple "
"\"*space*\")"

#: library/turtle.rst:1987
msgid ""
"Bind *fun* to key-release event of key.  If *fun* is ``None``, event "
"bindings are removed. Remark: in order to be able to register key-events, "
"TurtleScreen must have the focus. (See method :func:`listen`.)"
msgstr ""
"Lie *fun* à l'événement d'un relâchement d'une touche. Si *fun* est "
"``None``, les événements liés sont supprimés. Remarque : Pour pouvoir "
"enregistrer les événements lié au touches, TurtleScreen doit avoir le "
"*focus* (fenêtre en premier plan). (Voir la méthode :func:`listen`.)"

#: library/turtle.rst:2007
msgid ""
"Bind *fun* to key-press event of key if key is given, or to any key-press-"
"event if no key is given. Remark: in order to be able to register key-"
"events, TurtleScreen must have focus. (See method :func:`listen`.)"
msgstr ""
"Lie *fun* à l'événement d'un pressement de touche si *key* (touche) est "
"donné, ou n'importe quelle touche si aucune touche n'est passée. Remarque : "
"Pour pouvoir enregistrer des événements liés au touches, TurtleScreen doit "
"être en premier plan. (voir la méthode :func:`listen`.)"

#: library/turtle.rst:2031
msgid ""
"Bind *fun* to mouse-click events on this screen.  If *fun* is ``None``, "
"existing bindings are removed."
msgstr ""
"Crée un lien vers *fun* pour les événements de clique de la souris sur cet "
"écran. Si *fun* est ``None``, les liens existants sont supprimés."

#: library/turtle.rst:2034
msgid ""
"Example for a TurtleScreen instance named ``screen`` and a Turtle instance "
"named ``turtle``:"
msgstr ""
"Exemple pour une instance de TurtleScreen nommée ``screen`` et une instance "
"Turtle nommée ``turtle`` :"

#: library/turtle.rst:2045
msgid ""
"This TurtleScreen method is available as a global function only under the "
"name ``onscreenclick``.  The global function ``onclick`` is another one "
"derived from the Turtle method ``onclick``."
msgstr ""
"Cette méthode de TurtleScreen est disponible en tant que fonction globale "
"seulement sous le nom de ``onscreenclick``. La fonction globale ``onclick`` "
"est une autre fonction dérivée de la méthode Turtle ``onclick``."

#: library/turtle.rst:2052
msgid "a function with no arguments"
msgstr "une fonction sans arguments"

#: library/turtle.rst:2053
msgid "a number >= 0"
msgstr "un nombre supérieur ou égal à 0"

#: library/turtle.rst:2055
msgid "Install a timer that calls *fun* after *t* milliseconds."
msgstr "Installe un minuteur qui appelle *fun* après *t* millisecondes."

#: library/turtle.rst:2073
msgid ""
"Starts event loop - calling Tkinter's mainloop function. Must be the last "
"statement in a turtle graphics program. Must *not* be used if a script is "
"run from within IDLE in -n mode (No subprocess) - for interactive use of "
"turtle graphics. ::"
msgstr ""
"Démarre la boucle d'événements - appelle la boucle principale de Tkinter. "
"Doit être la dernière opération dan un programme graphique *turtle*. **Ne "
"dois pas** être utilisé si un script est lancé depuis IDLE avec le mode ``-"
"n`` (pas de sous processus) - pour une utilisation interactive des "
"graphiques *turtle* ::"

#: library/turtle.rst:2087 library/turtle.rst:2100
msgid "string"
msgstr "chaîne de caractères"

#: library/turtle.rst:2089
msgid ""
"Pop up a dialog window for input of a string. Parameter title is the title "
"of the dialog window, prompt is a text mostly describing what information to "
"input. Return the string input. If the dialog is canceled, return "
"``None``. ::"
msgstr ""
"Fait apparaitre une fenêtre pour entrer une chaine de caractères. Le "
"paramètre *title* est le titre de la fenêtre, *prompt* est le texte "
"expliquant quelle information écrire. Renvoie l'entrée utilisateur sous "
"forme de chaîne. Si le dialogue est annulé, renvoie ``None``. ::"

#: library/turtle.rst:2105
#, fuzzy
msgid ""
"Pop up a dialog window for input of a number. title is the title of the "
"dialog window, prompt is a text mostly describing what numerical information "
"to input. default: default value, minval: minimum value for input, maxval: "
"maximum value for input. The number input must be in the range minval .. "
"maxval if these are given. If not, a hint is issued and the dialog remains "
"open for correction. Return the number input. If the dialog is canceled,  "
"return ``None``. ::"
msgstr ""
"Fait apparaitre une fenêtre pour entrer un nombre. Le paramètre *title* est "
"le titre de la fenêtre, *prompt* est le texte expliquant quelle information "
"numérique écrire. *default* : Valeur par défaut, *minval* : valeur minimale "
"d'entrée, *maxval* : Valeur maximale d'entrée. Le nombre entré doit être "
"dans la gamme *minval..maxval* si ces valeurs sont données. Sinon, un indice "
"apparait et le dialogue reste ouvert pour corriger le nombre. Renvoie "
"l'entrée utilisateur sous forme de nombre. Si le dialogue est annulé, "
"renvoie ``None``. ::"

#: library/turtle.rst:2122
msgid "one of the strings \"standard\", \"logo\" or \"world\""
msgstr ""
"l'une des chaînes de caractères : ``\"standard\"``, ``\"logo\"`` ou "
"``\"world\"``"

#: library/turtle.rst:2124
msgid ""
"Set turtle mode (\"standard\", \"logo\" or \"world\") and perform reset.  If "
"mode is not given, current mode is returned."
msgstr ""
"Règle le mode de la tortue (\"*standard*\", \"*logo*\" ou \"*world*\") et la "
"réinitialise. Si le mode n'est pas donné, le mode actuel est renvoyé."

#: library/turtle.rst:2127
msgid ""
"Mode \"standard\" is compatible with old :mod:`turtle`.  Mode \"logo\" is "
"compatible with most Logo turtle graphics.  Mode \"world\" uses user-defined "
"\"world coordinates\". **Attention**: in this mode angles appear distorted "
"if ``x/y`` unit-ratio doesn't equal 1."
msgstr ""
"Le mode \"*standard*\" est compatible avec l'ancien :mod:`turtle`. Le mode "
"\"*logo*\" est compatible avec la plupart des graphiques *turtle* Logo. Le "
"mode \"*world*\" utilise des \"coordonnées monde\" (*world coordinates*) "
"définis par l'utilisateur. **Attention** : Dans ce mode, les angles "
"apparaissent déformés si le ratio unitaire de ``x/y`` n'est pas 1."

#: library/turtle.rst:2133
msgid "Mode"
msgstr "Mode"

#: library/turtle.rst:2133
msgid "Initial turtle heading"
msgstr "Orientation initiale de la tortue"

#: library/turtle.rst:2133
msgid "positive angles"
msgstr "angles positifs"

#: library/turtle.rst:2135
msgid "\"standard\""
msgstr "\"standard\""

#: library/turtle.rst:2135
msgid "to the right (east)"
msgstr "vers la droite (vers l'Est)"

#: library/turtle.rst:2135
msgid "counterclockwise"
msgstr "dans le sens inverse des aiguilles d'une montre"

#: library/turtle.rst:2136
msgid "\"logo\""
msgstr "\"logo\""

#: library/turtle.rst:2136
msgid "upward    (north)"
msgstr "vers le haut (vers le Nord)"

#: library/turtle.rst:2136
msgid "clockwise"
msgstr "dans le sens des aiguilles d'une montre"

#: library/turtle.rst:2149
msgid "one of the values 1.0 or 255"
msgstr "l'une des valeurs suivantes : 1.0 ou 255"

#: library/turtle.rst:2151
msgid ""
"Return the colormode or set it to 1.0 or 255.  Subsequently *r*, *g*, *b* "
"values of color triples have to be in the range 0..*cmode*."
msgstr ""
"Renvoie le mode de couleur (*colormode*) ou le définit à 1.0 ou 255. Les "
"valeurs *r*, *g* et *b* doivent aussi être dans la gamme ``0``\\ ..\\ "
"*cmode*."

#: library/turtle.rst:2172
msgid ""
"Return the Canvas of this TurtleScreen.  Useful for insiders who know what "
"to do with a Tkinter Canvas."
msgstr ""
"Renvoie le canevas de ce TurtleScreen. Utile pour les initiés qui savent "
"quoi faire avec un canevas Tkinter."

#: library/turtle.rst:2185
msgid "Return a list of names of all currently available turtle shapes."
msgstr ""
"Renvoie une liste de noms de toutes les formes actuellement disponibles pour "
"les tortues."

#: library/turtle.rst:2197
msgid "There are three different ways to call this function:"
msgstr "Il existe trois façons différentes d’appeler cette fonction :"

#: library/turtle.rst:2199
msgid ""
"*name* is the name of a gif-file and *shape* is ``None``: Install the "
"corresponding image shape. ::"
msgstr ""
"*name* est le nom d'un fichier *gif* et *shape* est ``None`` : Installe la "
"forme d'image correspondante. ::"

#: library/turtle.rst:2205
msgid ""
"Image shapes *do not* rotate when turning the turtle, so they do not display "
"the heading of the turtle!"
msgstr ""
"Les formes d'images *ne tournent pas* lorsque la tortue tourne, donc elles "
"n'indiquent pas le cap de la tortue !"

#: library/turtle.rst:2208
msgid ""
"*name* is an arbitrary string and *shape* is a tuple of pairs of "
"coordinates: Install the corresponding polygon shape."
msgstr ""
"*name* est une chaîne de caractères arbitraire et *shape* est un *n*-uplet "
"de paires de coordonnées : Installe le polygone correspondant."

#: library/turtle.rst:2216
#, fuzzy
msgid ""
"*name* is an arbitrary string and *shape* is a (compound) :class:`Shape` "
"object: Install the corresponding compound shape."
msgstr ""
"*name* est une chaîne de caractères arbitraire et *shape* est un objet :"
"class:`Shape` (composé) : Installe la forme composée correspondante."

#: library/turtle.rst:2219
msgid ""
"Add a turtle shape to TurtleScreen's shapelist.  Only thusly registered "
"shapes can be used by issuing the command ``shape(shapename)``."
msgstr ""
"Ajoute une forme de tortue a la liste des formes du TurtleScreen. Seulement "
"les formes enregistrées de cette façon peuvent être utilisée avec la "
"commande ``shape(shapename)``."

#: library/turtle.rst:2225
msgid "Return the list of turtles on the screen."
msgstr "Renvoie la liste des tortues présentes sur l'écran."

#: library/turtle.rst:2236
msgid "Return the height of the turtle window. ::"
msgstr "Renvoie la hauteur de la fenêtre de la tortue. ::"

#: library/turtle.rst:2244
msgid "Return the width of the turtle window. ::"
msgstr "Renvoie la largeur de la fenêtre de la tortue. ::"

#: library/turtle.rst:2253
msgid "Methods specific to Screen, not inherited from TurtleScreen"
msgstr "Méthodes spécifiques à Screen, non héritées de TurtleScreen"

#: library/turtle.rst:2257
msgid "Shut the turtlegraphics window."
msgstr "Éteins la fenêtre *turtlegraphics*."

#: library/turtle.rst:2262
msgid "Bind ``bye()`` method to mouse clicks on the Screen."
msgstr "Lie la méthode ``bye()`` à un clique de souris sur l'écran (*Screen*)."

#: library/turtle.rst:2265
msgid ""
"If the value \"using_IDLE\" in the configuration dictionary is ``False`` "
"(default value), also enter mainloop.  Remark: If IDLE with the ``-n`` "
"switch (no subprocess) is used, this value should be set to ``True`` in :"
"file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the "
"client script."
msgstr ""
"Si la valeur de \"*using_IDLE*\" dans le dictionnaire de configuration est "
"``False`` (valeur par défaut), démarre aussi la boucle principale. "
"Remarque : Si IDLE est lancé avec l'option ``-n`` (Pas de sous processus), "
"Cette valeur devrait être définie à ``True`` dans :file:`turtle.cfg`. Dans "
"ce cas, la boucle principale d'IDLE est active aussi pour le script du "
"client."

#: library/turtle.rst:2274
msgid ""
"Set the size and position of the main window.  Default values of arguments "
"are stored in the configuration dictionary and can be changed via a :file:"
"`turtle.cfg` file."
msgstr ""
"Définit la taille et la position de la fenêtre principale. Les valeurs par "
"défaut des arguments sont stockées dans le dictionnaire de configuration et "
"peuvent être modifiées via un fichier :file:`turtle.cfg`."

#: library/turtle.rst:2278
msgid ""
"if an integer, a size in pixels, if a float, a fraction of the screen; "
"default is 50% of screen"
msgstr ""
"s'il s'agit d'un nombre entier, une taille en pixels, s'il s'agit d'un "
"nombre flottant, une fraction de l'écran ; la valeur par défaut est de 50 % "
"de l'écran"

#: library/turtle.rst:2280
msgid ""
"if an integer, the height in pixels, if a float, a fraction of the screen; "
"default is 75% of screen"
msgstr ""
"s'il s'agit d'un nombre entier, la hauteur en pixels, s'il s'agit d'un "
"nombre flottant, une fraction de l'écran ; la valeur par défaut est 75 % de "
"l'écran"

#: library/turtle.rst:2282
msgid ""
"if positive, starting position in pixels from the left edge of the screen, "
"if negative from the right edge, if ``None``, center window horizontally"
msgstr ""
"s'il s'agit d'un nombre positif, position de départ en pixels à partir du "
"bord gauche de l'écran, s'il s'agit d'un nombre négatif, position de départ "
"en pixels à partir du bord droit, si c'est ``None``, centre la fenêtre "
"horizontalement"

#: library/turtle.rst:2285
msgid ""
"if positive, starting position in pixels from the top edge of the screen, if "
"negative from the bottom edge, if ``None``, center window vertically"
msgstr ""
"si positif, la position de départ en pixels depuis le haut de l'écran. Si "
"négatif, depuis de bas de l'écran. Si ``None``, Le centre de la fenêtre "
"verticalement"

#: library/turtle.rst:2300
msgid "a string that is shown in the titlebar of the turtle graphics window"
msgstr ""
"chaîne de caractères affichée dans la barre de titre de la fenêtre graphique "
"de la tortue"

#: library/turtle.rst:2303
msgid "Set title of turtle window to *titlestring*."
msgstr "Définit le titre de la fenêtre de la tortue comme *titlestring*."

#: library/turtle.rst:2312
msgid "Public classes"
msgstr "Classes publiques"

#: library/turtle.rst:2318
#, fuzzy
msgid ""
"a :class:`!tkinter.Canvas`, a :class:`ScrolledCanvas` or a :class:"
"`TurtleScreen`"
msgstr ""
"un :class:`tkinter.Canvas`, un :class:`ScrolledCanvas` ou un :class:"
"`TurtleScreen`"

#: library/turtle.rst:2321
msgid ""
"Create a turtle.  The turtle has all methods described above as \"methods of "
"Turtle/RawTurtle\"."
msgstr ""
"Crée une tortue. Cette tortue à toutes les méthodes décrites ci-dessus comme "
"\"Méthode de Turtle/RawTurtle\"."

#: library/turtle.rst:2327
msgid ""
"Subclass of RawTurtle, has the same interface but draws on a default :class:"
"`Screen` object created automatically when needed for the first time."
msgstr ""
"Sous-classe de RawTurtle, à la même interface mais dessine sur un objet :"
"class:`screen` par défaut créé automatiquement lorsque nécessaire pour la "
"première fois."

#: library/turtle.rst:2333
#, fuzzy
msgid "a :class:`!tkinter.Canvas`"
msgstr "un :class:`tkinter.Canvas`"

#: library/turtle.rst:2335
#, fuzzy
msgid ""
"Provides screen oriented methods like :func:`bgcolor` etc. that are "
"described above."
msgstr ""
"Fournis les méthodes liées à l'écran comme :func:`setbg`, etc. qui sont "
"décrites ci-dessus."

#: library/turtle.rst:2340
msgid ""
"Subclass of TurtleScreen, with :ref:`four methods added <screenspecific>`."
msgstr ""
"Sous-classess de TurtleScreen, avec :ref:`quatre nouvelles méthodes "
"<screenspecific>`."

#: library/turtle.rst:2345
msgid ""
"some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas "
"with scrollbars added"
msgstr ""
"certain modules Tkinter pour contenir le ScrolledCanvas, c'est à dire, un "
"canevas Tkinter avec des barres de défilement ajoutées"

#: library/turtle.rst:2348
msgid ""
"Used by class Screen, which thus automatically provides a ScrolledCanvas as "
"playground for the turtles."
msgstr ""
"Utilisé par la classe Screen, qui fournit donc automatiquement un "
"ScrolledCanvas comme terrain de jeu pour les tortues."

#: library/turtle.rst:2353
msgid "one of the strings \"polygon\", \"image\", \"compound\""
msgstr ""
"l'une des chaînes suivantes : ``\"polygon\"``, ``\"image\"`` ou "
"``\"compound\"``"

#: library/turtle.rst:2355
msgid ""
"Data structure modeling shapes.  The pair ``(type_, data)`` must follow this "
"specification:"
msgstr ""
"Formes de modélisation de la structure des données. La paire ``(type_, "
"data)`` doit suivre cette spécification :"

#: library/turtle.rst:2360
msgid "*type_*"
msgstr "*type_*"

#: library/turtle.rst:2360
msgid "*data*"
msgstr "*données*"

#: library/turtle.rst:2362
msgid "\"polygon\""
msgstr "\"polygon\""

#: library/turtle.rst:2362
msgid "a polygon-tuple, i.e. a tuple of pairs of coordinates"
msgstr ""
"un polygone *n*-uplet, c'est-à-dire un *n*-uplet constitué de paires (chaque "
"paire définissant des coordonnées)"

#: library/turtle.rst:2363
msgid "\"image\""
msgstr "\"image\""

#: library/turtle.rst:2363
msgid "an image  (in this form only used internally!)"
msgstr "une image (utilisée uniquement en interne sous ce format !)"

#: library/turtle.rst:2364
msgid "\"compound\""
msgstr "\"compound\""

#: library/turtle.rst:2364
msgid ""
"``None`` (a compound shape has to be constructed using the :meth:"
"`addcomponent` method)"
msgstr ""
"``None`` (une forme composée doit être construite en utilisant la méthode :"
"meth:`addcomponent`)"

#: library/turtle.rst:2370
msgid "a polygon, i.e. a tuple of pairs of numbers"
msgstr "un polygone, c.-à-d. un *n*-uplet de paires de nombres"

#: library/turtle.rst:2371
msgid "a color the *poly* will be filled with"
msgstr "une couleur de remplissage pour *poly*"

#: library/turtle.rst:2372
msgid "a color for the poly's outline (if given)"
msgstr "une couleur pour le contour du polygone (si elle est donnée)"

#: library/turtle.rst:2374
msgid "Example:"
msgstr "Exemple :"

#: library/turtle.rst:2384
msgid "See :ref:`compoundshapes`."
msgstr "Voir :ref:`compoundshapes`."

#: library/turtle.rst:2389
msgid ""
"A two-dimensional vector class, used as a helper class for implementing "
"turtle graphics.  May be useful for turtle graphics programs too.  Derived "
"from tuple, so a vector is a tuple!"
msgstr ""
"Une classe de vecteur bidimensionnel, utilisée en tant que classe auxiliaire "
"pour implémenter les graphiques *turtle*. Peut être utile pour les "
"programmes graphiques faits avec *turtle*. Dérivé des *n*-uplets, donc un "
"vecteur est un *n*-uplet !"

#: library/turtle.rst:2393
msgid "Provides (for *a*, *b* vectors, *k* number):"
msgstr "Permet (pour les vecteurs *a*, *b* et le nombre *k*) :"

#: library/turtle.rst:2395
msgid "``a + b`` vector addition"
msgstr "``a + b`` addition de vecteurs"

#: library/turtle.rst:2396
msgid "``a - b`` vector subtraction"
msgstr "``a - b`` soustraction de deux vecteurs"

#: library/turtle.rst:2397
msgid "``a * b`` inner product"
msgstr "``a * b`` produit scalaire"

#: library/turtle.rst:2398
msgid "``k * a`` and ``a * k`` multiplication with scalar"
msgstr "``k * a`` et ``a * k`` multiplication avec un scalaire"

#: library/turtle.rst:2399
msgid "``abs(a)`` absolute value of a"
msgstr "``abs(a)`` valeur absolue de a"

#: library/turtle.rst:2400
msgid "``a.rotate(angle)`` rotation"
msgstr "``a.rotate(angle)`` rotation"

#: library/turtle.rst:2406
msgid "Explanation"
msgstr "Explication"

#: library/turtle.rst:2408
msgid ""
"A turtle object draws on a screen object, and there a number of key classes "
"in the turtle object-oriented interface that can be used to create them and "
"relate them to each other."
msgstr ""

#: library/turtle.rst:2412
msgid ""
"A :class:`Turtle` instance will automatically create a :class:`Screen` "
"instance if one is not already present."
msgstr ""

#: library/turtle.rst:2415
msgid ""
"``Turtle`` is a subclass of :class:`RawTurtle`, which *doesn't* "
"automatically create a drawing surface - a *canvas* will need to be provided "
"or created for it. The *canvas* can be a :class:`!tkinter.Canvas`, :class:"
"`ScrolledCanvas` or :class:`TurtleScreen`."
msgstr ""

#: library/turtle.rst:2421
msgid ""
":class:`TurtleScreen` is the basic drawing surface for a turtle. :class:"
"`Screen` is a subclass of ``TurtleScreen``, and includes :ref:`some "
"additional methods <screenspecific>` for managing its appearance (including "
"size and title) and behaviour. ``TurtleScreen``'s constructor needs a :class:"
"`!tkinter.Canvas` or a :class:`ScrolledCanvas` as an argument."
msgstr ""

#: library/turtle.rst:2428
#, fuzzy
msgid ""
"The functional interface for turtle graphics uses the various methods of "
"``Turtle`` and ``TurtleScreen``/``Screen``. Behind the scenes, a screen "
"object is automatically created whenever a function derived from a "
"``Screen`` method is called. Similarly, a turtle object is automatically "
"created whenever any of the functions derived from a Turtle method is called."
msgstr ""
"L'interface procédurale met à disposition des fonctions équivalentes à "
"celles des méthodes des classes :class:`Screen` et :class:`Turtle`. Le nom "
"d'une fonction est le même que la méthode équivalente. Un objet *Screen* est "
"créé automatiquement dès qu'une fonction dérivée d'une méthode *Screen* est "
"appelée. Un objet *Turtle* (sans nom) est créé automatiquement dès qu'une "
"fonction dérivée d'une méthode *Turtle* est appelée."

#: library/turtle.rst:2434
#, fuzzy
msgid ""
"To use multiple turtles on a screen, the object-oriented interface must be "
"used."
msgstr ""
"Afin de pouvoir utiliser plusieurs tortues simultanément sur l'écran, vous "
"devez utiliser l'interface orientée-objet."

#: library/turtle.rst:2439
msgid "Help and configuration"
msgstr "Aide et configuration"

#: library/turtle.rst:2442
msgid "How to use help"
msgstr "Utilisation de l'aide"

#: library/turtle.rst:2444
msgid ""
"The public methods of the Screen and Turtle classes are documented "
"extensively via docstrings.  So these can be used as online-help via the "
"Python help facilities:"
msgstr ""
"Les méthodes publiques des classes *Screen* et *Turtle* sont largement "
"documentées dans les *docstrings*. Elles peuvent donc être utilisées comme "
"aide en ligne via les fonctions d'aide de Python :"

#: library/turtle.rst:2448
msgid ""
"When using IDLE, tooltips show the signatures and first lines of the "
"docstrings of typed in function-/method calls."
msgstr ""
"Lors de l'utilisation d'IDLE, des info-bulles apparaissent avec la signature "
"et les premières lignes de *docstring* de la fonction/méthode appelée."

#: library/turtle.rst:2451
msgid "Calling :func:`help` on methods or functions displays the docstrings::"
msgstr ""
"L'appel de :func:`help` sur les méthodes ou fonctions affichera les "
"*docstrings* ::"

#: library/turtle.rst:2482
msgid ""
"The docstrings of the functions which are derived from methods have a "
"modified form::"
msgstr ""
"Les *docstrings* des fonctions qui sont dérivées des méthodes ont une forme "
"modifiée ::"

#: library/turtle.rst:2516
msgid ""
"These modified docstrings are created automatically together with the "
"function definitions that are derived from the methods at import time."
msgstr ""
"Ces chaînes de documents modifiées sont créées automatiquement avec les "
"définitions de fonctions qui sont dérivées des méthodes au moment de "
"l'importation."

#: library/turtle.rst:2521
msgid "Translation of docstrings into different languages"
msgstr "Traduction de chaînes de documents en différentes langues"

#: library/turtle.rst:2523
msgid ""
"There is a utility to create a dictionary the keys of which are the method "
"names and the values of which are the docstrings of the public methods of "
"the classes Screen and Turtle."
msgstr ""
"Il est utile de créer un dictionnaire dont les clés sont les noms des "
"méthodes et les valeurs sont les *docstrings* de méthodes publiques des "
"classes Screen et Turtle."

#: library/turtle.rst:2529
msgid "a string, used as filename"
msgstr "une chaîne de caractères, utilisée en tant que nom de fichier"

#: library/turtle.rst:2531
msgid ""
"Create and write docstring-dictionary to a Python script with the given "
"filename.  This function has to be called explicitly (it is not used by the "
"turtle graphics classes).  The docstring dictionary will be written to the "
"Python script :file:`{filename}.py`.  It is intended to serve as a template "
"for translation of the docstrings into different languages."
msgstr ""
"Crée et écrit un dictionnaire de *docstrings* dans un script Python avec le "
"nom donné. Cette fonction doit être appelée explicitement (elle n'est pas "
"utilisée par les classes graphiques de *turtle*). Ce dictionnaire de "
"*doctrings* sera écrit dans le script Python :file:`{filename}.py`. Il sert "
"de modèle pour la traduction des *docstrings* dans différentes langues."

#: library/turtle.rst:2537
msgid ""
"If you (or your students) want to use :mod:`turtle` with online help in your "
"native language, you have to translate the docstrings and save the resulting "
"file as e.g. :file:`turtle_docstringdict_german.py`."
msgstr ""
"Si vous (ou vos étudiants) veulent utiliser :mod:`turtle` avec de l'aide en "
"ligne dans votre langue natale, vous devez traduire les *docstrings* et "
"sauvegarder les fichiers résultants en, par exemple, :file:"
"`turtle_docstringdict_german.py`."

#: library/turtle.rst:2541
msgid ""
"If you have an appropriate entry in your :file:`turtle.cfg` file this "
"dictionary will be read in at import time and will replace the original "
"English docstrings."
msgstr ""
"Si vous avez une entrée appropriée dans votre fichier :file:`turtle.cfg`, ce "
"dictionnaire est lu au moment de l'importation et remplace la *docstrings* "
"originale en anglais par cette entrée."

#: library/turtle.rst:2544
msgid ""
"At the time of this writing there are docstring dictionaries in German and "
"in Italian.  (Requests please to glingl@aon.at.)"
msgstr ""
"Au moment de l'écriture de cette documentation, il n'existe seulement que "
"des *docstrings* en Allemand et Italien. (Merci de faire vos demandes à "
"glingl@aon.at.)"

#: library/turtle.rst:2550
msgid "How to configure Screen and Turtles"
msgstr "Comment configurer *Screen* et *Turtle*"

#: library/turtle.rst:2552
msgid ""
"The built-in default configuration mimics the appearance and behaviour of "
"the old turtle module in order to retain best possible compatibility with it."
msgstr ""
"La configuration par défaut imite l'apparence et le comportement de l'ancien "
"module *turtle* pour pouvoir maintenir la meilleure compatibilité avec celui-"
"ci."

#: library/turtle.rst:2555
msgid ""
"If you want to use a different configuration which better reflects the "
"features of this module or which better fits to your needs, e.g. for use in "
"a classroom, you can prepare a configuration file ``turtle.cfg`` which will "
"be read at import time and modify the configuration according to its "
"settings."
msgstr ""
"Si vous voulez utiliser une configuration différente qui reflète mieux les "
"fonctionnalités de ce module ou qui correspond mieux à vos besoins, par "
"exemple pour un cours, vous pouvez préparer un ficher de configuration "
"``turtle.cfg`` qui sera lu au moment de l'importation et qui modifiera la "
"configuration en utilisant les paramètres du fichier."

#: library/turtle.rst:2560
#, fuzzy
msgid ""
"The built in configuration would correspond to the following ``turtle.cfg``:"
msgstr "La configuration native correspondrait au *turtle.cfg* suivant ::"

#: library/turtle.rst:2585
msgid "Short explanation of selected entries:"
msgstr "Brève explication des entrées sélectionnées :"

#: library/turtle.rst:2587
#, fuzzy
msgid ""
"The first four lines correspond to the arguments of the :func:`Screen.setup "
"<setup>` method."
msgstr ""
"Les quatre premières lignes correspondent aux arguments de la méthode :meth:"
"`Screen.setup`."

#: library/turtle.rst:2589
#, fuzzy
msgid ""
"Line 5 and 6 correspond to the arguments of the method :func:`Screen."
"screensize <screensize>`."
msgstr ""
"Les lignes 5 et 6 correspondent aux arguments de la méthode :meth:`Screen."
"screensize`."

#: library/turtle.rst:2591
msgid ""
"*shape* can be any of the built-in shapes, e.g: arrow, turtle, etc.  For "
"more info try ``help(shape)``."
msgstr ""
"*shape* peut être n'importe quelle forme native, par exemple *arrow*, "
"*turtle* etc. Pour plus d'informations, essayez ``help(shape)``."

#: library/turtle.rst:2593
#, fuzzy
msgid ""
"If you want to use no fill color (i.e. make the turtle transparent), you "
"have to write ``fillcolor = \"\"`` (but all nonempty strings must not have "
"quotes in the cfg file)."
msgstr ""
"Si vous ne voulez utiliser aucune couleur de remplissage (c'est-à-dire "
"rendre la tortue transparente), vous devez écrire ``fillcolor = \"\"`` (mais "
"toutes les chaînes non vides ne doivent pas avoir de guillemets dans le "
"fichier *cfg*)."

#: library/turtle.rst:2596
msgid ""
"If you want to reflect the turtle its state, you have to use ``resizemode = "
"auto``."
msgstr ""
"Si vous voulez refléter l'état de la tortue, vous devez utiliser "
"``resizemode = auto``."

#: library/turtle.rst:2598
#, fuzzy
msgid ""
"If you set e.g. ``language = italian`` the docstringdict :file:"
"`turtle_docstringdict_italian.py` will be loaded at import time (if present "
"on the import path, e.g. in the same directory as :mod:`turtle`)."
msgstr ""
"Si vous définissez par exemple ``language = italian``, le dictionnaire de "
"*docstrings* :file:`turtle.docstringdict_italian.py` sera chargé au moment "
"de l'importation (si présent dans les chemins d'importations, par exemple "
"dans le même dossier que :mod:`turtle`)."

#: library/turtle.rst:2601
msgid ""
"The entries *exampleturtle* and *examplescreen* define the names of these "
"objects as they occur in the docstrings.  The transformation of method-"
"docstrings to function-docstrings will delete these names from the "
"docstrings."
msgstr ""
"Les entrées *exampleturtle* et *examplescreen* définissent les noms de ces "
"objets tels qu'ils apparaissent dans les *docstrings*. La transformation des "
"méthodes-*docstrings* vers fonction-*docstrings* supprimera ces noms des "
"*docstrings*."

#: library/turtle.rst:2605
#, fuzzy
msgid ""
"*using_IDLE*: Set this to ``True`` if you regularly work with IDLE and its "
"``-n`` switch (\"no subprocess\").  This will prevent :func:`exitonclick` to "
"enter the mainloop."
msgstr ""
"*using_IDLE* : définissez ceci à ``True`` si vous travaillez régulièrement "
"avec IDLE et son option ``-n`` (pas de sous processus). Cela évitera "
"l'entrée de :func:`exitonclick` dans la boucle principale."

#: library/turtle.rst:2609
msgid ""
"There can be a :file:`turtle.cfg` file in the directory where :mod:`turtle` "
"is stored and an additional one in the current working directory.  The "
"latter will override the settings of the first one."
msgstr ""
"Il peut y avoir un :file:`turtle.cfg` dans le dossier où se situe :mod:"
"`turtle` et un autre dans le dossier de travail courant. Ce dernier prendra "
"le dessus."

#: library/turtle.rst:2613
msgid ""
"The :file:`Lib/turtledemo` directory contains a :file:`turtle.cfg` file.  "
"You can study it as an example and see its effects when running the demos "
"(preferably not from within the demo-viewer)."
msgstr ""
"Le dossier :file:`Lib/turtledemo` contient un fichier :file:`turtle.cfg`. "
"Vous pouvez le prendre comme exemple et voir ses effets lorsque vous lancez "
"les démos (il est préférable de ne pas le faire depuis la visionneuse de "
"démos)."

#: library/turtle.rst:2619
msgid ":mod:`turtledemo` --- Demo scripts"
msgstr ":mod:`turtledemo` — Scripts de démonstration"

#: library/turtle.rst:2624
msgid ""
"The :mod:`turtledemo` package includes a set of demo scripts.  These scripts "
"can be run and viewed using the supplied demo viewer as follows::"
msgstr ""
"Le paquet :mod:`turtledemo` inclut un ensemble de scripts de démonstration. "
"Ces scripts peuvent être lancés et observés en utilisant la visionneuse de "
"démos comme suit ::"

#: library/turtle.rst:2629
msgid ""
"Alternatively, you can run the demo scripts individually.  For example, ::"
msgstr ""
"Alternativement, vous pouvez lancer les scripts de démo individuellement. "
"Par exemple ::"

#: library/turtle.rst:2633
msgid "The :mod:`turtledemo` package directory contains:"
msgstr "Le paquet :mod:`turtledemo` contient :"

#: library/turtle.rst:2635
msgid ""
"A demo viewer :file:`__main__.py` which can be used to view the sourcecode "
"of the scripts and run them at the same time."
msgstr ""
"Une visionneuse :file:`__main__.py` qui peut être utilisée pour lire le code "
"source de ces scripts et pour les faire tourner en même temps."

#: library/turtle.rst:2637
msgid ""
"Multiple scripts demonstrating different features of the :mod:`turtle` "
"module.  Examples can be accessed via the Examples menu.  They can also be "
"run standalone."
msgstr ""
"Plusieurs script présentent les différentes fonctionnalités du module :mod:"
"`turtle`. Les exemples peuvent être consultés via le menu *Examples*. Ils "
"peuvent aussi être lancés de manière autonome."

#: library/turtle.rst:2640
msgid ""
"A :file:`turtle.cfg` file which serves as an example of how to write and use "
"such files."
msgstr ""
"Un fichier exemple :file:`turtle.cfg` montrant comment rédiger de tels "
"fichiers."

#: library/turtle.rst:2643
msgid "The demo scripts are:"
msgstr "Les scripts de démonstration sont :"

#: library/turtle.rst:2650
msgid "Name"
msgstr "Nom"

#: library/turtle.rst:2650
msgid "Description"
msgstr "Description"

#: library/turtle.rst:2650
msgid "Features"
msgstr "Caractéristiques"

#: library/turtle.rst:2652
msgid "bytedesign"
msgstr "*bytedesign*"

#: library/turtle.rst:2652
msgid "complex classical turtle graphics pattern"
msgstr "motif complexe de la tortue graphique classique"

#: library/turtle.rst:2652
msgid ":func:`tracer`, delay, :func:`update`"
msgstr ":func:`tracer`, temps mort, :func:`update`"

#: library/turtle.rst:2655
msgid "chaos"
msgstr "chaos"

#: library/turtle.rst:2655
msgid ""
"graphs Verhulst dynamics, shows that computer's computations can generate "
"results sometimes against the common sense expectations"
msgstr ""
"graphiques dynamiques de Verhulst, cela démontre que les calculs de "
"l'ordinateur peuvent générer des résultats qui vont parfois à l'encontre du "
"bon sens"

#: library/turtle.rst:2655
msgid "world coordinates"
msgstr "*world coordinates*"

#: library/turtle.rst:2661
msgid "clock"
msgstr "*clock*"

#: library/turtle.rst:2661
msgid "analog clock showing time of your computer"
msgstr "horloge analogique indiquant l'heure de votre ordinateur"

#: library/turtle.rst:2661
msgid "turtles as clock's hands, ontimer"
msgstr "tortues sous forme des aiguilles d'horloge, sur minuterie"

#: library/turtle.rst:2664
msgid "colormixer"
msgstr "*colormixer* (mélangeur de couleurs)"

#: library/turtle.rst:2664
msgid "experiment with r, g, b"
msgstr "des expériences en rouge, vert, bleu"

#: library/turtle.rst:2666
msgid "forest"
msgstr "*forest* (forêt)"

#: library/turtle.rst:2666
msgid "3 breadth-first trees"
msgstr "3 arbres tracés par un parcours en largeur"

#: library/turtle.rst:2666
msgid "randomization"
msgstr "*randomization* (répartition aléatoire)"

#: library/turtle.rst:2668
msgid "fractalcurves"
msgstr "*fractalcurves*"

#: library/turtle.rst:2668
msgid "Hilbert & Koch curves"
msgstr "Courbes de Hilbert et de Koch"

#: library/turtle.rst:2668
msgid "recursion"
msgstr "récursivité"

#: library/turtle.rst:2670
msgid "lindenmayer"
msgstr "*lindenmayer*"

#: library/turtle.rst:2670
msgid "ethnomathematics (indian kolams)"
msgstr "ethnomathématiques (kolams indiens)"

#: library/turtle.rst:2670
msgid "L-System"
msgstr "*L-Système*"

#: library/turtle.rst:2673
msgid "minimal_hanoi"
msgstr "*minimal_hanoi*"

#: library/turtle.rst:2673
msgid "Towers of Hanoi"
msgstr "Tours de Hanoï"

#: library/turtle.rst:2673
msgid "Rectangular Turtles as Hanoi discs (shape, shapesize)"
msgstr ""
"Des tortues rectangulaires à la place des disques (*shape*, *shapesize*)"

#: library/turtle.rst:2677
msgid "nim"
msgstr "*nim*"

#: library/turtle.rst:2677
msgid ""
"play the classical nim game with three heaps of sticks against the computer."
msgstr ""
"jouez au classique jeu de *nim* avec trois piles de bâtons contre "
"l'ordinateur."

#: library/turtle.rst:2677
msgid "turtles as nimsticks, event driven (mouse, keyboard)"
msgstr ""
"tortues en tant que bâtons de *nim*, géré par des événements (clavier et "
"souris)"

#: library/turtle.rst:2681
msgid "paint"
msgstr "*paint* (peinture)"

#: library/turtle.rst:2681
msgid "super minimalistic drawing program"
msgstr "programme de dessin extra minimaliste"

#: library/turtle.rst:2684
msgid "peace"
msgstr "*peace* (paix)"

#: library/turtle.rst:2684
msgid "elementary"
msgstr "basique"

#: library/turtle.rst:2684
msgid "turtle: appearance and animation"
msgstr "tortue : apparence et animation"

#: library/turtle.rst:2687
msgid "penrose"
msgstr "*penrose*"

#: library/turtle.rst:2687
msgid "aperiodic tiling with kites and darts"
msgstr "tuiles apériodiques avec cerfs-volants et fléchettes"

#: library/turtle.rst:2690
msgid "planet_and_moon"
msgstr "*planet_and_moon* (planète et lune)"

#: library/turtle.rst:2690
msgid "simulation of gravitational system"
msgstr "simulation d'un système gravitationnel"

#: library/turtle.rst:2690
msgid "compound shapes, :class:`Vec2D`"
msgstr "formes composées, :class:`Vec2D`"

#: library/turtle.rst:2693
msgid "rosette"
msgstr ""

#: library/turtle.rst:2693
msgid "a pattern from the wikipedia article on turtle graphics"
msgstr "un motif issu de l'article de *wikipedia* sur la tortue graphique"

#: library/turtle.rst:2693
msgid ":func:`clone`, :func:`undo`"
msgstr ":func:`clone`, :func:`undo`"

#: library/turtle.rst:2696
msgid "round_dance"
msgstr "*round_dance*"

#: library/turtle.rst:2696
msgid "dancing turtles rotating pairwise in opposite direction"
msgstr "tortues dansantes tournant par paires en sens inverse"

#: library/turtle.rst:2696
msgid "compound shapes, clone shapesize, tilt, get_shapepoly, update"
msgstr ""
"formes composées, clones de la forme (*shapesize*), rotation, "
"*get_shapepoly*, *update*"

#: library/turtle.rst:2700
msgid "sorting_animate"
msgstr "*sorting_animate*"

#: library/turtle.rst:2700
msgid "visual demonstration of different sorting methods"
msgstr "démonstration visuelle des différentes méthodes de classement"

#: library/turtle.rst:2700
msgid "simple alignment, randomization"
msgstr "alignement simple, répartition aléatoire"

#: library/turtle.rst:2703
msgid "tree"
msgstr "*tree* (arbre)"

#: library/turtle.rst:2703
msgid "a (graphical) breadth first tree (using generators)"
msgstr "un arbre (tracé) par un parcours en largeur (à l’aide de générateurs)"

#: library/turtle.rst:2706
msgid "two_canvases"
msgstr "*two_canvases* (deux toiles)"

#: library/turtle.rst:2706
msgid "simple design"
msgstr "design simple"

#: library/turtle.rst:2706
msgid "turtles on two canvases"
msgstr "tortues sur deux canevas"

#: library/turtle.rst:2709
msgid "yinyang"
msgstr "*yinyang*"

#: library/turtle.rst:2709
msgid "another elementary example"
msgstr "un autre exemple élémentaire"

#: library/turtle.rst:2712
msgid "Have fun!"
msgstr "Amusez-vous !"

#: library/turtle.rst:2716
msgid "Changes since Python 2.6"
msgstr "Modifications depuis Python 2.6"

#: library/turtle.rst:2718
#, fuzzy
msgid ""
"The methods :func:`Turtle.tracer <tracer>`, :func:`Turtle.window_width "
"<window_width>` and :func:`Turtle.window_height <window_height>` have been "
"eliminated. Methods with these names and functionality are now available "
"only as methods of :class:`Screen`. The functions derived from these remain "
"available. (In fact already in Python 2.6 these methods were merely "
"duplications of the corresponding :class:`TurtleScreen`/:class:`Screen` "
"methods.)"
msgstr ""
"Les méthodes :meth:`Turtle.tracer`, :meth:`Turtle.window_width` et :meth:"
"`Turtle.window_height` ont été supprimées. Seule :class:`Screen` définit "
"maintenant des méthodes avec ces noms et fonctionnalités. Les fonction "
"dérivées de ces méthodes restent disponibles. (En réalité, déjà en Python "
"2.6 ces méthodes n'étaient que de simples duplicatas des méthodes "
"correspondantes des classes :class:`TurtleScreen`/:class:`Screen`)"

#: library/turtle.rst:2726
#, fuzzy
msgid ""
"The method :func:`!Turtle.fill` has been eliminated. The behaviour of :func:"
"`begin_fill` and :func:`end_fill` have changed slightly: now every filling "
"process must be completed with an ``end_fill()`` call."
msgstr ""
"La méthode :meth:`Turtle.fill` à été supprimée. Le fonctionnement de :meth:"
"`begin_fill` et :meth:`end_fill` a légèrement changé : chaque opération de "
"remplissage doit maintenant se terminer par un appel à ``end_fill()``."

#: library/turtle.rst:2731
#, fuzzy
msgid ""
"A method :func:`Turtle.filling <filling>` has been added. It returns a "
"boolean value: ``True`` if a filling process is under way, ``False`` "
"otherwise. This behaviour corresponds to a ``fill()`` call without arguments "
"in Python 2.6."
msgstr ""
"La méthode :meth:`Turtle.filling` a été ajoutée. Elle renvoie le booléen "
"``True`` si une opération de remplissage est en cours, ``False`` sinon. Ce "
"comportement correspond à un appel à ``fill()`` sans argument en Python 2.6."

#: library/turtle.rst:2737
msgid "Changes since Python 3.0"
msgstr "Modifications depuis Python 3.0"

#: library/turtle.rst:2739
#, fuzzy
msgid ""
"The :class:`Turtle` methods :func:`shearfactor`, :func:`shapetransform` and :"
"func:`get_shapepoly` have been added. Thus the full range of regular linear "
"transforms is now available for transforming turtle shapes. :func:"
"`tiltangle` has been enhanced in functionality: it now can be used to get or "
"set the tilt angle."
msgstr ""
"Les méthodes :meth:`Turtle.shearfactor`, :meth:`Turtle.shapetransform` et :"
"meth:`Turtle.get_shapepoly` on été ajoutées. Ainsi, la gamme complète des "
"transformations linéaires habituelles est maintenant disponible pour "
"modifier les formes de la tortue. La méthode :meth:`Turtle.tiltangle` a été "
"améliorée : Elle peut maintenant récupérer ou définir l'angle "
"d'inclinaison. :meth:`Turtle.settiltangle` est désormais obsolète."

#: library/turtle.rst:2745
#, fuzzy
msgid ""
"The :class:`Screen` method :func:`onkeypress` has been added as a complement "
"to :func:`onkey`. As the latter binds actions to the key release event, an "
"alias: :func:`onkeyrelease` was also added for it."
msgstr ""
"La méthode :meth:`Screen.onkeypress` a été ajoutée en complément à :meth:"
"`Screen.onkey` qui lie des actions à des relâchements de touches. En "
"conséquence, ce dernier s'est vu doté d'un alias : :meth:`Screen."
"onkeyrelease`."

#: library/turtle.rst:2749
msgid ""
"The method :func:`Screen.mainloop <mainloop>` has been added, so there is no "
"longer a need to use the standalone :func:`mainloop` function when working "
"with :class:`Screen` and :class:`Turtle` objects."
msgstr ""

#: library/turtle.rst:2753
#, fuzzy
msgid ""
"Two input methods have been added: :func:`Screen.textinput <textinput>` and :"
"func:`Screen.numinput <numinput>`. These pop up input dialogs and return "
"strings and numbers respectively."
msgstr ""
"Deux méthodes d'entrées ont été ajoutées : :meth:`Screen.textinput` et :meth:"
"`Screen.numinput`. Ces dialogues d'entrées renvoient des chaînes de "
"caractères et des nombres respectivement."

#: library/turtle.rst:2757
msgid ""
"Two example scripts :file:`tdemo_nim.py` and :file:`tdemo_round_dance.py` "
"have been added to the :file:`Lib/turtledemo` directory."
msgstr ""
"Deux exemples de scripts :file:`tdemo_nim.py` et :file:`tdemo_round_dance."
"py` ont été ajoutés au répertoire :file:`Lib/turtledemo`."

#, fuzzy
#~ msgid "clearscreen()"
#~ msgstr ":func:`getscreen`"

#, fuzzy
#~ msgid "begin_fill()"
#~ msgstr ":func:`begin_fill`"

#, fuzzy
#~ msgid "end_fill()"
#~ msgstr ":func:`end_fill`"

#~ msgid ":func:`settiltangle`"
#~ msgstr ":func:`settiltangle`"

#~ msgid ""
#~ "Rotate the turtleshape to point in the direction specified by *angle*, "
#~ "regardless of its current tilt-angle.  *Do not* change the turtle's "
#~ "heading (direction of movement)."
#~ msgstr ""
#~ "Tourne la forme de la tortue pour pointer dans la direction spécifiée par "
#~ "*angle*, indépendamment de son angle d'inclinaison actuel. *Ne change "
#~ "pas* le cap de la tortue (direction du mouvement)."

#~ msgid ""
#~ "The :mod:`turtle` module is an extended reimplementation of the same-"
#~ "named module from the Python standard distribution up to version Python "
#~ "2.5."
#~ msgstr ""
#~ "Le module :mod:`turtle` est une version étendue du module homonyme "
#~ "appartenant à la distribution standard de Python jusqu'à la version 2.5."

#~ msgid ""
#~ "It tries to keep the merits of the old turtle module and to be (nearly) "
#~ "100% compatible with it.  This means in the first place to enable the "
#~ "learning programmer to use all the commands, classes and methods "
#~ "interactively when using the module from within IDLE run with the ``-n`` "
#~ "switch."
#~ msgstr ""
#~ "Cette bibliothèque essaye de garder les avantages de l'ancien module et "
#~ "d'être (presque) 100 % compatible avec celui-ci. Cela permet à l'apprenti "
#~ "développeur d'utiliser toutes les commandes, classes et méthodes de façon "
#~ "interactive pendant qu'il utilise le module depuis *IDLE* lancé avec "
#~ "l'option ``-n``."

#~ msgid ""
#~ "The turtle module provides turtle graphics primitives, in both object-"
#~ "oriented and procedure-oriented ways.  Because it uses :mod:`tkinter` for "
#~ "the underlying graphics, it needs a version of Python installed with Tk "
#~ "support."
#~ msgstr ""
#~ "*Turtle* permet d'utiliser des primitives graphiques en utilisant un "
#~ "style de programmation orienté objet ou procédural. Du fait qu'il utilise "
#~ "la bibliothèque graphique :mod:`tkinter`, *Turtle* a besoin d'une version "
#~ "de python implémentant *Tk*."

# two+two ??
#~ msgid "The object-oriented interface uses essentially two+two classes:"
#~ msgstr ""
#~ "L'interface orientée objet utilise essentiellement deux + deux classes :"

#~ msgid ""
#~ "The :class:`TurtleScreen` class defines graphics windows as a playground "
#~ "for the drawing turtles.  Its constructor needs a :class:`tkinter.Canvas` "
#~ "or a :class:`ScrolledCanvas` as argument.  It should be used when :mod:"
#~ "`turtle` is used as part of some application."
#~ msgstr ""
#~ "La classe :class:`TurtleScreen` définit une fenêtre graphique utilisé "
#~ "comme un terrain de jeu pour les dessins de la tortue. Le constructeur de "
#~ "cette classe a besoin d'un :class:`tkinter.Canvas` ou :class:"
#~ "`ScrolledCanvas` comme argument. Cette classe doit être utilisée "
#~ "seulement si :mod:`turtle` fait partie intégrante d'une autre application."

#~ msgid ""
#~ "The function :func:`Screen` returns a singleton object of a :class:"
#~ "`TurtleScreen` subclass. This function should be used when :mod:`turtle` "
#~ "is used as a standalone tool for doing graphics. As a singleton object, "
#~ "inheriting from its class is not possible."
#~ msgstr ""
#~ "La fonction :func:`Screen` renvoie un singleton d'une sous-classe de :"
#~ "class:`TurtleScreen`. Elle doit être utilisée quand le module :mod:"
#~ "`turtle` est utilisé de façon autonome pour dessiner. Le singleton "
#~ "renvoyé ne peut hériter de sa classe."

#~ msgid ""
#~ "All methods of TurtleScreen/Screen also exist as functions, i.e. as part "
#~ "of the procedure-oriented interface."
#~ msgstr ""
#~ "Toutes les méthodes de *TurtleScreen*/*Screen* existent également sous la "
#~ "forme de fonctions, c'est-à-dire que ces dernières peuvent être utilisées "
#~ "dans un style procédural."

#~ msgid ""
#~ ":class:`RawTurtle` (alias: :class:`RawPen`) defines Turtle objects which "
#~ "draw on a :class:`TurtleScreen`.  Its constructor needs a Canvas, "
#~ "ScrolledCanvas or TurtleScreen as argument, so the RawTurtle objects know "
#~ "where to draw."
#~ msgstr ""
#~ "La classe :class:`RawTurtle` (alias :class:`RawPen`) définit des objets "
#~ "*Turtle* qui peuvent dessiner sur la classe :class:`TurtleScreen`. Son "
#~ "constructeur prend en paramètre un *Canvas*, un *ScrolledCanvas* ou un "
#~ "*TurtleScreen* permettant à l'objet *RawTurtle* de savoir où écrire."

#~ msgid ""
#~ "Derived from RawTurtle is the subclass :class:`Turtle` (alias: :class:"
#~ "`Pen`), which draws on \"the\" :class:`Screen` instance which is "
#~ "automatically created, if not already present."
#~ msgstr ""
#~ "La sous-classe :class:`Turtle` (alias: :class:`Pen`), dérivée de "
#~ "*RawTurtle*, dessine sur l'instance :class:`Screen` qui est créée "
#~ "automatiquement si elle n'est pas déjà présente."

#~ msgid ""
#~ "All methods of RawTurtle/Turtle also exist as functions, i.e. part of the "
#~ "procedure-oriented interface."
#~ msgstr ""
#~ "Toutes les méthodes de *RawTurtle*/*Turtle* existent également sous la "
#~ "forme de fonctions, c'est-à-dire que ces dernières pourront être "
#~ "utilisées en style procédural."

#~ msgid ""
#~ "By combining together these and similar commands, intricate shapes and "
#~ "pictures can easily be drawn."
#~ msgstr ""
#~ "On peut donc facilement construire des formes et images à partir de "
#~ "commandes simples."

#~ msgid "Overview of available Turtle and Screen methods"
#~ msgstr "Résumé des méthodes de *Turtle* et *Screen* disponibles"

#~ msgid "wikipedia"
#~ msgstr "*wikipedia*"

#~ msgid ""
#~ "The method  :meth:`Screen.mainloop` has been added. So when working only "
#~ "with Screen and Turtle objects one must not additionally import :func:"
#~ "`mainloop` anymore."
#~ msgstr ""
#~ "La méthode :meth:`Screen.mainloop` à été ajoutée. Ainsi, lorsque vous "
#~ "travaillez uniquement avec des objets Screen et Turtle, vous n'avez plus "
#~ "besoin d'importer :func:`mainloop`."

#~ msgid ":func:`clear` | :func:`clearscreen`"
#~ msgstr ":func:`clear` | :func:`clearscreen`"

#~ msgid ":func:`reset` | :func:`resetscreen`"
#~ msgstr ":func:`reset` | :func:`resetscreen`"
