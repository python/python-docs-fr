# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-29 22:40+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: library/webbrowser.rst:2
msgid ":mod:`!webbrowser` --- Convenient web-browser controller"
msgstr ""

#: library/webbrowser.rst:10
msgid "**Source code:** :source:`Lib/webbrowser.py`"
msgstr ""

#: library/webbrowser.rst:14
msgid ""
"The :mod:`webbrowser` module provides a high-level interface to allow "
"displaying web-based documents to users. Under most circumstances, simply "
"calling the :func:`.open` function from this module will do the right thing."
msgstr ""

#: library/webbrowser.rst:18
msgid ""
"Under Unix, graphical browsers are preferred under X11, but text-mode "
"browsers will be used if graphical browsers are not available or an X11 "
"display isn't available.  If text-mode browsers are used, the calling "
"process will block until the user exits the browser."
msgstr ""

#: library/webbrowser.rst:23
msgid ""
"If the environment variable :envvar:`BROWSER` exists, it is interpreted as "
"the :data:`os.pathsep`-separated list of browsers to try ahead of the "
"platform defaults.  When the value of a list part contains the string "
"``%s``, then it is interpreted as a literal browser command line to be used "
"with the argument URL substituted for ``%s``; if the part does not contain "
"``%s``, it is simply interpreted as the name of the browser to launch. [1]_"
msgstr ""

#: library/webbrowser.rst:30
msgid ""
"For non-Unix platforms, or when a remote browser is available on Unix, the "
"controlling process will not wait for the user to finish with the browser, "
"but allow the remote browser to maintain its own windows on the display.  If "
"remote browsers are not available on Unix, the controlling process will "
"launch a new browser and wait."
msgstr ""

#: library/webbrowser.rst:36
msgid ""
"On iOS, the :envvar:`BROWSER` environment variable, as well as any arguments "
"controlling autoraise, browser preference, and new tab/window creation will "
"be ignored. Web pages will *always* be opened in the user's preferred "
"browser, in a new tab, with the browser being brought to the foreground. The "
"use of the :mod:`webbrowser` module on iOS requires the :mod:`ctypes` "
"module. If :mod:`ctypes` isn't available, calls to :func:`.open` will fail."
msgstr ""

#: library/webbrowser.rst:43
msgid ""
"The script :program:`webbrowser` can be used as a command-line interface for "
"the module. It accepts a URL as the argument. It accepts the following "
"optional parameters:"
msgstr ""

#: library/webbrowser.rst:47
msgid ""
"``-n``/``--new-window`` opens the URL in a new browser window, if possible."
msgstr ""

#: library/webbrowser.rst:48
msgid "``-t``/``--new-tab`` opens the URL in a new browser page (\"tab\")."
msgstr ""

#: library/webbrowser.rst:50
msgid "The options are, naturally, mutually exclusive.  Usage example::"
msgstr ""

#: library/webbrowser.rst:52
msgid "python -m webbrowser -t \"https://www.python.org\""
msgstr ""

#: library/webbrowser.rst:54
msgid "Availability"
msgstr ""

#: library/webbrowser.rst:56
msgid "The following exception is defined:"
msgstr "L'exception suivante est définie :"

#: library/webbrowser.rst:61
msgid "Exception raised when a browser control error occurs."
msgstr ""

#: library/webbrowser.rst:63
msgid "The following functions are defined:"
msgstr "Les fonctions suivantes sont définies :"

#: library/webbrowser.rst:68
msgid ""
"Display *url* using the default browser. If *new* is 0, the *url* is opened "
"in the same browser window if possible.  If *new* is 1, a new browser window "
"is opened if possible.  If *new* is 2, a new browser page (\"tab\") is "
"opened if possible.  If *autoraise* is ``True``, the window is raised if "
"possible (note that under many window managers this will occur regardless of "
"the setting of this variable)."
msgstr ""

#: library/webbrowser.rst:89 library/webbrowser.rst:97
msgid ""
"Returns ``True`` if a browser was successfully launched, ``False`` otherwise."
msgstr ""

#: library/webbrowser.rst:77
msgid ""
"Note that on some platforms, trying to open a filename using this function, "
"may work and start the operating system's associated program.  However, this "
"is neither supported nor portable."
msgstr ""

#: library/webbrowser.rst:81
msgid ""
"Raises an :ref:`auditing event <auditing>` ``webbrowser.open`` with argument "
"``url``."
msgstr ""

#: library/webbrowser.rst:86
msgid ""
"Open *url* in a new window of the default browser, if possible, otherwise, "
"open *url* in the only browser window."
msgstr ""

#: library/webbrowser.rst:94
msgid ""
"Open *url* in a new page (\"tab\") of the default browser, if possible, "
"otherwise equivalent to :func:`open_new`."
msgstr ""

#: library/webbrowser.rst:102
msgid ""
"Return a controller object for the browser type *using*.  If *using* is "
"``None``, return a controller for a default browser appropriate to the "
"caller's environment."
msgstr ""

#: library/webbrowser.rst:109
msgid ""
"Register the browser type *name*.  Once a browser type is registered, the :"
"func:`get` function can return a controller for that browser type.  If "
"*instance* is not provided, or is ``None``, *constructor* will be called "
"without parameters to create an instance when needed.  If *instance* is "
"provided, *constructor* will never be called, and may be ``None``."
msgstr ""

#: library/webbrowser.rst:115
msgid ""
"Setting *preferred* to ``True`` makes this browser a preferred result for a :"
"func:`get` call with no argument.  Otherwise, this entry point is only "
"useful if you plan to either set the :envvar:`BROWSER` variable or call :"
"func:`get` with a nonempty argument matching the name of a handler you "
"declare."
msgstr ""

#: library/webbrowser.rst:121
msgid "*preferred* keyword-only parameter was added."
msgstr ""

#: library/webbrowser.rst:124
msgid ""
"A number of browser types are predefined.  This table gives the type names "
"that may be passed to the :func:`get` function and the corresponding "
"instantiations for the controller classes, all defined in this module."
msgstr ""

#: library/webbrowser.rst:129
msgid "Type Name"
msgstr ""

#: library/webbrowser.rst:129
msgid "Class Name"
msgstr ""

#: library/webbrowser.rst:129
msgid "Notes"
msgstr "Notes"

#: library/webbrowser.rst:131
msgid "``'mozilla'``"
msgstr "``'mozilla'``"

#: library/webbrowser.rst:133
#, fuzzy
msgid "``Mozilla('mozilla')``"
msgstr ":class:`Mozilla('mozilla')`"

#: library/webbrowser.rst:133
msgid "``'firefox'``"
msgstr "``'firefox'``"

#: library/webbrowser.rst:135
msgid "``'epiphany'``"
msgstr "``'epiphany'``"

#: library/webbrowser.rst:135
#, fuzzy
msgid "``Epiphany('epiphany')``"
msgstr ":class:`Galeon('epiphany')`"

#: library/webbrowser.rst:137
msgid "``'kfmclient'``"
msgstr "``'kfmclient'``"

#: library/webbrowser.rst:139 library/webbrowser.rst:141
#, fuzzy
msgid "``Konqueror()``"
msgstr "``'konqueror'``"

#: library/webbrowser.rst:139 library/webbrowser.rst:141
msgid "\\(1)"
msgstr "\\(1)"

#: library/webbrowser.rst:139
msgid "``'konqueror'``"
msgstr "``'konqueror'``"

#: library/webbrowser.rst:141
msgid "``'kfm'``"
msgstr "``'kfm'``"

#: library/webbrowser.rst:143
msgid "``'opera'``"
msgstr "``'opera'``"

#: library/webbrowser.rst:143
#, fuzzy
msgid "``Opera()``"
msgstr "``'opera'``"

#: library/webbrowser.rst:145
msgid "``'links'``"
msgstr "``'links'``"

#: library/webbrowser.rst:145
#, fuzzy
msgid "``GenericBrowser('links')``"
msgstr ":class:`GenericBrowser('links')`"

#: library/webbrowser.rst:147
msgid "``'elinks'``"
msgstr "``'elinks'``"

#: library/webbrowser.rst:147
#, fuzzy
msgid "``Elinks('elinks')``"
msgstr ":class:`Elinks('elinks')`"

#: library/webbrowser.rst:149
msgid "``'lynx'``"
msgstr "``'lynx'``"

#: library/webbrowser.rst:149
#, fuzzy
msgid "``GenericBrowser('lynx')``"
msgstr ":class:`GenericBrowser('lynx')`"

#: library/webbrowser.rst:151
msgid "``'w3m'``"
msgstr "``'w3m'``"

#: library/webbrowser.rst:151
#, fuzzy
msgid "``GenericBrowser('w3m')``"
msgstr ":class:`GenericBrowser('w3m')`"

#: library/webbrowser.rst:153
msgid "``'windows-default'``"
msgstr "``'windows-default'``"

#: library/webbrowser.rst:153
#, fuzzy
msgid "``WindowsDefault``"
msgstr "``'windows-default'``"

#: library/webbrowser.rst:153
msgid "\\(2)"
msgstr "\\(2)"

#: library/webbrowser.rst:155
msgid "``'macosx'``"
msgstr "``'macosx'``"

#: library/webbrowser.rst:155
#, fuzzy
msgid "``MacOSXOSAScript('default')``"
msgstr ":class:`MacOSX('default')`"

#: library/webbrowser.rst:157
msgid "\\(3)"
msgstr "\\(3)"

#: library/webbrowser.rst:157
msgid "``'safari'``"
msgstr "``'safari'``"

#: library/webbrowser.rst:157
#, fuzzy
msgid "``MacOSXOSAScript('safari')``"
msgstr ":class:`MacOSX('safari')`"

#: library/webbrowser.rst:159
msgid "``'google-chrome'``"
msgstr "``'google-chrome'``"

#: library/webbrowser.rst:159
#, fuzzy
msgid "``Chrome('google-chrome')``"
msgstr ":class:`Chrome('google-chrome')`"

#: library/webbrowser.rst:161
msgid "``'chrome'``"
msgstr "``'chrome'``"

#: library/webbrowser.rst:161
#, fuzzy
msgid "``Chrome('chrome')``"
msgstr ":class:`Chrome('chrome')`"

#: library/webbrowser.rst:163
msgid "``'chromium'``"
msgstr "``'chromium'``"

#: library/webbrowser.rst:163
#, fuzzy
msgid "``Chromium('chromium')``"
msgstr ":class:`Chromium('chromium')`"

#: library/webbrowser.rst:165
msgid "``'chromium-browser'``"
msgstr "``'chromium-browser'``"

#: library/webbrowser.rst:165
#, fuzzy
msgid "``Chromium('chromium-browser')``"
msgstr ":class:`Chromium('chromium-browser')`"

#: library/webbrowser.rst:167
#, fuzzy
msgid "``'iosbrowser'``"
msgstr "``'chromium-browser'``"

#: library/webbrowser.rst:167
msgid "``IOSBrowser``"
msgstr ""

#: library/webbrowser.rst:167
msgid "\\(4)"
msgstr "\\(4)"

#: library/webbrowser.rst:170
msgid "Notes:"
msgstr "Notes :"

#: library/webbrowser.rst:173
msgid ""
"\"Konqueror\" is the file manager for the KDE desktop environment for Unix, "
"and only makes sense to use if KDE is running.  Some way of reliably "
"detecting KDE would be nice; the :envvar:`!KDEDIR` variable is not "
"sufficient.  Note also that the name \"kfm\" is used even when using the :"
"program:`konqueror` command with KDE 2 --- the implementation selects the "
"best strategy for running Konqueror."
msgstr ""

#: library/webbrowser.rst:180
msgid "Only on Windows platforms."
msgstr ""

#: library/webbrowser.rst:183
msgid "Only on macOS."
msgstr ""

#: library/webbrowser.rst:186
msgid "Only on iOS."
msgstr ""

#: library/webbrowser.rst:188
msgid ""
"A new :class:`!MacOSXOSAScript` class has been added and is used on Mac "
"instead of the previous :class:`!MacOSX` class. This adds support for "
"opening browsers not currently set as the OS default."
msgstr ""

#: library/webbrowser.rst:193
msgid "Support for Chrome/Chromium has been added."
msgstr ""

#: library/webbrowser.rst:196
msgid ""
"Support for several obsolete browsers has been removed. Removed browsers "
"include Grail, Mosaic, Netscape, Galeon, Skipstone, Iceape, and Firefox "
"versions 35 and below."
msgstr ""

#: library/webbrowser.rst:201
msgid "Support for iOS has been added."
msgstr ""

#: library/webbrowser.rst:204
msgid "Here are some simple examples::"
msgstr ""

#: library/webbrowser.rst:206
msgid ""
"url = 'https://docs.python.org/'\n"
"\n"
"# Open URL in a new tab, if a browser window is already open.\n"
"webbrowser.open_new_tab(url)\n"
"\n"
"# Open URL in new window, raising the window if possible.\n"
"webbrowser.open_new(url)"
msgstr ""

#: library/webbrowser.rst:218
msgid "Browser Controller Objects"
msgstr ""

#: library/webbrowser.rst:220
msgid ""
"Browser controllers provide these methods which parallel three of the module-"
"level convenience functions:"
msgstr ""

#: library/webbrowser.rst:226
msgid "System-dependent name for the browser."
msgstr ""

#: library/webbrowser.rst:231
msgid ""
"Display *url* using the browser handled by this controller. If *new* is 1, a "
"new browser window is opened if possible. If *new* is 2, a new browser page "
"(\"tab\") is opened if possible."
msgstr ""

#: library/webbrowser.rst:238
msgid ""
"Open *url* in a new window of the browser handled by this controller, if "
"possible, otherwise, open *url* in the only browser window.  Alias :func:"
"`open_new`."
msgstr ""

#: library/webbrowser.rst:245
msgid ""
"Open *url* in a new page (\"tab\") of the browser handled by this "
"controller, if possible, otherwise equivalent to :func:`open_new`."
msgstr ""

#: library/webbrowser.rst:250
msgid "Footnotes"
msgstr "Notes"

#: library/webbrowser.rst:251
msgid ""
"Executables named here without a full path will be searched in the "
"directories given in the :envvar:`PATH` environment variable."
msgstr ""

#~ msgid ":class:`Konqueror()`"
#~ msgstr ":class:`Konqueror()`"

#~ msgid ":class:`Opera()`"
#~ msgstr ":class:`Opera()`"

#~ msgid ":class:`WindowsDefault`"
#~ msgstr ":class:`WindowsDefault`"

#~ msgid "``'netscape'``"
#~ msgstr "``'netscape'``"

#~ msgid ":class:`Mozilla('netscape')`"
#~ msgstr ":class:`Mozilla('netscape')`"

#~ msgid "``'galeon'``"
#~ msgstr "``'galeon'``"

#~ msgid ":class:`Galeon('galeon')`"
#~ msgstr ":class:`Galeon('galeon')`"

#~ msgid "``'skipstone'``"
#~ msgstr "``'skipstone'``"

#~ msgid ":class:`BackgroundBrowser('skipstone')`"
#~ msgstr ":class:`BackgroundBrowser('skipstone')`"

#~ msgid "``'mosaic'``"
#~ msgstr "``'mosaic'``"

#~ msgid ":class:`BackgroundBrowser('mosaic')`"
#~ msgstr ":class:`BackgroundBrowser('mosaic')`"

#~ msgid "``'grail'``"
#~ msgstr "``'grail'``"

#~ msgid ":class:`Grail()`"
#~ msgstr ":class:`Grail()`"
