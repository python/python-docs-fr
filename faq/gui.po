# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-24 09:01+0200\n"
"PO-Revision-Date: 2019-09-04 11:44+0200\n"
"Last-Translator: Zepmanbc <zepman@gmail.com>\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.3\n"

#: faq/gui.rst:5
msgid "Graphic User Interface FAQ"
msgstr "FAQ interface graphique"

#: faq/gui.rst:8
msgid "Contents"
msgstr "Sommaire"

#: faq/gui.rst:15
msgid "General GUI Questions"
msgstr "Questions générales sur l'interface graphique"

#: faq/gui.rst:18
msgid "What platform-independent GUI toolkits exist for Python?"
msgstr ""
"Quelles bibliothèques d'interfaces graphiques multi-plateformes existent en "
"Python ?"

#: faq/gui.rst:20
msgid ""
"Depending on what platform(s) you are aiming at, there are several.  Some of "
"them haven't been ported to Python 3 yet.  At least `Tkinter`_ and `Qt`_ are "
"known to be Python 3-compatible."
msgstr ""
"Selon les plateformes que vous comptez utiliser, il en existe plusieurs. "
"Certaines ne sont cependant pas encore disponibles en Python 3. A minima, "
"`Tkinter`_ et `Qt`_ sont connus pour être compatibles avec Python 3."

#: faq/gui.rst:27
msgid "Tkinter"
msgstr "*Tkinter*"

#: faq/gui.rst:29
msgid ""
"Standard builds of Python include an object-oriented interface to the Tcl/Tk "
"widget set, called :ref:`tkinter <Tkinter>`.  This is probably the easiest "
"to install (since it comes included with most `binary distributions <https://"
"www.python.org/downloads/>`_ of Python) and use. For more info about Tk, "
"including pointers to the source, see the `Tcl/Tk home page <https://www.tcl."
"tk>`_.  Tcl/Tk is fully portable to the Mac OS X, Windows, and Unix "
"platforms."
msgstr ""
"Les versions standards de Python incluent une interface orientée objet pour "
"le jeu d'objets graphiques *Tcl/Tk*, appelée :ref:`tkinter <Tkinter>`.  "
"C'est probablement la plus facile à installer (puisqu'elle est incluse avec "
"la plupart des `distributions binaires <https://www.python.org/downloads/>`_ "
"de Python) et à utiliser. Pour plus d'informations sur *Tk*, y compris les "
"liens vers les sources, voir la page d'accueil `Tcl/Tk <https://www.tcl."
"tk>`_.  *Tcl/Tk* est entièrement portable sur les plates-formes Mac OS X, "
"Windows et Unix."

#: faq/gui.rst:38
msgid "wxWidgets"
msgstr "*wxWidgets*"

#: faq/gui.rst:40
msgid ""
"wxWidgets (https://www.wxwidgets.org) is a free, portable GUI class library "
"written in C++ that provides a native look and feel on a number of "
"platforms, with Windows, Mac OS X, GTK, X11, all listed as current stable "
"targets.  Language bindings are available for a number of languages "
"including Python, Perl, Ruby, etc."
msgstr ""
"`wxWidgets` (https://www.wxwidgets.org) est une librairie de classe IUG "
"portable et gratuite écrite en C++ qui fournit une apparence native sur un "
"certain nombre de plates-formes, elle est notamment en version stable pour "
"Windows, Mac OS X, GTK et X11.  Des clients sont disponibles pour un certain "
"nombre de langages, y compris Python, Perl, Ruby, etc."

#: faq/gui.rst:46
msgid ""
"`wxPython <https://www.wxpython.org>`_ is the Python binding for wxwidgets.  "
"While it often lags slightly behind the official wxWidgets releases, it also "
"offers a number of features via pure Python extensions that are not "
"available in other language bindings.  There is an active wxPython user and "
"developer community."
msgstr ""
"`wxPython <http://www.wxpython.org>`_ est le portage Python de *wxWidgets*. "
"Bien qu’il soit légèrement en retard sur les versions officielles de "
"*wxWidgets*, il offre également des fonctionnalités propres à Python qui ne "
"sont pas disponibles pour les clients d'autres langages. *WxPython* dispose "
"de plus, d’une communauté d’utilisateurs et de développeurs active."

#: faq/gui.rst:52
msgid ""
"Both wxWidgets and wxPython are free, open source, software with permissive "
"licences that allow their use in commercial products as well as in freeware "
"or shareware."
msgstr ""
"*wxWidgets* et *wxPython* sont tous deux des logiciels libres, open source, "
"avec des licences permissives qui permettent leur utilisation dans des "
"produits commerciaux ainsi que dans des logiciels gratuits ou contributifs "
"(*shareware*)."

#: faq/gui.rst:58
msgid "Qt"
msgstr "*Qt*"

#: faq/gui.rst:60
msgid ""
"There are bindings available for the Qt toolkit (using either `PyQt <https://"
"riverbankcomputing.com/software/pyqt/intro>`_ or `PySide <https://wiki.qt.io/"
"PySide>`_) and for KDE (`PyKDE4 <https://techbase.kde.org/Languages/Python/"
"Using_PyKDE_4>`__). PyQt is currently more mature than PySide, but you must "
"buy a PyQt license from `Riverbank Computing <https://www.riverbankcomputing."
"com/commercial/license-faq>`_ if you want to write proprietary "
"applications.  PySide is free for all applications."
msgstr ""
"Il existe des liens disponibles pour la boîte à outils *Qt* (en utilisant "
"soit `PyQt <https://riverbankcomputing.com/software/pyqt/intro>`_ ou `PySide "
"<https://wiki.qt.io/PySide>`_) et pour *KDE* (`PyKDE4 <https://techbase.kde."
"org/Languages/Python/Using_PyKDE_4>`__). *PyQt* est actuellement plus mûre "
"que *PySide*, mais*PyQt* nécessite d'acheter une licence  de `Riverbank "
"Computing <https://www.riverbankcomputing.com/commercial/license-faq>`_ si "
"vous voulez écrire des applications propriétaires.  *PySide* est gratuit "
"pour toutes les applications."

#: faq/gui.rst:67
msgid ""
"Qt 4.5 upwards is licensed under the LGPL license; also, commercial licenses "
"are available from `The Qt Company <https://www.qt.io/licensing/>`_."
msgstr ""
"*Qt >= 4.5* est sous licence LGPL ; de plus, des licences commerciales sont "
"disponibles auprès de `The Qt Company <https://www.qt.io/licensing/>`_."

#: faq/gui.rst:71
msgid "Gtk+"
msgstr "*Gtk+*"

#: faq/gui.rst:73
msgid ""
"The `GObject introspection bindings <https://wiki.gnome.org/Projects/"
"PyGObject>`_ for Python allow you to write GTK+ 3 applications.  There is "
"also a `Python GTK+ 3 Tutorial <https://python-gtk-3-tutorial.readthedocs."
"io>`_."
msgstr ""
"Les `GObject introspection bindings <https://wiki.gnome.org/Projects/"
"PyGObject>`_ pour Python vous permettent d'écrire des applications GTK+ 3.  "
"Il y a aussi un tutoriel `Python GTK+ 3 <https://python-gtk-3-tutorial."
"readthedocs.io>`_."

#: faq/gui.rst:77
msgid ""
"The older PyGtk bindings for the `Gtk+ 2 toolkit <https://www.gtk.org>`_ "
"have been implemented by James Henstridge; see <http://www.pygtk.org>."
msgstr ""
"Les anciennes versions de *PyGtk* pour le `Gtk+ 2 toolkit <https://www.gtk."
"org>`_ ont été implémentées par James Henstridge ; voir <http://www.pygtk."
"org>."

#: faq/gui.rst:81
msgid "Kivy"
msgstr "*Kivy*"

#: faq/gui.rst:83
msgid ""
"`Kivy <https://kivy.org/>`_ is a cross-platform GUI library supporting both "
"desktop operating systems (Windows, macOS, Linux) and mobile devices "
"(Android, iOS).  It is written in Python and Cython, and can use a range of "
"windowing backends."
msgstr ""
"`*Kivy* <https://kivy.org/>`_ est une bibliothèque GUI multi-plateformes "
"disponible à la fois sur les systèmes d'exploitation de bureau (Windows, "
"MacOS, Linux) et les appareils mobiles (Android, iOS).  Elle est écrite en "
"Python et Cython, et peut utiliser une série de fenêtres de *backends*."

#: faq/gui.rst:88
msgid ""
"Kivy is free and open source software distributed under the MIT license."
msgstr ""
"*Kivy* est un logiciel libre et open source distribué sous licence MIT."

#: faq/gui.rst:91
msgid "FLTK"
msgstr "*FLTK*"

#: faq/gui.rst:93
msgid ""
"Python bindings for `the FLTK toolkit <http://www.fltk.org>`_, a simple yet "
"powerful and mature cross-platform windowing system, are available from `the "
"PyFLTK project <http://pyfltk.sourceforge.net>`_."
msgstr ""
"Les liaisons Python pour `the FLTK toolkit <http://www.fltk.org>`_, un "
"système de fenêtrage multi-plateformes simple mais puissant et mûr, sont "
"disponibles auprès de `the PyFLTK project <http://pyfltk.sourceforge.net>`_."

#: faq/gui.rst:98
msgid "OpenGL"
msgstr "*OpenGL*"

#: faq/gui.rst:100
msgid "For OpenGL bindings, see `PyOpenGL <http://pyopengl.sourceforge.net>`_."
msgstr ""
"Pour les clients OpenGL, voir `PyOpenGL <http://pyopengl.sourceforge.net>`_."

#: faq/gui.rst:104
msgid "What platform-specific GUI toolkits exist for Python?"
msgstr ""
"Quelles boîtes à outils IUG spécifiques à la plate-forme existent pour "
"Python ?"

#: faq/gui.rst:106
msgid ""
"By installing the `PyObjc Objective-C bridge <https://pypi.org/project/"
"pyobjc/>`_, Python programs can use Mac OS X's Cocoa libraries."
msgstr ""
"En installant le `PyObjc Objective-C bridge <https://pypi.org/project/pyobjc/"
">`_, les programmes Python peuvent utiliser les bibliothèques Cocoa de Mac "
"OS X."

#: faq/gui.rst:110
msgid ""
":ref:`Pythonwin <windows-faq>` by Mark Hammond includes an interface to the "
"Microsoft Foundation Classes and a Python programming environment that's "
"written mostly in Python using the MFC classes."
msgstr ""
":ref:`Pythonwin <windows-faq>` de Mark Hammond inclut une interface vers les "
"classes `Microsoft Foundation Classes` et un environnement de programmation "
"Python qui est écrit principalement en Python utilisant les classes *MFC*."

#: faq/gui.rst:116
msgid "Tkinter questions"
msgstr "Questions à propos de *Tkinter*"

#: faq/gui.rst:119
msgid "How do I freeze Tkinter applications?"
msgstr "Comment puis-je geler (*freezer*) les applications *Tkinter* ?"

#: faq/gui.rst:121
msgid ""
"Freeze is a tool to create stand-alone applications.  When freezing Tkinter "
"applications, the applications will not be truly stand-alone, as the "
"application will still need the Tcl and Tk libraries."
msgstr ""
"*Freeze* est un outil pour créer des applications autonomes.  Lors du "
"*freezage* des applications Tkinter, les applications ne seront pas vraiment "
"autonomes, car l'application aura toujours besoin des bibliothèques Tcl et "
"Tk."

#: faq/gui.rst:125
msgid ""
"One solution is to ship the application with the Tcl and Tk libraries, and "
"point to them at run-time using the :envvar:`TCL_LIBRARY` and :envvar:"
"`TK_LIBRARY` environment variables."
msgstr ""
"Une solution consiste à empaqueter les bibliothèques *Tcl* et *Tk* dans "
"l'application et de les retrouver à l'exécution en utilisant les variables "
"d'environnement :envvar:`TCL_LIBRARY` et :envvar:`TK_LIBRARY`."

#: faq/gui.rst:129
msgid ""
"To get truly stand-alone applications, the Tcl scripts that form the library "
"have to be integrated into the application as well. One tool supporting that "
"is SAM (stand-alone modules), which is part of the Tix distribution (http://"
"tix.sourceforge.net/)."
msgstr ""
"Pour obtenir des applications vraiment autonomes, les scripts *Tcl* qui "
"forment la bibliothèque doivent également être intégrés dans l'application. "
"Un outil supportant cela est *SAM* (modules autonomes), qui fait partie de "
"la distribution *Tix* (http://tix.sourceforge.net/)."

#: faq/gui.rst:134
msgid ""
"Build Tix with SAM enabled, perform the appropriate call to :c:func:"
"`Tclsam_init`, etc. inside Python's :file:`Modules/tkappinit.c`, and link "
"with libtclsam and libtksam (you might include the Tix libraries as well)."
msgstr ""
"Compilez Tix avec SAM activé, exécutez l'appel approprié à :c:func:"
"`Tclsam_init`, etc. dans le fichier :file:`Modules/tkappinit.c` de Python, "
"et liez avec *libtclsam* et *libtksam* (il est également possible d'inclure "
"les bibliothèques *Tix*)."

#: faq/gui.rst:141
msgid "Can I have Tk events handled while waiting for I/O?"
msgstr "Puis-je modifier des événements *Tk* pendant l'écoute des *E/S* ?"

#: faq/gui.rst:143
msgid ""
"On platforms other than Windows, yes, and you don't even need threads!  But "
"you'll have to restructure your I/O code a bit.  Tk has the equivalent of "
"Xt's :c:func:`XtAddInput()` call, which allows you to register a callback "
"function which will be called from the Tk mainloop when I/O is possible on a "
"file descriptor.  See :ref:`tkinter-file-handlers`."
msgstr ""
"Sur d'autres plates-formes que Windows, oui, et vous n'avez même pas besoin "
"de fils d'exécution multiples !  Mais vous devrez restructurer un peu votre "
"code *E/S*.  *Tk* possède l'équivalent de l'appel :c:func:`XtAddInput()` de "
"*Xt*, qui vous permet d'enregistrer une fonction de *callback* qui sera "
"appelée par la boucle principale *Tk* lorsque des *E/S* sont disponibles sur "
"un descripteur de fichier. Voir :ref:`tkinter-file-handlers`."

#: faq/gui.rst:151
msgid "I can't get key bindings to work in Tkinter: why?"
msgstr ""
"Je n'arrive pas à faire fonctionner les raccourcis clavier dans *Tkinter* : "
"pourquoi ?"

#: faq/gui.rst:153
msgid ""
"An often-heard complaint is that event handlers bound to events with the :"
"meth:`bind` method don't get handled even when the appropriate key is "
"pressed."
msgstr ""
"Une raison récurrente est que les gestionnaires d’évènements liés à des "
"évènements avec la méthode :meth:`bind` ne sont pas pris en charge même "
"lorsque la touche appropriée est activée."

#: faq/gui.rst:156
msgid ""
"The most common cause is that the widget to which the binding applies "
"doesn't have \"keyboard focus\".  Check out the Tk documentation for the "
"focus command. Usually a widget is given the keyboard focus by clicking in "
"it (but not for labels; see the takefocus option)."
msgstr ""
"La cause la plus fréquente est que l'objet graphique auquel s'applique la "
"liaison n'a pas de « focus clavier ».  Consultez la documentation *Tk* pour "
"la commande *focus*. Habituellement, un objet graphique reçoit le focus du "
"clavier en cliquant dessus (mais pas pour les étiquettes ; voir l'option "
"*takefocus*)."
