# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:11+0200\n"
"PO-Revision-Date: 2019-03-19 23:11+0100\n"
"Last-Translator: Christophe Nanteuil <christophe.nanteuil@gmail.com>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.2\n"

#: ../Doc/tutorial/appendix.rst:5
msgid "Appendix"
msgstr "Annexe"

#: ../Doc/tutorial/appendix.rst:11
msgid "Interactive Mode"
msgstr "Mode interactif"

#: ../Doc/tutorial/appendix.rst:16
msgid "Error Handling"
msgstr "Gestion des erreurs"

#: ../Doc/tutorial/appendix.rst:18
msgid ""
"When an error occurs, the interpreter prints an error message and a stack "
"trace. In interactive mode, it then returns to the primary prompt; when "
"input came from a file, it exits with a nonzero exit status after printing "
"the stack trace. (Exceptions handled by an :keyword:`except` clause in a :"
"keyword:`try` statement are not errors in this context.)  Some errors are "
"unconditionally fatal and cause an exit with a nonzero exit; this applies to "
"internal inconsistencies and some cases of running out of memory.  All error "
"messages are written to the standard error stream; normal output from "
"executed commands is written to standard output."
msgstr ""
"Quand une erreur se produit, l'interpréteur affiche un message d'erreur et "
"la trace d'appels. En mode interactif, il revient à l'invite de commande "
"primaire ; si l'entrée provient d'un fichier, l'interpréteur se termine avec "
"un code de sortie non nul après avoir affiché la trace d'appels (les "
"exceptions gérées par une clause :keyword:`except` dans une instruction :"
"keyword:`try` ne sont pas considérées comme des erreurs dans ce contexte). "
"Certaines erreurs sont inconditionnellement fatales et provoquent la fin du "
"programme avec un code de sortie non nul ; les incohérences internes et, "
"dans certains cas, les pénuries de mémoire sont traitées de la sorte. Tous "
"les messages d'erreur sont écrits sur le flux d'erreur standard ; "
"l'affichage normal des commandes exécutées est écrit sur la sortie standard."

#: ../Doc/tutorial/appendix.rst:28
msgid ""
"Typing the interrupt character (usually :kbd:`Control-C` or :kbd:`Delete`) "
"to the primary or secondary prompt cancels the input and returns to the "
"primary prompt. [#]_ Typing an interrupt while a command is executing raises "
"the :exc:`KeyboardInterrupt` exception, which may be handled by a :keyword:"
"`try` statement."
msgstr ""
"Taper le caractère d'interruption (généralement :kbd:`Ctrl+C` ou :kbd:"
"`Supprimer`) au niveau de l'invite de commande primaire annule l'entrée et "
"revient à l'invite [#]_. Saisir une interruption tandis qu'une commande "
"s'exécute lève une exception :exc:`KeyboardInterrupt` qui peut être gérée "
"par une instruction :keyword:`try`."

#: ../Doc/tutorial/appendix.rst:38
msgid "Executable Python Scripts"
msgstr "Scripts Python exécutables"

#: ../Doc/tutorial/appendix.rst:40
msgid ""
"On BSD'ish Unix systems, Python scripts can be made directly executable, "
"like shell scripts, by putting the line ::"
msgstr ""
"Sur les systèmes Unix, un script Python peut être rendu directement "
"exécutable, comme un script *shell*, en ajoutant la ligne ::"

#: ../Doc/tutorial/appendix.rst:45
msgid ""
"(assuming that the interpreter is on the user's :envvar:`PATH`) at the "
"beginning of the script and giving the file an executable mode.  The ``#!`` "
"must be the first two characters of the file.  On some platforms, this first "
"line must end with a Unix-style line ending (``'\\n'``), not a Windows "
"(``'\\r\\n'``) line ending.  Note that the hash, or pound, character, "
"``'#'``, is used to start a comment in Python."
msgstr ""
"(en supposant que l'interpréteur est dans le :envvar:`PATH` de "
"l'utilisateur) au début du script et en rendant le fichier exécutable. "
"``'#!'`` doivent être les deux premiers caractères du fichier. Sur certaines "
"plateformes, cette première ligne doit finir avec une fin de ligne de type "
"Unix (``'\\n'``) et pas de type Windows (``'\\r\\n'``). Notez que le "
"caractère croisillon, ``'#'``, est utilisé pour initier un commentaire en "
"Python."

#: ../Doc/tutorial/appendix.rst:52
msgid ""
"The script can be given an executable mode, or permission, using the :"
"program:`chmod` command."
msgstr ""
"Un script peut être rendu exécutable en utilisant la commande :program:"
"`chmod`."

#: ../Doc/tutorial/appendix.rst:59
msgid ""
"On Windows systems, there is no notion of an \"executable mode\".  The "
"Python installer automatically associates ``.py`` files with ``python.exe`` "
"so that a double-click on a Python file will run it as a script.  The "
"extension can also be ``.pyw``, in that case, the console window that "
"normally appears is suppressed."
msgstr ""
"Sur les systèmes Windows il n'y a pas de \"mode exécutable\". L'installateur "
"Python associe automatiquement les fichiers en ``.py`` avec ``python.exe`` "
"de telle sorte qu'un double clic sur un fichier Python le lance comme un "
"script. L'extension peut aussi être ``.pyw``. Dans ce cas, la console "
"n'apparait pas."

#: ../Doc/tutorial/appendix.rst:69
msgid "The Interactive Startup File"
msgstr "Configuration du mode interactif"

#: ../Doc/tutorial/appendix.rst:71
msgid ""
"When you use Python interactively, it is frequently handy to have some "
"standard commands executed every time the interpreter is started.  You can "
"do this by setting an environment variable named :envvar:`PYTHONSTARTUP` to "
"the name of a file containing your start-up commands.  This is similar to "
"the :file:`.profile` feature of the Unix shells."
msgstr ""
"En mode interactif, il peut être pratique de faire exécuter quelques "
"commandes au lancement de l’interpréteur. Configurez la variable "
"d'environnement :envvar:`PYTHONSTARTUP` avec le nom d'un fichier contenant "
"les instructions à exécuter, à la même manière du :file:`.profile` pour un "
"*shell* Unix."

#: ../Doc/tutorial/appendix.rst:77
msgid ""
"This file is only read in interactive sessions, not when Python reads "
"commands from a script, and not when :file:`/dev/tty` is given as the "
"explicit source of commands (which otherwise behaves like an interactive "
"session).  It is executed in the same namespace where interactive commands "
"are executed, so that objects that it defines or imports can be used without "
"qualification in the interactive session. You can also change the prompts "
"``sys.ps1`` and ``sys.ps2`` in this file."
msgstr ""
"Ce fichier n'est lu qu'en mode interactif, pas quand Python lit les "
"instructions depuis un fichier, ni quand :file:`/dev/tty` est donné "
"explicitement comme fichier source (pour tout le reste, Python se comporte "
"alors comme dans une session interactive). Les instructions de ce fichier "
"sont exécutées dans le même espace de nommage que vos commandes, donc les "
"objets définis et modules importés peuvent être utilisés directement dans la "
"session interactive. Dans ce fichier, il est aussi possible de changer les "
"invites de commande ``sys.ps1`` et ``sys.ps2``."

#: ../Doc/tutorial/appendix.rst:85
msgid ""
"If you want to read an additional start-up file from the current directory, "
"you can program this in the global start-up file using code like ``if os."
"path.isfile('.pythonrc.py'): exec(open('.pythonrc.py').read())``. If you "
"want to use the startup file in a script, you must do this explicitly in the "
"script::"
msgstr ""
"Si vous voulez exécuter d'autres fichiers du dossier courant au démarrage, "
"vous pouvez le programmer dans le fichier de démarrage global, par exemple "
"avec le code suivant : ``if os.path.isfile('.pythonrc.py'): exec(open('."
"pythonrc.py').read())``. Et si vous voulez exécuter le fichier de démarrage "
"depuis un script, vous devez le faire explicitement dans le script ::"

#: ../Doc/tutorial/appendix.rst:102
msgid "The Customization Modules"
msgstr "Modules de personnalisation"

#: ../Doc/tutorial/appendix.rst:104
msgid ""
"Python provides two hooks to let you customize it: :mod:`sitecustomize` and :"
"mod:`usercustomize`.  To see how it works, you need first to find the "
"location of your user site-packages directory.  Start Python and run this "
"code::"
msgstr ""
"Python peut être personnalisé *via* les modules :mod:`sitecustomize` et :mod:"
"`usercustomize`. Pour découvrir comment ils fonctionnent, vous devez d'abord "
"trouver l'emplacement de votre dossier « site-packages » utilisateur. "
"Démarrez Python et exécutez ce code ::"

#: ../Doc/tutorial/appendix.rst:112
msgid ""
"Now you can create a file named :file:`usercustomize.py` in that directory "
"and put anything you want in it.  It will affect every invocation of Python, "
"unless it is started with the :option:`-s` option to disable the automatic "
"import."
msgstr ""
"Vous pouvez maintenant y créer un fichier :file:`usercustomize.py` et y "
"écrire ce que vous voulez. Il est toujours pris en compte par Python, peu "
"importe le mode, sauf lorsque vous démarrez avec l'option :option:`-s` qui "
"désactive l'importation automatique."

#: ../Doc/tutorial/appendix.rst:116
msgid ""
":mod:`sitecustomize` works in the same way, but is typically created by an "
"administrator of the computer in the global site-packages directory, and is "
"imported before :mod:`usercustomize`.  See the documentation of the :mod:"
"`site` module for more details."
msgstr ""
":mod:`sitecustomize` fonctionne de la même manière mais est généralement "
"créé par un administrateur et stocké dans le dossier site-packages global. "
"Il est importé avant :mod:`usercustomize`. Pour plus de détails, consultez "
"la documentation de :mod:`site`."

#: ../Doc/tutorial/appendix.rst:123
msgid "Footnotes"
msgstr "Notes"

#: ../Doc/tutorial/appendix.rst:124
msgid "A problem with the GNU Readline package may prevent this."
msgstr "Un problème avec GNU *Readline* peut l'en empêcher."
